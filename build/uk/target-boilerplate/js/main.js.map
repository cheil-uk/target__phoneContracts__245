{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/axios/index.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/cancel/Cancel.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/core/createError.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/enhanceError.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/defaults.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/normalizeHeaderName.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/utils.js","node_modules/axios/package.json","node_modules/lodash/lodash.js","node_modules/process/browser.js","src/js/components/contracts.js","src/js/main.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;;ACFA;AACA;AACA;;;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpFA;AACA;AACA;;;ACFA;AACA;AACA;oECFA,IAAA,OAAA,QAAA,gDAEA,QAAA,QAAA,kMAEqB,6EAEb,gCACN,IAAI,EAAM,GACJ,EAAW,OAAO,SAAS,SAGjC,EADI,EAAS,SAAS,YAChB,SAAS,YACF,EAAS,SAAS,iBACrB,SAAS,YAET,YAAY,QAAQ,YAAc,SAAS,YAGrD,IACC,IASM,SATY,QAAA,QAAM,IAAN,0FAAoG,EAApG,yBAEjB,SACG,8BAA+B,IAC/B,eAAgB,mBAChB,gBAAiB,UAIA,KAAK,SAC1B,KAAK,UAAU,GAEhB,MAAM,GACL,QAAQ,IAAI,iBAIb,qBAAY,GACV,IAAM,EAAkB,EAAU,EAE9B,EAAM,GADU,SAAS,iBAAiB,2BAGlC,QAAQ,SAAC,EAAY,GAE3B,IAAoB,IACpB,EAAM,EAAW,WAAW,GAAG,MAE/B,WAAY,WACV,SAAS,eAAe,GAAK,SAC5B,qBAMX,iBAAQ,EAAI,GACV,IAAI,IAAI,KAAO,EACb,EAAG,aAAa,EAAK,EAAM,iBAI/B,qBAAY,GACV,IACI,KAaJ,OAdqB,EAGR,IAAI,SAAC,GAEI,EAAY,QAAhC,IACI,EAAqB,EAAY,QAAQ,aAAa,MACpD,EAAiB,WAAW,GAElC,EAAa,KAAK,KAGJ,EAAa,KAAK,SAAC,EAAG,GAAJ,OAAU,EAAI,IACvB,gBAI3B,mBAAU,GAAU,IAAA,EAAA,KAMd,EAAkB,SAAS,cAAc,OAC/C,EAAU,UAAU,IAAI,uBACxB,IAAM,EAAkB,SAAS,cAAc,8CACzC,EAAkB,OAAO,SAAS,SAClC,EAAkB,SAAS,cAAc,OAC/C,EAAc,UAAU,IAAI,kBAE5B,EAAS,IAAI,SAAC,EAAS,GAErB,IAAM,EAAoB,EAAQ,sBAAsB,OAAO,GAAG,IAC5D,EAAoB,EAAQ,sBAAsB,OAAO,GAAG,QAC5D,EAAoB,EAAK,YAAY,EAAQ,aAC7C,EAAoB,EAAQ,GAC5B,EAAoB,SAAS,cAAc,OAC3C,EAAoB,SAAS,cAAc,QAGjD,EAAK,UAAU,IAAI,OACnB,EAAc,OAAO,GACrB,EAAM,UAAU,IAAI,mBAEpB,EAAK,QAAQ,GACT,iBAAoB,YACpB,YAAA,yCAAsE,EACtE,QAAoB,iBACpB,QAAoB,eACpB,QAAA,gBAAoC,IAGxC,EAAM,UAAN,qHACuH,EADvH,mCAE0B,EAF1B,UAEkD,EAFlD,UAEuE,EAFvE,mDAGwC,EAHxC,qCAMA,EAAU,OAAO,GACjB,EAAa,OAAO,GACpB,EAAU,OAAO,KAMR,0CAAR,EAAoD,EAAU,MAAM,6BAA+B,EAAU,MAAM,4BAEpH,IAAM,EAAY,SAAS,iBAAiB,oBACtC,EAAmB,SAAS,iBAAiB,QAsBnD,EAAU,QAAQ,SAAC,EAAc,GAE/B,IAAM,EAA0B,EAAa,wBAAwB,KAE/D,EAAoB,SAAS,cAAc,wBAEjD,EAAkB,iBAAiB,SAAU,SAAS,IAxBxD,SAA8B,GAEJ,mBAAX,QAAyB,aAAc,SAC9C,EAAK,EAAG,IAGZ,IAAI,EAAO,EAAG,wBAGd,OACI,EAAK,KAAO,GACZ,EAAK,MAAQ,GACb,EAAK,SAAW,OAAO,aAAe,SAAS,gBAAgB,eAC/D,EAAK,QAAU,OAAO,YAAc,SAAS,gBAAgB,aAa7D,CAAoB,GAGpB,EAAiB,GAAS,UAAU,OAAO,UAF7C,EAAiB,GAAS,UAAU,IAAI,YAM5C,EAAa,QAAU,SAAC,GACtB,SAAS,cAAc,+DAA+D,QACtF,EAAE,iBACF,EAAK,YAAY,IAGnB,EAAiB,GAAS,QAAU,SAAC,GAE7B,EAAW,EACb,EAAkB,QAClB,KAAM,EAA0B,IAChC,SAAU,WAEH,EAAU,GAAK,YAAc,IACtC,EAAkB,QAChB,KAAM,EAA0B,IAChC,SAAU,WAGV,EAAkB,QAClB,KAAM,EACN,SAAU,oCAxLD;;;aCKrB,IAAA,WAAA,QAAA,iJAEA,IAAI,YAAc,gBAElB,YAAY,kBAAqB,WAG/B,IAAI,GAMF,KAAM,WACJ,EAAK,uBAMP,oBAAqB,WACnB,IAAI,EAAQ,KAEZ,QAAQ,IAAI,6BAEZ,WAAW,WACL,OAAO,GACT,QAAQ,IAAI,uCACZ,EAAK,iBACL,EAAK,eAAiB,IAAI,YAAA,QAC1B,EAAK,eAAe,iBACpB,EAAK,cACL,EAAK,gBAGL,QAAQ,IAAI,aACZ,EAAM,wBAEP,MAML,eAAgB,WAOd,IAKI,EAAQ,SAAS,MAAQ,SAAS,qBAAqB,QAAQ,GACjE,EAAS,SAAS,cAAc,SAElC,EAAO,KAAO,WACV,EAAO,WAET,EAAO,WAAW,QAXT,UAaT,EAAO,YAAY,SAAS,eAbnB,YAeX,EAAM,YAAY,IAGpB,YAAa,WACX,QAAQ,IAAI,gBAQd,YAAa,WACX,QAAQ,IAAI,sBAMd,UAAW,WAAoB,IAAV,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAJ,GACzB,QAAQ,IAAI,oBAAsB,IAapC,aAAc,WAEZ,WAAW,WACT,EAAE,QAAQ,SACV,QAAQ,IAAI,mBACX,OAGP,OACE,KAAM,GAxGuB,GA4GjC,YAAY,kBAAkB,KAAK","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports=require(\"./lib/axios\");\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBT0MsUUFBVUMsUUFBUSIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanMifQ==","\"use strict\";var utils=require(\"./../utils\"),settle=require(\"./../core/settle\"),cookies=require(\"./../helpers/cookies\"),buildURL=require(\"./../helpers/buildURL\"),buildFullPath=require(\"../core/buildFullPath\"),parseHeaders=require(\"./../helpers/parseHeaders\"),isURLSameOrigin=require(\"./../helpers/isURLSameOrigin\"),createError=require(\"../core/createError\");module.exports=function(e){return new Promise(function(r,t){var s=e.data,o=e.headers,a=e.responseType;utils.isFormData(s)&&delete o[\"Content-Type\"];var n=new XMLHttpRequest;if(e.auth){var i=e.auth.username||\"\",u=e.auth.password?unescape(encodeURIComponent(e.auth.password)):\"\";o.Authorization=\"Basic \"+btoa(i+\":\"+u)}var l=buildFullPath(e.baseURL,e.url);function d(){if(n){var s=\"getAllResponseHeaders\"in n?parseHeaders(n.getAllResponseHeaders()):null,o={data:a&&\"text\"!==a&&\"json\"!==a?n.response:n.responseText,status:n.status,statusText:n.statusText,headers:s,config:e,request:n};settle(r,t,o),n=null}}if(n.open(e.method.toUpperCase(),buildURL(l,e.params,e.paramsSerializer),!0),n.timeout=e.timeout,\"onloadend\"in n?n.onloadend=d:n.onreadystatechange=function(){n&&4===n.readyState&&(0!==n.status||n.responseURL&&0===n.responseURL.indexOf(\"file:\"))&&setTimeout(d)},n.onabort=function(){n&&(t(createError(\"Request aborted\",e,\"ECONNABORTED\",n)),n=null)},n.onerror=function(){t(createError(\"Network Error\",e,null,n)),n=null},n.ontimeout=function(){var r=\"timeout of \"+e.timeout+\"ms exceeded\";e.timeoutErrorMessage&&(r=e.timeoutErrorMessage),t(createError(r,e,e.transitional&&e.transitional.clarifyTimeoutError?\"ETIMEDOUT\":\"ECONNABORTED\",n)),n=null},utils.isStandardBrowserEnv()){var p=(e.withCredentials||isURLSameOrigin(l))&&e.xsrfCookieName?cookies.read(e.xsrfCookieName):void 0;p&&(o[e.xsrfHeaderName]=p)}\"setRequestHeader\"in n&&utils.forEach(o,function(e,r){void 0===s&&\"content-type\"===r.toLowerCase()?delete o[r]:n.setRequestHeader(r,e)}),utils.isUndefined(e.withCredentials)||(n.withCredentials=!!e.withCredentials),a&&\"json\"!==a&&(n.responseType=e.responseType),\"function\"==typeof e.onDownloadProgress&&n.addEventListener(\"progress\",e.onDownloadProgress),\"function\"==typeof e.onUploadProgress&&n.upload&&n.upload.addEventListener(\"progress\",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){n&&(n.abort(),t(e),n=null)}),s||(s=null),n.send(s)})};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInhoci5qcyJdLCJuYW1lcyI6WyJ1dGlscyIsInJlcXVpcmUiLCJzZXR0bGUiLCJjb29raWVzIiwiYnVpbGRVUkwiLCJidWlsZEZ1bGxQYXRoIiwicGFyc2VIZWFkZXJzIiwiaXNVUkxTYW1lT3JpZ2luIiwiY3JlYXRlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29uZmlnIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJyZXF1ZXN0RGF0YSIsImRhdGEiLCJyZXF1ZXN0SGVhZGVycyIsImhlYWRlcnMiLCJyZXNwb25zZVR5cGUiLCJpc0Zvcm1EYXRhIiwicmVxdWVzdCIsIlhNTEh0dHBSZXF1ZXN0IiwiYXV0aCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkF1dGhvcml6YXRpb24iLCJidG9hIiwiZnVsbFBhdGgiLCJiYXNlVVJMIiwidXJsIiwib25sb2FkZW5kIiwicmVzcG9uc2VIZWFkZXJzIiwiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIiwicmVzcG9uc2UiLCJyZXNwb25zZVRleHQiLCJzdGF0dXMiLCJzdGF0dXNUZXh0Iiwib3BlbiIsIm1ldGhvZCIsInRvVXBwZXJDYXNlIiwicGFyYW1zIiwicGFyYW1zU2VyaWFsaXplciIsInRpbWVvdXQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwicmVzcG9uc2VVUkwiLCJpbmRleE9mIiwic2V0VGltZW91dCIsIm9uYWJvcnQiLCJvbmVycm9yIiwib250aW1lb3V0IiwidGltZW91dEVycm9yTWVzc2FnZSIsInRyYW5zaXRpb25hbCIsImNsYXJpZnlUaW1lb3V0RXJyb3IiLCJpc1N0YW5kYXJkQnJvd3NlckVudiIsInhzcmZWYWx1ZSIsIndpdGhDcmVkZW50aWFscyIsInhzcmZDb29raWVOYW1lIiwicmVhZCIsInVuZGVmaW5lZCIsInhzcmZIZWFkZXJOYW1lIiwiZm9yRWFjaCIsInZhbCIsImtleSIsInRvTG93ZXJDYXNlIiwic2V0UmVxdWVzdEhlYWRlciIsImlzVW5kZWZpbmVkIiwib25Eb3dubG9hZFByb2dyZXNzIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9uVXBsb2FkUHJvZ3Jlc3MiLCJ1cGxvYWQiLCJjYW5jZWxUb2tlbiIsInByb21pc2UiLCJ0aGVuIiwiY2FuY2VsIiwiYWJvcnQiLCJzZW5kIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUVBLElBQUlBLE1BQVFDLFFBQVEsY0FDaEJDLE9BQVNELFFBQVEsb0JBQ2pCRSxRQUFVRixRQUFRLHdCQUNsQkcsU0FBV0gsUUFBUSx5QkFDbkJJLGNBQWdCSixRQUFRLHlCQUN4QkssYUFBZUwsUUFBUSw2QkFDdkJNLGdCQUFrQk4sUUFBUSxnQ0FDMUJPLFlBQWNQLFFBQVEsdUJBRTFCUSxPQUFPQyxRQUFVLFNBQW9CQyxHQUNuQyxPQUFPLElBQUlDLFFBQVEsU0FBNEJDLEVBQVNDLEdBQ3RELElBQUlDLEVBQWNKLEVBQU9LLEtBQ3JCQyxFQUFpQk4sRUFBT08sUUFDeEJDLEVBQWVSLEVBQU9RLGFBRXRCbkIsTUFBTW9CLFdBQVdMLFdBQ1pFLEVBQWUsZ0JBR3hCLElBQUlJLEVBQVUsSUFBSUMsZUFHbEIsR0FBSVgsRUFBT1ksS0FBTSxDQUNmLElBQUlDLEVBQVdiLEVBQU9ZLEtBQUtDLFVBQVksR0FDbkNDLEVBQVdkLEVBQU9ZLEtBQUtFLFNBQVdDLFNBQVNDLG1CQUFtQmhCLEVBQU9ZLEtBQUtFLFdBQWEsR0FDM0ZSLEVBQWVXLGNBQWdCLFNBQVdDLEtBQUtMLEVBQVcsSUFBTUMsR0FHbEUsSUFBSUssRUFBV3pCLGNBQWNNLEVBQU9vQixRQUFTcEIsRUFBT3FCLEtBTXBELFNBQVNDLElBQ1AsR0FBS1osRUFBTCxDQUlBLElBQUlhLEVBQWtCLDBCQUEyQmIsRUFBVWYsYUFBYWUsRUFBUWMseUJBQTJCLEtBR3ZHQyxHQUNGcEIsS0FIa0JHLEdBQWlDLFNBQWpCQSxHQUE2QyxTQUFqQkEsRUFDdkNFLEVBQVFlLFNBQS9CZixFQUFRZ0IsYUFHUkMsT0FBUWpCLEVBQVFpQixPQUNoQkMsV0FBWWxCLEVBQVFrQixXQUNwQnJCLFFBQVNnQixFQUNUdkIsT0FBUUEsRUFDUlUsUUFBU0EsR0FHWG5CLE9BQU9XLEVBQVNDLEVBQVFzQixHQUd4QmYsRUFBVSxNQW1FWixHQTVGQUEsRUFBUW1CLEtBQUs3QixFQUFPOEIsT0FBT0MsY0FBZXRDLFNBQVMwQixFQUFVbkIsRUFBT2dDLE9BQVFoQyxFQUFPaUMsbUJBQW1CLEdBR3RHdkIsRUFBUXdCLFFBQVVsQyxFQUFPa0MsUUF5QnJCLGNBQWV4QixFQUVqQkEsRUFBUVksVUFBWUEsRUFHcEJaLEVBQVF5QixtQkFBcUIsV0FDdEJ6QixHQUFrQyxJQUF2QkEsRUFBUTBCLGFBUUQsSUFBbkIxQixFQUFRaUIsUUFBa0JqQixFQUFRMkIsYUFBd0QsSUFBekMzQixFQUFRMkIsWUFBWUMsUUFBUSxXQUtqRkMsV0FBV2pCLElBS2ZaLEVBQVE4QixRQUFVLFdBQ1g5QixJQUlMUCxFQUFPTixZQUFZLGtCQUFtQkcsRUFBUSxlQUFnQlUsSUFHOURBLEVBQVUsT0FJWkEsRUFBUStCLFFBQVUsV0FHaEJ0QyxFQUFPTixZQUFZLGdCQUFpQkcsRUFBUSxLQUFNVSxJQUdsREEsRUFBVSxNQUlaQSxFQUFRZ0MsVUFBWSxXQUNsQixJQUFJQyxFQUFzQixjQUFnQjNDLEVBQU9rQyxRQUFVLGNBQ3ZEbEMsRUFBTzJDLHNCQUNUQSxFQUFzQjNDLEVBQU8yQyxxQkFFL0J4QyxFQUFPTixZQUNMOEMsRUFDQTNDLEVBQ0FBLEVBQU80QyxjQUFnQjVDLEVBQU80QyxhQUFhQyxvQkFBc0IsWUFBYyxlQUMvRW5DLElBR0ZBLEVBQVUsTUFNUnJCLE1BQU15RCx1QkFBd0IsQ0FFaEMsSUFBSUMsR0FBYS9DLEVBQU9nRCxpQkFBbUJwRCxnQkFBZ0J1QixLQUFjbkIsRUFBT2lELGVBQzlFekQsUUFBUTBELEtBQUtsRCxFQUFPaUQscUJBQ3BCRSxFQUVFSixJQUNGekMsRUFBZU4sRUFBT29ELGdCQUFrQkwsR0FLeEMscUJBQXNCckMsR0FDeEJyQixNQUFNZ0UsUUFBUS9DLEVBQWdCLFNBQTBCZ0QsRUFBS0MsUUFDaEMsSUFBaEJuRCxHQUFxRCxpQkFBdEJtRCxFQUFJQyxxQkFFckNsRCxFQUFlaUQsR0FHdEI3QyxFQUFRK0MsaUJBQWlCRixFQUFLRCxLQU0vQmpFLE1BQU1xRSxZQUFZMUQsRUFBT2dELG1CQUM1QnRDLEVBQVFzQyxrQkFBb0JoRCxFQUFPZ0QsaUJBSWpDeEMsR0FBaUMsU0FBakJBLElBQ2xCRSxFQUFRRixhQUFlUixFQUFPUSxjQUlTLG1CQUE5QlIsRUFBTzJELG9CQUNoQmpELEVBQVFrRCxpQkFBaUIsV0FBWTVELEVBQU8yRCxvQkFJUCxtQkFBNUIzRCxFQUFPNkQsa0JBQW1DbkQsRUFBUW9ELFFBQzNEcEQsRUFBUW9ELE9BQU9GLGlCQUFpQixXQUFZNUQsRUFBTzZELGtCQUdqRDdELEVBQU8rRCxhQUVUL0QsRUFBTytELFlBQVlDLFFBQVFDLEtBQUssU0FBb0JDLEdBQzdDeEQsSUFJTEEsRUFBUXlELFFBQ1JoRSxFQUFPK0QsR0FFUHhELEVBQVUsUUFJVE4sSUFDSEEsRUFBYyxNQUloQk0sRUFBUTBELEtBQUtoRSIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL3hoci5qcyJ9","\"use strict\";var utils=require(\"./utils\"),bind=require(\"./helpers/bind\"),Axios=require(\"./core/Axios\"),mergeConfig=require(\"./core/mergeConfig\"),defaults=require(\"./defaults\");function createInstance(e){var r=new Axios(e),i=bind(Axios.prototype.request,r);return utils.extend(i,Axios.prototype,r),utils.extend(i,r),i}var axios=createInstance(defaults);axios.Axios=Axios,axios.create=function(e){return createInstance(mergeConfig(axios.defaults,e))},axios.Cancel=require(\"./cancel/Cancel\"),axios.CancelToken=require(\"./cancel/CancelToken\"),axios.isCancel=require(\"./cancel/isCancel\"),axios.all=function(e){return Promise.all(e)},axios.spread=require(\"./helpers/spread\"),axios.isAxiosError=require(\"./helpers/isAxiosError\"),module.exports=axios,module.exports.default=axios;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF4aW9zLmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsImJpbmQiLCJBeGlvcyIsIm1lcmdlQ29uZmlnIiwiZGVmYXVsdHMiLCJjcmVhdGVJbnN0YW5jZSIsImRlZmF1bHRDb25maWciLCJjb250ZXh0IiwiaW5zdGFuY2UiLCJwcm90b3R5cGUiLCJyZXF1ZXN0IiwiZXh0ZW5kIiwiYXhpb3MiLCJjcmVhdGUiLCJpbnN0YW5jZUNvbmZpZyIsIkNhbmNlbCIsIkNhbmNlbFRva2VuIiwiaXNDYW5jZWwiLCJhbGwiLCJwcm9taXNlcyIsIlByb21pc2UiLCJzcHJlYWQiLCJpc0F4aW9zRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJtYXBwaW5ncyI6IkFBQUEsYUFFQSxJQUFJQSxNQUFRQyxRQUFRLFdBQ2hCQyxLQUFPRCxRQUFRLGtCQUNmRSxNQUFRRixRQUFRLGdCQUNoQkcsWUFBY0gsUUFBUSxzQkFDdEJJLFNBQVdKLFFBQVEsY0FRdkIsU0FBU0ssZUFBZUMsR0FDdEIsSUFBSUMsRUFBVSxJQUFJTCxNQUFNSSxHQUNwQkUsRUFBV1AsS0FBS0MsTUFBTU8sVUFBVUMsUUFBU0gsR0FRN0MsT0FMQVIsTUFBTVksT0FBT0gsRUFBVU4sTUFBTU8sVUFBV0YsR0FHeENSLE1BQU1ZLE9BQU9ILEVBQVVELEdBRWhCQyxFQUlULElBQUlJLE1BQVFQLGVBQWVELFVBRzNCUSxNQUFNVixNQUFRQSxNQUdkVSxNQUFNQyxPQUFTLFNBQWdCQyxHQUM3QixPQUFPVCxlQUFlRixZQUFZUyxNQUFNUixTQUFVVSxLQUlwREYsTUFBTUcsT0FBU2YsUUFBUSxtQkFDdkJZLE1BQU1JLFlBQWNoQixRQUFRLHdCQUM1QlksTUFBTUssU0FBV2pCLFFBQVEscUJBR3pCWSxNQUFNTSxJQUFNLFNBQWFDLEdBQ3ZCLE9BQU9DLFFBQVFGLElBQUlDLElBRXJCUCxNQUFNUyxPQUFTckIsUUFBUSxvQkFHdkJZLE1BQU1VLGFBQWV0QixRQUFRLDBCQUU3QnVCLE9BQU9DLFFBQVVaLE1BR2pCVyxPQUFPQyxRQUFRQyxRQUFVYiIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzIn0=","\"use strict\";function Cancel(e){this.message=e}Cancel.prototype.toString=function(){return\"Cancel\"+(this.message?\": \"+this.message:\"\")},Cancel.prototype.__CANCEL__=!0,module.exports=Cancel;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhbmNlbC5qcyJdLCJuYW1lcyI6WyJDYW5jZWwiLCJtZXNzYWdlIiwidGhpcyIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiX19DQU5DRUxfXyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLGFBUUEsU0FBU0EsT0FBT0MsR0FDZEMsS0FBS0QsUUFBVUEsRUFHakJELE9BQU9HLFVBQVVDLFNBQVcsV0FDMUIsTUFBTyxVQUFZRixLQUFLRCxRQUFVLEtBQU9DLEtBQUtELFFBQVUsS0FHMURELE9BQU9HLFVBQVVFLFlBQWEsRUFFOUJDLE9BQU9DLFFBQVVQIiwiZmlsZSI6Ii9BcHBsaWNhdGlvbnMvcHJvamVjdHMvY2hlaWwvdGFyZ2V0X19waG9uZUNvbnRyYWN0c19fMjQ1L25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbC5qcyJ9","\"use strict\";var Cancel=require(\"./Cancel\");function CancelToken(e){if(\"function\"!=typeof e)throw new TypeError(\"executor must be a function.\");var n;this.promise=new Promise(function(e){n=e});var o=this;e(function(e){o.reason||(o.reason=new Cancel(e),n(o.reason))})}CancelToken.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},CancelToken.source=function(){var e;return{token:new CancelToken(function(n){e=n}),cancel:e}},module.exports=CancelToken;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhbmNlbFRva2VuLmpzIl0sIm5hbWVzIjpbIkNhbmNlbCIsInJlcXVpcmUiLCJDYW5jZWxUb2tlbiIsImV4ZWN1dG9yIiwiVHlwZUVycm9yIiwicmVzb2x2ZVByb21pc2UiLCJ0aGlzIiwicHJvbWlzZSIsIlByb21pc2UiLCJyZXNvbHZlIiwidG9rZW4iLCJtZXNzYWdlIiwicmVhc29uIiwicHJvdG90eXBlIiwidGhyb3dJZlJlcXVlc3RlZCIsInNvdXJjZSIsImNhbmNlbCIsImMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUVBLElBQUlBLE9BQVNDLFFBQVEsWUFRckIsU0FBU0MsWUFBWUMsR0FDbkIsR0FBd0IsbUJBQWJBLEVBQ1QsTUFBTSxJQUFJQyxVQUFVLGdDQUd0QixJQUFJQyxFQUNKQyxLQUFLQyxRQUFVLElBQUlDLFFBQVEsU0FBeUJDLEdBQ2xESixFQUFpQkksSUFHbkIsSUFBSUMsRUFBUUosS0FDWkgsRUFBUyxTQUFnQlEsR0FDbkJELEVBQU1FLFNBS1ZGLEVBQU1FLE9BQVMsSUFBSVosT0FBT1csR0FDMUJOLEVBQWVLLEVBQU1FLFdBT3pCVixZQUFZVyxVQUFVQyxpQkFBbUIsV0FDdkMsR0FBSVIsS0FBS00sT0FDUCxNQUFNTixLQUFLTSxRQVFmVixZQUFZYSxPQUFTLFdBQ25CLElBQUlDLEVBSUosT0FDRU4sTUFKVSxJQUFJUixZQUFZLFNBQWtCZSxHQUM1Q0QsRUFBU0MsSUFJVEQsT0FBUUEsSUFJWkUsT0FBT0MsUUFBVWpCIiwiZmlsZSI6Ii9BcHBsaWNhdGlvbnMvcHJvamVjdHMvY2hlaWwvdGFyZ2V0X19waG9uZUNvbnRyYWN0c19fMjQ1L25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbFRva2VuLmpzIn0=","\"use strict\";module.exports=function(t){return!(!t||!t.__CANCEL__)};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzQ2FuY2VsLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9fQ0FOQ0VMX18iXSwibWFwcGluZ3MiOiJBQUFBLGFBRUFBLE9BQU9DLFFBQVUsU0FBa0JDLEdBQ2pDLFNBQVVBLElBQVNBLEVBQU1DIiwiZmlsZSI6Ii9BcHBsaWNhdGlvbnMvcHJvamVjdHMvY2hlaWwvdGFyZ2V0X19waG9uZUNvbnRyYWN0c19fMjQ1L25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzIn0=","\"use strict\";var utils=require(\"./../utils\"),buildURL=require(\"../helpers/buildURL\"),InterceptorManager=require(\"./InterceptorManager\"),dispatchRequest=require(\"./dispatchRequest\"),mergeConfig=require(\"./mergeConfig\"),validator=require(\"../helpers/validator\"),validators=validator.validators;function Axios(t){this.defaults=t,this.interceptors={request:new InterceptorManager,response:new InterceptorManager}}Axios.prototype.request=function(t){\"string\"==typeof t?(t=arguments[1]||{}).url=arguments[0]:t=t||{},(t=mergeConfig(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method=\"get\";var e=t.transitional;void 0!==e&&validator.assertOptions(e,{silentJSONParsing:validators.transitional(validators.boolean,\"1.0.0\"),forcedJSONParsing:validators.transitional(validators.boolean,\"1.0.0\"),clarifyTimeoutError:validators.transitional(validators.boolean,\"1.0.0\")},!1);var r=[],o=!0;this.interceptors.request.forEach(function(e){\"function\"==typeof e.runWhen&&!1===e.runWhen(t)||(o=o&&e.synchronous,r.unshift(e.fulfilled,e.rejected))});var i,a=[];if(this.interceptors.response.forEach(function(t){a.push(t.fulfilled,t.rejected)}),!o){var s=[dispatchRequest,void 0];for(Array.prototype.unshift.apply(s,r),s=s.concat(a),i=Promise.resolve(t);s.length;)i=i.then(s.shift(),s.shift());return i}for(var n=t;r.length;){var u=r.shift(),l=r.shift();try{n=u(n)}catch(t){l(t);break}}try{i=dispatchRequest(n)}catch(t){return Promise.reject(t)}for(;a.length;)i=i.then(a.shift(),a.shift());return i},Axios.prototype.getUri=function(t){return t=mergeConfig(this.defaults,t),buildURL(t.url,t.params,t.paramsSerializer).replace(/^\\?/,\"\")},utils.forEach([\"delete\",\"get\",\"head\",\"options\"],function(t){Axios.prototype[t]=function(e,r){return this.request(mergeConfig(r||{},{method:t,url:e,data:(r||{}).data}))}}),utils.forEach([\"post\",\"put\",\"patch\"],function(t){Axios.prototype[t]=function(e,r,o){return this.request(mergeConfig(o||{},{method:t,url:e,data:r}))}}),module.exports=Axios;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkF4aW9zLmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsImJ1aWxkVVJMIiwiSW50ZXJjZXB0b3JNYW5hZ2VyIiwiZGlzcGF0Y2hSZXF1ZXN0IiwibWVyZ2VDb25maWciLCJ2YWxpZGF0b3IiLCJ2YWxpZGF0b3JzIiwiQXhpb3MiLCJpbnN0YW5jZUNvbmZpZyIsInRoaXMiLCJkZWZhdWx0cyIsImludGVyY2VwdG9ycyIsInJlcXVlc3QiLCJyZXNwb25zZSIsInByb3RvdHlwZSIsImNvbmZpZyIsImFyZ3VtZW50cyIsInVybCIsIm1ldGhvZCIsInRvTG93ZXJDYXNlIiwidHJhbnNpdGlvbmFsIiwidW5kZWZpbmVkIiwiYXNzZXJ0T3B0aW9ucyIsInNpbGVudEpTT05QYXJzaW5nIiwiYm9vbGVhbiIsImZvcmNlZEpTT05QYXJzaW5nIiwiY2xhcmlmeVRpbWVvdXRFcnJvciIsInJlcXVlc3RJbnRlcmNlcHRvckNoYWluIiwic3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzIiwiZm9yRWFjaCIsImludGVyY2VwdG9yIiwicnVuV2hlbiIsInN5bmNocm9ub3VzIiwidW5zaGlmdCIsImZ1bGZpbGxlZCIsInJlamVjdGVkIiwicHJvbWlzZSIsInJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbiIsInB1c2giLCJjaGFpbiIsIkFycmF5IiwiYXBwbHkiLCJjb25jYXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsImxlbmd0aCIsInRoZW4iLCJzaGlmdCIsIm5ld0NvbmZpZyIsIm9uRnVsZmlsbGVkIiwib25SZWplY3RlZCIsImVycm9yIiwicmVqZWN0IiwiZ2V0VXJpIiwicGFyYW1zIiwicGFyYW1zU2VyaWFsaXplciIsInJlcGxhY2UiLCJkYXRhIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsYUFFQSxJQUFJQSxNQUFRQyxRQUFRLGNBQ2hCQyxTQUFXRCxRQUFRLHVCQUNuQkUsbUJBQXFCRixRQUFRLHdCQUM3QkcsZ0JBQWtCSCxRQUFRLHFCQUMxQkksWUFBY0osUUFBUSxpQkFDdEJLLFVBQVlMLFFBQVEsd0JBRXBCTSxXQUFhRCxVQUFVQyxXQU0zQixTQUFTQyxNQUFNQyxHQUNiQyxLQUFLQyxTQUFXRixFQUNoQkMsS0FBS0UsY0FDSEMsUUFBUyxJQUFJVixtQkFDYlcsU0FBVSxJQUFJWCxvQkFTbEJLLE1BQU1PLFVBQVVGLFFBQVUsU0FBaUJHLEdBR25CLGlCQUFYQSxHQUNUQSxFQUFTQyxVQUFVLFFBQ1pDLElBQU1ELFVBQVUsR0FFdkJELEVBQVNBLE9BR1hBLEVBQVNYLFlBQVlLLEtBQUtDLFNBQVVLLElBR3pCRyxPQUNUSCxFQUFPRyxPQUFTSCxFQUFPRyxPQUFPQyxjQUNyQlYsS0FBS0MsU0FBU1EsT0FDdkJILEVBQU9HLE9BQVNULEtBQUtDLFNBQVNRLE9BQU9DLGNBRXJDSixFQUFPRyxPQUFTLE1BR2xCLElBQUlFLEVBQWVMLEVBQU9LLGtCQUVMQyxJQUFqQkQsR0FDRmYsVUFBVWlCLGNBQWNGLEdBQ3RCRyxrQkFBbUJqQixXQUFXYyxhQUFhZCxXQUFXa0IsUUFBUyxTQUMvREMsa0JBQW1CbkIsV0FBV2MsYUFBYWQsV0FBV2tCLFFBQVMsU0FDL0RFLG9CQUFxQnBCLFdBQVdjLGFBQWFkLFdBQVdrQixRQUFTLFdBQ2hFLEdBSUwsSUFBSUcsS0FDQUMsR0FBaUMsRUFDckNuQixLQUFLRSxhQUFhQyxRQUFRaUIsUUFBUSxTQUFvQ0MsR0FDakMsbUJBQXhCQSxFQUFZQyxVQUEwRCxJQUFoQ0QsRUFBWUMsUUFBUWhCLEtBSXJFYSxFQUFpQ0EsR0FBa0NFLEVBQVlFLFlBRS9FTCxFQUF3Qk0sUUFBUUgsRUFBWUksVUFBV0osRUFBWUssYUFHckUsSUFLSUMsRUFMQUMsS0FPSixHQU5BNUIsS0FBS0UsYUFBYUUsU0FBU2dCLFFBQVEsU0FBa0NDLEdBQ25FTyxFQUF5QkMsS0FBS1IsRUFBWUksVUFBV0osRUFBWUssYUFLOURQLEVBQWdDLENBQ25DLElBQUlXLEdBQVNwQyxxQkFBaUJrQixHQU05QixJQUpBbUIsTUFBTTFCLFVBQVVtQixRQUFRUSxNQUFNRixFQUFPWixHQUNyQ1ksRUFBUUEsRUFBTUcsT0FBT0wsR0FFckJELEVBQVVPLFFBQVFDLFFBQVE3QixHQUNuQndCLEVBQU1NLFFBQ1hULEVBQVVBLEVBQVFVLEtBQUtQLEVBQU1RLFFBQVNSLEVBQU1RLFNBRzlDLE9BQU9YLEVBS1QsSUFEQSxJQUFJWSxFQUFZakMsRUFDVFksRUFBd0JrQixRQUFRLENBQ3JDLElBQUlJLEVBQWN0QixFQUF3Qm9CLFFBQ3RDRyxFQUFhdkIsRUFBd0JvQixRQUN6QyxJQUNFQyxFQUFZQyxFQUFZRCxHQUN4QixNQUFPRyxHQUNQRCxFQUFXQyxHQUNYLE9BSUosSUFDRWYsRUFBVWpDLGdCQUFnQjZDLEdBQzFCLE1BQU9HLEdBQ1AsT0FBT1IsUUFBUVMsT0FBT0QsR0FHeEIsS0FBT2QsRUFBeUJRLFFBQzlCVCxFQUFVQSxFQUFRVSxLQUFLVCxFQUF5QlUsUUFBU1YsRUFBeUJVLFNBR3BGLE9BQU9YLEdBR1Q3QixNQUFNTyxVQUFVdUMsT0FBUyxTQUFnQnRDLEdBRXZDLE9BREFBLEVBQVNYLFlBQVlLLEtBQUtDLFNBQVVLLEdBQzdCZCxTQUFTYyxFQUFPRSxJQUFLRixFQUFPdUMsT0FBUXZDLEVBQU93QyxrQkFBa0JDLFFBQVEsTUFBTyxLQUlyRnpELE1BQU04QixTQUFTLFNBQVUsTUFBTyxPQUFRLFdBQVksU0FBNkJYLEdBRS9FWCxNQUFNTyxVQUFVSSxHQUFVLFNBQVNELEVBQUtGLEdBQ3RDLE9BQU9OLEtBQUtHLFFBQVFSLFlBQVlXLE9BQzlCRyxPQUFRQSxFQUNSRCxJQUFLQSxFQUNMd0MsTUFBTzFDLE9BQWMwQyxXQUszQjFELE1BQU04QixTQUFTLE9BQVEsTUFBTyxTQUFVLFNBQStCWCxHQUVyRVgsTUFBTU8sVUFBVUksR0FBVSxTQUFTRCxFQUFLd0MsRUFBTTFDLEdBQzVDLE9BQU9OLEtBQUtHLFFBQVFSLFlBQVlXLE9BQzlCRyxPQUFRQSxFQUNSRCxJQUFLQSxFQUNMd0MsS0FBTUEsUUFLWkMsT0FBT0MsUUFBVXBEIiwiZmlsZSI6Ii9BcHBsaWNhdGlvbnMvcHJvamVjdHMvY2hlaWwvdGFyZ2V0X19waG9uZUNvbnRyYWN0c19fMjQ1L25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9BeGlvcy5qcyJ9","\"use strict\";var utils=require(\"./../utils\");function InterceptorManager(){this.handlers=[]}InterceptorManager.prototype.use=function(e,n,r){return this.handlers.push({fulfilled:e,rejected:n,synchronous:!!r&&r.synchronous,runWhen:r?r.runWhen:null}),this.handlers.length-1},InterceptorManager.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},InterceptorManager.prototype.forEach=function(e){utils.forEach(this.handlers,function(n){null!==n&&e(n)})},module.exports=InterceptorManager;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkludGVyY2VwdG9yTWFuYWdlci5qcyJdLCJuYW1lcyI6WyJ1dGlscyIsInJlcXVpcmUiLCJJbnRlcmNlcHRvck1hbmFnZXIiLCJ0aGlzIiwiaGFuZGxlcnMiLCJwcm90b3R5cGUiLCJ1c2UiLCJmdWxmaWxsZWQiLCJyZWplY3RlZCIsIm9wdGlvbnMiLCJwdXNoIiwic3luY2hyb25vdXMiLCJydW5XaGVuIiwibGVuZ3RoIiwiZWplY3QiLCJpZCIsImZvckVhY2giLCJmbiIsImgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUVBLElBQUlBLE1BQVFDLFFBQVEsY0FFcEIsU0FBU0MscUJBQ1BDLEtBQUtDLFlBV1BGLG1CQUFtQkcsVUFBVUMsSUFBTSxTQUFhQyxFQUFXQyxFQUFVQyxHQU9uRSxPQU5BTixLQUFLQyxTQUFTTSxNQUNaSCxVQUFXQSxFQUNYQyxTQUFVQSxFQUNWRyxjQUFhRixHQUFVQSxFQUFRRSxZQUMvQkMsUUFBU0gsRUFBVUEsRUFBUUcsUUFBVSxPQUVoQ1QsS0FBS0MsU0FBU1MsT0FBUyxHQVFoQ1gsbUJBQW1CRyxVQUFVUyxNQUFRLFNBQWVDLEdBQzlDWixLQUFLQyxTQUFTVyxLQUNoQlosS0FBS0MsU0FBU1csR0FBTSxPQVl4QmIsbUJBQW1CRyxVQUFVVyxRQUFVLFNBQWlCQyxHQUN0RGpCLE1BQU1nQixRQUFRYixLQUFLQyxTQUFVLFNBQXdCYyxHQUN6QyxPQUFOQSxHQUNGRCxFQUFHQyxNQUtUQyxPQUFPQyxRQUFVbEIiLCJmaWxlIjoiL0FwcGxpY2F0aW9ucy9wcm9qZWN0cy9jaGVpbC90YXJnZXRfX3Bob25lQ29udHJhY3RzX18yNDUvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcyJ9","\"use strict\";var isAbsoluteURL=require(\"../helpers/isAbsoluteURL\"),combineURLs=require(\"../helpers/combineURLs\");module.exports=function(e,s){return e&&!isAbsoluteURL(s)?combineURLs(e,s):s};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkRnVsbFBhdGguanMiXSwibmFtZXMiOlsiaXNBYnNvbHV0ZVVSTCIsInJlcXVpcmUiLCJjb21iaW5lVVJMcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJiYXNlVVJMIiwicmVxdWVzdGVkVVJMIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUVBLElBQUlBLGNBQWdCQyxRQUFRLDRCQUN4QkMsWUFBY0QsUUFBUSwwQkFXMUJFLE9BQU9DLFFBQVUsU0FBdUJDLEVBQVNDLEdBQy9DLE9BQUlELElBQVlMLGNBQWNNLEdBQ3JCSixZQUFZRyxFQUFTQyxHQUV2QkEiLCJmaWxlIjoiL0FwcGxpY2F0aW9ucy9wcm9qZWN0cy9jaGVpbC90YXJnZXRfX3Bob25lQ29udHJhY3RzX18yNDUvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanMifQ==","\"use strict\";var enhanceError=require(\"./enhanceError\");module.exports=function(r,e,n,o,a){var c=new Error(r);return enhanceError(c,e,n,o,a)};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZUVycm9yLmpzIl0sIm5hbWVzIjpbImVuaGFuY2VFcnJvciIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibWVzc2FnZSIsImNvbmZpZyIsImNvZGUiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJlcnJvciIsIkVycm9yIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUVBLElBQUlBLGFBQWVDLFFBQVEsa0JBWTNCQyxPQUFPQyxRQUFVLFNBQXFCQyxFQUFTQyxFQUFRQyxFQUFNQyxFQUFTQyxHQUNwRSxJQUFJQyxFQUFRLElBQUlDLE1BQU1OLEdBQ3RCLE9BQU9KLGFBQWFTLEVBQU9KLEVBQVFDLEVBQU1DLEVBQVNDIiwiZmlsZSI6Ii9BcHBsaWNhdGlvbnMvcHJvamVjdHMvY2hlaWwvdGFyZ2V0X19waG9uZUNvbnRyYWN0c19fMjQ1L25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9jcmVhdGVFcnJvci5qcyJ9","\"use strict\";var utils=require(\"./../utils\"),transformData=require(\"./transformData\"),isCancel=require(\"../cancel/isCancel\"),defaults=require(\"../defaults\");function throwIfCancellationRequested(e){e.cancelToken&&e.cancelToken.throwIfRequested()}module.exports=function(e){return throwIfCancellationRequested(e),e.headers=e.headers||{},e.data=transformData.call(e,e.data,e.headers,e.transformRequest),e.headers=utils.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),utils.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],function(a){delete e.headers[a]}),(e.adapter||defaults.adapter)(e).then(function(a){return throwIfCancellationRequested(e),a.data=transformData.call(e,a.data,a.headers,e.transformResponse),a},function(a){return isCancel(a)||(throwIfCancellationRequested(e),a&&a.response&&(a.response.data=transformData.call(e,a.response.data,a.response.headers,e.transformResponse))),Promise.reject(a)})};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpc3BhdGNoUmVxdWVzdC5qcyJdLCJuYW1lcyI6WyJ1dGlscyIsInJlcXVpcmUiLCJ0cmFuc2Zvcm1EYXRhIiwiaXNDYW5jZWwiLCJkZWZhdWx0cyIsInRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQiLCJjb25maWciLCJjYW5jZWxUb2tlbiIsInRocm93SWZSZXF1ZXN0ZWQiLCJtb2R1bGUiLCJleHBvcnRzIiwiaGVhZGVycyIsImRhdGEiLCJjYWxsIiwidHJhbnNmb3JtUmVxdWVzdCIsIm1lcmdlIiwiY29tbW9uIiwibWV0aG9kIiwiZm9yRWFjaCIsImFkYXB0ZXIiLCJ0aGVuIiwicmVzcG9uc2UiLCJ0cmFuc2Zvcm1SZXNwb25zZSIsInJlYXNvbiIsIlByb21pc2UiLCJyZWplY3QiXSwibWFwcGluZ3MiOiJBQUFBLGFBRUEsSUFBSUEsTUFBUUMsUUFBUSxjQUNoQkMsY0FBZ0JELFFBQVEsbUJBQ3hCRSxTQUFXRixRQUFRLHNCQUNuQkcsU0FBV0gsUUFBUSxlQUt2QixTQUFTSSw2QkFBNkJDLEdBQ2hDQSxFQUFPQyxhQUNURCxFQUFPQyxZQUFZQyxtQkFVdkJDLE9BQU9DLFFBQVUsU0FBeUJKLEdBOEJ4QyxPQTdCQUQsNkJBQTZCQyxHQUc3QkEsRUFBT0ssUUFBVUwsRUFBT0ssWUFHeEJMLEVBQU9NLEtBQU9WLGNBQWNXLEtBQzFCUCxFQUNBQSxFQUFPTSxLQUNQTixFQUFPSyxRQUNQTCxFQUFPUSxrQkFJVFIsRUFBT0ssUUFBVVgsTUFBTWUsTUFDckJULEVBQU9LLFFBQVFLLFdBQ2ZWLEVBQU9LLFFBQVFMLEVBQU9XLFlBQ3RCWCxFQUFPSyxTQUdUWCxNQUFNa0IsU0FDSCxTQUFVLE1BQU8sT0FBUSxPQUFRLE1BQU8sUUFBUyxVQUNsRCxTQUEyQkQsVUFDbEJYLEVBQU9LLFFBQVFNLE1BSVpYLEVBQU9hLFNBQVdmLFNBQVNlLFNBRTFCYixHQUFRYyxLQUFLLFNBQTZCQyxHQVd2RCxPQVZBaEIsNkJBQTZCQyxHQUc3QmUsRUFBU1QsS0FBT1YsY0FBY1csS0FDNUJQLEVBQ0FlLEVBQVNULEtBQ1RTLEVBQVNWLFFBQ1RMLEVBQU9nQixtQkFHRkQsR0FDTixTQUE0QkUsR0FlN0IsT0FkS3BCLFNBQVNvQixLQUNabEIsNkJBQTZCQyxHQUd6QmlCLEdBQVVBLEVBQU9GLFdBQ25CRSxFQUFPRixTQUFTVCxLQUFPVixjQUFjVyxLQUNuQ1AsRUFDQWlCLEVBQU9GLFNBQVNULEtBQ2hCVyxFQUFPRixTQUFTVixRQUNoQkwsRUFBT2dCLHFCQUtORSxRQUFRQyxPQUFPRiIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzIn0=","\"use strict\";module.exports=function(e,i,s,t,n){return e.config=i,s&&(e.code=s),e.request=t,e.response=n,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuaGFuY2VFcnJvci5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZXJyb3IiLCJjb25maWciLCJjb2RlIiwicmVxdWVzdCIsInJlc3BvbnNlIiwiaXNBeGlvc0Vycm9yIiwidG9KU09OIiwibWVzc2FnZSIsInRoaXMiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJudW1iZXIiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJjb2x1bW5OdW1iZXIiLCJzdGFjayJdLCJtYXBwaW5ncyI6IkFBQUEsYUFZQUEsT0FBT0MsUUFBVSxTQUFzQkMsRUFBT0MsRUFBUUMsRUFBTUMsRUFBU0MsR0E0Qm5FLE9BM0JBSixFQUFNQyxPQUFTQSxFQUNYQyxJQUNGRixFQUFNRSxLQUFPQSxHQUdmRixFQUFNRyxRQUFVQSxFQUNoQkgsRUFBTUksU0FBV0EsRUFDakJKLEVBQU1LLGNBQWUsRUFFckJMLEVBQU1NLE9BQVMsV0FDYixPQUVFQyxRQUFTQyxLQUFLRCxRQUNkRSxLQUFNRCxLQUFLQyxLQUVYQyxZQUFhRixLQUFLRSxZQUNsQkMsT0FBUUgsS0FBS0csT0FFYkMsU0FBVUosS0FBS0ksU0FDZkMsV0FBWUwsS0FBS0ssV0FDakJDLGFBQWNOLEtBQUtNLGFBQ25CQyxNQUFPUCxLQUFLTyxNQUVaZCxPQUFRTyxLQUFLUCxPQUNiQyxLQUFNTSxLQUFLTixPQUdSRiIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZW5oYW5jZUVycm9yLmpzIn0=","\"use strict\";var utils=require(\"../utils\");module.exports=function(e,t){t=t||{};var i={},s=[\"url\",\"method\",\"data\"],n=[\"headers\",\"auth\",\"proxy\",\"params\"],r=[\"baseURL\",\"transformRequest\",\"transformResponse\",\"paramsSerializer\",\"timeout\",\"timeoutMessage\",\"withCredentials\",\"adapter\",\"responseType\",\"xsrfCookieName\",\"xsrfHeaderName\",\"onUploadProgress\",\"onDownloadProgress\",\"decompress\",\"maxContentLength\",\"maxBodyLength\",\"maxRedirects\",\"transport\",\"httpAgent\",\"httpsAgent\",\"cancelToken\",\"socketPath\",\"responseEncoding\"],o=[\"validateStatus\"];function a(e,t){return utils.isPlainObject(e)&&utils.isPlainObject(t)?utils.merge(e,t):utils.isPlainObject(t)?utils.merge({},t):utils.isArray(t)?t.slice():t}function u(s){utils.isUndefined(t[s])?utils.isUndefined(e[s])||(i[s]=a(void 0,e[s])):i[s]=a(e[s],t[s])}utils.forEach(s,function(e){utils.isUndefined(t[e])||(i[e]=a(void 0,t[e]))}),utils.forEach(n,u),utils.forEach(r,function(s){utils.isUndefined(t[s])?utils.isUndefined(e[s])||(i[s]=a(void 0,e[s])):i[s]=a(void 0,t[s])}),utils.forEach(o,function(s){s in t?i[s]=a(e[s],t[s]):s in e&&(i[s]=a(void 0,e[s]))});var c=s.concat(n).concat(r).concat(o),l=Object.keys(e).concat(Object.keys(t)).filter(function(e){return-1===c.indexOf(e)});return utils.forEach(l,u),i};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lcmdlQ29uZmlnLmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJjb25maWcxIiwiY29uZmlnMiIsImNvbmZpZyIsInZhbHVlRnJvbUNvbmZpZzJLZXlzIiwibWVyZ2VEZWVwUHJvcGVydGllc0tleXMiLCJkZWZhdWx0VG9Db25maWcyS2V5cyIsImRpcmVjdE1lcmdlS2V5cyIsImdldE1lcmdlZFZhbHVlIiwidGFyZ2V0Iiwic291cmNlIiwiaXNQbGFpbk9iamVjdCIsIm1lcmdlIiwiaXNBcnJheSIsInNsaWNlIiwibWVyZ2VEZWVwUHJvcGVydGllcyIsInByb3AiLCJpc1VuZGVmaW5lZCIsInVuZGVmaW5lZCIsImZvckVhY2giLCJheGlvc0tleXMiLCJjb25jYXQiLCJvdGhlcktleXMiLCJPYmplY3QiLCJrZXlzIiwiZmlsdGVyIiwia2V5IiwiaW5kZXhPZiJdLCJtYXBwaW5ncyI6IkFBQUEsYUFFQSxJQUFJQSxNQUFRQyxRQUFRLFlBVXBCQyxPQUFPQyxRQUFVLFNBQXFCQyxFQUFTQyxHQUU3Q0EsRUFBVUEsTUFDVixJQUFJQyxLQUVBQyxHQUF3QixNQUFPLFNBQVUsUUFDekNDLEdBQTJCLFVBQVcsT0FBUSxRQUFTLFVBQ3ZEQyxHQUNGLFVBQVcsbUJBQW9CLG9CQUFxQixtQkFDcEQsVUFBVyxpQkFBa0Isa0JBQW1CLFVBQVcsZUFBZ0IsaUJBQzNFLGlCQUFrQixtQkFBb0IscUJBQXNCLGFBQzVELG1CQUFvQixnQkFBaUIsZUFBZ0IsWUFBYSxZQUNsRSxhQUFjLGNBQWUsYUFBYyxvQkFFekNDLEdBQW1CLGtCQUV2QixTQUFTQyxFQUFlQyxFQUFRQyxHQUM5QixPQUFJYixNQUFNYyxjQUFjRixJQUFXWixNQUFNYyxjQUFjRCxHQUM5Q2IsTUFBTWUsTUFBTUgsRUFBUUMsR0FDbEJiLE1BQU1jLGNBQWNELEdBQ3RCYixNQUFNZSxTQUFVRixHQUNkYixNQUFNZ0IsUUFBUUgsR0FDaEJBLEVBQU9JLFFBRVRKLEVBR1QsU0FBU0ssRUFBb0JDLEdBQ3RCbkIsTUFBTW9CLFlBQVlmLEVBQVFjLElBRW5CbkIsTUFBTW9CLFlBQVloQixFQUFRZSxNQUNwQ2IsRUFBT2EsR0FBUVIsT0FBZVUsRUFBV2pCLEVBQVFlLEtBRmpEYixFQUFPYSxHQUFRUixFQUFlUCxFQUFRZSxHQUFPZCxFQUFRYyxJQU16RG5CLE1BQU1zQixRQUFRZixFQUFzQixTQUEwQlksR0FDdkRuQixNQUFNb0IsWUFBWWYsRUFBUWMsTUFDN0JiLEVBQU9hLEdBQVFSLE9BQWVVLEVBQVdoQixFQUFRYyxPQUlyRG5CLE1BQU1zQixRQUFRZCxFQUF5QlUsR0FFdkNsQixNQUFNc0IsUUFBUWIsRUFBc0IsU0FBMEJVLEdBQ3ZEbkIsTUFBTW9CLFlBQVlmLEVBQVFjLElBRW5CbkIsTUFBTW9CLFlBQVloQixFQUFRZSxNQUNwQ2IsRUFBT2EsR0FBUVIsT0FBZVUsRUFBV2pCLEVBQVFlLEtBRmpEYixFQUFPYSxHQUFRUixPQUFlVSxFQUFXaEIsRUFBUWMsTUFNckRuQixNQUFNc0IsUUFBUVosRUFBaUIsU0FBZVMsR0FDeENBLEtBQVFkLEVBQ1ZDLEVBQU9hLEdBQVFSLEVBQWVQLEVBQVFlLEdBQU9kLEVBQVFjLElBQzVDQSxLQUFRZixJQUNqQkUsRUFBT2EsR0FBUVIsT0FBZVUsRUFBV2pCLEVBQVFlLE9BSXJELElBQUlJLEVBQVloQixFQUNiaUIsT0FBT2hCLEdBQ1BnQixPQUFPZixHQUNQZSxPQUFPZCxHQUVOZSxFQUFZQyxPQUNiQyxLQUFLdkIsR0FDTG9CLE9BQU9FLE9BQU9DLEtBQUt0QixJQUNuQnVCLE9BQU8sU0FBeUJDLEdBQy9CLE9BQW1DLElBQTVCTixFQUFVTyxRQUFRRCxLQUs3QixPQUZBN0IsTUFBTXNCLFFBQVFHLEVBQVdQLEdBRWxCWiIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanMifQ==","\"use strict\";var createError=require(\"./createError\");module.exports=function(t,r,e){var s=e.config.validateStatus;e.status&&s&&!s(e.status)?r(createError(\"Request failed with status code \"+e.status,e.config,null,e.request,e)):t(e)};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldHRsZS5qcyJdLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVzb2x2ZSIsInJlamVjdCIsInJlc3BvbnNlIiwidmFsaWRhdGVTdGF0dXMiLCJjb25maWciLCJzdGF0dXMiLCJyZXF1ZXN0Il0sIm1hcHBpbmdzIjoiQUFBQSxhQUVBLElBQUlBLFlBQWNDLFFBQVEsaUJBUzFCQyxPQUFPQyxRQUFVLFNBQWdCQyxFQUFTQyxFQUFRQyxHQUNoRCxJQUFJQyxFQUFpQkQsRUFBU0UsT0FBT0QsZUFDaENELEVBQVNHLFFBQVdGLElBQWtCQSxFQUFlRCxFQUFTRyxRQUdqRUosRUFBT0wsWUFDTCxtQ0FBcUNNLEVBQVNHLE9BQzlDSCxFQUFTRSxPQUNULEtBQ0FGLEVBQVNJLFFBQ1RKLElBUEZGLEVBQVFFIiwiZmlsZSI6Ii9BcHBsaWNhdGlvbnMvcHJvamVjdHMvY2hlaWwvdGFyZ2V0X19waG9uZUNvbnRyYWN0c19fMjQ1L25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9zZXR0bGUuanMifQ==","\"use strict\";var utils=require(\"./../utils\"),defaults=require(\"./../defaults\");module.exports=function(t,u,e){var r=this||defaults;return utils.forEach(e,function(e){t=e.call(r,t,u)}),t};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZm9ybURhdGEuanMiXSwibmFtZXMiOlsidXRpbHMiLCJyZXF1aXJlIiwiZGVmYXVsdHMiLCJtb2R1bGUiLCJleHBvcnRzIiwiZGF0YSIsImhlYWRlcnMiLCJmbnMiLCJjb250ZXh0IiwidGhpcyIsImZvckVhY2giLCJmbiIsImNhbGwiXSwibWFwcGluZ3MiOiJBQUFBLGFBRUEsSUFBSUEsTUFBUUMsUUFBUSxjQUNoQkMsU0FBV0QsUUFBUSxpQkFVdkJFLE9BQU9DLFFBQVUsU0FBdUJDLEVBQU1DLEVBQVNDLEdBQ3JELElBQUlDLEVBQVVDLE1BQVFQLFNBTXRCLE9BSkFGLE1BQU1VLFFBQVFILEVBQUssU0FBbUJJLEdBQ3BDTixFQUFPTSxFQUFHQyxLQUFLSixFQUFTSCxFQUFNQyxLQUd6QkQiLCJmaWxlIjoiL0FwcGxpY2F0aW9ucy9wcm9qZWN0cy9jaGVpbC90YXJnZXRfX3Bob25lQ29udHJhY3RzX18yNDUvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3RyYW5zZm9ybURhdGEuanMifQ==","\"use strict\";var utils=require(\"./utils\"),normalizeHeaderName=require(\"./helpers/normalizeHeaderName\"),enhanceError=require(\"./core/enhanceError\"),DEFAULT_CONTENT_TYPE={\"Content-Type\":\"application/x-www-form-urlencoded\"};function setContentTypeIfUnset(e,t){!utils.isUndefined(e)&&utils.isUndefined(e[\"Content-Type\"])&&(e[\"Content-Type\"]=t)}function getDefaultAdapter(){var e;return\"undefined\"!=typeof XMLHttpRequest?e=require(\"./adapters/xhr\"):\"undefined\"!=typeof process&&\"[object process]\"===Object.prototype.toString.call(process)&&(e=require(\"./adapters/http\")),e}function stringifySafely(e,t,r){if(utils.isString(e))try{return(t||JSON.parse)(e),utils.trim(e)}catch(e){if(\"SyntaxError\"!==e.name)throw e}return(r||JSON.stringify)(e)}var defaults={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:getDefaultAdapter(),transformRequest:[function(e,t){return normalizeHeaderName(t,\"Accept\"),normalizeHeaderName(t,\"Content-Type\"),utils.isFormData(e)||utils.isArrayBuffer(e)||utils.isBuffer(e)||utils.isStream(e)||utils.isFile(e)||utils.isBlob(e)?e:utils.isArrayBufferView(e)?e.buffer:utils.isURLSearchParams(e)?(setContentTypeIfUnset(t,\"application/x-www-form-urlencoded;charset=utf-8\"),e.toString()):utils.isObject(e)||t&&\"application/json\"===t[\"Content-Type\"]?(setContentTypeIfUnset(t,\"application/json\"),stringifySafely(e)):e}],transformResponse:[function(e){var t=this.transitional,r=t&&t.silentJSONParsing,n=t&&t.forcedJSONParsing,i=!r&&\"json\"===this.responseType;if(i||n&&utils.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(i){if(\"SyntaxError\"===e.name)throw enhanceError(e,this,\"E_JSON_PARSE\");throw e}}return e}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:\"application/json, text/plain, */*\"}}};utils.forEach([\"delete\",\"get\",\"head\"],function(e){defaults.headers[e]={}}),utils.forEach([\"post\",\"put\",\"patch\"],function(e){defaults.headers[e]=utils.merge(DEFAULT_CONTENT_TYPE)}),module.exports=defaults;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlZmF1bHRzLmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsIm5vcm1hbGl6ZUhlYWRlck5hbWUiLCJlbmhhbmNlRXJyb3IiLCJERUZBVUxUX0NPTlRFTlRfVFlQRSIsIkNvbnRlbnQtVHlwZSIsInNldENvbnRlbnRUeXBlSWZVbnNldCIsImhlYWRlcnMiLCJ2YWx1ZSIsImlzVW5kZWZpbmVkIiwiZ2V0RGVmYXVsdEFkYXB0ZXIiLCJhZGFwdGVyIiwiWE1MSHR0cFJlcXVlc3QiLCJwcm9jZXNzIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwic3RyaW5naWZ5U2FmZWx5IiwicmF3VmFsdWUiLCJwYXJzZXIiLCJlbmNvZGVyIiwiaXNTdHJpbmciLCJKU09OIiwicGFyc2UiLCJ0cmltIiwiZSIsIm5hbWUiLCJzdHJpbmdpZnkiLCJkZWZhdWx0cyIsInRyYW5zaXRpb25hbCIsInNpbGVudEpTT05QYXJzaW5nIiwiZm9yY2VkSlNPTlBhcnNpbmciLCJjbGFyaWZ5VGltZW91dEVycm9yIiwidHJhbnNmb3JtUmVxdWVzdCIsImRhdGEiLCJpc0Zvcm1EYXRhIiwiaXNBcnJheUJ1ZmZlciIsImlzQnVmZmVyIiwiaXNTdHJlYW0iLCJpc0ZpbGUiLCJpc0Jsb2IiLCJpc0FycmF5QnVmZmVyVmlldyIsImJ1ZmZlciIsImlzVVJMU2VhcmNoUGFyYW1zIiwiaXNPYmplY3QiLCJ0cmFuc2Zvcm1SZXNwb25zZSIsInRoaXMiLCJzdHJpY3RKU09OUGFyc2luZyIsInJlc3BvbnNlVHlwZSIsImxlbmd0aCIsInRpbWVvdXQiLCJ4c3JmQ29va2llTmFtZSIsInhzcmZIZWFkZXJOYW1lIiwibWF4Q29udGVudExlbmd0aCIsIm1heEJvZHlMZW5ndGgiLCJ2YWxpZGF0ZVN0YXR1cyIsInN0YXR1cyIsImNvbW1vbiIsIkFjY2VwdCIsImZvckVhY2giLCJtZXRob2QiLCJtZXJnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLGFBRUEsSUFBSUEsTUFBUUMsUUFBUSxXQUNoQkMsb0JBQXNCRCxRQUFRLGlDQUM5QkUsYUFBZUYsUUFBUSx1QkFFdkJHLHNCQUNGQyxlQUFnQixxQ0FHbEIsU0FBU0Msc0JBQXNCQyxFQUFTQyxJQUNqQ1IsTUFBTVMsWUFBWUYsSUFBWVAsTUFBTVMsWUFBWUYsRUFBUSxtQkFDM0RBLEVBQVEsZ0JBQWtCQyxHQUk5QixTQUFTRSxvQkFDUCxJQUFJQyxFQVFKLE1BUDhCLG9CQUFuQkMsZUFFVEQsRUFBVVYsUUFBUSxrQkFDVSxvQkFBWlksU0FBdUUscUJBQTVDQyxPQUFPQyxVQUFVQyxTQUFTQyxLQUFLSixXQUUxRUYsRUFBVVYsUUFBUSxvQkFFYlUsRUFHVCxTQUFTTyxnQkFBZ0JDLEVBQVVDLEVBQVFDLEdBQ3pDLEdBQUlyQixNQUFNc0IsU0FBU0gsR0FDakIsSUFFRSxPQURDQyxHQUFVRyxLQUFLQyxPQUFPTCxHQUNoQm5CLE1BQU15QixLQUFLTixHQUNsQixNQUFPTyxHQUNQLEdBQWUsZ0JBQVhBLEVBQUVDLEtBQ0osTUFBTUQsRUFLWixPQUFRTCxHQUFXRSxLQUFLSyxXQUFXVCxHQUdyQyxJQUFJVSxVQUVGQyxjQUNFQyxtQkFBbUIsRUFDbkJDLG1CQUFtQixFQUNuQkMscUJBQXFCLEdBR3ZCdEIsUUFBU0Qsb0JBRVR3QixrQkFBbUIsU0FBMEJDLEVBQU01QixHQUlqRCxPQUhBTCxvQkFBb0JLLEVBQVMsVUFDN0JMLG9CQUFvQkssRUFBUyxnQkFFekJQLE1BQU1vQyxXQUFXRCxJQUNuQm5DLE1BQU1xQyxjQUFjRixJQUNwQm5DLE1BQU1zQyxTQUFTSCxJQUNmbkMsTUFBTXVDLFNBQVNKLElBQ2ZuQyxNQUFNd0MsT0FBT0wsSUFDYm5DLE1BQU15QyxPQUFPTixHQUVOQSxFQUVMbkMsTUFBTTBDLGtCQUFrQlAsR0FDbkJBLEVBQUtRLE9BRVYzQyxNQUFNNEMsa0JBQWtCVCxJQUMxQjdCLHNCQUFzQkMsRUFBUyxtREFDeEI0QixFQUFLbkIsWUFFVmhCLE1BQU02QyxTQUFTVixJQUFVNUIsR0FBdUMscUJBQTVCQSxFQUFRLGlCQUM5Q0Qsc0JBQXNCQyxFQUFTLG9CQUN4QlcsZ0JBQWdCaUIsSUFFbEJBLElBR1RXLG1CQUFvQixTQUEyQlgsR0FDN0MsSUFBSUwsRUFBZWlCLEtBQUtqQixhQUNwQkMsRUFBb0JELEdBQWdCQSxFQUFhQyxrQkFDakRDLEVBQW9CRixHQUFnQkEsRUFBYUUsa0JBQ2pEZ0IsR0FBcUJqQixHQUEyQyxTQUF0QmdCLEtBQUtFLGFBRW5ELEdBQUlELEdBQXNCaEIsR0FBcUJoQyxNQUFNc0IsU0FBU2EsSUFBU0EsRUFBS2UsT0FDMUUsSUFDRSxPQUFPM0IsS0FBS0MsTUFBTVcsR0FDbEIsTUFBT1QsR0FDUCxHQUFJc0IsRUFBbUIsQ0FDckIsR0FBZSxnQkFBWHRCLEVBQUVDLEtBQ0osTUFBTXhCLGFBQWF1QixFQUFHcUIsS0FBTSxnQkFFOUIsTUFBTXJCLEdBS1osT0FBT1MsSUFPVGdCLFFBQVMsRUFFVEMsZUFBZ0IsYUFDaEJDLGVBQWdCLGVBRWhCQyxrQkFBbUIsRUFDbkJDLGVBQWdCLEVBRWhCQyxlQUFnQixTQUF3QkMsR0FDdEMsT0FBT0EsR0FBVSxLQUFPQSxFQUFTLEtBSXJDbEQsU0FDRW1ELFFBQ0VDLE9BQVUsdUNBSWQzRCxNQUFNNEQsU0FBUyxTQUFVLE1BQU8sUUFBUyxTQUE2QkMsR0FDcEVoQyxTQUFTdEIsUUFBUXNELFFBR25CN0QsTUFBTTRELFNBQVMsT0FBUSxNQUFPLFNBQVUsU0FBK0JDLEdBQ3JFaEMsU0FBU3RCLFFBQVFzRCxHQUFVN0QsTUFBTThELE1BQU0xRCx3QkFHekMyRCxPQUFPQyxRQUFVbkMiLCJmaWxlIjoiL0FwcGxpY2F0aW9ucy9wcm9qZWN0cy9jaGVpbC90YXJnZXRfX3Bob25lQ29udHJhY3RzX18yNDUvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy5qcyJ9","\"use strict\";module.exports=function(r,n){return function(){for(var t=new Array(arguments.length),e=0;e<t.length;e++)t[e]=arguments[e];return r.apply(n,t)}};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJpbmQuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImZuIiwidGhpc0FyZyIsImFyZ3MiLCJBcnJheSIsImFyZ3VtZW50cyIsImxlbmd0aCIsImkiLCJhcHBseSJdLCJtYXBwaW5ncyI6IkFBQUEsYUFFQUEsT0FBT0MsUUFBVSxTQUFjQyxFQUFJQyxHQUNqQyxPQUFPLFdBRUwsSUFEQSxJQUFJQyxFQUFPLElBQUlDLE1BQU1DLFVBQVVDLFFBQ3RCQyxFQUFJLEVBQUdBLEVBQUlKLEVBQUtHLE9BQVFDLElBQy9CSixFQUFLSSxHQUFLRixVQUFVRSxHQUV0QixPQUFPTixFQUFHTyxNQUFNTixFQUFTQyIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcyJ9","\"use strict\";var utils=require(\"./../utils\");function encode(e){return encodeURIComponent(e).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}module.exports=function(e,i,r){if(!i)return e;var t;if(r)t=r(i);else if(utils.isURLSearchParams(i))t=i.toString();else{var n=[];utils.forEach(i,function(e,i){null!==e&&void 0!==e&&(utils.isArray(e)?i+=\"[]\":e=[e],utils.forEach(e,function(e){utils.isDate(e)?e=e.toISOString():utils.isObject(e)&&(e=JSON.stringify(e)),n.push(encode(i)+\"=\"+encode(e))}))}),t=n.join(\"&\")}if(t){var s=e.indexOf(\"#\");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf(\"?\")?\"?\":\"&\")+t}return e};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkVVJMLmpzIl0sIm5hbWVzIjpbInV0aWxzIiwicmVxdWlyZSIsImVuY29kZSIsInZhbCIsImVuY29kZVVSSUNvbXBvbmVudCIsInJlcGxhY2UiLCJtb2R1bGUiLCJleHBvcnRzIiwidXJsIiwicGFyYW1zIiwicGFyYW1zU2VyaWFsaXplciIsInNlcmlhbGl6ZWRQYXJhbXMiLCJpc1VSTFNlYXJjaFBhcmFtcyIsInRvU3RyaW5nIiwicGFydHMiLCJmb3JFYWNoIiwia2V5IiwiaXNBcnJheSIsInYiLCJpc0RhdGUiLCJ0b0lTT1N0cmluZyIsImlzT2JqZWN0IiwiSlNPTiIsInN0cmluZ2lmeSIsInB1c2giLCJqb2luIiwiaGFzaG1hcmtJbmRleCIsImluZGV4T2YiLCJzbGljZSJdLCJtYXBwaW5ncyI6IkFBQUEsYUFFQSxJQUFJQSxNQUFRQyxRQUFRLGNBRXBCLFNBQVNDLE9BQU9DLEdBQ2QsT0FBT0MsbUJBQW1CRCxHQUN4QkUsUUFBUSxRQUFTLEtBQ2pCQSxRQUFRLE9BQVEsS0FDaEJBLFFBQVEsUUFBUyxLQUNqQkEsUUFBUSxPQUFRLEtBQ2hCQSxRQUFRLFFBQVMsS0FDakJBLFFBQVEsUUFBUyxLQVVyQkMsT0FBT0MsUUFBVSxTQUFrQkMsRUFBS0MsRUFBUUMsR0FFOUMsSUFBS0QsRUFDSCxPQUFPRCxFQUdULElBQUlHLEVBQ0osR0FBSUQsRUFDRkMsRUFBbUJELEVBQWlCRCxRQUMvQixHQUFJVCxNQUFNWSxrQkFBa0JILEdBQ2pDRSxFQUFtQkYsRUFBT0ksZUFDckIsQ0FDTCxJQUFJQyxLQUVKZCxNQUFNZSxRQUFRTixFQUFRLFNBQW1CTixFQUFLYSxHQUNoQyxPQUFSYixRQUErQixJQUFSQSxJQUl2QkgsTUFBTWlCLFFBQVFkLEdBQ2hCYSxHQUFZLEtBRVpiLEdBQU9BLEdBR1RILE1BQU1lLFFBQVFaLEVBQUssU0FBb0JlLEdBQ2pDbEIsTUFBTW1CLE9BQU9ELEdBQ2ZBLEVBQUlBLEVBQUVFLGNBQ0dwQixNQUFNcUIsU0FBU0gsS0FDeEJBLEVBQUlJLEtBQUtDLFVBQVVMLElBRXJCSixFQUFNVSxLQUFLdEIsT0FBT2MsR0FBTyxJQUFNZCxPQUFPZ0IsU0FJMUNQLEVBQW1CRyxFQUFNVyxLQUFLLEtBR2hDLEdBQUlkLEVBQWtCLENBQ3BCLElBQUllLEVBQWdCbEIsRUFBSW1CLFFBQVEsTUFDVCxJQUFuQkQsSUFDRmxCLEVBQU1BLEVBQUlvQixNQUFNLEVBQUdGLElBR3JCbEIsS0FBOEIsSUFBdEJBLEVBQUltQixRQUFRLEtBQWMsSUFBTSxLQUFPaEIsRUFHakQsT0FBT0giLCJmaWxlIjoiL0FwcGxpY2F0aW9ucy9wcm9qZWN0cy9jaGVpbC90YXJnZXRfX3Bob25lQ29udHJhY3RzX18yNDUvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzIn0=","\"use strict\";module.exports=function(e,r){return r?e.replace(/\\/+$/,\"\")+\"/\"+r.replace(/^\\/+/,\"\"):e};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbWJpbmVVUkxzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJiYXNlVVJMIiwicmVsYXRpdmVVUkwiLCJyZXBsYWNlIl0sIm1hcHBpbmdzIjoiQUFBQSxhQVNBQSxPQUFPQyxRQUFVLFNBQXFCQyxFQUFTQyxHQUM3QyxPQUFPQSxFQUNIRCxFQUFRRSxRQUFRLE9BQVEsSUFBTSxJQUFNRCxFQUFZQyxRQUFRLE9BQVEsSUFDaEVGIiwiZmlsZSI6Ii9BcHBsaWNhdGlvbnMvcHJvamVjdHMvY2hlaWwvdGFyZ2V0X19waG9uZUNvbnRyYWN0c19fMjQ1L25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21iaW5lVVJMcy5qcyJ9","\"use strict\";var utils=require(\"./../utils\");module.exports=utils.isStandardBrowserEnv()?{write:function(e,t,n,i,u,o){var r=[];r.push(e+\"=\"+encodeURIComponent(t)),utils.isNumber(n)&&r.push(\"expires=\"+new Date(n).toGMTString()),utils.isString(i)&&r.push(\"path=\"+i),utils.isString(u)&&r.push(\"domain=\"+u),!0===o&&r.push(\"secure\"),document.cookie=r.join(\"; \")},read:function(e){var t=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+e+\")=([^;]*)\"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,\"\",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvb2tpZXMuanMiXSwibmFtZXMiOlsidXRpbHMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImlzU3RhbmRhcmRCcm93c2VyRW52Iiwid3JpdGUiLCJuYW1lIiwidmFsdWUiLCJleHBpcmVzIiwicGF0aCIsImRvbWFpbiIsInNlY3VyZSIsImNvb2tpZSIsInB1c2giLCJlbmNvZGVVUklDb21wb25lbnQiLCJpc051bWJlciIsIkRhdGUiLCJ0b0dNVFN0cmluZyIsImlzU3RyaW5nIiwiZG9jdW1lbnQiLCJqb2luIiwicmVhZCIsIm1hdGNoIiwiUmVnRXhwIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwicmVtb3ZlIiwidGhpcyIsIm5vdyJdLCJtYXBwaW5ncyI6IkFBQUEsYUFFQSxJQUFJQSxNQUFRQyxRQUFRLGNBRXBCQyxPQUFPQyxRQUNMSCxNQUFNSSx3QkFLQUMsTUFBTyxTQUFlQyxFQUFNQyxFQUFPQyxFQUFTQyxFQUFNQyxFQUFRQyxHQUN4RCxJQUFJQyxLQUNKQSxFQUFPQyxLQUFLUCxFQUFPLElBQU1RLG1CQUFtQlAsSUFFeENQLE1BQU1lLFNBQVNQLElBQ2pCSSxFQUFPQyxLQUFLLFdBQWEsSUFBSUcsS0FBS1IsR0FBU1MsZUFHekNqQixNQUFNa0IsU0FBU1QsSUFDakJHLEVBQU9DLEtBQUssUUFBVUosR0FHcEJULE1BQU1rQixTQUFTUixJQUNqQkUsRUFBT0MsS0FBSyxVQUFZSCxJQUdYLElBQVhDLEdBQ0ZDLEVBQU9DLEtBQUssVUFHZE0sU0FBU1AsT0FBU0EsRUFBT1EsS0FBSyxPQUdoQ0MsS0FBTSxTQUFjZixHQUNsQixJQUFJZ0IsRUFBUUgsU0FBU1AsT0FBT1UsTUFBTSxJQUFJQyxPQUFPLGFBQWVqQixFQUFPLGNBQ25FLE9BQVFnQixFQUFRRSxtQkFBbUJGLEVBQU0sSUFBTSxNQUdqREcsT0FBUSxTQUFnQm5CLEdBQ3RCb0IsS0FBS3JCLE1BQU1DLEVBQU0sR0FBSVUsS0FBS1csTUFBUSxVQVFwQ3RCLE1BQU8sYUFDUGdCLEtBQU0sV0FBa0IsT0FBTyxNQUMvQkksT0FBUSIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcyJ9","\"use strict\";module.exports=function(t){return/^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(t)};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzQWJzb2x1dGVVUkwuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInVybCIsInRlc3QiXSwibWFwcGluZ3MiOiJBQUFBLGFBUUFBLE9BQU9DLFFBQVUsU0FBdUJDLEdBSXRDLE1BQU8sZ0NBQWdDQyxLQUFLRCIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcyJ9","\"use strict\";module.exports=function(o){return\"object\"==typeof o&&!0===o.isAxiosError};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzQXhpb3NFcnJvci5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicGF5bG9hZCIsImlzQXhpb3NFcnJvciJdLCJtYXBwaW5ncyI6IkFBQUEsYUFRQUEsT0FBT0MsUUFBVSxTQUFzQkMsR0FDckMsTUFBMkIsaUJBQVpBLElBQW1ELElBQXpCQSxFQUFRQyIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzIn0=","\"use strict\";var utils=require(\"./../utils\");module.exports=utils.isStandardBrowserEnv()?function(){var t,r=/(msie|trident)/i.test(navigator.userAgent),e=document.createElement(\"a\");function o(t){var o=t;return r&&(e.setAttribute(\"href\",o),o=e.href),e.setAttribute(\"href\",o),{href:e.href,protocol:e.protocol?e.protocol.replace(/:$/,\"\"):\"\",host:e.host,search:e.search?e.search.replace(/^\\?/,\"\"):\"\",hash:e.hash?e.hash.replace(/^#/,\"\"):\"\",hostname:e.hostname,port:e.port,pathname:\"/\"===e.pathname.charAt(0)?e.pathname:\"/\"+e.pathname}}return t=o(window.location.href),function(r){var e=utils.isString(r)?o(r):r;return e.protocol===t.protocol&&e.host===t.host}}():function(){return!0};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzVVJMU2FtZU9yaWdpbi5qcyJdLCJuYW1lcyI6WyJ1dGlscyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaXNTdGFuZGFyZEJyb3dzZXJFbnYiLCJvcmlnaW5VUkwiLCJtc2llIiwidGVzdCIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInVybFBhcnNpbmdOb2RlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwicmVzb2x2ZVVSTCIsInVybCIsImhyZWYiLCJzZXRBdHRyaWJ1dGUiLCJwcm90b2NvbCIsInJlcGxhY2UiLCJob3N0Iiwic2VhcmNoIiwiaGFzaCIsImhvc3RuYW1lIiwicG9ydCIsInBhdGhuYW1lIiwiY2hhckF0Iiwid2luZG93IiwibG9jYXRpb24iLCJyZXF1ZXN0VVJMIiwicGFyc2VkIiwiaXNTdHJpbmciXSwibWFwcGluZ3MiOiJBQUFBLGFBRUEsSUFBSUEsTUFBUUMsUUFBUSxjQUVwQkMsT0FBT0MsUUFDTEgsTUFBTUksdUJBSUosV0FDRSxJQUVJQyxFQUZBQyxFQUFPLGtCQUFrQkMsS0FBS0MsVUFBVUMsV0FDeENDLEVBQWlCQyxTQUFTQyxjQUFjLEtBUzVDLFNBQVNDLEVBQVdDLEdBQ2xCLElBQUlDLEVBQU9ELEVBV1gsT0FUSVIsSUFFRkksRUFBZU0sYUFBYSxPQUFRRCxHQUNwQ0EsRUFBT0wsRUFBZUssTUFHeEJMLEVBQWVNLGFBQWEsT0FBUUQsSUFJbENBLEtBQU1MLEVBQWVLLEtBQ3JCRSxTQUFVUCxFQUFlTyxTQUFXUCxFQUFlTyxTQUFTQyxRQUFRLEtBQU0sSUFBTSxHQUNoRkMsS0FBTVQsRUFBZVMsS0FDckJDLE9BQVFWLEVBQWVVLE9BQVNWLEVBQWVVLE9BQU9GLFFBQVEsTUFBTyxJQUFNLEdBQzNFRyxLQUFNWCxFQUFlVyxLQUFPWCxFQUFlVyxLQUFLSCxRQUFRLEtBQU0sSUFBTSxHQUNwRUksU0FBVVosRUFBZVksU0FDekJDLEtBQU1iLEVBQWVhLEtBQ3JCQyxTQUFpRCxNQUF0Q2QsRUFBZWMsU0FBU0MsT0FBTyxHQUN4Q2YsRUFBZWMsU0FDZixJQUFNZCxFQUFlYyxVQVkzQixPQVJBbkIsRUFBWVEsRUFBV2EsT0FBT0MsU0FBU1osTUFRaEMsU0FBeUJhLEdBQzlCLElBQUlDLEVBQVU3QixNQUFNOEIsU0FBU0YsR0FBZWYsRUFBV2UsR0FBY0EsRUFDckUsT0FBUUMsRUFBT1osV0FBYVosRUFBVVksVUFDbENZLEVBQU9WLE9BQVNkLEVBQVVjLE1BaERsQyxHQXNEUyxXQUNMLE9BQU8iLCJmaWxlIjoiL0FwcGxpY2F0aW9ucy9wcm9qZWN0cy9jaGVpbC90YXJnZXRfX3Bob25lQ29udHJhY3RzX18yNDUvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcyJ9","\"use strict\";var utils=require(\"../utils\");module.exports=function(e,t){utils.forEach(e,function(r,s){s!==t&&s.toUpperCase()===t.toUpperCase()&&(e[t]=r,delete e[s])})};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vcm1hbGl6ZUhlYWRlck5hbWUuanMiXSwibmFtZXMiOlsidXRpbHMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImhlYWRlcnMiLCJub3JtYWxpemVkTmFtZSIsImZvckVhY2giLCJ2YWx1ZSIsIm5hbWUiLCJ0b1VwcGVyQ2FzZSJdLCJtYXBwaW5ncyI6IkFBQUEsYUFFQSxJQUFJQSxNQUFRQyxRQUFRLFlBRXBCQyxPQUFPQyxRQUFVLFNBQTZCQyxFQUFTQyxHQUNyREwsTUFBTU0sUUFBUUYsRUFBUyxTQUF1QkcsRUFBT0MsR0FDL0NBLElBQVNILEdBQWtCRyxFQUFLQyxnQkFBa0JKLEVBQWVJLGdCQUNuRUwsRUFBUUMsR0FBa0JFLFNBQ25CSCxFQUFRSSIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcyJ9","\"use strict\";var utils=require(\"./../utils\"),ignoreDuplicateOf=[\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"];module.exports=function(t){var e,i,r,o={};return t?(utils.forEach(t.split(\"\\n\"),function(t){if(r=t.indexOf(\":\"),e=utils.trim(t.substr(0,r)).toLowerCase(),i=utils.trim(t.substr(r+1)),e){if(o[e]&&ignoreDuplicateOf.indexOf(e)>=0)return;o[e]=\"set-cookie\"===e?(o[e]?o[e]:[]).concat([i]):o[e]?o[e]+\", \"+i:i}}),o):o};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlSGVhZGVycy5qcyJdLCJuYW1lcyI6WyJ1dGlscyIsInJlcXVpcmUiLCJpZ25vcmVEdXBsaWNhdGVPZiIsIm1vZHVsZSIsImV4cG9ydHMiLCJoZWFkZXJzIiwia2V5IiwidmFsIiwiaSIsInBhcnNlZCIsImZvckVhY2giLCJzcGxpdCIsImxpbmUiLCJpbmRleE9mIiwidHJpbSIsInN1YnN0ciIsInRvTG93ZXJDYXNlIiwiY29uY2F0Il0sIm1hcHBpbmdzIjoiQUFBQSxhQUVBLElBQUlBLE1BQVFDLFFBQVEsY0FJaEJDLG1CQUNGLE1BQU8sZ0JBQWlCLGlCQUFrQixlQUFnQixPQUMxRCxVQUFXLE9BQVEsT0FBUSxvQkFBcUIsc0JBQ2hELGdCQUFpQixXQUFZLGVBQWdCLHNCQUM3QyxVQUFXLGNBQWUsY0FnQjVCQyxPQUFPQyxRQUFVLFNBQXNCQyxHQUNyQyxJQUNJQyxFQUNBQyxFQUNBQyxFQUhBQyxLQUtKLE9BQUtKLEdBRUxMLE1BQU1VLFFBQVFMLEVBQVFNLE1BQU0sTUFBTyxTQUFnQkMsR0FLakQsR0FKQUosRUFBSUksRUFBS0MsUUFBUSxLQUNqQlAsRUFBTU4sTUFBTWMsS0FBS0YsRUFBS0csT0FBTyxFQUFHUCxJQUFJUSxjQUNwQ1QsRUFBTVAsTUFBTWMsS0FBS0YsRUFBS0csT0FBT1AsRUFBSSxJQUU3QkYsRUFBSyxDQUNQLEdBQUlHLEVBQU9ILElBQVFKLGtCQUFrQlcsUUFBUVAsSUFBUSxFQUNuRCxPQUdBRyxFQUFPSCxHQURHLGVBQVJBLEdBQ2FHLEVBQU9ILEdBQU9HLEVBQU9ILE9BQVdXLFFBQVFWLElBRXpDRSxFQUFPSCxHQUFPRyxFQUFPSCxHQUFPLEtBQU9DLEVBQU1BLEtBS3RERSxHQW5CZ0JBIiwiZmlsZSI6Ii9BcHBsaWNhdGlvbnMvcHJvamVjdHMvY2hlaWwvdGFyZ2V0X19waG9uZUNvbnRyYWN0c19fMjQ1L25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wYXJzZUhlYWRlcnMuanMifQ==","\"use strict\";module.exports=function(n){return function(t){return n.apply(null,t)}};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwcmVhZC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY2FsbGJhY2siLCJhcnIiLCJhcHBseSJdLCJtYXBwaW5ncyI6IkFBQUEsYUFzQkFBLE9BQU9DLFFBQVUsU0FBZ0JDLEdBQy9CLE9BQU8sU0FBY0MsR0FDbkIsT0FBT0QsRUFBU0UsTUFBTSxLQUFNRCIsImZpbGUiOiIvQXBwbGljYXRpb25zL3Byb2plY3RzL2NoZWlsL3RhcmdldF9fcGhvbmVDb250cmFjdHNfXzI0NS9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzIn0=","\"use strict\";var pkg=require(\"./../../package.json\"),validators={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach(function(r,e){validators[r]=function(n){return typeof n===r||\"a\"+(e<1?\"n \":\" \")+r}});var deprecatedWarnings={},currentVerArr=pkg.version.split(\".\");function isOlderVersion(r,e){for(var n=e?e.split(\".\"):currentVerArr,o=r.split(\".\"),t=0;t<3;t++){if(n[t]>o[t])return!0;if(n[t]<o[t])return!1}return!1}function assertOptions(r,e,n){if(\"object\"!=typeof r)throw new TypeError(\"options must be an object\");for(var o=Object.keys(r),t=o.length;t-- >0;){var i=o[t],s=e[i];if(s){var a=r[i],u=void 0===a||s(a,i,r);if(!0!==u)throw new TypeError(\"option \"+i+\" must be \"+u)}else if(!0!==n)throw Error(\"Unknown option \"+i)}}validators.transitional=function(r,e,n){var o=e&&isOlderVersion(e);function t(r,e){return\"[Axios v\"+pkg.version+\"] Transitional option '\"+r+\"'\"+e+(n?\". \"+n:\"\")}return function(n,i,s){if(!1===r)throw new Error(t(i,\" has been removed in \"+e));return o&&!deprecatedWarnings[i]&&(deprecatedWarnings[i]=!0,console.warn(t(i,\" has been deprecated since v\"+e+\" and will be removed in the near future\"))),!r||r(n,i,s)}},module.exports={isOlderVersion:isOlderVersion,assertOptions:assertOptions,validators:validators};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRvci5qcyJdLCJuYW1lcyI6WyJwa2ciLCJyZXF1aXJlIiwidmFsaWRhdG9ycyIsImZvckVhY2giLCJ0eXBlIiwiaSIsInRoaW5nIiwiZGVwcmVjYXRlZFdhcm5pbmdzIiwiY3VycmVudFZlckFyciIsInZlcnNpb24iLCJzcGxpdCIsImlzT2xkZXJWZXJzaW9uIiwidGhhblZlcnNpb24iLCJwa2dWZXJzaW9uQXJyIiwiZGVzdFZlciIsImFzc2VydE9wdGlvbnMiLCJvcHRpb25zIiwic2NoZW1hIiwiYWxsb3dVbmtub3duIiwiVHlwZUVycm9yIiwia2V5cyIsIk9iamVjdCIsImxlbmd0aCIsIm9wdCIsInZhbGlkYXRvciIsInZhbHVlIiwicmVzdWx0IiwidW5kZWZpbmVkIiwiRXJyb3IiLCJ0cmFuc2l0aW9uYWwiLCJtZXNzYWdlIiwiaXNEZXByZWNhdGVkIiwiZm9ybWF0TWVzc2FnZSIsImRlc2MiLCJvcHRzIiwiY29uc29sZSIsIndhcm4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUVBLElBQUlBLElBQU1DLFFBQVEsd0JBRWRDLGVBR0gsU0FBVSxVQUFXLFNBQVUsV0FBWSxTQUFVLFVBQVVDLFFBQVEsU0FBU0MsRUFBTUMsR0FDckZILFdBQVdFLEdBQVEsU0FBbUJFLEdBQ3BDLGNBQWNBLElBQVVGLEdBQVEsS0FBT0MsRUFBSSxFQUFJLEtBQU8sS0FBT0QsS0FJakUsSUFBSUcsc0JBQ0FDLGNBQWdCUixJQUFJUyxRQUFRQyxNQUFNLEtBUXRDLFNBQVNDLGVBQWVGLEVBQVNHLEdBRy9CLElBRkEsSUFBSUMsRUFBZ0JELEVBQWNBLEVBQVlGLE1BQU0sS0FBT0YsY0FDdkRNLEVBQVVMLEVBQVFDLE1BQU0sS0FDbkJMLEVBQUksRUFBR0EsRUFBSSxFQUFHQSxJQUFLLENBQzFCLEdBQUlRLEVBQWNSLEdBQUtTLEVBQVFULEdBQzdCLE9BQU8sRUFDRixHQUFJUSxFQUFjUixHQUFLUyxFQUFRVCxHQUNwQyxPQUFPLEVBR1gsT0FBTyxFQTZDVCxTQUFTVSxjQUFjQyxFQUFTQyxFQUFRQyxHQUN0QyxHQUF1QixpQkFBWkYsRUFDVCxNQUFNLElBQUlHLFVBQVUsNkJBSXRCLElBRkEsSUFBSUMsRUFBT0MsT0FBT0QsS0FBS0osR0FDbkJYLEVBQUllLEVBQUtFLE9BQ05qQixLQUFNLEdBQUcsQ0FDZCxJQUFJa0IsRUFBTUgsRUFBS2YsR0FDWG1CLEVBQVlQLEVBQU9NLEdBQ3ZCLEdBQUlDLEVBQUosQ0FDRSxJQUFJQyxFQUFRVCxFQUFRTyxHQUNoQkcsT0FBbUJDLElBQVZGLEdBQXVCRCxFQUFVQyxFQUFPRixFQUFLUCxHQUMxRCxJQUFlLElBQVhVLEVBQ0YsTUFBTSxJQUFJUCxVQUFVLFVBQVlJLEVBQU0sWUFBY0csUUFJeEQsSUFBcUIsSUFBakJSLEVBQ0YsTUFBTVUsTUFBTSxrQkFBb0JMLElBckR0Q3JCLFdBQVcyQixhQUFlLFNBQXNCTCxFQUFXZixFQUFTcUIsR0FDbEUsSUFBSUMsRUFBZXRCLEdBQVdFLGVBQWVGLEdBRTdDLFNBQVN1QixFQUFjVCxFQUFLVSxHQUMxQixNQUFPLFdBQWFqQyxJQUFJUyxRQUFVLDBCQUE2QmMsRUFBTSxJQUFPVSxHQUFRSCxFQUFVLEtBQU9BLEVBQVUsSUFJakgsT0FBTyxTQUFTTCxFQUFPRixFQUFLVyxHQUMxQixJQUFrQixJQUFkVixFQUNGLE1BQU0sSUFBSUksTUFBTUksRUFBY1QsRUFBSyx3QkFBMEJkLElBYy9ELE9BWElzQixJQUFpQnhCLG1CQUFtQmdCLEtBQ3RDaEIsbUJBQW1CZ0IsSUFBTyxFQUUxQlksUUFBUUMsS0FDTkosRUFDRVQsRUFDQSwrQkFBaUNkLEVBQVUsOENBSzFDZSxHQUFZQSxFQUFVQyxFQUFPRixFQUFLVyxLQWtDN0NHLE9BQU9DLFNBQ0wzQixlQUFnQkEsZUFDaEJJLGNBQWVBLGNBQ2ZiLFdBQVlBIiwiZmlsZSI6Ii9BcHBsaWNhdGlvbnMvcHJvamVjdHMvY2hlaWwvdGFyZ2V0X19waG9uZUNvbnRyYWN0c19fMjQ1L25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy92YWxpZGF0b3IuanMifQ==","\"use strict\";var bind=require(\"./helpers/bind\"),toString=Object.prototype.toString;function isArray(r){return\"[object Array]\"===toString.call(r)}function isUndefined(r){return void 0===r}function isBuffer(r){return null!==r&&!isUndefined(r)&&null!==r.constructor&&!isUndefined(r.constructor)&&\"function\"==typeof r.constructor.isBuffer&&r.constructor.isBuffer(r)}function isArrayBuffer(r){return\"[object ArrayBuffer]\"===toString.call(r)}function isFormData(r){return\"undefined\"!=typeof FormData&&r instanceof FormData}function isArrayBufferView(r){return\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(r):r&&r.buffer&&r.buffer instanceof ArrayBuffer}function isString(r){return\"string\"==typeof r}function isNumber(r){return\"number\"==typeof r}function isObject(r){return null!==r&&\"object\"==typeof r}function isPlainObject(r){if(\"[object Object]\"!==toString.call(r))return!1;var t=Object.getPrototypeOf(r);return null===t||t===Object.prototype}function isDate(r){return\"[object Date]\"===toString.call(r)}function isFile(r){return\"[object File]\"===toString.call(r)}function isBlob(r){return\"[object Blob]\"===toString.call(r)}function isFunction(r){return\"[object Function]\"===toString.call(r)}function isStream(r){return isObject(r)&&isFunction(r.pipe)}function isURLSearchParams(r){return\"undefined\"!=typeof URLSearchParams&&r instanceof URLSearchParams}function trim(r){return r.trim?r.trim():r.replace(/^\\s+|\\s+$/g,\"\")}function isStandardBrowserEnv(){return(\"undefined\"==typeof navigator||\"ReactNative\"!==navigator.product&&\"NativeScript\"!==navigator.product&&\"NS\"!==navigator.product)&&(\"undefined\"!=typeof window&&\"undefined\"!=typeof document)}function forEach(r,t){if(null!==r&&void 0!==r)if(\"object\"!=typeof r&&(r=[r]),isArray(r))for(var e=0,i=r.length;e<i;e++)t.call(null,r[e],e,r);else for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&t.call(null,r[n],n,r)}function merge(){var r={};function t(t,e){isPlainObject(r[e])&&isPlainObject(t)?r[e]=merge(r[e],t):isPlainObject(t)?r[e]=merge({},t):isArray(t)?r[e]=t.slice():r[e]=t}for(var e=0,i=arguments.length;e<i;e++)forEach(arguments[e],t);return r}function extend(r,t,e){return forEach(t,function(t,i){r[i]=e&&\"function\"==typeof t?bind(t,e):t}),r}function stripBOM(r){return 65279===r.charCodeAt(0)&&(r=r.slice(1)),r}module.exports={isArray:isArray,isArrayBuffer:isArrayBuffer,isBuffer:isBuffer,isFormData:isFormData,isArrayBufferView:isArrayBufferView,isString:isString,isNumber:isNumber,isObject:isObject,isPlainObject:isPlainObject,isUndefined:isUndefined,isDate:isDate,isFile:isFile,isBlob:isBlob,isFunction:isFunction,isStream:isStream,isURLSearchParams:isURLSearchParams,isStandardBrowserEnv:isStandardBrowserEnv,forEach:forEach,merge:merge,extend:extend,trim:trim,stripBOM:stripBOM};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImJpbmQiLCJyZXF1aXJlIiwidG9TdHJpbmciLCJPYmplY3QiLCJwcm90b3R5cGUiLCJpc0FycmF5IiwidmFsIiwiY2FsbCIsImlzVW5kZWZpbmVkIiwiaXNCdWZmZXIiLCJjb25zdHJ1Y3RvciIsImlzQXJyYXlCdWZmZXIiLCJpc0Zvcm1EYXRhIiwiRm9ybURhdGEiLCJpc0FycmF5QnVmZmVyVmlldyIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiYnVmZmVyIiwiaXNTdHJpbmciLCJpc051bWJlciIsImlzT2JqZWN0IiwiaXNQbGFpbk9iamVjdCIsImdldFByb3RvdHlwZU9mIiwiaXNEYXRlIiwiaXNGaWxlIiwiaXNCbG9iIiwiaXNGdW5jdGlvbiIsImlzU3RyZWFtIiwicGlwZSIsImlzVVJMU2VhcmNoUGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwidHJpbSIsInN0ciIsInJlcGxhY2UiLCJpc1N0YW5kYXJkQnJvd3NlckVudiIsIm5hdmlnYXRvciIsInByb2R1Y3QiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImZvckVhY2giLCJvYmoiLCJmbiIsImkiLCJsIiwibGVuZ3RoIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJtZXJnZSIsInJlc3VsdCIsImFzc2lnblZhbHVlIiwic2xpY2UiLCJhcmd1bWVudHMiLCJleHRlbmQiLCJhIiwiYiIsInRoaXNBcmciLCJzdHJpcEJPTSIsImNvbnRlbnQiLCJjaGFyQ29kZUF0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsYUFFQSxJQUFJQSxLQUFPQyxRQUFRLGtCQUlmQyxTQUFXQyxPQUFPQyxVQUFVRixTQVFoQyxTQUFTRyxRQUFRQyxHQUNmLE1BQThCLG1CQUF2QkosU0FBU0ssS0FBS0QsR0FTdkIsU0FBU0UsWUFBWUYsR0FDbkIsWUFBc0IsSUFBUkEsRUFTaEIsU0FBU0csU0FBU0gsR0FDaEIsT0FBZSxPQUFSQSxJQUFpQkUsWUFBWUYsSUFBNEIsT0FBcEJBLEVBQUlJLGNBQXlCRixZQUFZRixFQUFJSSxjQUNoRCxtQkFBN0JKLEVBQUlJLFlBQVlELFVBQTJCSCxFQUFJSSxZQUFZRCxTQUFTSCxHQVNsRixTQUFTSyxjQUFjTCxHQUNyQixNQUE4Qix5QkFBdkJKLFNBQVNLLEtBQUtELEdBU3ZCLFNBQVNNLFdBQVdOLEdBQ2xCLE1BQTRCLG9CQUFiTyxVQUE4QlAsYUFBZU8sU0FTOUQsU0FBU0Msa0JBQWtCUixHQU96QixNQUw0QixvQkFBaEJTLGFBQWlDQSxZQUFrQixPQUNwREEsWUFBWUMsT0FBT1YsR0FFbkIsR0FBVUEsRUFBVSxRQUFNQSxFQUFJVyxrQkFBa0JGLFlBVzdELFNBQVNHLFNBQVNaLEdBQ2hCLE1BQXNCLGlCQUFSQSxFQVNoQixTQUFTYSxTQUFTYixHQUNoQixNQUFzQixpQkFBUkEsRUFTaEIsU0FBU2MsU0FBU2QsR0FDaEIsT0FBZSxPQUFSQSxHQUErQixpQkFBUkEsRUFTaEMsU0FBU2UsY0FBY2YsR0FDckIsR0FBMkIsb0JBQXZCSixTQUFTSyxLQUFLRCxHQUNoQixPQUFPLEVBR1QsSUFBSUYsRUFBWUQsT0FBT21CLGVBQWVoQixHQUN0QyxPQUFxQixPQUFkRixHQUFzQkEsSUFBY0QsT0FBT0MsVUFTcEQsU0FBU21CLE9BQU9qQixHQUNkLE1BQThCLGtCQUF2QkosU0FBU0ssS0FBS0QsR0FTdkIsU0FBU2tCLE9BQU9sQixHQUNkLE1BQThCLGtCQUF2QkosU0FBU0ssS0FBS0QsR0FTdkIsU0FBU21CLE9BQU9uQixHQUNkLE1BQThCLGtCQUF2QkosU0FBU0ssS0FBS0QsR0FTdkIsU0FBU29CLFdBQVdwQixHQUNsQixNQUE4QixzQkFBdkJKLFNBQVNLLEtBQUtELEdBU3ZCLFNBQVNxQixTQUFTckIsR0FDaEIsT0FBT2MsU0FBU2QsSUFBUW9CLFdBQVdwQixFQUFJc0IsTUFTekMsU0FBU0Msa0JBQWtCdkIsR0FDekIsTUFBa0Msb0JBQXBCd0IsaUJBQW1DeEIsYUFBZXdCLGdCQVNsRSxTQUFTQyxLQUFLQyxHQUNaLE9BQU9BLEVBQUlELEtBQU9DLEVBQUlELE9BQVNDLEVBQUlDLFFBQVEsYUFBYyxJQWtCM0QsU0FBU0MsdUJBQ1AsT0FBeUIsb0JBQWRDLFdBQW9ELGdCQUF0QkEsVUFBVUMsU0FDWSxpQkFBdEJELFVBQVVDLFNBQ1ksT0FBdEJELFVBQVVDLFdBSS9CLG9CQUFYQyxRQUNhLG9CQUFiQyxVQWdCWCxTQUFTQyxRQUFRQyxFQUFLQyxHQUVwQixHQUFZLE9BQVJELFFBQStCLElBQVJBLEVBVTNCLEdBTG1CLGlCQUFSQSxJQUVUQSxHQUFPQSxJQUdMbkMsUUFBUW1DLEdBRVYsSUFBSyxJQUFJRSxFQUFJLEVBQUdDLEVBQUlILEVBQUlJLE9BQVFGLEVBQUlDLEVBQUdELElBQ3JDRCxFQUFHbEMsS0FBSyxLQUFNaUMsRUFBSUUsR0FBSUEsRUFBR0YsUUFJM0IsSUFBSyxJQUFJSyxLQUFPTCxFQUNWckMsT0FBT0MsVUFBVTBDLGVBQWV2QyxLQUFLaUMsRUFBS0ssSUFDNUNKLEVBQUdsQyxLQUFLLEtBQU1pQyxFQUFJSyxHQUFNQSxFQUFLTCxHQXVCckMsU0FBU08sUUFDUCxJQUFJQyxLQUNKLFNBQVNDLEVBQVkzQyxFQUFLdUMsR0FDcEJ4QixjQUFjMkIsRUFBT0gsS0FBU3hCLGNBQWNmLEdBQzlDMEMsRUFBT0gsR0FBT0UsTUFBTUMsRUFBT0gsR0FBTXZDLEdBQ3hCZSxjQUFjZixHQUN2QjBDLEVBQU9ILEdBQU9FLFNBQVV6QyxHQUNmRCxRQUFRQyxHQUNqQjBDLEVBQU9ILEdBQU92QyxFQUFJNEMsUUFFbEJGLEVBQU9ILEdBQU92QyxFQUlsQixJQUFLLElBQUlvQyxFQUFJLEVBQUdDLEVBQUlRLFVBQVVQLE9BQVFGLEVBQUlDLEVBQUdELElBQzNDSCxRQUFRWSxVQUFVVCxHQUFJTyxHQUV4QixPQUFPRCxFQVdULFNBQVNJLE9BQU9DLEVBQUdDLEVBQUdDLEdBUXBCLE9BUEFoQixRQUFRZSxFQUFHLFNBQXFCaEQsRUFBS3VDLEdBRWpDUSxFQUFFUixHQURBVSxHQUEwQixtQkFBUmpELEVBQ1hOLEtBQUtNLEVBQUtpRCxHQUVWakQsSUFHTitDLEVBU1QsU0FBU0csU0FBU0MsR0FJaEIsT0FIOEIsUUFBMUJBLEVBQVFDLFdBQVcsS0FDckJELEVBQVVBLEVBQVFQLE1BQU0sSUFFbkJPLEVBR1RFLE9BQU9DLFNBQ0x2RCxRQUFTQSxRQUNUTSxjQUFlQSxjQUNmRixTQUFVQSxTQUNWRyxXQUFZQSxXQUNaRSxrQkFBbUJBLGtCQUNuQkksU0FBVUEsU0FDVkMsU0FBVUEsU0FDVkMsU0FBVUEsU0FDVkMsY0FBZUEsY0FDZmIsWUFBYUEsWUFDYmUsT0FBUUEsT0FDUkMsT0FBUUEsT0FDUkMsT0FBUUEsT0FDUkMsV0FBWUEsV0FDWkMsU0FBVUEsU0FDVkUsa0JBQW1CQSxrQkFDbkJLLHFCQUFzQkEscUJBQ3RCSyxRQUFTQSxRQUNUUSxNQUFPQSxNQUNQSyxPQUFRQSxPQUNSckIsS0FBTUEsS0FDTnlCLFNBQVVBIiwiZmlsZSI6Ii9BcHBsaWNhdGlvbnMvcHJvamVjdHMvY2hlaWwvdGFyZ2V0X19waG9uZUNvbnRyYWN0c19fMjQ1L25vZGVfbW9kdWxlcy9heGlvcy9saWIvdXRpbHMuanMifQ==","module.exports={\n  \"name\": \"axios\",\n  \"version\": \"0.21.4\",\n  \"description\": \"Promise based HTTP client for the browser and node.js\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"grunt test\",\n    \"start\": \"node ./sandbox/server.js\",\n    \"build\": \"NODE_ENV=production grunt build\",\n    \"preversion\": \"npm test\",\n    \"version\": \"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\",\n    \"postversion\": \"git push && git push --tags\",\n    \"examples\": \"node ./examples/server.js\",\n    \"coveralls\": \"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\n    \"fix\": \"eslint --fix lib/**/*.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/axios/axios.git\"\n  },\n  \"keywords\": [\n    \"xhr\",\n    \"http\",\n    \"ajax\",\n    \"promise\",\n    \"node\"\n  ],\n  \"author\": \"Matt Zabriskie\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/axios/axios/issues\"\n  },\n  \"homepage\": \"https://axios-http.com\",\n  \"devDependencies\": {\n    \"coveralls\": \"^3.0.0\",\n    \"es6-promise\": \"^4.2.4\",\n    \"grunt\": \"^1.3.0\",\n    \"grunt-banner\": \"^0.6.0\",\n    \"grunt-cli\": \"^1.2.0\",\n    \"grunt-contrib-clean\": \"^1.1.0\",\n    \"grunt-contrib-watch\": \"^1.0.0\",\n    \"grunt-eslint\": \"^23.0.0\",\n    \"grunt-karma\": \"^4.0.0\",\n    \"grunt-mocha-test\": \"^0.13.3\",\n    \"grunt-ts\": \"^6.0.0-beta.19\",\n    \"grunt-webpack\": \"^4.0.2\",\n    \"istanbul-instrumenter-loader\": \"^1.0.0\",\n    \"jasmine-core\": \"^2.4.1\",\n    \"karma\": \"^6.3.2\",\n    \"karma-chrome-launcher\": \"^3.1.0\",\n    \"karma-firefox-launcher\": \"^2.1.0\",\n    \"karma-jasmine\": \"^1.1.1\",\n    \"karma-jasmine-ajax\": \"^0.1.13\",\n    \"karma-safari-launcher\": \"^1.0.0\",\n    \"karma-sauce-launcher\": \"^4.3.6\",\n    \"karma-sinon\": \"^1.0.5\",\n    \"karma-sourcemap-loader\": \"^0.3.8\",\n    \"karma-webpack\": \"^4.0.2\",\n    \"load-grunt-tasks\": \"^3.5.2\",\n    \"minimist\": \"^1.2.0\",\n    \"mocha\": \"^8.2.1\",\n    \"sinon\": \"^4.5.0\",\n    \"terser-webpack-plugin\": \"^4.2.3\",\n    \"typescript\": \"^4.0.5\",\n    \"url-search-params\": \"^0.10.0\",\n    \"webpack\": \"^4.44.2\",\n    \"webpack-dev-server\": \"^3.11.0\"\n  },\n  \"browser\": {\n    \"./lib/adapters/http.js\": \"./lib/adapters/xhr.js\"\n  },\n  \"jsdelivr\": \"dist/axios.min.js\",\n  \"unpkg\": \"dist/axios.min.js\",\n  \"typings\": \"./index.d.ts\",\n  \"dependencies\": {\n    \"follow-redirects\": \"^1.14.0\"\n  },\n  \"bundlesize\": [\n    {\n      \"path\": \"./dist/axios.min.js\",\n      \"threshold\": \"5kB\"\n    }\n  ]\n}\n","(function(){var n,t=200,r=\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\",e=\"Expected a function\",u=\"Invalid `variable` option passed into `_.template`\",i=\"__lodash_hash_undefined__\",o=500,f=\"__lodash_placeholder__\",a=1,c=2,l=4,s=1,h=2,p=1,v=2,_=4,g=8,y=16,d=32,b=64,w=128,m=256,x=512,j=30,A=\"...\",k=800,O=16,I=1,R=2,E=1/0,z=9007199254740991,S=1.7976931348623157e308,L=NaN,W=4294967295,C=W-1,U=W>>>1,B=[[\"ary\",w],[\"bind\",p],[\"bindKey\",v],[\"curry\",g],[\"curryRight\",y],[\"flip\",x],[\"partial\",d],[\"partialRight\",b],[\"rearg\",m]],T=\"[object Arguments]\",D=\"[object Array]\",$=\"[object AsyncFunction]\",M=\"[object Boolean]\",F=\"[object Date]\",N=\"[object DOMException]\",P=\"[object Error]\",q=\"[object Function]\",Z=\"[object GeneratorFunction]\",K=\"[object Map]\",V=\"[object Number]\",G=\"[object Null]\",H=\"[object Object]\",J=\"[object Proxy]\",Y=\"[object RegExp]\",Q=\"[object Set]\",X=\"[object String]\",nn=\"[object Symbol]\",tn=\"[object Undefined]\",rn=\"[object WeakMap]\",en=\"[object WeakSet]\",un=\"[object ArrayBuffer]\",on=\"[object DataView]\",fn=\"[object Float32Array]\",an=\"[object Float64Array]\",cn=\"[object Int8Array]\",ln=\"[object Int16Array]\",sn=\"[object Int32Array]\",hn=\"[object Uint8Array]\",pn=\"[object Uint8ClampedArray]\",vn=\"[object Uint16Array]\",_n=\"[object Uint32Array]\",gn=/\\b__p \\+= '';/g,yn=/\\b(__p \\+=) '' \\+/g,dn=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g,bn=/&(?:amp|lt|gt|quot|#39);/g,wn=/[&<>\"']/g,mn=RegExp(bn.source),xn=RegExp(wn.source),jn=/<%-([\\s\\S]+?)%>/g,An=/<%([\\s\\S]+?)%>/g,kn=/<%=([\\s\\S]+?)%>/g,On=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,In=/^\\w*$/,Rn=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,En=/[\\\\^$.*+?()[\\]{}|]/g,zn=RegExp(En.source),Sn=/^\\s+/,Ln=/\\s/,Wn=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,Cn=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,Un=/,? & /,Bn=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,Tn=/[()=,{}\\[\\]\\/\\s]/,Dn=/\\\\(\\\\)?/g,$n=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,Mn=/\\w*$/,Fn=/^[-+]0x[0-9a-f]+$/i,Nn=/^0b[01]+$/i,Pn=/^\\[object .+?Constructor\\]$/,qn=/^0o[0-7]+$/i,Zn=/^(?:0|[1-9]\\d*)$/,Kn=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,Vn=/($^)/,Gn=/['\\n\\r\\u2028\\u2029\\\\]/g,Hn=\"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff\",Jn=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",Yn=\"[\\\\ud800-\\\\udfff]\",Qn=\"[\"+Jn+\"]\",Xn=\"[\"+Hn+\"]\",nt=\"\\\\d+\",tt=\"[\\\\u2700-\\\\u27bf]\",rt=\"[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]\",et=\"[^\\\\ud800-\\\\udfff\"+Jn+nt+\"\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]\",ut=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",it=\"[^\\\\ud800-\\\\udfff]\",ot=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",ft=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",at=\"[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]\",ct=\"(?:\"+rt+\"|\"+et+\")\",lt=\"(?:\"+at+\"|\"+et+\")\",st=\"(?:\"+Xn+\"|\"+ut+\")\"+\"?\",ht=\"[\\\\ufe0e\\\\ufe0f]?\"+st+(\"(?:\\\\u200d(?:\"+[it,ot,ft].join(\"|\")+\")[\\\\ufe0e\\\\ufe0f]?\"+st+\")*\"),pt=\"(?:\"+[tt,ot,ft].join(\"|\")+\")\"+ht,vt=\"(?:\"+[it+Xn+\"?\",Xn,ot,ft,Yn].join(\"|\")+\")\",_t=RegExp(\"['’]\",\"g\"),gt=RegExp(Xn,\"g\"),yt=RegExp(ut+\"(?=\"+ut+\")|\"+vt+ht,\"g\"),dt=RegExp([at+\"?\"+rt+\"+(?:['’](?:d|ll|m|re|s|t|ve))?(?=\"+[Qn,at,\"$\"].join(\"|\")+\")\",lt+\"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=\"+[Qn,at+ct,\"$\"].join(\"|\")+\")\",at+\"?\"+ct+\"+(?:['’](?:d|ll|m|re|s|t|ve))?\",at+\"+(?:['’](?:D|LL|M|RE|S|T|VE))?\",\"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\",\"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\",nt,pt].join(\"|\"),\"g\"),bt=RegExp(\"[\\\\u200d\\\\ud800-\\\\udfff\"+Hn+\"\\\\ufe0e\\\\ufe0f]\"),wt=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,mt=[\"Array\",\"Buffer\",\"DataView\",\"Date\",\"Error\",\"Float32Array\",\"Float64Array\",\"Function\",\"Int8Array\",\"Int16Array\",\"Int32Array\",\"Map\",\"Math\",\"Object\",\"Promise\",\"RegExp\",\"Set\",\"String\",\"Symbol\",\"TypeError\",\"Uint8Array\",\"Uint8ClampedArray\",\"Uint16Array\",\"Uint32Array\",\"WeakMap\",\"_\",\"clearTimeout\",\"isFinite\",\"parseInt\",\"setTimeout\"],xt=-1,jt={};jt[fn]=jt[an]=jt[cn]=jt[ln]=jt[sn]=jt[hn]=jt[pn]=jt[vn]=jt[_n]=!0,jt[T]=jt[D]=jt[un]=jt[M]=jt[on]=jt[F]=jt[P]=jt[q]=jt[K]=jt[V]=jt[H]=jt[Y]=jt[Q]=jt[X]=jt[rn]=!1;var At={};At[T]=At[D]=At[un]=At[on]=At[M]=At[F]=At[fn]=At[an]=At[cn]=At[ln]=At[sn]=At[K]=At[V]=At[H]=At[Y]=At[Q]=At[X]=At[nn]=At[hn]=At[pn]=At[vn]=At[_n]=!0,At[P]=At[q]=At[rn]=!1;var kt={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Ot=parseFloat,It=parseInt,Rt=\"object\"==typeof global&&global&&global.Object===Object&&global,Et=\"object\"==typeof self&&self&&self.Object===Object&&self,zt=Rt||Et||Function(\"return this\")(),St=\"object\"==typeof exports&&exports&&!exports.nodeType&&exports,Lt=St&&\"object\"==typeof module&&module&&!module.nodeType&&module,Wt=Lt&&Lt.exports===St,Ct=Wt&&Rt.process,Ut=function(){try{var n=Lt&&Lt.require&&Lt.require(\"util\").types;return n||Ct&&Ct.binding&&Ct.binding(\"util\")}catch(n){}}(),Bt=Ut&&Ut.isArrayBuffer,Tt=Ut&&Ut.isDate,Dt=Ut&&Ut.isMap,$t=Ut&&Ut.isRegExp,Mt=Ut&&Ut.isSet,Ft=Ut&&Ut.isTypedArray;function Nt(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function Pt(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n)}return e}function qt(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&!1!==t(n[r],r,n););return n}function Zt(n,t){for(var r=null==n?0:n.length;r--&&!1!==t(n[r],r,n););return n}function Kt(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return!1;return!0}function Vt(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o)}return i}function Gt(n,t){return!!(null==n?0:n.length)&&ur(n,t,0)>-1}function Ht(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return!0;return!1}function Jt(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function Yt(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function Qt(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);return r}function Xt(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function nr(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return!0;return!1}var tr=ar(\"length\");function rr(n,t,r){var e;return r(n,function(n,r,u){if(t(n,r,u))return e=r,!1}),e}function er(n,t,r,e){for(var u=n.length,i=r+(e?1:-1);e?i--:++i<u;)if(t(n[i],i,n))return i;return-1}function ur(n,t,r){return t==t?function(n,t,r){var e=r-1,u=n.length;for(;++e<u;)if(n[e]===t)return e;return-1}(n,t,r):er(n,or,r)}function ir(n,t,r,e){for(var u=r-1,i=n.length;++u<i;)if(e(n[u],t))return u;return-1}function or(n){return n!=n}function fr(n,t){var r=null==n?0:n.length;return r?sr(n,t)/r:L}function ar(t){return function(r){return null==r?n:r[t]}}function cr(t){return function(r){return null==t?n:t[r]}}function lr(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=!1,n):t(r,n,u,i)}),r}function sr(t,r){for(var e,u=-1,i=t.length;++u<i;){var o=r(t[u]);o!==n&&(e=e===n?o:e+o)}return e}function hr(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function pr(n){return n?n.slice(0,zr(n)+1).replace(Sn,\"\"):n}function vr(n){return function(t){return n(t)}}function _r(n,t){return Jt(t,function(t){return n[t]})}function gr(n,t){return n.has(t)}function yr(n,t){for(var r=-1,e=n.length;++r<e&&ur(t,n[r],0)>-1;);return r}function dr(n,t){for(var r=n.length;r--&&ur(t,n[r],0)>-1;);return r}var br=cr({\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"Ç\":\"C\",\"ç\":\"c\",\"Ð\":\"D\",\"ð\":\"d\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"Ñ\":\"N\",\"ñ\":\"n\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"Ý\":\"Y\",\"ý\":\"y\",\"ÿ\":\"y\",\"Æ\":\"Ae\",\"æ\":\"ae\",\"Þ\":\"Th\",\"þ\":\"th\",\"ß\":\"ss\",\"Ā\":\"A\",\"Ă\":\"A\",\"Ą\":\"A\",\"ā\":\"a\",\"ă\":\"a\",\"ą\":\"a\",\"Ć\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Č\":\"C\",\"ć\":\"c\",\"ĉ\":\"c\",\"ċ\":\"c\",\"č\":\"c\",\"Ď\":\"D\",\"Đ\":\"D\",\"ď\":\"d\",\"đ\":\"d\",\"Ē\":\"E\",\"Ĕ\":\"E\",\"Ė\":\"E\",\"Ę\":\"E\",\"Ě\":\"E\",\"ē\":\"e\",\"ĕ\":\"e\",\"ė\":\"e\",\"ę\":\"e\",\"ě\":\"e\",\"Ĝ\":\"G\",\"Ğ\":\"G\",\"Ġ\":\"G\",\"Ģ\":\"G\",\"ĝ\":\"g\",\"ğ\":\"g\",\"ġ\":\"g\",\"ģ\":\"g\",\"Ĥ\":\"H\",\"Ħ\":\"H\",\"ĥ\":\"h\",\"ħ\":\"h\",\"Ĩ\":\"I\",\"Ī\":\"I\",\"Ĭ\":\"I\",\"Į\":\"I\",\"İ\":\"I\",\"ĩ\":\"i\",\"ī\":\"i\",\"ĭ\":\"i\",\"į\":\"i\",\"ı\":\"i\",\"Ĵ\":\"J\",\"ĵ\":\"j\",\"Ķ\":\"K\",\"ķ\":\"k\",\"ĸ\":\"k\",\"Ĺ\":\"L\",\"Ļ\":\"L\",\"Ľ\":\"L\",\"Ŀ\":\"L\",\"Ł\":\"L\",\"ĺ\":\"l\",\"ļ\":\"l\",\"ľ\":\"l\",\"ŀ\":\"l\",\"ł\":\"l\",\"Ń\":\"N\",\"Ņ\":\"N\",\"Ň\":\"N\",\"Ŋ\":\"N\",\"ń\":\"n\",\"ņ\":\"n\",\"ň\":\"n\",\"ŋ\":\"n\",\"Ō\":\"O\",\"Ŏ\":\"O\",\"Ő\":\"O\",\"ō\":\"o\",\"ŏ\":\"o\",\"ő\":\"o\",\"Ŕ\":\"R\",\"Ŗ\":\"R\",\"Ř\":\"R\",\"ŕ\":\"r\",\"ŗ\":\"r\",\"ř\":\"r\",\"Ś\":\"S\",\"Ŝ\":\"S\",\"Ş\":\"S\",\"Š\":\"S\",\"ś\":\"s\",\"ŝ\":\"s\",\"ş\":\"s\",\"š\":\"s\",\"Ţ\":\"T\",\"Ť\":\"T\",\"Ŧ\":\"T\",\"ţ\":\"t\",\"ť\":\"t\",\"ŧ\":\"t\",\"Ũ\":\"U\",\"Ū\":\"U\",\"Ŭ\":\"U\",\"Ů\":\"U\",\"Ű\":\"U\",\"Ų\":\"U\",\"ũ\":\"u\",\"ū\":\"u\",\"ŭ\":\"u\",\"ů\":\"u\",\"ű\":\"u\",\"ų\":\"u\",\"Ŵ\":\"W\",\"ŵ\":\"w\",\"Ŷ\":\"Y\",\"ŷ\":\"y\",\"Ÿ\":\"Y\",\"Ź\":\"Z\",\"Ż\":\"Z\",\"Ž\":\"Z\",\"ź\":\"z\",\"ż\":\"z\",\"ž\":\"z\",\"Ĳ\":\"IJ\",\"ĳ\":\"ij\",\"Œ\":\"Oe\",\"œ\":\"oe\",\"ŉ\":\"'n\",\"ſ\":\"s\"}),wr=cr({\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"});function mr(n){return\"\\\\\"+kt[n]}function xr(n){return bt.test(n)}function jr(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n]}),r}function Ar(n,t){return function(r){return n(t(r))}}function kr(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r];o!==t&&o!==f||(n[r]=f,i[u++]=r)}return i}function Or(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=n}),r}function Ir(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n]}),r}function Rr(n){return xr(n)?function(n){var t=yt.lastIndex=0;for(;yt.test(n);)++t;return t}(n):tr(n)}function Er(n){return xr(n)?function(n){return n.match(yt)||[]}(n):function(n){return n.split(\"\")}(n)}function zr(n){for(var t=n.length;t--&&Ln.test(n.charAt(t)););return t}var Sr=cr({\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"});var Lr=function Ln(Hn){var Jn,Yn=(Hn=null==Hn?zt:Lr.defaults(zt.Object(),Hn,Lr.pick(zt,mt))).Array,Qn=Hn.Date,Xn=Hn.Error,nt=Hn.Function,tt=Hn.Math,rt=Hn.Object,et=Hn.RegExp,ut=Hn.String,it=Hn.TypeError,ot=Yn.prototype,ft=nt.prototype,at=rt.prototype,ct=Hn[\"__core-js_shared__\"],lt=ft.toString,st=at.hasOwnProperty,ht=0,pt=(Jn=/[^.]+$/.exec(ct&&ct.keys&&ct.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+Jn:\"\",vt=at.toString,yt=lt.call(rt),bt=zt._,kt=et(\"^\"+lt.call(st).replace(En,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),Rt=Wt?Hn.Buffer:n,Et=Hn.Symbol,St=Hn.Uint8Array,Lt=Rt?Rt.allocUnsafe:n,Ct=Ar(rt.getPrototypeOf,rt),Ut=rt.create,tr=at.propertyIsEnumerable,cr=ot.splice,Wr=Et?Et.isConcatSpreadable:n,Cr=Et?Et.iterator:n,Ur=Et?Et.toStringTag:n,Br=function(){try{var n=Mi(rt,\"defineProperty\");return n({},\"\",{}),n}catch(n){}}(),Tr=Hn.clearTimeout!==zt.clearTimeout&&Hn.clearTimeout,Dr=Qn&&Qn.now!==zt.Date.now&&Qn.now,$r=Hn.setTimeout!==zt.setTimeout&&Hn.setTimeout,Mr=tt.ceil,Fr=tt.floor,Nr=rt.getOwnPropertySymbols,Pr=Rt?Rt.isBuffer:n,qr=Hn.isFinite,Zr=ot.join,Kr=Ar(rt.keys,rt),Vr=tt.max,Gr=tt.min,Hr=Qn.now,Jr=Hn.parseInt,Yr=tt.random,Qr=ot.reverse,Xr=Mi(Hn,\"DataView\"),ne=Mi(Hn,\"Map\"),te=Mi(Hn,\"Promise\"),re=Mi(Hn,\"Set\"),ee=Mi(Hn,\"WeakMap\"),ue=Mi(rt,\"create\"),ie=ee&&new ee,oe={},fe=ho(Xr),ae=ho(ne),ce=ho(te),le=ho(re),se=ho(ee),he=Et?Et.prototype:n,pe=he?he.valueOf:n,ve=he?he.toString:n;function _e(n){if(Sf(n)&&!wf(n)&&!(n instanceof be)){if(n instanceof de)return n;if(st.call(n,\"__wrapped__\"))return po(n)}return new de(n)}var ge=function(){function t(){}return function(r){if(!zf(r))return{};if(Ut)return Ut(r);t.prototype=r;var e=new t;return t.prototype=n,e}}();function ye(){}function de(t,r){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!r,this.__index__=0,this.__values__=n}function be(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=W,this.__views__=[]}function we(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function me(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function xe(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function je(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new xe;++t<r;)this.add(n[t])}function Ae(n){var t=this.__data__=new me(n);this.size=t.size}function ke(n,t){var r=wf(n),e=!r&&bf(n),u=!r&&!e&&Af(n),i=!r&&!e&&!u&&$f(n),o=r||e||u||i,f=o?hr(n.length,ut):[],a=f.length;for(var c in n)!t&&!st.call(n,c)||o&&(\"length\"==c||u&&(\"offset\"==c||\"parent\"==c)||i&&(\"buffer\"==c||\"byteLength\"==c||\"byteOffset\"==c)||Vi(c,a))||f.push(c);return f}function Oe(t){var r=t.length;return r?t[ju(0,r-1)]:n}function Ie(n,t){return co(ui(n),Be(t,0,n.length))}function Re(n){return co(ui(n))}function Ee(t,r,e){(e===n||gf(t[r],e))&&(e!==n||r in t)||Ce(t,r,e)}function ze(t,r,e){var u=t[r];st.call(t,r)&&gf(u,e)&&(e!==n||r in t)||Ce(t,r,e)}function Se(n,t){for(var r=n.length;r--;)if(gf(n[r][0],t))return r;return-1}function Le(n,t,r,e){return Fe(n,function(n,u,i){t(e,n,r(n),i)}),e}function We(n,t){return n&&ii(t,fa(t),n)}function Ce(n,t,r){\"__proto__\"==t&&Br?Br(n,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):n[t]=r}function Ue(t,r){for(var e=-1,u=r.length,i=Yn(u),o=null==t;++e<u;)i[e]=o?n:ra(t,r[e]);return i}function Be(t,r,e){return t==t&&(e!==n&&(t=t<=e?t:e),r!==n&&(t=t>=r?t:r)),t}function Te(t,r,e,u,i,o){var f,s=r&a,h=r&c,p=r&l;if(e&&(f=i?e(t,u,i,o):e(t)),f!==n)return f;if(!zf(t))return t;var v=wf(t);if(v){if(f=function(n){var t=n.length,r=new n.constructor(t);return t&&\"string\"==typeof n[0]&&st.call(n,\"index\")&&(r.index=n.index,r.input=n.input),r}(t),!s)return ui(t,f)}else{var _=Pi(t),g=_==q||_==Z;if(Af(t))return Qu(t,s);if(_==H||_==T||g&&!i){if(f=h||g?{}:Zi(t),!s)return h?function(n,t){return ii(n,Ni(n),t)}(t,function(n,t){return n&&ii(t,aa(t),n)}(f,t)):function(n,t){return ii(n,Fi(n),t)}(t,We(f,t))}else{if(!At[_])return i?t:{};f=function(n,t,r){var e,u,i,o=n.constructor;switch(t){case un:return Xu(n);case M:case F:return new o(+n);case on:return function(n,t){var r=t?Xu(n.buffer):n.buffer;return new n.constructor(r,n.byteOffset,n.byteLength)}(n,r);case fn:case an:case cn:case ln:case sn:case hn:case pn:case vn:case _n:return ni(n,r);case K:return new o;case V:case X:return new o(n);case Y:return(i=new(u=n).constructor(u.source,Mn.exec(u))).lastIndex=u.lastIndex,i;case Q:return new o;case nn:return e=n,pe?rt(pe.call(e)):{}}}(t,_,s)}}o||(o=new Ae);var y=o.get(t);if(y)return y;o.set(t,f),Bf(t)?t.forEach(function(n){f.add(Te(n,r,e,n,t,o))}):Lf(t)&&t.forEach(function(n,u){f.set(u,Te(n,r,e,u,t,o))});var d=v?n:(p?h?Wi:Li:h?aa:fa)(t);return qt(d||t,function(n,u){d&&(n=t[u=n]),ze(f,u,Te(n,r,e,u,t,o))}),f}function De(t,r,e){var u=e.length;if(null==t)return!u;for(t=rt(t);u--;){var i=e[u],o=r[i],f=t[i];if(f===n&&!(i in t)||!o(f))return!1}return!0}function $e(t,r,u){if(\"function\"!=typeof t)throw new it(e);return io(function(){t.apply(n,u)},r)}function Me(n,r,e,u){var i=-1,o=Gt,f=!0,a=n.length,c=[],l=r.length;if(!a)return c;e&&(r=Jt(r,vr(e))),u?(o=Ht,f=!1):r.length>=t&&(o=gr,f=!1,r=new je(r));n:for(;++i<a;){var s=n[i],h=null==e?s:e(s);if(s=u||0!==s?s:0,f&&h==h){for(var p=l;p--;)if(r[p]===h)continue n;c.push(s)}else o(r,h,u)||c.push(s)}return c}_e.templateSettings={escape:jn,evaluate:An,interpolate:kn,variable:\"\",imports:{_:_e}},_e.prototype=ye.prototype,_e.prototype.constructor=_e,de.prototype=ge(ye.prototype),de.prototype.constructor=de,be.prototype=ge(ye.prototype),be.prototype.constructor=be,we.prototype.clear=function(){this.__data__=ue?ue(null):{},this.size=0},we.prototype.delete=function(n){var t=this.has(n)&&delete this.__data__[n];return this.size-=t?1:0,t},we.prototype.get=function(t){var r=this.__data__;if(ue){var e=r[t];return e===i?n:e}return st.call(r,t)?r[t]:n},we.prototype.has=function(t){var r=this.__data__;return ue?r[t]!==n:st.call(r,t)},we.prototype.set=function(t,r){var e=this.__data__;return this.size+=this.has(t)?0:1,e[t]=ue&&r===n?i:r,this},me.prototype.clear=function(){this.__data__=[],this.size=0},me.prototype.delete=function(n){var t=this.__data__,r=Se(t,n);return!(r<0||(r==t.length-1?t.pop():cr.call(t,r,1),--this.size,0))},me.prototype.get=function(t){var r=this.__data__,e=Se(r,t);return e<0?n:r[e][1]},me.prototype.has=function(n){return Se(this.__data__,n)>-1},me.prototype.set=function(n,t){var r=this.__data__,e=Se(r,n);return e<0?(++this.size,r.push([n,t])):r[e][1]=t,this},xe.prototype.clear=function(){this.size=0,this.__data__={hash:new we,map:new(ne||me),string:new we}},xe.prototype.delete=function(n){var t=Di(this,n).delete(n);return this.size-=t?1:0,t},xe.prototype.get=function(n){return Di(this,n).get(n)},xe.prototype.has=function(n){return Di(this,n).has(n)},xe.prototype.set=function(n,t){var r=Di(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this},je.prototype.add=je.prototype.push=function(n){return this.__data__.set(n,i),this},je.prototype.has=function(n){return this.__data__.has(n)},Ae.prototype.clear=function(){this.__data__=new me,this.size=0},Ae.prototype.delete=function(n){var t=this.__data__,r=t.delete(n);return this.size=t.size,r},Ae.prototype.get=function(n){return this.__data__.get(n)},Ae.prototype.has=function(n){return this.__data__.has(n)},Ae.prototype.set=function(n,r){var e=this.__data__;if(e instanceof me){var u=e.__data__;if(!ne||u.length<t-1)return u.push([n,r]),this.size=++e.size,this;e=this.__data__=new xe(u)}return e.set(n,r),this.size=e.size,this};var Fe=ai(He),Ne=ai(Je,!0);function Pe(n,t){var r=!0;return Fe(n,function(n,e,u){return r=!!t(n,e,u)}),r}function qe(t,r,e){for(var u=-1,i=t.length;++u<i;){var o=t[u],f=r(o);if(null!=f&&(a===n?f==f&&!Df(f):e(f,a)))var a=f,c=o}return c}function Ze(n,t){var r=[];return Fe(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function Ke(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=Ki),u||(u=[]);++i<o;){var f=n[i];t>0&&r(f)?t>1?Ke(f,t-1,r,e,u):Yt(u,f):e||(u[u.length]=f)}return u}var Ve=ci(),Ge=ci(!0);function He(n,t){return n&&Ve(n,t,fa)}function Je(n,t){return n&&Ge(n,t,fa)}function Ye(n,t){return Vt(t,function(t){return If(n[t])})}function Qe(t,r){for(var e=0,u=(r=Gu(r,t)).length;null!=t&&e<u;)t=t[so(r[e++])];return e&&e==u?t:n}function Xe(n,t,r){var e=t(n);return wf(n)?e:Yt(e,r(n))}function nu(t){return null==t?t===n?tn:G:Ur&&Ur in rt(t)?function(t){var r=st.call(t,Ur),e=t[Ur];try{t[Ur]=n;var u=!0}catch(n){}var i=vt.call(t);return u&&(r?t[Ur]=e:delete t[Ur]),i}(t):function(n){return vt.call(n)}(t)}function tu(n,t){return n>t}function ru(n,t){return null!=n&&st.call(n,t)}function eu(n,t){return null!=n&&t in rt(n)}function uu(t,r,e){for(var u=e?Ht:Gt,i=t[0].length,o=t.length,f=o,a=Yn(o),c=1/0,l=[];f--;){var s=t[f];f&&r&&(s=Jt(s,vr(r))),c=Gr(s.length,c),a[f]=!e&&(r||i>=120&&s.length>=120)?new je(f&&s):n}s=t[0];var h=-1,p=a[0];n:for(;++h<i&&l.length<c;){var v=s[h],_=r?r(v):v;if(v=e||0!==v?v:0,!(p?gr(p,_):u(l,_,e))){for(f=o;--f;){var g=a[f];if(!(g?gr(g,_):u(t[f],_,e)))continue n}p&&p.push(_),l.push(v)}}return l}function iu(t,r,e){var u=null==(t=ro(t,r=Gu(r,t)))?t:t[so(ko(r))];return null==u?n:Nt(u,t,e)}function ou(n){return Sf(n)&&nu(n)==T}function fu(t,r,e,u,i){return t===r||(null==t||null==r||!Sf(t)&&!Sf(r)?t!=t&&r!=r:function(t,r,e,u,i,o){var f=wf(t),a=wf(r),c=f?D:Pi(t),l=a?D:Pi(r),p=(c=c==T?H:c)==H,v=(l=l==T?H:l)==H,_=c==l;if(_&&Af(t)){if(!Af(r))return!1;f=!0,p=!1}if(_&&!p)return o||(o=new Ae),f||$f(t)?zi(t,r,e,u,i,o):function(n,t,r,e,u,i,o){switch(r){case on:if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)return!1;n=n.buffer,t=t.buffer;case un:return!(n.byteLength!=t.byteLength||!i(new St(n),new St(t)));case M:case F:case V:return gf(+n,+t);case P:return n.name==t.name&&n.message==t.message;case Y:case X:return n==t+\"\";case K:var f=jr;case Q:var a=e&s;if(f||(f=Or),n.size!=t.size&&!a)return!1;var c=o.get(n);if(c)return c==t;e|=h,o.set(n,t);var l=zi(f(n),f(t),e,u,i,o);return o.delete(n),l;case nn:if(pe)return pe.call(n)==pe.call(t)}return!1}(t,r,c,e,u,i,o);if(!(e&s)){var g=p&&st.call(t,\"__wrapped__\"),y=v&&st.call(r,\"__wrapped__\");if(g||y){var d=g?t.value():t,b=y?r.value():r;return o||(o=new Ae),i(d,b,e,u,o)}}return!!_&&(o||(o=new Ae),function(t,r,e,u,i,o){var f=e&s,a=Li(t),c=a.length,l=Li(r).length;if(c!=l&&!f)return!1;for(var h=c;h--;){var p=a[h];if(!(f?p in r:st.call(r,p)))return!1}var v=o.get(t),_=o.get(r);if(v&&_)return v==r&&_==t;var g=!0;o.set(t,r),o.set(r,t);for(var y=f;++h<c;){p=a[h];var d=t[p],b=r[p];if(u)var w=f?u(b,d,p,r,t,o):u(d,b,p,t,r,o);if(!(w===n?d===b||i(d,b,e,u,o):w)){g=!1;break}y||(y=\"constructor\"==p)}if(g&&!y){var m=t.constructor,x=r.constructor;m!=x&&\"constructor\"in t&&\"constructor\"in r&&!(\"function\"==typeof m&&m instanceof m&&\"function\"==typeof x&&x instanceof x)&&(g=!1)}return o.delete(t),o.delete(r),g}(t,r,e,u,i,o))}(t,r,e,u,fu,i))}function au(t,r,e,u){var i=e.length,o=i,f=!u;if(null==t)return!o;for(t=rt(t);i--;){var a=e[i];if(f&&a[2]?a[1]!==t[a[0]]:!(a[0]in t))return!1}for(;++i<o;){var c=(a=e[i])[0],l=t[c],p=a[1];if(f&&a[2]){if(l===n&&!(c in t))return!1}else{var v=new Ae;if(u)var _=u(l,p,c,t,r,v);if(!(_===n?fu(p,l,s|h,u,v):_))return!1}}return!0}function cu(n){return!(!zf(n)||pt&&pt in n)&&(If(n)?kt:Pn).test(ho(n))}function lu(n){return\"function\"==typeof n?n:null==n?Wa:\"object\"==typeof n?wf(n)?gu(n[0],n[1]):_u(n):Na(n)}function su(n){if(!Qi(n))return Kr(n);var t=[];for(var r in rt(n))st.call(n,r)&&\"constructor\"!=r&&t.push(r);return t}function hu(n){if(!zf(n))return function(n){var t=[];if(null!=n)for(var r in rt(n))t.push(r);return t}(n);var t=Qi(n),r=[];for(var e in n)(\"constructor\"!=e||!t&&st.call(n,e))&&r.push(e);return r}function pu(n,t){return n<t}function vu(n,t){var r=-1,e=xf(n)?Yn(n.length):[];return Fe(n,function(n,u,i){e[++r]=t(n,u,i)}),e}function _u(n){var t=$i(n);return 1==t.length&&t[0][2]?no(t[0][0],t[0][1]):function(r){return r===n||au(r,n,t)}}function gu(t,r){return Hi(t)&&Xi(r)?no(so(t),r):function(e){var u=ra(e,t);return u===n&&u===r?ea(e,t):fu(r,u,s|h)}}function yu(t,r,e,u,i){t!==r&&Ve(r,function(o,f){if(i||(i=new Ae),zf(o))!function(t,r,e,u,i,o,f){var a=eo(t,e),c=eo(r,e),l=f.get(c);if(l)Ee(t,e,l);else{var s=o?o(a,c,e+\"\",t,r,f):n,h=s===n;if(h){var p=wf(c),v=!p&&Af(c),_=!p&&!v&&$f(c);s=c,p||v||_?wf(a)?s=a:jf(a)?s=ui(a):v?(h=!1,s=Qu(c,!0)):_?(h=!1,s=ni(c,!0)):s=[]:Cf(c)||bf(c)?(s=a,bf(a)?s=Vf(a):zf(a)&&!If(a)||(s=Zi(c))):h=!1}h&&(f.set(c,s),i(s,c,u,o,f),f.delete(c)),Ee(t,e,s)}}(t,r,f,e,yu,u,i);else{var a=u?u(eo(t,f),o,f+\"\",t,r,i):n;a===n&&(a=o),Ee(t,f,a)}},aa)}function du(t,r){var e=t.length;if(e)return Vi(r+=r<0?e:0,e)?t[r]:n}function bu(n,t,r){var e=-1;return t=Jt(t=t.length?Jt(t,function(n){return wf(n)?function(t){return Qe(t,1===n.length?n[0]:n)}:n}):[Wa],vr(Ti())),function(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].value;return n}(vu(n,function(n,r,u){return{criteria:Jt(t,function(t){return t(n)}),index:++e,value:n}}),function(n,t){return function(n,t,r){for(var e=-1,u=n.criteria,i=t.criteria,o=u.length,f=r.length;++e<o;){var a=ti(u[e],i[e]);if(a){if(e>=f)return a;var c=r[e];return a*(\"desc\"==c?-1:1)}}return n.index-t.index}(n,t,r)})}function wu(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],f=Qe(n,o);r(f,o)&&Ru(i,Gu(o,n),f)}return i}function mu(n,t,r,e){var u=e?ir:ur,i=-1,o=t.length,f=n;for(n===t&&(t=ui(t)),r&&(f=Jt(n,vr(r)));++i<o;)for(var a=0,c=t[i],l=r?r(c):c;(a=u(f,l,a,e))>-1;)f!==n&&cr.call(f,a,1),cr.call(n,a,1);return n}function xu(n,t){for(var r=n?t.length:0,e=r-1;r--;){var u=t[r];if(r==e||u!==i){var i=u;Vi(u)?cr.call(n,u,1):Mu(n,u)}}return n}function ju(n,t){return n+Fr(Yr()*(t-n+1))}function Au(n,t){var r=\"\";if(!n||t<1||t>z)return r;do{t%2&&(r+=n),(t=Fr(t/2))&&(n+=n)}while(t);return r}function ku(n,t){return oo(to(n,t,Wa),n+\"\")}function Ou(n){return Oe(ga(n))}function Iu(n,t){var r=ga(n);return co(r,Be(t,0,r.length))}function Ru(t,r,e,u){if(!zf(t))return t;for(var i=-1,o=(r=Gu(r,t)).length,f=o-1,a=t;null!=a&&++i<o;){var c=so(r[i]),l=e;if(\"__proto__\"===c||\"constructor\"===c||\"prototype\"===c)return t;if(i!=f){var s=a[c];(l=u?u(s,c,a):n)===n&&(l=zf(s)?s:Vi(r[i+1])?[]:{})}ze(a,c,l),a=a[c]}return t}var Eu=ie?function(n,t){return ie.set(n,t),n}:Wa,zu=Br?function(n,t){return Br(n,\"toString\",{configurable:!0,enumerable:!1,value:za(t),writable:!0})}:Wa;function Su(n){return co(ga(n))}function Lu(n,t,r){var e=-1,u=n.length;t<0&&(t=-t>u?0:u+t),(r=r>u?u:r)<0&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0;for(var i=Yn(u);++e<u;)i[e]=n[e+t];return i}function Wu(n,t){var r;return Fe(n,function(n,e,u){return!(r=t(n,e,u))}),!!r}function Cu(n,t,r){var e=0,u=null==n?e:n.length;if(\"number\"==typeof t&&t==t&&u<=U){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!Df(o)&&(r?o<=t:o<t)?e=i+1:u=i}return u}return Uu(n,t,Wa,r)}function Uu(t,r,e,u){var i=0,o=null==t?0:t.length;if(0===o)return 0;for(var f=(r=e(r))!=r,a=null===r,c=Df(r),l=r===n;i<o;){var s=Fr((i+o)/2),h=e(t[s]),p=h!==n,v=null===h,_=h==h,g=Df(h);if(f)var y=u||_;else y=l?_&&(u||p):a?_&&p&&(u||!v):c?_&&p&&!v&&(u||!g):!v&&!g&&(u?h<=r:h<r);y?i=s+1:o=s}return Gr(o,C)}function Bu(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r],f=t?t(o):o;if(!r||!gf(f,a)){var a=f;i[u++]=0===o?0:o}}return i}function Tu(n){return\"number\"==typeof n?n:Df(n)?L:+n}function Du(n){if(\"string\"==typeof n)return n;if(wf(n))return Jt(n,Du)+\"\";if(Df(n))return ve?ve.call(n):\"\";var t=n+\"\";return\"0\"==t&&1/n==-E?\"-0\":t}function $u(n,r,e){var u=-1,i=Gt,o=n.length,f=!0,a=[],c=a;if(e)f=!1,i=Ht;else if(o>=t){var l=r?null:Ai(n);if(l)return Or(l);f=!1,i=gr,c=new je}else c=r?[]:a;n:for(;++u<o;){var s=n[u],h=r?r(s):s;if(s=e||0!==s?s:0,f&&h==h){for(var p=c.length;p--;)if(c[p]===h)continue n;r&&c.push(h),a.push(s)}else i(c,h,e)||(c!==a&&c.push(h),a.push(s))}return a}function Mu(n,t){return null==(n=ro(n,t=Gu(t,n)))||delete n[so(ko(t))]}function Fu(n,t,r,e){return Ru(n,t,r(Qe(n,t)),e)}function Nu(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?Lu(n,e?0:i,e?i+1:u):Lu(n,e?i+1:0,e?u:i)}function Pu(n,t){var r=n;return r instanceof be&&(r=r.value()),Qt(t,function(n,t){return t.func.apply(t.thisArg,Yt([n],t.args))},r)}function qu(n,t,r){var e=n.length;if(e<2)return e?$u(n[0]):[];for(var u=-1,i=Yn(e);++u<e;)for(var o=n[u],f=-1;++f<e;)f!=u&&(i[u]=Me(i[u]||o,n[f],t,r));return $u(Ke(i,1),t,r)}function Zu(t,r,e){for(var u=-1,i=t.length,o=r.length,f={};++u<i;){var a=u<o?r[u]:n;e(f,t[u],a)}return f}function Ku(n){return jf(n)?n:[]}function Vu(n){return\"function\"==typeof n?n:Wa}function Gu(n,t){return wf(n)?n:Hi(n,t)?[n]:lo(Gf(n))}var Hu=ku;function Ju(t,r,e){var u=t.length;return e=e===n?u:e,!r&&e>=u?t:Lu(t,r,e)}var Yu=Tr||function(n){return zt.clearTimeout(n)};function Qu(n,t){if(t)return n.slice();var r=n.length,e=Lt?Lt(r):new n.constructor(r);return n.copy(e),e}function Xu(n){var t=new n.constructor(n.byteLength);return new St(t).set(new St(n)),t}function ni(n,t){var r=t?Xu(n.buffer):n.buffer;return new n.constructor(r,n.byteOffset,n.length)}function ti(t,r){if(t!==r){var e=t!==n,u=null===t,i=t==t,o=Df(t),f=r!==n,a=null===r,c=r==r,l=Df(r);if(!a&&!l&&!o&&t>r||o&&f&&c&&!a&&!l||u&&f&&c||!e&&c||!i)return 1;if(!u&&!o&&!l&&t<r||l&&e&&i&&!u&&!o||a&&e&&i||!f&&i||!c)return-1}return 0}function ri(n,t,r,e){for(var u=-1,i=n.length,o=r.length,f=-1,a=t.length,c=Vr(i-o,0),l=Yn(a+c),s=!e;++f<a;)l[f]=t[f];for(;++u<o;)(s||u<i)&&(l[r[u]]=n[u]);for(;c--;)l[f++]=n[u++];return l}function ei(n,t,r,e){for(var u=-1,i=n.length,o=-1,f=r.length,a=-1,c=t.length,l=Vr(i-f,0),s=Yn(l+c),h=!e;++u<l;)s[u]=n[u];for(var p=u;++a<c;)s[p+a]=t[a];for(;++o<f;)(h||u<i)&&(s[p+r[o]]=n[u++]);return s}function ui(n,t){var r=-1,e=n.length;for(t||(t=Yn(e));++r<e;)t[r]=n[r];return t}function ii(t,r,e,u){var i=!e;e||(e={});for(var o=-1,f=r.length;++o<f;){var a=r[o],c=u?u(e[a],t[a],a,e,t):n;c===n&&(c=t[a]),i?Ce(e,a,c):ze(e,a,c)}return e}function oi(n,t){return function(r,e){var u=wf(r)?Pt:Le,i=t?t():{};return u(r,n,Ti(e,2),i)}}function fi(t){return ku(function(r,e){var u=-1,i=e.length,o=i>1?e[i-1]:n,f=i>2?e[2]:n;for(o=t.length>3&&\"function\"==typeof o?(i--,o):n,f&&Gi(e[0],e[1],f)&&(o=i<3?n:o,i=1),r=rt(r);++u<i;){var a=e[u];a&&t(r,a,u,o)}return r})}function ai(n,t){return function(r,e){if(null==r)return r;if(!xf(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=rt(r);(t?i--:++i<u)&&!1!==e(o[i],i,o););return r}}function ci(n){return function(t,r,e){for(var u=-1,i=rt(t),o=e(t),f=o.length;f--;){var a=o[n?f:++u];if(!1===r(i[a],a,i))break}return t}}function li(t){return function(r){var e=xr(r=Gf(r))?Er(r):n,u=e?e[0]:r.charAt(0),i=e?Ju(e,1).join(\"\"):r.slice(1);return u[t]()+i}}function si(n){return function(t){return Qt(Ia(ba(t).replace(_t,\"\")),n,\"\")}}function hi(n){return function(){var t=arguments;switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=ge(n.prototype),e=n.apply(r,t);return zf(e)?e:r}}function pi(t){return function(r,e,u){var i=rt(r);if(!xf(r)){var o=Ti(e,3);r=fa(r),e=function(n){return o(i[n],n,i)}}var f=t(r,e,u);return f>-1?i[o?r[f]:f]:n}}function vi(t){return Si(function(r){var u=r.length,i=u,o=de.prototype.thru;for(t&&r.reverse();i--;){var f=r[i];if(\"function\"!=typeof f)throw new it(e);if(o&&!a&&\"wrapper\"==Ui(f))var a=new de([],!0)}for(i=a?i:u;++i<u;){var c=Ui(f=r[i]),l=\"wrapper\"==c?Ci(f):n;a=l&&Ji(l[0])&&l[1]==(w|g|d|m)&&!l[4].length&&1==l[9]?a[Ui(l[0])].apply(a,l[3]):1==f.length&&Ji(f)?a[c]():a.thru(f)}return function(){var n=arguments,t=n[0];if(a&&1==n.length&&wf(t))return a.plant(t).value();for(var e=0,i=u?r[e].apply(this,n):t;++e<u;)i=r[e].call(this,i);return i}})}function _i(t,r,e,u,i,o,f,a,c,l){var s=r&w,h=r&p,_=r&v,d=r&(g|y),b=r&x,m=_?n:hi(t);return function p(){for(var v=arguments.length,g=Yn(v),y=v;y--;)g[y]=arguments[y];if(d)var w=Bi(p),x=function(n,t){for(var r=n.length,e=0;r--;)n[r]===t&&++e;return e}(g,w);if(u&&(g=ri(g,u,i,d)),o&&(g=ei(g,o,f,d)),v-=x,d&&v<l){var j=kr(g,w);return xi(t,r,_i,p.placeholder,e,g,j,a,c,l-v)}var A=h?e:this,k=_?A[t]:t;return v=g.length,a?g=function(t,r){for(var e=t.length,u=Gr(r.length,e),i=ui(t);u--;){var o=r[u];t[u]=Vi(o,e)?i[o]:n}return t}(g,a):b&&v>1&&g.reverse(),s&&c<v&&(g.length=c),this&&this!==zt&&this instanceof p&&(k=m||hi(k)),k.apply(A,g)}}function gi(n,t){return function(r,e){return function(n,t,r,e){return He(n,function(n,u,i){t(e,r(n),u,i)}),e}(r,n,t(e),{})}}function yi(t,r){return function(e,u){var i;if(e===n&&u===n)return r;if(e!==n&&(i=e),u!==n){if(i===n)return u;\"string\"==typeof e||\"string\"==typeof u?(e=Du(e),u=Du(u)):(e=Tu(e),u=Tu(u)),i=t(e,u)}return i}}function di(n){return Si(function(t){return t=Jt(t,vr(Ti())),ku(function(r){var e=this;return n(t,function(n){return Nt(n,e,r)})})})}function bi(t,r){var e=(r=r===n?\" \":Du(r)).length;if(e<2)return e?Au(r,t):r;var u=Au(r,Mr(t/Rr(r)));return xr(r)?Ju(Er(u),0,t).join(\"\"):u.slice(0,t)}function wi(t){return function(r,e,u){return u&&\"number\"!=typeof u&&Gi(r,e,u)&&(e=u=n),r=Pf(r),e===n?(e=r,r=0):e=Pf(e),function(n,t,r,e){for(var u=-1,i=Vr(Mr((t-n)/(r||1)),0),o=Yn(i);i--;)o[e?i:++u]=n,n+=r;return o}(r,e,u=u===n?r<e?1:-1:Pf(u),t)}}function mi(n){return function(t,r){return\"string\"==typeof t&&\"string\"==typeof r||(t=Kf(t),r=Kf(r)),n(t,r)}}function xi(t,r,e,u,i,o,f,a,c,l){var s=r&g;r|=s?d:b,(r&=~(s?b:d))&_||(r&=~(p|v));var h=[t,r,i,s?o:n,s?f:n,s?n:o,s?n:f,a,c,l],y=e.apply(n,h);return Ji(t)&&uo(y,h),y.placeholder=u,fo(y,t,r)}function ji(n){var t=tt[n];return function(n,r){if(n=Kf(n),(r=null==r?0:Gr(qf(r),292))&&qr(n)){var e=(Gf(n)+\"e\").split(\"e\");return+((e=(Gf(t(e[0]+\"e\"+(+e[1]+r)))+\"e\").split(\"e\"))[0]+\"e\"+(+e[1]-r))}return t(n)}}var Ai=re&&1/Or(new re([,-0]))[1]==E?function(n){return new re(n)}:Da;function ki(n){return function(t){var r=Pi(t);return r==K?jr(t):r==Q?Ir(t):function(n,t){return Jt(t,function(t){return[t,n[t]]})}(t,n(t))}}function Oi(t,r,u,i,o,a,c,l){var s=r&v;if(!s&&\"function\"!=typeof t)throw new it(e);var h=i?i.length:0;if(h||(r&=~(d|b),i=o=n),c=c===n?c:Vr(qf(c),0),l=l===n?l:qf(l),h-=o?o.length:0,r&b){var x=i,j=o;i=o=n}var A=s?n:Ci(t),k=[t,r,u,i,o,x,j,a,c,l];if(A&&function(n,t){var r=n[1],e=t[1],u=r|e,i=u<(p|v|w),o=e==w&&r==g||e==w&&r==m&&n[7].length<=t[8]||e==(w|m)&&t[7].length<=t[8]&&r==g;if(!i&&!o)return n;e&p&&(n[2]=t[2],u|=r&p?0:_);var a=t[3];if(a){var c=n[3];n[3]=c?ri(c,a,t[4]):a,n[4]=c?kr(n[3],f):t[4]}(a=t[5])&&(c=n[5],n[5]=c?ei(c,a,t[6]):a,n[6]=c?kr(n[5],f):t[6]),(a=t[7])&&(n[7]=a),e&w&&(n[8]=null==n[8]?t[8]:Gr(n[8],t[8])),null==n[9]&&(n[9]=t[9]),n[0]=t[0],n[1]=u}(k,A),t=k[0],r=k[1],u=k[2],i=k[3],o=k[4],!(l=k[9]=k[9]===n?s?0:t.length:Vr(k[9]-h,0))&&r&(g|y)&&(r&=~(g|y)),r&&r!=p)O=r==g||r==y?function(t,r,e){var u=hi(t);return function i(){for(var o=arguments.length,f=Yn(o),a=o,c=Bi(i);a--;)f[a]=arguments[a];var l=o<3&&f[0]!==c&&f[o-1]!==c?[]:kr(f,c);return(o-=l.length)<e?xi(t,r,_i,i.placeholder,n,f,l,n,n,e-o):Nt(this&&this!==zt&&this instanceof i?u:t,this,f)}}(t,r,l):r!=d&&r!=(p|d)||o.length?_i.apply(n,k):function(n,t,r,e){var u=t&p,i=hi(n);return function t(){for(var o=-1,f=arguments.length,a=-1,c=e.length,l=Yn(c+f),s=this&&this!==zt&&this instanceof t?i:n;++a<c;)l[a]=e[a];for(;f--;)l[a++]=arguments[++o];return Nt(s,u?r:this,l)}}(t,r,u,i);else var O=function(n,t,r){var e=t&p,u=hi(n);return function t(){return(this&&this!==zt&&this instanceof t?u:n).apply(e?r:this,arguments)}}(t,r,u);return fo((A?Eu:uo)(O,k),t,r)}function Ii(t,r,e,u){return t===n||gf(t,at[e])&&!st.call(u,e)?r:t}function Ri(t,r,e,u,i,o){return zf(t)&&zf(r)&&(o.set(r,t),yu(t,r,n,Ri,o),o.delete(r)),t}function Ei(t){return Cf(t)?n:t}function zi(t,r,e,u,i,o){var f=e&s,a=t.length,c=r.length;if(a!=c&&!(f&&c>a))return!1;var l=o.get(t),p=o.get(r);if(l&&p)return l==r&&p==t;var v=-1,_=!0,g=e&h?new je:n;for(o.set(t,r),o.set(r,t);++v<a;){var y=t[v],d=r[v];if(u)var b=f?u(d,y,v,r,t,o):u(y,d,v,t,r,o);if(b!==n){if(b)continue;_=!1;break}if(g){if(!nr(r,function(n,t){if(!gr(g,t)&&(y===n||i(y,n,e,u,o)))return g.push(t)})){_=!1;break}}else if(y!==d&&!i(y,d,e,u,o)){_=!1;break}}return o.delete(t),o.delete(r),_}function Si(t){return oo(to(t,n,wo),t+\"\")}function Li(n){return Xe(n,fa,Fi)}function Wi(n){return Xe(n,aa,Ni)}var Ci=ie?function(n){return ie.get(n)}:Da;function Ui(n){for(var t=n.name+\"\",r=oe[t],e=st.call(oe,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function Bi(n){return(st.call(_e,\"placeholder\")?_e:n).placeholder}function Ti(){var n=_e.iteratee||Ca;return n=n===Ca?lu:n,arguments.length?n(arguments[0],arguments[1]):n}function Di(n,t){var r,e,u=n.__data__;return(\"string\"==(e=typeof(r=t))||\"number\"==e||\"symbol\"==e||\"boolean\"==e?\"__proto__\"!==r:null===r)?u[\"string\"==typeof t?\"string\":\"hash\"]:u.map}function $i(n){for(var t=fa(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,Xi(u)]}return t}function Mi(t,r){var e=function(t,r){return null==t?n:t[r]}(t,r);return cu(e)?e:n}var Fi=Nr?function(n){return null==n?[]:(n=rt(n),Vt(Nr(n),function(t){return tr.call(n,t)}))}:Za,Ni=Nr?function(n){for(var t=[];n;)Yt(t,Fi(n)),n=Ct(n);return t}:Za,Pi=nu;function qi(n,t,r){for(var e=-1,u=(t=Gu(t,n)).length,i=!1;++e<u;){var o=so(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o]}return i||++e!=u?i:!!(u=null==n?0:n.length)&&Ef(u)&&Vi(o,u)&&(wf(n)||bf(n))}function Zi(n){return\"function\"!=typeof n.constructor||Qi(n)?{}:ge(Ct(n))}function Ki(n){return wf(n)||bf(n)||!!(Wr&&n&&n[Wr])}function Vi(n,t){var r=typeof n;return!!(t=null==t?z:t)&&(\"number\"==r||\"symbol\"!=r&&Zn.test(n))&&n>-1&&n%1==0&&n<t}function Gi(n,t,r){if(!zf(r))return!1;var e=typeof t;return!!(\"number\"==e?xf(r)&&Vi(t,r.length):\"string\"==e&&t in r)&&gf(r[t],n)}function Hi(n,t){if(wf(n))return!1;var r=typeof n;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=n&&!Df(n))||In.test(n)||!On.test(n)||null!=t&&n in rt(t)}function Ji(n){var t=Ui(n),r=_e[t];if(\"function\"!=typeof r||!(t in be.prototype))return!1;if(n===r)return!0;var e=Ci(r);return!!e&&n===e[0]}(Xr&&Pi(new Xr(new ArrayBuffer(1)))!=on||ne&&Pi(new ne)!=K||te&&\"[object Promise]\"!=Pi(te.resolve())||re&&Pi(new re)!=Q||ee&&Pi(new ee)!=rn)&&(Pi=function(t){var r=nu(t),e=r==H?t.constructor:n,u=e?ho(e):\"\";if(u)switch(u){case fe:return on;case ae:return K;case ce:return\"[object Promise]\";case le:return Q;case se:return rn}return r});var Yi=ct?If:Ka;function Qi(n){var t=n&&n.constructor;return n===(\"function\"==typeof t&&t.prototype||at)}function Xi(n){return n==n&&!zf(n)}function no(t,r){return function(e){return null!=e&&e[t]===r&&(r!==n||t in rt(e))}}function to(t,r,e){return r=Vr(r===n?t.length-1:r,0),function(){for(var n=arguments,u=-1,i=Vr(n.length-r,0),o=Yn(i);++u<i;)o[u]=n[r+u];u=-1;for(var f=Yn(r+1);++u<r;)f[u]=n[u];return f[r]=e(o),Nt(t,this,f)}}function ro(n,t){return t.length<2?n:Qe(n,Lu(t,0,-1))}function eo(n,t){if((\"constructor\"!==t||\"function\"!=typeof n[t])&&\"__proto__\"!=t)return n[t]}var uo=ao(Eu),io=$r||function(n,t){return zt.setTimeout(n,t)},oo=ao(zu);function fo(n,t,r){var e=t+\"\";return oo(n,function(n,t){var r=t.length;if(!r)return n;var e=r-1;return t[e]=(r>1?\"& \":\"\")+t[e],t=t.join(r>2?\", \":\" \"),n.replace(Wn,\"{\\n/* [wrapped with \"+t+\"] */\\n\")}(e,function(n,t){return qt(B,function(r){var e=\"_.\"+r[0];t&r[1]&&!Gt(n,e)&&n.push(e)}),n.sort()}(function(n){var t=n.match(Cn);return t?t[1].split(Un):[]}(e),r)))}function ao(t){var r=0,e=0;return function(){var u=Hr(),i=O-(u-e);if(e=u,i>0){if(++r>=k)return arguments[0]}else r=0;return t.apply(n,arguments)}}function co(t,r){var e=-1,u=t.length,i=u-1;for(r=r===n?u:r;++e<r;){var o=ju(e,i),f=t[o];t[o]=t[e],t[e]=f}return t.length=r,t}var lo=function(n){var t=lf(n,function(n){return r.size===o&&r.clear(),n}),r=t.cache;return t}(function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(\"\"),n.replace(Rn,function(n,r,e,u){t.push(e?u.replace(Dn,\"$1\"):r||n)}),t});function so(n){if(\"string\"==typeof n||Df(n))return n;var t=n+\"\";return\"0\"==t&&1/n==-E?\"-0\":t}function ho(n){if(null!=n){try{return lt.call(n)}catch(n){}try{return n+\"\"}catch(n){}}return\"\"}function po(n){if(n instanceof be)return n.clone();var t=new de(n.__wrapped__,n.__chain__);return t.__actions__=ui(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}var vo=ku(function(n,t){return jf(n)?Me(n,Ke(t,1,jf,!0)):[]}),_o=ku(function(t,r){var e=ko(r);return jf(e)&&(e=n),jf(t)?Me(t,Ke(r,1,jf,!0),Ti(e,2)):[]}),go=ku(function(t,r){var e=ko(r);return jf(e)&&(e=n),jf(t)?Me(t,Ke(r,1,jf,!0),n,e):[]});function yo(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:qf(r);return u<0&&(u=Vr(e+u,0)),er(n,Ti(t,3),u)}function bo(t,r,e){var u=null==t?0:t.length;if(!u)return-1;var i=u-1;return e!==n&&(i=qf(e),i=e<0?Vr(u+i,0):Gr(i,u-1)),er(t,Ti(r,3),i,!0)}function wo(n){return null!=n&&n.length?Ke(n,1):[]}function mo(t){return t&&t.length?t[0]:n}var xo=ku(function(n){var t=Jt(n,Ku);return t.length&&t[0]===n[0]?uu(t):[]}),jo=ku(function(t){var r=ko(t),e=Jt(t,Ku);return r===ko(e)?r=n:e.pop(),e.length&&e[0]===t[0]?uu(e,Ti(r,2)):[]}),Ao=ku(function(t){var r=ko(t),e=Jt(t,Ku);return(r=\"function\"==typeof r?r:n)&&e.pop(),e.length&&e[0]===t[0]?uu(e,n,r):[]});function ko(t){var r=null==t?0:t.length;return r?t[r-1]:n}var Oo=ku(Io);function Io(n,t){return n&&n.length&&t&&t.length?mu(n,t):n}var Ro=Si(function(n,t){var r=null==n?0:n.length,e=Ue(n,t);return xu(n,Jt(t,function(n){return Vi(n,r)?+n:n}).sort(ti)),e});function Eo(n){return null==n?n:Qr.call(n)}var zo=ku(function(n){return $u(Ke(n,1,jf,!0))}),So=ku(function(t){var r=ko(t);return jf(r)&&(r=n),$u(Ke(t,1,jf,!0),Ti(r,2))}),Lo=ku(function(t){var r=ko(t);return r=\"function\"==typeof r?r:n,$u(Ke(t,1,jf,!0),n,r)});function Wo(n){if(!n||!n.length)return[];var t=0;return n=Vt(n,function(n){if(jf(n))return t=Vr(n.length,t),!0}),hr(t,function(t){return Jt(n,ar(t))})}function Co(t,r){if(!t||!t.length)return[];var e=Wo(t);return null==r?e:Jt(e,function(t){return Nt(r,n,t)})}var Uo=ku(function(n,t){return jf(n)?Me(n,t):[]}),Bo=ku(function(n){return qu(Vt(n,jf))}),To=ku(function(t){var r=ko(t);return jf(r)&&(r=n),qu(Vt(t,jf),Ti(r,2))}),Do=ku(function(t){var r=ko(t);return r=\"function\"==typeof r?r:n,qu(Vt(t,jf),n,r)}),$o=ku(Wo);var Mo=ku(function(t){var r=t.length,e=r>1?t[r-1]:n;return Co(t,e=\"function\"==typeof e?(t.pop(),e):n)});function Fo(n){var t=_e(n);return t.__chain__=!0,t}function No(n,t){return t(n)}var Po=Si(function(t){var r=t.length,e=r?t[0]:0,u=this.__wrapped__,i=function(n){return Ue(n,t)};return!(r>1||this.__actions__.length)&&u instanceof be&&Vi(e)?((u=u.slice(e,+e+(r?1:0))).__actions__.push({func:No,args:[i],thisArg:n}),new de(u,this.__chain__).thru(function(t){return r&&!t.length&&t.push(n),t})):this.thru(i)});var qo=oi(function(n,t,r){st.call(n,r)?++n[r]:Ce(n,r,1)});var Zo=pi(yo),Ko=pi(bo);function Vo(n,t){return(wf(n)?qt:Fe)(n,Ti(t,3))}function Go(n,t){return(wf(n)?Zt:Ne)(n,Ti(t,3))}var Ho=oi(function(n,t,r){st.call(n,r)?n[r].push(t):Ce(n,r,[t])});var Jo=ku(function(n,t,r){var e=-1,u=\"function\"==typeof t,i=xf(n)?Yn(n.length):[];return Fe(n,function(n){i[++e]=u?Nt(t,n,r):iu(n,t,r)}),i}),Yo=oi(function(n,t,r){Ce(n,r,t)});function Qo(n,t){return(wf(n)?Jt:vu)(n,Ti(t,3))}var Xo=oi(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]});var nf=ku(function(n,t){if(null==n)return[];var r=t.length;return r>1&&Gi(n,t[0],t[1])?t=[]:r>2&&Gi(t[0],t[1],t[2])&&(t=[t[0]]),bu(n,Ke(t,1),[])}),tf=Dr||function(){return zt.Date.now()};function rf(t,r,e){return r=e?n:r,r=t&&null==r?t.length:r,Oi(t,w,n,n,n,n,r)}function ef(t,r){var u;if(\"function\"!=typeof r)throw new it(e);return t=qf(t),function(){return--t>0&&(u=r.apply(this,arguments)),t<=1&&(r=n),u}}var uf=ku(function(n,t,r){var e=p;if(r.length){var u=kr(r,Bi(uf));e|=d}return Oi(n,e,t,r,u)}),of=ku(function(n,t,r){var e=p|v;if(r.length){var u=kr(r,Bi(of));e|=d}return Oi(t,e,n,r,u)});function ff(t,r,u){var i,o,f,a,c,l,s=0,h=!1,p=!1,v=!0;if(\"function\"!=typeof t)throw new it(e);function _(r){var e=i,u=o;return i=o=n,s=r,a=t.apply(u,e)}function g(t){var e=t-l;return l===n||e>=r||e<0||p&&t-s>=f}function y(){var n=tf();if(g(n))return d(n);c=io(y,function(n){var t=r-(n-l);return p?Gr(t,f-(n-s)):t}(n))}function d(t){return c=n,v&&i?_(t):(i=o=n,a)}function b(){var t=tf(),e=g(t);if(i=arguments,o=this,l=t,e){if(c===n)return function(n){return s=n,c=io(y,r),h?_(n):a}(l);if(p)return Yu(c),c=io(y,r),_(l)}return c===n&&(c=io(y,r)),a}return r=Kf(r)||0,zf(u)&&(h=!!u.leading,f=(p=\"maxWait\"in u)?Vr(Kf(u.maxWait)||0,r):f,v=\"trailing\"in u?!!u.trailing:v),b.cancel=function(){c!==n&&Yu(c),s=0,i=l=o=c=n},b.flush=function(){return c===n?a:d(tf())},b}var af=ku(function(n,t){return $e(n,1,t)}),cf=ku(function(n,t,r){return $e(n,Kf(t)||0,r)});function lf(n,t){if(\"function\"!=typeof n||null!=t&&\"function\"!=typeof t)throw new it(e);var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;if(i.has(u))return i.get(u);var o=n.apply(this,e);return r.cache=i.set(u,o)||i,o};return r.cache=new(lf.Cache||xe),r}function sf(n){if(\"function\"!=typeof n)throw new it(e);return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:return!n.call(this,t[0],t[1]);case 3:return!n.call(this,t[0],t[1],t[2])}return!n.apply(this,t)}}lf.Cache=xe;var hf=Hu(function(n,t){var r=(t=1==t.length&&wf(t[0])?Jt(t[0],vr(Ti())):Jt(Ke(t,1),vr(Ti()))).length;return ku(function(e){for(var u=-1,i=Gr(e.length,r);++u<i;)e[u]=t[u].call(this,e[u]);return Nt(n,this,e)})}),pf=ku(function(t,r){var e=kr(r,Bi(pf));return Oi(t,d,n,r,e)}),vf=ku(function(t,r){var e=kr(r,Bi(vf));return Oi(t,b,n,r,e)}),_f=Si(function(t,r){return Oi(t,m,n,n,n,r)});function gf(n,t){return n===t||n!=n&&t!=t}var yf=mi(tu),df=mi(function(n,t){return n>=t}),bf=ou(function(){return arguments}())?ou:function(n){return Sf(n)&&st.call(n,\"callee\")&&!tr.call(n,\"callee\")},wf=Yn.isArray,mf=Bt?vr(Bt):function(n){return Sf(n)&&nu(n)==un};function xf(n){return null!=n&&Ef(n.length)&&!If(n)}function jf(n){return Sf(n)&&xf(n)}var Af=Pr||Ka,kf=Tt?vr(Tt):function(n){return Sf(n)&&nu(n)==F};function Of(n){if(!Sf(n))return!1;var t=nu(n);return t==P||t==N||\"string\"==typeof n.message&&\"string\"==typeof n.name&&!Cf(n)}function If(n){if(!zf(n))return!1;var t=nu(n);return t==q||t==Z||t==$||t==J}function Rf(n){return\"number\"==typeof n&&n==qf(n)}function Ef(n){return\"number\"==typeof n&&n>-1&&n%1==0&&n<=z}function zf(n){var t=typeof n;return null!=n&&(\"object\"==t||\"function\"==t)}function Sf(n){return null!=n&&\"object\"==typeof n}var Lf=Dt?vr(Dt):function(n){return Sf(n)&&Pi(n)==K};function Wf(n){return\"number\"==typeof n||Sf(n)&&nu(n)==V}function Cf(n){if(!Sf(n)||nu(n)!=H)return!1;var t=Ct(n);if(null===t)return!0;var r=st.call(t,\"constructor\")&&t.constructor;return\"function\"==typeof r&&r instanceof r&&lt.call(r)==yt}var Uf=$t?vr($t):function(n){return Sf(n)&&nu(n)==Y};var Bf=Mt?vr(Mt):function(n){return Sf(n)&&Pi(n)==Q};function Tf(n){return\"string\"==typeof n||!wf(n)&&Sf(n)&&nu(n)==X}function Df(n){return\"symbol\"==typeof n||Sf(n)&&nu(n)==nn}var $f=Ft?vr(Ft):function(n){return Sf(n)&&Ef(n.length)&&!!jt[nu(n)]};var Mf=mi(pu),Ff=mi(function(n,t){return n<=t});function Nf(n){if(!n)return[];if(xf(n))return Tf(n)?Er(n):ui(n);if(Cr&&n[Cr])return function(n){for(var t,r=[];!(t=n.next()).done;)r.push(t.value);return r}(n[Cr]());var t=Pi(n);return(t==K?jr:t==Q?Or:ga)(n)}function Pf(n){return n?(n=Kf(n))===E||n===-E?(n<0?-1:1)*S:n==n?n:0:0===n?n:0}function qf(n){var t=Pf(n),r=t%1;return t==t?r?t-r:t:0}function Zf(n){return n?Be(qf(n),0,W):0}function Kf(n){if(\"number\"==typeof n)return n;if(Df(n))return L;if(zf(n)){var t=\"function\"==typeof n.valueOf?n.valueOf():n;n=zf(t)?t+\"\":t}if(\"string\"!=typeof n)return 0===n?n:+n;n=pr(n);var r=Nn.test(n);return r||qn.test(n)?It(n.slice(2),r?2:8):Fn.test(n)?L:+n}function Vf(n){return ii(n,aa(n))}function Gf(n){return null==n?\"\":Du(n)}var Hf=fi(function(n,t){if(Qi(t)||xf(t))ii(t,fa(t),n);else for(var r in t)st.call(t,r)&&ze(n,r,t[r])}),Jf=fi(function(n,t){ii(t,aa(t),n)}),Yf=fi(function(n,t,r,e){ii(t,aa(t),n,e)}),Qf=fi(function(n,t,r,e){ii(t,fa(t),n,e)}),Xf=Si(Ue);var na=ku(function(t,r){t=rt(t);var e=-1,u=r.length,i=u>2?r[2]:n;for(i&&Gi(r[0],r[1],i)&&(u=1);++e<u;)for(var o=r[e],f=aa(o),a=-1,c=f.length;++a<c;){var l=f[a],s=t[l];(s===n||gf(s,at[l])&&!st.call(t,l))&&(t[l]=o[l])}return t}),ta=ku(function(t){return t.push(n,Ri),Nt(la,n,t)});function ra(t,r,e){var u=null==t?n:Qe(t,r);return u===n?e:u}function ea(n,t){return null!=n&&qi(n,t,eu)}var ua=gi(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=vt.call(t)),n[t]=r},za(Wa)),ia=gi(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=vt.call(t)),st.call(n,t)?n[t].push(r):n[t]=[r]},Ti),oa=ku(iu);function fa(n){return xf(n)?ke(n):su(n)}function aa(n){return xf(n)?ke(n,!0):hu(n)}var ca=fi(function(n,t,r){yu(n,t,r)}),la=fi(function(n,t,r,e){yu(n,t,r,e)}),sa=Si(function(n,t){var r={};if(null==n)return r;var e=!1;t=Jt(t,function(t){return t=Gu(t,n),e||(e=t.length>1),t}),ii(n,Wi(n),r),e&&(r=Te(r,a|c|l,Ei));for(var u=t.length;u--;)Mu(r,t[u]);return r});var ha=Si(function(n,t){return null==n?{}:function(n,t){return wu(n,t,function(t,r){return ea(n,r)})}(n,t)});function pa(n,t){if(null==n)return{};var r=Jt(Wi(n),function(n){return[n]});return t=Ti(t),wu(n,r,function(n,r){return t(n,r[0])})}var va=ki(fa),_a=ki(aa);function ga(n){return null==n?[]:_r(n,fa(n))}var ya=si(function(n,t,r){return t=t.toLowerCase(),n+(r?da(t):t)});function da(n){return Oa(Gf(n).toLowerCase())}function ba(n){return(n=Gf(n))&&n.replace(Kn,br).replace(gt,\"\")}var wa=si(function(n,t,r){return n+(r?\"-\":\"\")+t.toLowerCase()}),ma=si(function(n,t,r){return n+(r?\" \":\"\")+t.toLowerCase()}),xa=li(\"toLowerCase\");var ja=si(function(n,t,r){return n+(r?\"_\":\"\")+t.toLowerCase()});var Aa=si(function(n,t,r){return n+(r?\" \":\"\")+Oa(t)});var ka=si(function(n,t,r){return n+(r?\" \":\"\")+t.toUpperCase()}),Oa=li(\"toUpperCase\");function Ia(t,r,e){return t=Gf(t),(r=e?n:r)===n?function(n){return wt.test(n)}(t)?function(n){return n.match(dt)||[]}(t):function(n){return n.match(Bn)||[]}(t):t.match(r)||[]}var Ra=ku(function(t,r){try{return Nt(t,n,r)}catch(n){return Of(n)?n:new Xn(n)}}),Ea=Si(function(n,t){return qt(t,function(t){t=so(t),Ce(n,t,uf(n[t],n))}),n});function za(n){return function(){return n}}var Sa=vi(),La=vi(!0);function Wa(n){return n}function Ca(n){return lu(\"function\"==typeof n?n:Te(n,a))}var Ua=ku(function(n,t){return function(r){return iu(r,n,t)}}),Ba=ku(function(n,t){return function(r){return iu(n,r,t)}});function Ta(n,t,r){var e=fa(t),u=Ye(t,e);null!=r||zf(t)&&(u.length||!e.length)||(r=t,t=n,n=this,u=Ye(t,fa(t)));var i=!(zf(r)&&\"chain\"in r&&!r.chain),o=If(n);return qt(u,function(r){var e=t[r];n[r]=e,o&&(n.prototype[r]=function(){var t=this.__chain__;if(i||t){var r=n(this.__wrapped__);return(r.__actions__=ui(this.__actions__)).push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,Yt([this.value()],arguments))})}),n}function Da(){}var $a=di(Jt),Ma=di(Kt),Fa=di(nr);function Na(n){return Hi(n)?ar(so(n)):function(n){return function(t){return Qe(t,n)}}(n)}var Pa=wi(),qa=wi(!0);function Za(){return[]}function Ka(){return!1}var Va=yi(function(n,t){return n+t},0),Ga=ji(\"ceil\"),Ha=yi(function(n,t){return n/t},1),Ja=ji(\"floor\");var Ya,Qa=yi(function(n,t){return n*t},1),Xa=ji(\"round\"),nc=yi(function(n,t){return n-t},0);return _e.after=function(n,t){if(\"function\"!=typeof t)throw new it(e);return n=qf(n),function(){if(--n<1)return t.apply(this,arguments)}},_e.ary=rf,_e.assign=Hf,_e.assignIn=Jf,_e.assignInWith=Yf,_e.assignWith=Qf,_e.at=Xf,_e.before=ef,_e.bind=uf,_e.bindAll=Ea,_e.bindKey=of,_e.castArray=function(){if(!arguments.length)return[];var n=arguments[0];return wf(n)?n:[n]},_e.chain=Fo,_e.chunk=function(t,r,e){r=(e?Gi(t,r,e):r===n)?1:Vr(qf(r),0);var u=null==t?0:t.length;if(!u||r<1)return[];for(var i=0,o=0,f=Yn(Mr(u/r));i<u;)f[o++]=Lu(t,i,i+=r);return f},_e.compact=function(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){var i=n[t];i&&(u[e++]=i)}return u},_e.concat=function(){var n=arguments.length;if(!n)return[];for(var t=Yn(n-1),r=arguments[0],e=n;e--;)t[e-1]=arguments[e];return Yt(wf(r)?ui(r):[r],Ke(t,1))},_e.cond=function(n){var t=null==n?0:n.length,r=Ti();return n=t?Jt(n,function(n){if(\"function\"!=typeof n[1])throw new it(e);return[r(n[0]),n[1]]}):[],ku(function(r){for(var e=-1;++e<t;){var u=n[e];if(Nt(u[0],this,r))return Nt(u[1],this,r)}})},_e.conforms=function(n){return function(n){var t=fa(n);return function(r){return De(r,n,t)}}(Te(n,a))},_e.constant=za,_e.countBy=qo,_e.create=function(n,t){var r=ge(n);return null==t?r:We(r,t)},_e.curry=function t(r,e,u){var i=Oi(r,g,n,n,n,n,n,e=u?n:e);return i.placeholder=t.placeholder,i},_e.curryRight=function t(r,e,u){var i=Oi(r,y,n,n,n,n,n,e=u?n:e);return i.placeholder=t.placeholder,i},_e.debounce=ff,_e.defaults=na,_e.defaultsDeep=ta,_e.defer=af,_e.delay=cf,_e.difference=vo,_e.differenceBy=_o,_e.differenceWith=go,_e.drop=function(t,r,e){var u=null==t?0:t.length;return u?Lu(t,(r=e||r===n?1:qf(r))<0?0:r,u):[]},_e.dropRight=function(t,r,e){var u=null==t?0:t.length;return u?Lu(t,0,(r=u-(r=e||r===n?1:qf(r)))<0?0:r):[]},_e.dropRightWhile=function(n,t){return n&&n.length?Nu(n,Ti(t,3),!0,!0):[]},_e.dropWhile=function(n,t){return n&&n.length?Nu(n,Ti(t,3),!0):[]},_e.fill=function(t,r,e,u){var i=null==t?0:t.length;return i?(e&&\"number\"!=typeof e&&Gi(t,r,e)&&(e=0,u=i),function(t,r,e,u){var i=t.length;for((e=qf(e))<0&&(e=-e>i?0:i+e),(u=u===n||u>i?i:qf(u))<0&&(u+=i),u=e>u?0:Zf(u);e<u;)t[e++]=r;return t}(t,r,e,u)):[]},_e.filter=function(n,t){return(wf(n)?Vt:Ze)(n,Ti(t,3))},_e.flatMap=function(n,t){return Ke(Qo(n,t),1)},_e.flatMapDeep=function(n,t){return Ke(Qo(n,t),E)},_e.flatMapDepth=function(t,r,e){return e=e===n?1:qf(e),Ke(Qo(t,r),e)},_e.flatten=wo,_e.flattenDeep=function(n){return null!=n&&n.length?Ke(n,E):[]},_e.flattenDepth=function(t,r){return null!=t&&t.length?Ke(t,r=r===n?1:qf(r)):[]},_e.flip=function(n){return Oi(n,x)},_e.flow=Sa,_e.flowRight=La,_e.fromPairs=function(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1]}return e},_e.functions=function(n){return null==n?[]:Ye(n,fa(n))},_e.functionsIn=function(n){return null==n?[]:Ye(n,aa(n))},_e.groupBy=Ho,_e.initial=function(n){return null!=n&&n.length?Lu(n,0,-1):[]},_e.intersection=xo,_e.intersectionBy=jo,_e.intersectionWith=Ao,_e.invert=ua,_e.invertBy=ia,_e.invokeMap=Jo,_e.iteratee=Ca,_e.keyBy=Yo,_e.keys=fa,_e.keysIn=aa,_e.map=Qo,_e.mapKeys=function(n,t){var r={};return t=Ti(t,3),He(n,function(n,e,u){Ce(r,t(n,e,u),n)}),r},_e.mapValues=function(n,t){var r={};return t=Ti(t,3),He(n,function(n,e,u){Ce(r,e,t(n,e,u))}),r},_e.matches=function(n){return _u(Te(n,a))},_e.matchesProperty=function(n,t){return gu(n,Te(t,a))},_e.memoize=lf,_e.merge=ca,_e.mergeWith=la,_e.method=Ua,_e.methodOf=Ba,_e.mixin=Ta,_e.negate=sf,_e.nthArg=function(n){return n=qf(n),ku(function(t){return du(t,n)})},_e.omit=sa,_e.omitBy=function(n,t){return pa(n,sf(Ti(t)))},_e.once=function(n){return ef(2,n)},_e.orderBy=function(t,r,e,u){return null==t?[]:(wf(r)||(r=null==r?[]:[r]),wf(e=u?n:e)||(e=null==e?[]:[e]),bu(t,r,e))},_e.over=$a,_e.overArgs=hf,_e.overEvery=Ma,_e.overSome=Fa,_e.partial=pf,_e.partialRight=vf,_e.partition=Xo,_e.pick=ha,_e.pickBy=pa,_e.property=Na,_e.propertyOf=function(t){return function(r){return null==t?n:Qe(t,r)}},_e.pull=Oo,_e.pullAll=Io,_e.pullAllBy=function(n,t,r){return n&&n.length&&t&&t.length?mu(n,t,Ti(r,2)):n},_e.pullAllWith=function(t,r,e){return t&&t.length&&r&&r.length?mu(t,r,n,e):t},_e.pullAt=Ro,_e.range=Pa,_e.rangeRight=qa,_e.rearg=_f,_e.reject=function(n,t){return(wf(n)?Vt:Ze)(n,sf(Ti(t,3)))},_e.remove=function(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=Ti(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),u.push(e))}return xu(n,u),r},_e.rest=function(t,r){if(\"function\"!=typeof t)throw new it(e);return ku(t,r=r===n?r:qf(r))},_e.reverse=Eo,_e.sampleSize=function(t,r,e){return r=(e?Gi(t,r,e):r===n)?1:qf(r),(wf(t)?Ie:Iu)(t,r)},_e.set=function(n,t,r){return null==n?n:Ru(n,t,r)},_e.setWith=function(t,r,e,u){return u=\"function\"==typeof u?u:n,null==t?t:Ru(t,r,e,u)},_e.shuffle=function(n){return(wf(n)?Re:Su)(n)},_e.slice=function(t,r,e){var u=null==t?0:t.length;return u?(e&&\"number\"!=typeof e&&Gi(t,r,e)?(r=0,e=u):(r=null==r?0:qf(r),e=e===n?u:qf(e)),Lu(t,r,e)):[]},_e.sortBy=nf,_e.sortedUniq=function(n){return n&&n.length?Bu(n):[]},_e.sortedUniqBy=function(n,t){return n&&n.length?Bu(n,Ti(t,2)):[]},_e.split=function(t,r,e){return e&&\"number\"!=typeof e&&Gi(t,r,e)&&(r=e=n),(e=e===n?W:e>>>0)?(t=Gf(t))&&(\"string\"==typeof r||null!=r&&!Uf(r))&&!(r=Du(r))&&xr(t)?Ju(Er(t),0,e):t.split(r,e):[]},_e.spread=function(n,t){if(\"function\"!=typeof n)throw new it(e);return t=null==t?0:Vr(qf(t),0),ku(function(r){var e=r[t],u=Ju(r,0,t);return e&&Yt(u,e),Nt(n,this,u)})},_e.tail=function(n){var t=null==n?0:n.length;return t?Lu(n,1,t):[]},_e.take=function(t,r,e){return t&&t.length?Lu(t,0,(r=e||r===n?1:qf(r))<0?0:r):[]},_e.takeRight=function(t,r,e){var u=null==t?0:t.length;return u?Lu(t,(r=u-(r=e||r===n?1:qf(r)))<0?0:r,u):[]},_e.takeRightWhile=function(n,t){return n&&n.length?Nu(n,Ti(t,3),!1,!0):[]},_e.takeWhile=function(n,t){return n&&n.length?Nu(n,Ti(t,3)):[]},_e.tap=function(n,t){return t(n),n},_e.throttle=function(n,t,r){var u=!0,i=!0;if(\"function\"!=typeof n)throw new it(e);return zf(r)&&(u=\"leading\"in r?!!r.leading:u,i=\"trailing\"in r?!!r.trailing:i),ff(n,t,{leading:u,maxWait:t,trailing:i})},_e.thru=No,_e.toArray=Nf,_e.toPairs=va,_e.toPairsIn=_a,_e.toPath=function(n){return wf(n)?Jt(n,so):Df(n)?[n]:ui(lo(Gf(n)))},_e.toPlainObject=Vf,_e.transform=function(n,t,r){var e=wf(n),u=e||Af(n)||$f(n);if(t=Ti(t,4),null==r){var i=n&&n.constructor;r=u?e?new i:[]:zf(n)&&If(i)?ge(Ct(n)):{}}return(u?qt:He)(n,function(n,e,u){return t(r,n,e,u)}),r},_e.unary=function(n){return rf(n,1)},_e.union=zo,_e.unionBy=So,_e.unionWith=Lo,_e.uniq=function(n){return n&&n.length?$u(n):[]},_e.uniqBy=function(n,t){return n&&n.length?$u(n,Ti(t,2)):[]},_e.uniqWith=function(t,r){return r=\"function\"==typeof r?r:n,t&&t.length?$u(t,n,r):[]},_e.unset=function(n,t){return null==n||Mu(n,t)},_e.unzip=Wo,_e.unzipWith=Co,_e.update=function(n,t,r){return null==n?n:Fu(n,t,Vu(r))},_e.updateWith=function(t,r,e,u){return u=\"function\"==typeof u?u:n,null==t?t:Fu(t,r,Vu(e),u)},_e.values=ga,_e.valuesIn=function(n){return null==n?[]:_r(n,aa(n))},_e.without=Uo,_e.words=Ia,_e.wrap=function(n,t){return pf(Vu(t),n)},_e.xor=Bo,_e.xorBy=To,_e.xorWith=Do,_e.zip=$o,_e.zipObject=function(n,t){return Zu(n||[],t||[],ze)},_e.zipObjectDeep=function(n,t){return Zu(n||[],t||[],Ru)},_e.zipWith=Mo,_e.entries=va,_e.entriesIn=_a,_e.extend=Jf,_e.extendWith=Yf,Ta(_e,_e),_e.add=Va,_e.attempt=Ra,_e.camelCase=ya,_e.capitalize=da,_e.ceil=Ga,_e.clamp=function(t,r,e){return e===n&&(e=r,r=n),e!==n&&(e=(e=Kf(e))==e?e:0),r!==n&&(r=(r=Kf(r))==r?r:0),Be(Kf(t),r,e)},_e.clone=function(n){return Te(n,l)},_e.cloneDeep=function(n){return Te(n,a|l)},_e.cloneDeepWith=function(t,r){return Te(t,a|l,r=\"function\"==typeof r?r:n)},_e.cloneWith=function(t,r){return Te(t,l,r=\"function\"==typeof r?r:n)},_e.conformsTo=function(n,t){return null==t||De(n,t,fa(t))},_e.deburr=ba,_e.defaultTo=function(n,t){return null==n||n!=n?t:n},_e.divide=Ha,_e.endsWith=function(t,r,e){t=Gf(t),r=Du(r);var u=t.length,i=e=e===n?u:Be(qf(e),0,u);return(e-=r.length)>=0&&t.slice(e,i)==r},_e.eq=gf,_e.escape=function(n){return(n=Gf(n))&&xn.test(n)?n.replace(wn,wr):n},_e.escapeRegExp=function(n){return(n=Gf(n))&&zn.test(n)?n.replace(En,\"\\\\$&\"):n},_e.every=function(t,r,e){var u=wf(t)?Kt:Pe;return e&&Gi(t,r,e)&&(r=n),u(t,Ti(r,3))},_e.find=Zo,_e.findIndex=yo,_e.findKey=function(n,t){return rr(n,Ti(t,3),He)},_e.findLast=Ko,_e.findLastIndex=bo,_e.findLastKey=function(n,t){return rr(n,Ti(t,3),Je)},_e.floor=Ja,_e.forEach=Vo,_e.forEachRight=Go,_e.forIn=function(n,t){return null==n?n:Ve(n,Ti(t,3),aa)},_e.forInRight=function(n,t){return null==n?n:Ge(n,Ti(t,3),aa)},_e.forOwn=function(n,t){return n&&He(n,Ti(t,3))},_e.forOwnRight=function(n,t){return n&&Je(n,Ti(t,3))},_e.get=ra,_e.gt=yf,_e.gte=df,_e.has=function(n,t){return null!=n&&qi(n,t,ru)},_e.hasIn=ea,_e.head=mo,_e.identity=Wa,_e.includes=function(n,t,r,e){n=xf(n)?n:ga(n),r=r&&!e?qf(r):0;var u=n.length;return r<0&&(r=Vr(u+r,0)),Tf(n)?r<=u&&n.indexOf(t,r)>-1:!!u&&ur(n,t,r)>-1},_e.indexOf=function(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:qf(r);return u<0&&(u=Vr(e+u,0)),ur(n,t,u)},_e.inRange=function(t,r,e){return r=Pf(r),e===n?(e=r,r=0):e=Pf(e),function(n,t,r){return n>=Gr(t,r)&&n<Vr(t,r)}(t=Kf(t),r,e)},_e.invoke=oa,_e.isArguments=bf,_e.isArray=wf,_e.isArrayBuffer=mf,_e.isArrayLike=xf,_e.isArrayLikeObject=jf,_e.isBoolean=function(n){return!0===n||!1===n||Sf(n)&&nu(n)==M},_e.isBuffer=Af,_e.isDate=kf,_e.isElement=function(n){return Sf(n)&&1===n.nodeType&&!Cf(n)},_e.isEmpty=function(n){if(null==n)return!0;if(xf(n)&&(wf(n)||\"string\"==typeof n||\"function\"==typeof n.splice||Af(n)||$f(n)||bf(n)))return!n.length;var t=Pi(n);if(t==K||t==Q)return!n.size;if(Qi(n))return!su(n).length;for(var r in n)if(st.call(n,r))return!1;return!0},_e.isEqual=function(n,t){return fu(n,t)},_e.isEqualWith=function(t,r,e){var u=(e=\"function\"==typeof e?e:n)?e(t,r):n;return u===n?fu(t,r,n,e):!!u},_e.isError=Of,_e.isFinite=function(n){return\"number\"==typeof n&&qr(n)},_e.isFunction=If,_e.isInteger=Rf,_e.isLength=Ef,_e.isMap=Lf,_e.isMatch=function(n,t){return n===t||au(n,t,$i(t))},_e.isMatchWith=function(t,r,e){return e=\"function\"==typeof e?e:n,au(t,r,$i(r),e)},_e.isNaN=function(n){return Wf(n)&&n!=+n},_e.isNative=function(n){if(Yi(n))throw new Xn(r);return cu(n)},_e.isNil=function(n){return null==n},_e.isNull=function(n){return null===n},_e.isNumber=Wf,_e.isObject=zf,_e.isObjectLike=Sf,_e.isPlainObject=Cf,_e.isRegExp=Uf,_e.isSafeInteger=function(n){return Rf(n)&&n>=-z&&n<=z},_e.isSet=Bf,_e.isString=Tf,_e.isSymbol=Df,_e.isTypedArray=$f,_e.isUndefined=function(t){return t===n},_e.isWeakMap=function(n){return Sf(n)&&Pi(n)==rn},_e.isWeakSet=function(n){return Sf(n)&&nu(n)==en},_e.join=function(n,t){return null==n?\"\":Zr.call(n,t)},_e.kebabCase=wa,_e.last=ko,_e.lastIndexOf=function(t,r,e){var u=null==t?0:t.length;if(!u)return-1;var i=u;return e!==n&&(i=(i=qf(e))<0?Vr(u+i,0):Gr(i,u-1)),r==r?function(n,t,r){for(var e=r+1;e--;)if(n[e]===t)return e;return e}(t,r,i):er(t,or,i,!0)},_e.lowerCase=ma,_e.lowerFirst=xa,_e.lt=Mf,_e.lte=Ff,_e.max=function(t){return t&&t.length?qe(t,Wa,tu):n},_e.maxBy=function(t,r){return t&&t.length?qe(t,Ti(r,2),tu):n},_e.mean=function(n){return fr(n,Wa)},_e.meanBy=function(n,t){return fr(n,Ti(t,2))},_e.min=function(t){return t&&t.length?qe(t,Wa,pu):n},_e.minBy=function(t,r){return t&&t.length?qe(t,Ti(r,2),pu):n},_e.stubArray=Za,_e.stubFalse=Ka,_e.stubObject=function(){return{}},_e.stubString=function(){return\"\"},_e.stubTrue=function(){return!0},_e.multiply=Qa,_e.nth=function(t,r){return t&&t.length?du(t,qf(r)):n},_e.noConflict=function(){return zt._===this&&(zt._=bt),this},_e.noop=Da,_e.now=tf,_e.pad=function(n,t,r){n=Gf(n);var e=(t=qf(t))?Rr(n):0;if(!t||e>=t)return n;var u=(t-e)/2;return bi(Fr(u),r)+n+bi(Mr(u),r)},_e.padEnd=function(n,t,r){n=Gf(n);var e=(t=qf(t))?Rr(n):0;return t&&e<t?n+bi(t-e,r):n},_e.padStart=function(n,t,r){n=Gf(n);var e=(t=qf(t))?Rr(n):0;return t&&e<t?bi(t-e,r)+n:n},_e.parseInt=function(n,t,r){return r||null==t?t=0:t&&(t=+t),Jr(Gf(n).replace(Sn,\"\"),t||0)},_e.random=function(t,r,e){if(e&&\"boolean\"!=typeof e&&Gi(t,r,e)&&(r=e=n),e===n&&(\"boolean\"==typeof r?(e=r,r=n):\"boolean\"==typeof t&&(e=t,t=n)),t===n&&r===n?(t=0,r=1):(t=Pf(t),r===n?(r=t,t=0):r=Pf(r)),t>r){var u=t;t=r,r=u}if(e||t%1||r%1){var i=Yr();return Gr(t+i*(r-t+Ot(\"1e-\"+((i+\"\").length-1))),r)}return ju(t,r)},_e.reduce=function(n,t,r){var e=wf(n)?Qt:lr,u=arguments.length<3;return e(n,Ti(t,4),r,u,Fe)},_e.reduceRight=function(n,t,r){var e=wf(n)?Xt:lr,u=arguments.length<3;return e(n,Ti(t,4),r,u,Ne)},_e.repeat=function(t,r,e){return r=(e?Gi(t,r,e):r===n)?1:qf(r),Au(Gf(t),r)},_e.replace=function(){var n=arguments,t=Gf(n[0]);return n.length<3?t:t.replace(n[1],n[2])},_e.result=function(t,r,e){var u=-1,i=(r=Gu(r,t)).length;for(i||(i=1,t=n);++u<i;){var o=null==t?n:t[so(r[u])];o===n&&(u=i,o=e),t=If(o)?o.call(t):o}return t},_e.round=Xa,_e.runInContext=Ln,_e.sample=function(n){return(wf(n)?Oe:Ou)(n)},_e.size=function(n){if(null==n)return 0;if(xf(n))return Tf(n)?Rr(n):n.length;var t=Pi(n);return t==K||t==Q?n.size:su(n).length},_e.snakeCase=ja,_e.some=function(t,r,e){var u=wf(t)?nr:Wu;return e&&Gi(t,r,e)&&(r=n),u(t,Ti(r,3))},_e.sortedIndex=function(n,t){return Cu(n,t)},_e.sortedIndexBy=function(n,t,r){return Uu(n,t,Ti(r,2))},_e.sortedIndexOf=function(n,t){var r=null==n?0:n.length;if(r){var e=Cu(n,t);if(e<r&&gf(n[e],t))return e}return-1},_e.sortedLastIndex=function(n,t){return Cu(n,t,!0)},_e.sortedLastIndexBy=function(n,t,r){return Uu(n,t,Ti(r,2),!0)},_e.sortedLastIndexOf=function(n,t){if(null!=n&&n.length){var r=Cu(n,t,!0)-1;if(gf(n[r],t))return r}return-1},_e.startCase=Aa,_e.startsWith=function(n,t,r){return n=Gf(n),r=null==r?0:Be(qf(r),0,n.length),t=Du(t),n.slice(r,r+t.length)==t},_e.subtract=nc,_e.sum=function(n){return n&&n.length?sr(n,Wa):0},_e.sumBy=function(n,t){return n&&n.length?sr(n,Ti(t,2)):0},_e.template=function(t,r,e){var i=_e.templateSettings;e&&Gi(t,r,e)&&(r=n),t=Gf(t),r=Yf({},r,i,Ii);var o,f,a=Yf({},r.imports,i.imports,Ii),c=fa(a),l=_r(a,c),s=0,h=r.interpolate||Vn,p=\"__p += '\",v=et((r.escape||Vn).source+\"|\"+h.source+\"|\"+(h===kn?$n:Vn).source+\"|\"+(r.evaluate||Vn).source+\"|$\",\"g\"),_=\"//# sourceURL=\"+(st.call(r,\"sourceURL\")?(r.sourceURL+\"\").replace(/\\s/g,\" \"):\"lodash.templateSources[\"+ ++xt+\"]\")+\"\\n\";t.replace(v,function(n,r,e,u,i,a){return e||(e=u),p+=t.slice(s,a).replace(Gn,mr),r&&(o=!0,p+=\"' +\\n__e(\"+r+\") +\\n'\"),i&&(f=!0,p+=\"';\\n\"+i+\";\\n__p += '\"),e&&(p+=\"' +\\n((__t = (\"+e+\")) == null ? '' : __t) +\\n'\"),s=a+n.length,n}),p+=\"';\\n\";var g=st.call(r,\"variable\")&&r.variable;if(g){if(Tn.test(g))throw new Xn(u)}else p=\"with (obj) {\\n\"+p+\"\\n}\\n\";p=(f?p.replace(gn,\"\"):p).replace(yn,\"$1\").replace(dn,\"$1;\"),p=\"function(\"+(g||\"obj\")+\") {\\n\"+(g?\"\":\"obj || (obj = {});\\n\")+\"var __t, __p = ''\"+(o?\", __e = _.escape\":\"\")+(f?\", __j = Array.prototype.join;\\nfunction print() { __p += __j.call(arguments, '') }\\n\":\";\\n\")+p+\"return __p\\n}\";var y=Ra(function(){return nt(c,_+\"return \"+p).apply(n,l)});if(y.source=p,Of(y))throw y;return y},_e.times=function(n,t){if((n=qf(n))<1||n>z)return[];var r=W,e=Gr(n,W);t=Ti(t),n-=W;for(var u=hr(e,t);++r<n;)t(r);return u},_e.toFinite=Pf,_e.toInteger=qf,_e.toLength=Zf,_e.toLower=function(n){return Gf(n).toLowerCase()},_e.toNumber=Kf,_e.toSafeInteger=function(n){return n?Be(qf(n),-z,z):0===n?n:0},_e.toString=Gf,_e.toUpper=function(n){return Gf(n).toUpperCase()},_e.trim=function(t,r,e){if((t=Gf(t))&&(e||r===n))return pr(t);if(!t||!(r=Du(r)))return t;var u=Er(t),i=Er(r);return Ju(u,yr(u,i),dr(u,i)+1).join(\"\")},_e.trimEnd=function(t,r,e){if((t=Gf(t))&&(e||r===n))return t.slice(0,zr(t)+1);if(!t||!(r=Du(r)))return t;var u=Er(t);return Ju(u,0,dr(u,Er(r))+1).join(\"\")},_e.trimStart=function(t,r,e){if((t=Gf(t))&&(e||r===n))return t.replace(Sn,\"\");if(!t||!(r=Du(r)))return t;var u=Er(t);return Ju(u,yr(u,Er(r))).join(\"\")},_e.truncate=function(t,r){var e=j,u=A;if(zf(r)){var i=\"separator\"in r?r.separator:i;e=\"length\"in r?qf(r.length):e,u=\"omission\"in r?Du(r.omission):u}var o=(t=Gf(t)).length;if(xr(t)){var f=Er(t);o=f.length}if(e>=o)return t;var a=e-Rr(u);if(a<1)return u;var c=f?Ju(f,0,a).join(\"\"):t.slice(0,a);if(i===n)return c+u;if(f&&(a+=c.length-a),Uf(i)){if(t.slice(a).search(i)){var l,s=c;for(i.global||(i=et(i.source,Gf(Mn.exec(i))+\"g\")),i.lastIndex=0;l=i.exec(s);)var h=l.index;c=c.slice(0,h===n?a:h)}}else if(t.indexOf(Du(i),a)!=a){var p=c.lastIndexOf(i);p>-1&&(c=c.slice(0,p))}return c+u},_e.unescape=function(n){return(n=Gf(n))&&mn.test(n)?n.replace(bn,Sr):n},_e.uniqueId=function(n){var t=++ht;return Gf(n)+t},_e.upperCase=ka,_e.upperFirst=Oa,_e.each=Vo,_e.eachRight=Go,_e.first=mo,Ta(_e,(Ya={},He(_e,function(n,t){st.call(_e.prototype,t)||(Ya[t]=n)}),Ya),{chain:!1}),_e.VERSION=\"4.17.21\",qt([\"bind\",\"bindKey\",\"curry\",\"curryRight\",\"partial\",\"partialRight\"],function(n){_e[n].placeholder=_e}),qt([\"drop\",\"take\"],function(t,r){be.prototype[t]=function(e){e=e===n?1:Vr(qf(e),0);var u=this.__filtered__&&!r?new be(this):this.clone();return u.__filtered__?u.__takeCount__=Gr(e,u.__takeCount__):u.__views__.push({size:Gr(e,W),type:t+(u.__dir__<0?\"Right\":\"\")}),u},be.prototype[t+\"Right\"]=function(n){return this.reverse()[t](n).reverse()}}),qt([\"filter\",\"map\",\"takeWhile\"],function(n,t){var r=t+1,e=r==I||3==r;be.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({iteratee:Ti(n,3),type:r}),t.__filtered__=t.__filtered__||e,t}}),qt([\"head\",\"last\"],function(n,t){var r=\"take\"+(t?\"Right\":\"\");be.prototype[n]=function(){return this[r](1).value()[0]}}),qt([\"initial\",\"tail\"],function(n,t){var r=\"drop\"+(t?\"\":\"Right\");be.prototype[n]=function(){return this.__filtered__?new be(this):this[r](1)}}),be.prototype.compact=function(){return this.filter(Wa)},be.prototype.find=function(n){return this.filter(n).head()},be.prototype.findLast=function(n){return this.reverse().find(n)},be.prototype.invokeMap=ku(function(n,t){return\"function\"==typeof n?new be(this):this.map(function(r){return iu(r,n,t)})}),be.prototype.reject=function(n){return this.filter(sf(Ti(n)))},be.prototype.slice=function(t,r){t=qf(t);var e=this;return e.__filtered__&&(t>0||r<0)?new be(e):(t<0?e=e.takeRight(-t):t&&(e=e.drop(t)),r!==n&&(e=(r=qf(r))<0?e.dropRight(-r):e.take(r-t)),e)},be.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},be.prototype.toArray=function(){return this.take(W)},He(be.prototype,function(t,r){var e=/^(?:filter|find|map|reject)|While$/.test(r),u=/^(?:head|last)$/.test(r),i=_e[u?\"take\"+(\"last\"==r?\"Right\":\"\"):r],o=u||/^find/.test(r);i&&(_e.prototype[r]=function(){var r=this.__wrapped__,f=u?[1]:arguments,a=r instanceof be,c=f[0],l=a||wf(r),s=function(n){var t=i.apply(_e,Yt([n],f));return u&&h?t[0]:t};l&&e&&\"function\"==typeof c&&1!=c.length&&(a=l=!1);var h=this.__chain__,p=!!this.__actions__.length,v=o&&!h,_=a&&!p;if(!o&&l){r=_?r:new be(this);var g=t.apply(r,f);return g.__actions__.push({func:No,args:[s],thisArg:n}),new de(g,h)}return v&&_?t.apply(this,f):(g=this.thru(s),v?u?g.value()[0]:g.value():g)})}),qt([\"pop\",\"push\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){var t=ot[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(n);_e.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(wf(u)?u:[],n)}return this[r](function(r){return t.apply(wf(r)?r:[],n)})}}),He(be.prototype,function(n,t){var r=_e[t];if(r){var e=r.name+\"\";st.call(oe,e)||(oe[e]=[]),oe[e].push({name:t,func:r})}}),oe[_i(n,v).name]=[{name:\"wrapper\",func:n}],be.prototype.clone=function(){var n=new be(this.__wrapped__);return n.__actions__=ui(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=ui(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=ui(this.__views__),n},be.prototype.reverse=function(){if(this.__filtered__){var n=new be(this);n.__dir__=-1,n.__filtered__=!0}else(n=this.clone()).__dir__*=-1;return n},be.prototype.value=function(){var n=this.__wrapped__.value(),t=this.__dir__,r=wf(n),e=t<0,u=r?n.length:0,i=function(n,t,r){for(var e=-1,u=r.length;++e<u;){var i=r[e],o=i.size;switch(i.type){case\"drop\":n+=o;break;case\"dropRight\":t-=o;break;case\"take\":t=Gr(t,n+o);break;case\"takeRight\":n=Vr(n,t-o)}}return{start:n,end:t}}(0,u,this.__views__),o=i.start,f=i.end,a=f-o,c=e?f:o-1,l=this.__iteratees__,s=l.length,h=0,p=Gr(a,this.__takeCount__);if(!r||!e&&u==a&&p==a)return Pu(n,this.__actions__);var v=[];n:for(;a--&&h<p;){for(var _=-1,g=n[c+=t];++_<s;){var y=l[_],d=y.iteratee,b=y.type,w=d(g);if(b==R)g=w;else if(!w){if(b==I)continue n;break n}}v[h++]=g}return v},_e.prototype.at=Po,_e.prototype.chain=function(){return Fo(this)},_e.prototype.commit=function(){return new de(this.value(),this.__chain__)},_e.prototype.next=function(){this.__values__===n&&(this.__values__=Nf(this.value()));var t=this.__index__>=this.__values__.length;return{done:t,value:t?n:this.__values__[this.__index__++]}},_e.prototype.plant=function(t){for(var r,e=this;e instanceof ye;){var u=po(e);u.__index__=0,u.__values__=n,r?i.__wrapped__=u:r=u;var i=u;e=e.__wrapped__}return i.__wrapped__=t,r},_e.prototype.reverse=function(){var t=this.__wrapped__;if(t instanceof be){var r=t;return this.__actions__.length&&(r=new be(this)),(r=r.reverse()).__actions__.push({func:No,args:[Eo],thisArg:n}),new de(r,this.__chain__)}return this.thru(Eo)},_e.prototype.toJSON=_e.prototype.valueOf=_e.prototype.value=function(){return Pu(this.__wrapped__,this.__actions__)},_e.prototype.first=_e.prototype.head,Cr&&(_e.prototype[Cr]=function(){return this}),_e}();\"function\"==typeof define&&\"object\"==typeof define.amd&&define.amd?(zt._=Lr,define(function(){return Lr})):Lt?((Lt.exports=Lr)._=Lr,St._=Lr):zt._=Lr}).call(this);\n\n//# sourceMappingURL=data:application/json;base64,","var cachedSetTimeout,cachedClearTimeout,process=module.exports={};function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}function runTimeout(e){if(cachedSetTimeout===setTimeout)return setTimeout(e,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(e,0);try{return cachedSetTimeout(e,0)}catch(t){try{return cachedSetTimeout.call(null,e,0)}catch(t){return cachedSetTimeout.call(this,e,0)}}}function runClearTimeout(e){if(cachedClearTimeout===clearTimeout)return clearTimeout(e);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(e);try{return cachedClearTimeout(e)}catch(t){try{return cachedClearTimeout.call(null,e)}catch(t){return cachedClearTimeout.call(this,e)}}}!function(){try{cachedSetTimeout=\"function\"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout=\"function\"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){cachedClearTimeout=defaultClearTimeout}}();var currentQueue,queue=[],draining=!1,queueIndex=-1;function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var e=runTimeout(cleanUpNextTick);draining=!0;for(var t=queue.length;t;){for(currentQueue=queue,queue=[];++queueIndex<t;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,t=queue.length}currentQueue=null,draining=!1,runClearTimeout(e)}}function Item(e,t){this.fun=e,this.array=t}function noop(){}process.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];queue.push(new Item(e,t)),1!==queue.length||draining||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title=\"browser\",process.browser=!0,process.env={},process.argv=[],process.version=\"\",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.prependListener=noop,process.prependOnceListener=noop,process.listeners=function(e){return[]},process.binding=function(e){throw new Error(\"process.binding is not supported\")},process.cwd=function(){return\"/\"},process.chdir=function(e){throw new Error(\"process.chdir is not supported\")},process.umask=function(){return 0};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyb3dzZXIuanMiXSwibmFtZXMiOlsiY2FjaGVkU2V0VGltZW91dCIsImNhY2hlZENsZWFyVGltZW91dCIsInByb2Nlc3MiLCJtb2R1bGUiLCJleHBvcnRzIiwiZGVmYXVsdFNldFRpbW91dCIsIkVycm9yIiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJzZXRUaW1lb3V0IiwiZSIsImNhbGwiLCJ0aGlzIiwicnVuQ2xlYXJUaW1lb3V0IiwibWFya2VyIiwiY2xlYXJUaW1lb3V0IiwiY3VycmVudFF1ZXVlIiwicXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJsZW5ndGgiLCJjb25jYXQiLCJkcmFpblF1ZXVlIiwidGltZW91dCIsImxlbiIsInJ1biIsIkl0ZW0iLCJhcnJheSIsIm5vb3AiLCJuZXh0VGljayIsImFyZ3MiLCJBcnJheSIsImFyZ3VtZW50cyIsImkiLCJwdXNoIiwicHJvdG90eXBlIiwiYXBwbHkiLCJ0aXRsZSIsImJyb3dzZXIiLCJlbnYiLCJhcmd2IiwidmVyc2lvbiIsInZlcnNpb25zIiwib24iLCJhZGRMaXN0ZW5lciIsIm9uY2UiLCJvZmYiLCJyZW1vdmVMaXN0ZW5lciIsInJlbW92ZUFsbExpc3RlbmVycyIsImVtaXQiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwibGlzdGVuZXJzIiwibmFtZSIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsImRpciIsInVtYXNrIl0sIm1hcHBpbmdzIjoiQUFDQSxJQU9JQSxpQkFDQUMsbUJBUkFDLFFBQVVDLE9BQU9DLFdBVXJCLFNBQVNDLG1CQUNMLE1BQU0sSUFBSUMsTUFBTSxtQ0FFcEIsU0FBU0Msc0JBQ0wsTUFBTSxJQUFJRCxNQUFNLHFDQXNCcEIsU0FBU0UsV0FBV0MsR0FDaEIsR0FBSVQsbUJBQXFCVSxXQUVyQixPQUFPQSxXQUFXRCxFQUFLLEdBRzNCLElBQUtULG1CQUFxQkssbUJBQXFCTCxtQkFBcUJVLFdBRWhFLE9BREFWLGlCQUFtQlUsV0FDWkEsV0FBV0QsRUFBSyxHQUUzQixJQUVJLE9BQU9ULGlCQUFpQlMsRUFBSyxHQUMvQixNQUFNRSxHQUNKLElBRUksT0FBT1gsaUJBQWlCWSxLQUFLLEtBQU1ILEVBQUssR0FDMUMsTUFBTUUsR0FFSixPQUFPWCxpQkFBaUJZLEtBQUtDLEtBQU1KLEVBQUssS0FNcEQsU0FBU0ssZ0JBQWdCQyxHQUNyQixHQUFJZCxxQkFBdUJlLGFBRXZCLE9BQU9BLGFBQWFELEdBR3hCLElBQUtkLHFCQUF1Qk0sc0JBQXdCTixxQkFBdUJlLGFBRXZFLE9BREFmLG1CQUFxQmUsYUFDZEEsYUFBYUQsR0FFeEIsSUFFSSxPQUFPZCxtQkFBbUJjLEdBQzVCLE1BQU9KLEdBQ0wsSUFFSSxPQUFPVixtQkFBbUJXLEtBQUssS0FBTUcsR0FDdkMsTUFBT0osR0FHTCxPQUFPVixtQkFBbUJXLEtBQUtDLEtBQU1FLE1BakVoRCxXQUNHLElBRVFmLGlCQURzQixtQkFBZlUsV0FDWUEsV0FFQUwsaUJBRXpCLE1BQU9NLEdBQ0xYLGlCQUFtQkssaUJBRXZCLElBRVFKLG1CQUR3QixtQkFBakJlLGFBQ2NBLGFBRUFULG9CQUUzQixNQUFPSSxHQUNMVixtQkFBcUJNLHFCQWpCN0IsR0F3RUEsSUFFSVUsYUFGQUMsU0FDQUMsVUFBVyxFQUVYQyxZQUFjLEVBRWxCLFNBQVNDLGtCQUNBRixVQUFhRixlQUdsQkUsVUFBVyxFQUNQRixhQUFhSyxPQUNiSixNQUFRRCxhQUFhTSxPQUFPTCxPQUU1QkUsWUFBYyxFQUVkRixNQUFNSSxRQUNORSxjQUlSLFNBQVNBLGFBQ0wsSUFBSUwsU0FBSixDQUdBLElBQUlNLEVBQVVqQixXQUFXYSxpQkFDekJGLFVBQVcsRUFHWCxJQURBLElBQUlPLEVBQU1SLE1BQU1JLE9BQ1ZJLEdBQUssQ0FHUCxJQUZBVCxhQUFlQyxNQUNmQSxXQUNTRSxXQUFhTSxHQUNkVCxjQUNBQSxhQUFhRyxZQUFZTyxNQUdqQ1AsWUFBYyxFQUNkTSxFQUFNUixNQUFNSSxPQUVoQkwsYUFBZSxLQUNmRSxVQUFXLEVBQ1hMLGdCQUFnQlcsSUFpQnBCLFNBQVNHLEtBQUtuQixFQUFLb0IsR0FDZmhCLEtBQUtKLElBQU1BLEVBQ1hJLEtBQUtnQixNQUFRQSxFQVlqQixTQUFTQyxRQTVCVDVCLFFBQVE2QixTQUFXLFNBQVV0QixHQUN6QixJQUFJdUIsRUFBTyxJQUFJQyxNQUFNQyxVQUFVWixPQUFTLEdBQ3hDLEdBQUlZLFVBQVVaLE9BQVMsRUFDbkIsSUFBSyxJQUFJYSxFQUFJLEVBQUdBLEVBQUlELFVBQVVaLE9BQVFhLElBQ2xDSCxFQUFLRyxFQUFJLEdBQUtELFVBQVVDLEdBR2hDakIsTUFBTWtCLEtBQUssSUFBSVIsS0FBS25CLEVBQUt1QixJQUNKLElBQWpCZCxNQUFNSSxRQUFpQkgsVUFDdkJYLFdBQVdnQixhQVNuQkksS0FBS1MsVUFBVVYsSUFBTSxXQUNqQmQsS0FBS0osSUFBSTZCLE1BQU0sS0FBTXpCLEtBQUtnQixRQUU5QjNCLFFBQVFxQyxNQUFRLFVBQ2hCckMsUUFBUXNDLFNBQVUsRUFDbEJ0QyxRQUFRdUMsT0FDUnZDLFFBQVF3QyxRQUNSeEMsUUFBUXlDLFFBQVUsR0FDbEJ6QyxRQUFRMEMsWUFJUjFDLFFBQVEyQyxHQUFLZixLQUNiNUIsUUFBUTRDLFlBQWNoQixLQUN0QjVCLFFBQVE2QyxLQUFPakIsS0FDZjVCLFFBQVE4QyxJQUFNbEIsS0FDZDVCLFFBQVErQyxlQUFpQm5CLEtBQ3pCNUIsUUFBUWdELG1CQUFxQnBCLEtBQzdCNUIsUUFBUWlELEtBQU9yQixLQUNmNUIsUUFBUWtELGdCQUFrQnRCLEtBQzFCNUIsUUFBUW1ELG9CQUFzQnZCLEtBRTlCNUIsUUFBUW9ELFVBQVksU0FBVUMsR0FBUSxVQUV0Q3JELFFBQVFzRCxRQUFVLFNBQVVELEdBQ3hCLE1BQU0sSUFBSWpELE1BQU0scUNBR3BCSixRQUFRdUQsSUFBTSxXQUFjLE1BQU8sS0FDbkN2RCxRQUFRd0QsTUFBUSxTQUFVQyxHQUN0QixNQUFNLElBQUlyRCxNQUFNLG1DQUVwQkosUUFBUTBELE1BQVEsV0FBYSxPQUFPIiwiZmlsZSI6Ii9BcHBsaWNhdGlvbnMvcHJvamVjdHMvY2hlaWwvdGFyZ2V0X19waG9uZUNvbnRyYWN0c19fMjQ1L25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMifQ==","import axios from 'axios'\n\nimport { forEach } from 'lodash';\n\nexport default class Contracts {\n\n  async phoneContracts() {\n  let sku = '';\n  const pathName = window.location.pathname;\n\n  if (pathName.includes('galaxy-s')) {\n  sku = BC_MODEL.displayCode;\n    } else if (pathName.includes('galaxy-note20')) {\n      sku = BC_MODEL.displayCode;\n    } else {\n      sku = digitalData.product.model_code || BC_MODEL.displayCode;\n  }\n\n  try {\n   const res = await axios.get(`https://p1-smn2-api-cdn.shop.samsung.com/tokocommercewebservices/v2/uk/carriers/device/${sku}/plans?fields=DEFAULT`,\n   {\n    headers: {\n       \"Access-Control-Allow-Origin\": \"*\",\n       \"content-type\": \"application/json\",\n       \"x-ecom-app-id\": \"web\",\n     },\n   });\n   // console.log(res);\n   const carriers = res.data.carriers;\n   this.contracts(carriers)\n  }\n  catch(error) {\n   console.log(error)\n  }\n  }\n\n  goToCarrier(blockId) {\n    const phoneContractId = blockId + 1;\n    const carrierTabs = document.querySelectorAll('.tariff-popup__tab-item');\n    let tab = ''\n\n    carrierTabs.forEach((carrierTab, carrierTabIndex) => {\n\n      if (phoneContractId === carrierTabIndex) {\n          tab = carrierTab.attributes[1].value;\n\n          setTimeout( () => {\n            document.getElementById(tab).click();\n          }, 1000)\n\n      }\n    })\n  }\n\n  tagging(el, attrs) {\n    for(let key in attrs) {\n      el.setAttribute(key, attrs[key]);\n    }\n  }\n\n  getLowPrice(networkPlans) {\n    const carrierPlans = networkPlans\n    let allPricesArr = [];\n\n    carrierPlans.map((carrierPlan) => {\n\n      const carrierName = carrierPlan.carrier;\n      let carrierMonthlyRate = carrierPlan.pricing.monthly_rate.value\n      const numMonthlyRate = parseFloat(carrierMonthlyRate);\n\n      allPricesArr.push(numMonthlyRate);\n    })\n\n    const sortArr = allPricesArr.sort((a, b) => a - b);\n    const minPrice = sortArr[0];\n    return minPrice\n  }\n\n  contracts(carriers) {\n  //change text\n  // let contractCopy = document.querySelector(\"#offer_tariff > div.hubble-product__options-content-inner > p\")\n  // contractCopy.classList.add('contract_copy');\n  // contractCopy.innerHTML = `<span class=\"s-option-default\">Choose a network and a bundle of minutes, texts and data to buy with your phone</span>`\n  //loop through all contracts\n  const container       = document.createElement('div');\n  container.classList.add('contracts_container');\n  const offerSection    = document.querySelector(\".pd-select-option.off-change.option-tariff\")\n  const path            = window.location.pathname;\n  const dotsContainer   = document.createElement('div');\n  dotsContainer.classList.add('dots_container');\n\n  carriers.map((carrier, index) => {\n    // console.log(carrier)\n    const contractImg       = carrier.additionalCarrierInfo.medias[0].url;\n    const contractImgAlt    = carrier.additionalCarrierInfo.medias[0].altText;\n    const minPrice          = this.getLowPrice(carrier.tariffPlans);\n    const network           = carrier.id\n    const block             = document.createElement('div');\n    const dots              = document.createElement('span');\n    const ticketNum         = 245;\n\n    dots.classList.add('dot');\n    dotsContainer.append(dots);\n    block.classList.add('contracts_block');\n\n    this.tagging(block,\n      { \"data-omni-type\"  : \"microsite\",\n        \"data-omni\"       : `uk:${ticketNum}:pdp:phonecontracts:carriername:${network}`,\n        \"ga-ac\"           : \"pd buying tool\",\n        \"ga-ca\"           : \"option click\",\n        \"ga-la\"           : `tariff:apply:${network}`\n      });\n\n    block.innerHTML = `\n    <div class=\"contracts_selector\" data-omni-type=\"microsite\" data-omni=\"uk:${ticketNum}:pdp:phonecontracts:networkname-${network}\">\n      <img class=\"contracts_${contractImgAlt}\" src=\"${contractImg}\" alt=\"${contractImgAlt}\" />\n      <span class=\"contracts_price\">From £${minPrice}.00/month</span>\n    </div>\n    `\n    container.append(block);\n    offerSection.append(container);\n    container.append(dotsContainer);\n    // document.querySelector(\"#offer_tariff > div.hubble-product__options-content-cta > a\").style.display = 'none'\n  });\n\n\n\n    (path == '/uk/smartphones/galaxy-z-fold3-5g/buy/') ? container.after('RPI/CPI changes apply****') : container.after('RPI/CPI changes apply***');\n\n    const allBlocks = document.querySelectorAll('.contracts_block');\n    const allDotIndicators = document.querySelectorAll('.dot');\n\n    //This function is made so the inicators change when you scroll blocks into viewport\n\n    function isElementInViewport (el) {\n        // Special bonus for those using jQuery\n        if (typeof jQuery === \"function\" && el instanceof jQuery) {\n            el = el[0];\n        }\n\n        var rect = el.getBoundingClientRect();\n\n\n        return (\n            rect.top >= 0 &&\n            rect.left >= 0 &&\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /* or $(window).height() */\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth) /* or $(window).width() */\n        );\n    }\n\n\n    allBlocks.forEach((carrierBlock, blockId) => {\n\n      const carrrierBlockPosisition = carrierBlock.getBoundingClientRect().left;\n      // const carousalContainer = document.querySelector(\"#offer_tariff > div.hubble-product__options-content-inner > div\")\n      const carousalContainer = document.querySelector(\".contracts_container\")\n\n      carousalContainer.addEventListener('scroll', function(e) {\n\n        if (isElementInViewport(carrierBlock)) {\n          allDotIndicators[blockId].classList.add('active');\n          } else {\n            allDotIndicators[blockId].classList.remove('active');\n          }\n        })\n\n      carrierBlock.onclick = (e) => {\n        document.querySelector(\"#offer_tariff > div.hubble-product__options-content-cta > a\").click();\n        e.preventDefault();\n        this.goToCarrier(blockId)\n      }\n\n      allDotIndicators[blockId].onclick = (e) => {\n\n          if (blockId <  3 ) {\n            carousalContainer.scroll({\n            left: carrrierBlockPosisition - 100,\n            behavior: 'smooth'\n          });\n        } else if (blockId < 3 && innerWidth >= 320) {\n          carousalContainer.scroll({\n            left: carrrierBlockPosisition - 160,\n            behavior: 'smooth'\n          });\n        } else {\n            carousalContainer.scroll({\n            left: carrrierBlockPosisition,\n            behavior: 'smooth'\n          });\n        }\n      }\n    })\n  }\n}\n","// ==========================================================================\n//  This is a boilerplate to use for target activities\n//\n//\tURL example: add in url of project for visibility here\n// ==========================================================================\n\n// ==========================================================================\n// Scripts, helper widgets - import below\n// ==========================================================================\nimport PhoneContracts from './components/contracts'\n\nvar cheillondon = cheillondon || {}\n\ncheillondon.targetBoilerplate = (function () {\n  'use strict'\n\n  var main = {\n    // ==========================================================================\n    // Variables and config Properties add below\n    // ==========================================================================\n\n    //Init\n    init: function () {\n      main.doEverythingTimeout()\n    },\n\n    // ==========================================================================\n    // Checking jQuery\n    // ==========================================================================\n    doEverythingTimeout: function () {\n      var _self = this\n\n      console.log('XXX - doEverythingTimeout')\n\n      setTimeout(function () {\n        if (window.$) {\n          console.log('doEverythingTimeout - jQuery loaded')\n          main.appendNewStyle()\n          main.phoneContracts = new PhoneContracts()\n          main.phoneContracts.phoneContracts()\n          main.removeStuff()\n          main.addElements()\n\n        } else {\n          console.log('no jquery')\n          _self.doEverythingTimeout()\n        }\n      }, 2000)\n    },\n\n    // ==========================================================================\n    // Adding style\n    // ==========================================================================\n    appendNewStyle: function () {\n      /* FYI: the CSS code is in separated file, in SCSS format that generates the CSS file. After, the gulp file finds the [CSS] and replaces with minified code from file */\n\n      //To insert minified inline string uncomment this variable and paste here\n      //Else, use default uncommented variable\n      // var _css = '';\n\n      var _css = '[[CSS]]'\n\n      //\n      // Adding style definitions to DOM\n      // --------------------------------------------------------------------------\n      var _head = document.head || document.getElementsByTagName('head')[0],\n        _style = document.createElement('style')\n\n      _style.type = 'text/css'\n      if (_style.styleSheet) {\n        // This is required for IE8 and below.\n        _style.styleSheet.cssText = _css\n      } else {\n        _style.appendChild(document.createTextNode(_css))\n      }\n      _head.appendChild(_style)\n    },\n\n    removeStuff: function () {\n      console.log('removeStuff')\n\n      //Remove Elements\n    },\n\n    // ==========================================================================\n    // When page is already loaded we need to add the new elements\n    // ==========================================================================\n    addElements: function () {\n      console.log('XXX - addElements')\n    },\n\n    // ==========================================================================\n    // Set Events\n    // ==========================================================================\n    setEvents: function (elm = '') {\n      console.log('XXX - setEvents: ' + elm)\n\n      switch (elm) {\n        case 'modal':\n          //code to open modal;\n          break\n        case 'financePopup':\n        //code to open something else;\n        default:\n          break\n      }\n    },\n\n    resizeWindow: function () {\n      // as new elements added to panel we need to resize window to activate amend height of Product Panels\n      setTimeout(function () {\n        $(window).resize()\n        console.log('window resized')\n      }, 100)\n    },\n  }\n  return {\n    main: main,\n  }\n})()\n\ncheillondon.targetBoilerplate.main.init()\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanMiLCJub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL3hoci5qcyIsIm5vZGVfbW9kdWxlcy9heGlvcy9saWIvYXhpb3MuanMiLCJub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanMiLCJub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyIsIm5vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzIiwibm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zLmpzIiwibm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcyIsIm5vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9idWlsZEZ1bGxQYXRoLmpzIiwibm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2NyZWF0ZUVycm9yLmpzIiwibm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2Rpc3BhdGNoUmVxdWVzdC5qcyIsIm5vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9lbmhhbmNlRXJyb3IuanMiLCJub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanMiLCJub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzIiwibm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3RyYW5zZm9ybURhdGEuanMiLCJub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzLmpzIiwibm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanMiLCJub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanMiLCJub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMiLCJub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcyIsIm5vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0Fic29sdXRlVVJMLmpzIiwibm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQXhpb3NFcnJvci5qcyIsIm5vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc1VSTFNhbWVPcmlnaW4uanMiLCJub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcyIsIm5vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wYXJzZUhlYWRlcnMuanMiLCJub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzIiwibm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3ZhbGlkYXRvci5qcyIsIm5vZGVfbW9kdWxlcy9heGlvcy9saWIvdXRpbHMuanMiLCJub2RlX21vZHVsZXMvYXhpb3MvcGFja2FnZS5qc29uIiwibm9kZV9tb2R1bGVzL2xvZGFzaC9sb2Rhc2guanMiLCJub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwic3JjL2pzL2NvbXBvbmVudHMvY29udHJhY3RzLmpzIiwic3JjL2pzL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7O0FDRkE7QUFDQTtBQUNBOzs7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUNGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDcEZBO0FBQ0E7QUFDQTs7O0FDRkE7QUFDQTtBQUNBO29FQ0ZBLElBQUEsT0FBQSxRQUFBLGdEQUVBLFFBQUEsUUFBQSxrTUFFcUIsNkVBRWIsZ0NBQ04sSUFBSSxFQUFNLEdBQ0osRUFBVyxPQUFPLFNBQVMsU0FHakMsRUFESSxFQUFTLFNBQVMsWUFDaEIsU0FBUyxZQUNGLEVBQVMsU0FBUyxpQkFDckIsU0FBUyxZQUVULFlBQVksUUFBUSxZQUFjLFNBQVMsWUFHckQsSUFDQyxJQVNNLFNBVFksUUFBQSxRQUFNLElBQU4sMEZBQW9HLEVBQXBHLHlCQUVqQixTQUNHLDhCQUErQixJQUMvQixlQUFnQixtQkFDaEIsZ0JBQWlCLFVBSUEsS0FBSyxTQUMxQixLQUFLLFVBQVUsR0FFaEIsTUFBTSxHQUNMLFFBQVEsSUFBSSxpQkFJYixxQkFBWSxHQUNWLElBQU0sRUFBa0IsRUFBVSxFQUU5QixFQUFNLEdBRFUsU0FBUyxpQkFBaUIsMkJBR2xDLFFBQVEsU0FBQyxFQUFZLEdBRTNCLElBQW9CLElBQ3BCLEVBQU0sRUFBVyxXQUFXLEdBQUcsTUFFL0IsV0FBWSxXQUNWLFNBQVMsZUFBZSxHQUFLLFNBQzVCLHFCQU1YLGlCQUFRLEVBQUksR0FDVixJQUFJLElBQUksS0FBTyxFQUNiLEVBQUcsYUFBYSxFQUFLLEVBQU0saUJBSS9CLHFCQUFZLEdBQ1YsSUFDSSxLQWFKLE9BZHFCLEVBR1IsSUFBSSxTQUFDLEdBRUksRUFBWSxRQUFoQyxJQUNJLEVBQXFCLEVBQVksUUFBUSxhQUFhLE1BQ3BELEVBQWlCLFdBQVcsR0FFbEMsRUFBYSxLQUFLLEtBR0osRUFBYSxLQUFLLFNBQUMsRUFBRyxHQUFKLE9BQVUsRUFBSSxJQUN2QixnQkFJM0IsbUJBQVUsR0FBVSxJQUFBLEVBQUEsS0FNZCxFQUFrQixTQUFTLGNBQWMsT0FDL0MsRUFBVSxVQUFVLElBQUksdUJBQ3hCLElBQU0sRUFBa0IsU0FBUyxjQUFjLDhDQUN6QyxFQUFrQixPQUFPLFNBQVMsU0FDbEMsRUFBa0IsU0FBUyxjQUFjLE9BQy9DLEVBQWMsVUFBVSxJQUFJLGtCQUU1QixFQUFTLElBQUksU0FBQyxFQUFTLEdBRXJCLElBQU0sRUFBb0IsRUFBUSxzQkFBc0IsT0FBTyxHQUFHLElBQzVELEVBQW9CLEVBQVEsc0JBQXNCLE9BQU8sR0FBRyxRQUM1RCxFQUFvQixFQUFLLFlBQVksRUFBUSxhQUM3QyxFQUFvQixFQUFRLEdBQzVCLEVBQW9CLFNBQVMsY0FBYyxPQUMzQyxFQUFvQixTQUFTLGNBQWMsUUFHakQsRUFBSyxVQUFVLElBQUksT0FDbkIsRUFBYyxPQUFPLEdBQ3JCLEVBQU0sVUFBVSxJQUFJLG1CQUVwQixFQUFLLFFBQVEsR0FDVCxpQkFBb0IsWUFDcEIsWUFBQSx5Q0FBc0UsRUFDdEUsUUFBb0IsaUJBQ3BCLFFBQW9CLGVBQ3BCLFFBQUEsZ0JBQW9DLElBR3hDLEVBQU0sVUFBTixxSEFDdUgsRUFEdkgsbUNBRTBCLEVBRjFCLFVBRWtELEVBRmxELFVBRXVFLEVBRnZFLG1EQUd3QyxFQUh4QyxxQ0FNQSxFQUFVLE9BQU8sR0FDakIsRUFBYSxPQUFPLEdBQ3BCLEVBQVUsT0FBTyxLQU1SLDBDQUFSLEVBQW9ELEVBQVUsTUFBTSw2QkFBK0IsRUFBVSxNQUFNLDRCQUVwSCxJQUFNLEVBQVksU0FBUyxpQkFBaUIsb0JBQ3RDLEVBQW1CLFNBQVMsaUJBQWlCLFFBc0JuRCxFQUFVLFFBQVEsU0FBQyxFQUFjLEdBRS9CLElBQU0sRUFBMEIsRUFBYSx3QkFBd0IsS0FFL0QsRUFBb0IsU0FBUyxjQUFjLHdCQUVqRCxFQUFrQixpQkFBaUIsU0FBVSxTQUFTLElBeEJ4RCxTQUE4QixHQUVKLG1CQUFYLFFBQXlCLGFBQWMsU0FDOUMsRUFBSyxFQUFHLElBR1osSUFBSSxFQUFPLEVBQUcsd0JBR2QsT0FDSSxFQUFLLEtBQU8sR0FDWixFQUFLLE1BQVEsR0FDYixFQUFLLFNBQVcsT0FBTyxhQUFlLFNBQVMsZ0JBQWdCLGVBQy9ELEVBQUssUUFBVSxPQUFPLFlBQWMsU0FBUyxnQkFBZ0IsYUFhN0QsQ0FBb0IsR0FHcEIsRUFBaUIsR0FBUyxVQUFVLE9BQU8sVUFGN0MsRUFBaUIsR0FBUyxVQUFVLElBQUksWUFNNUMsRUFBYSxRQUFVLFNBQUMsR0FDdEIsU0FBUyxjQUFjLCtEQUErRCxRQUN0RixFQUFFLGlCQUNGLEVBQUssWUFBWSxJQUduQixFQUFpQixHQUFTLFFBQVUsU0FBQyxHQUU3QixFQUFXLEVBQ2IsRUFBa0IsUUFDbEIsS0FBTSxFQUEwQixJQUNoQyxTQUFVLFdBRUgsRUFBVSxHQUFLLFlBQWMsSUFDdEMsRUFBa0IsUUFDaEIsS0FBTSxFQUEwQixJQUNoQyxTQUFVLFdBR1YsRUFBa0IsUUFDbEIsS0FBTSxFQUNOLFNBQVUsb0NBeExEOzs7YUNLckIsSUFBQSxXQUFBLFFBQUEsaUpBRUEsSUFBSSxZQUFjLGdCQUVsQixZQUFZLGtCQUFxQixXQUcvQixJQUFJLEdBTUYsS0FBTSxXQUNKLEVBQUssdUJBTVAsb0JBQXFCLFdBQ25CLElBQUksRUFBUSxLQUVaLFFBQVEsSUFBSSw2QkFFWixXQUFXLFdBQ0wsT0FBTyxHQUNULFFBQVEsSUFBSSx1Q0FDWixFQUFLLGlCQUNMLEVBQUssZUFBaUIsSUFBSSxZQUFBLFFBQzFCLEVBQUssZUFBZSxpQkFDcEIsRUFBSyxjQUNMLEVBQUssZ0JBR0wsUUFBUSxJQUFJLGFBQ1osRUFBTSx3QkFFUCxNQU1MLGVBQWdCLFdBT2QsSUFLSSxFQUFRLFNBQVMsTUFBUSxTQUFTLHFCQUFxQixRQUFRLEdBQ2pFLEVBQVMsU0FBUyxjQUFjLFNBRWxDLEVBQU8sS0FBTyxXQUNWLEVBQU8sV0FFVCxFQUFPLFdBQVcsUUFYVCxVQWFULEVBQU8sWUFBWSxTQUFTLGVBYm5CLFlBZVgsRUFBTSxZQUFZLElBR3BCLFlBQWEsV0FDWCxRQUFRLElBQUksZ0JBUWQsWUFBYSxXQUNYLFFBQVEsSUFBSSxzQkFNZCxVQUFXLFdBQW9CLElBQVYsRUFBVSxVQUFBLE9BQUEsUUFBQSxJQUFBLFVBQUEsR0FBQSxVQUFBLEdBQUosR0FDekIsUUFBUSxJQUFJLG9CQUFzQixJQWFwQyxhQUFjLFdBRVosV0FBVyxXQUNULEVBQUUsUUFBUSxTQUNWLFFBQVEsSUFBSSxtQkFDWCxPQUdQLE9BQ0UsS0FBTSxHQXhHdUIsR0E0R2pDLFlBQVksa0JBQWtCLEtBQUsiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJtb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiLi9saWIvYXhpb3NcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx1WkdWNExtcHpJbDBzSW01aGJXVnpJanBiSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKeVpYRjFhWEpsSWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVVFc1QwRkJUME1zVVVGQlZVTXNVVUZCVVNJc0ltWnBiR1VpT2lJdlFYQndiR2xqWVhScGIyNXpMM0J5YjJwbFkzUnpMMk5vWldsc0wzUmhjbWRsZEY5ZmNHaHZibVZEYjI1MGNtRmpkSE5mWHpJME5TOXViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZhVzVrWlhndWFuTWlmUT09IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIHV0aWxzPXJlcXVpcmUoXCIuLy4uL3V0aWxzXCIpLHNldHRsZT1yZXF1aXJlKFwiLi8uLi9jb3JlL3NldHRsZVwiKSxjb29raWVzPXJlcXVpcmUoXCIuLy4uL2hlbHBlcnMvY29va2llc1wiKSxidWlsZFVSTD1yZXF1aXJlKFwiLi8uLi9oZWxwZXJzL2J1aWxkVVJMXCIpLGJ1aWxkRnVsbFBhdGg9cmVxdWlyZShcIi4uL2NvcmUvYnVpbGRGdWxsUGF0aFwiKSxwYXJzZUhlYWRlcnM9cmVxdWlyZShcIi4vLi4vaGVscGVycy9wYXJzZUhlYWRlcnNcIiksaXNVUkxTYW1lT3JpZ2luPXJlcXVpcmUoXCIuLy4uL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luXCIpLGNyZWF0ZUVycm9yPXJlcXVpcmUoXCIuLi9jb3JlL2NyZWF0ZUVycm9yXCIpO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyLHQpe3ZhciBzPWUuZGF0YSxvPWUuaGVhZGVycyxhPWUucmVzcG9uc2VUeXBlO3V0aWxzLmlzRm9ybURhdGEocykmJmRlbGV0ZSBvW1wiQ29udGVudC1UeXBlXCJdO3ZhciBuPW5ldyBYTUxIdHRwUmVxdWVzdDtpZihlLmF1dGgpe3ZhciBpPWUuYXV0aC51c2VybmFtZXx8XCJcIix1PWUuYXV0aC5wYXNzd29yZD91bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoZS5hdXRoLnBhc3N3b3JkKSk6XCJcIjtvLkF1dGhvcml6YXRpb249XCJCYXNpYyBcIitidG9hKGkrXCI6XCIrdSl9dmFyIGw9YnVpbGRGdWxsUGF0aChlLmJhc2VVUkwsZS51cmwpO2Z1bmN0aW9uIGQoKXtpZihuKXt2YXIgcz1cImdldEFsbFJlc3BvbnNlSGVhZGVyc1wiaW4gbj9wYXJzZUhlYWRlcnMobi5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSk6bnVsbCxvPXtkYXRhOmEmJlwidGV4dFwiIT09YSYmXCJqc29uXCIhPT1hP24ucmVzcG9uc2U6bi5yZXNwb25zZVRleHQsc3RhdHVzOm4uc3RhdHVzLHN0YXR1c1RleHQ6bi5zdGF0dXNUZXh0LGhlYWRlcnM6cyxjb25maWc6ZSxyZXF1ZXN0Om59O3NldHRsZShyLHQsbyksbj1udWxsfX1pZihuLm9wZW4oZS5tZXRob2QudG9VcHBlckNhc2UoKSxidWlsZFVSTChsLGUucGFyYW1zLGUucGFyYW1zU2VyaWFsaXplciksITApLG4udGltZW91dD1lLnRpbWVvdXQsXCJvbmxvYWRlbmRcImluIG4/bi5vbmxvYWRlbmQ9ZDpuLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe24mJjQ9PT1uLnJlYWR5U3RhdGUmJigwIT09bi5zdGF0dXN8fG4ucmVzcG9uc2VVUkwmJjA9PT1uLnJlc3BvbnNlVVJMLmluZGV4T2YoXCJmaWxlOlwiKSkmJnNldFRpbWVvdXQoZCl9LG4ub25hYm9ydD1mdW5jdGlvbigpe24mJih0KGNyZWF0ZUVycm9yKFwiUmVxdWVzdCBhYm9ydGVkXCIsZSxcIkVDT05OQUJPUlRFRFwiLG4pKSxuPW51bGwpfSxuLm9uZXJyb3I9ZnVuY3Rpb24oKXt0KGNyZWF0ZUVycm9yKFwiTmV0d29yayBFcnJvclwiLGUsbnVsbCxuKSksbj1udWxsfSxuLm9udGltZW91dD1mdW5jdGlvbigpe3ZhciByPVwidGltZW91dCBvZiBcIitlLnRpbWVvdXQrXCJtcyBleGNlZWRlZFwiO2UudGltZW91dEVycm9yTWVzc2FnZSYmKHI9ZS50aW1lb3V0RXJyb3JNZXNzYWdlKSx0KGNyZWF0ZUVycm9yKHIsZSxlLnRyYW5zaXRpb25hbCYmZS50cmFuc2l0aW9uYWwuY2xhcmlmeVRpbWVvdXRFcnJvcj9cIkVUSU1FRE9VVFwiOlwiRUNPTk5BQk9SVEVEXCIsbikpLG49bnVsbH0sdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSl7dmFyIHA9KGUud2l0aENyZWRlbnRpYWxzfHxpc1VSTFNhbWVPcmlnaW4obCkpJiZlLnhzcmZDb29raWVOYW1lP2Nvb2tpZXMucmVhZChlLnhzcmZDb29raWVOYW1lKTp2b2lkIDA7cCYmKG9bZS54c3JmSGVhZGVyTmFtZV09cCl9XCJzZXRSZXF1ZXN0SGVhZGVyXCJpbiBuJiZ1dGlscy5mb3JFYWNoKG8sZnVuY3Rpb24oZSxyKXt2b2lkIDA9PT1zJiZcImNvbnRlbnQtdHlwZVwiPT09ci50b0xvd2VyQ2FzZSgpP2RlbGV0ZSBvW3JdOm4uc2V0UmVxdWVzdEhlYWRlcihyLGUpfSksdXRpbHMuaXNVbmRlZmluZWQoZS53aXRoQ3JlZGVudGlhbHMpfHwobi53aXRoQ3JlZGVudGlhbHM9ISFlLndpdGhDcmVkZW50aWFscyksYSYmXCJqc29uXCIhPT1hJiYobi5yZXNwb25zZVR5cGU9ZS5yZXNwb25zZVR5cGUpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGUub25Eb3dubG9hZFByb2dyZXNzJiZuLmFkZEV2ZW50TGlzdGVuZXIoXCJwcm9ncmVzc1wiLGUub25Eb3dubG9hZFByb2dyZXNzKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLm9uVXBsb2FkUHJvZ3Jlc3MmJm4udXBsb2FkJiZuLnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIixlLm9uVXBsb2FkUHJvZ3Jlc3MpLGUuY2FuY2VsVG9rZW4mJmUuY2FuY2VsVG9rZW4ucHJvbWlzZS50aGVuKGZ1bmN0aW9uKGUpe24mJihuLmFib3J0KCksdChlKSxuPW51bGwpfSksc3x8KHM9bnVsbCksbi5zZW5kKHMpfSl9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5ob2NpNXFjeUpkTENKdVlXMWxjeUk2V3lKMWRHbHNjeUlzSW5KbGNYVnBjbVVpTENKelpYUjBiR1VpTENKamIyOXJhV1Z6SWl3aVluVnBiR1JWVWt3aUxDSmlkV2xzWkVaMWJHeFFZWFJvSWl3aWNHRnljMlZJWldGa1pYSnpJaXdpYVhOVlVreFRZVzFsVDNKcFoybHVJaXdpWTNKbFlYUmxSWEp5YjNJaUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2lZMjl1Wm1sbklpd2lVSEp2YldselpTSXNJbkpsYzI5c2RtVWlMQ0p5WldwbFkzUWlMQ0p5WlhGMVpYTjBSR0YwWVNJc0ltUmhkR0VpTENKeVpYRjFaWE4wU0dWaFpHVnljeUlzSW1obFlXUmxjbk1pTENKeVpYTndiMjV6WlZSNWNHVWlMQ0pwYzBadmNtMUVZWFJoSWl3aWNtVnhkV1Z6ZENJc0lsaE5URWgwZEhCU1pYRjFaWE4wSWl3aVlYVjBhQ0lzSW5WelpYSnVZVzFsSWl3aWNHRnpjM2R2Y21RaUxDSjFibVZ6WTJGd1pTSXNJbVZ1WTI5a1pWVlNTVU52YlhCdmJtVnVkQ0lzSWtGMWRHaHZjbWw2WVhScGIyNGlMQ0ppZEc5aElpd2lablZzYkZCaGRHZ2lMQ0ppWVhObFZWSk1JaXdpZFhKc0lpd2liMjVzYjJGa1pXNWtJaXdpY21WemNHOXVjMlZJWldGa1pYSnpJaXdpWjJWMFFXeHNVbVZ6Y0c5dWMyVklaV0ZrWlhKeklpd2ljbVZ6Y0c5dWMyVWlMQ0p5WlhOd2IyNXpaVlJsZUhRaUxDSnpkR0YwZFhNaUxDSnpkR0YwZFhOVVpYaDBJaXdpYjNCbGJpSXNJbTFsZEdodlpDSXNJblJ2VlhCd1pYSkRZWE5sSWl3aWNHRnlZVzF6SWl3aWNHRnlZVzF6VTJWeWFXRnNhWHBsY2lJc0luUnBiV1Z2ZFhRaUxDSnZibkpsWVdSNWMzUmhkR1ZqYUdGdVoyVWlMQ0p5WldGa2VWTjBZWFJsSWl3aWNtVnpjRzl1YzJWVlVrd2lMQ0pwYm1SbGVFOW1JaXdpYzJWMFZHbHRaVzkxZENJc0ltOXVZV0p2Y25RaUxDSnZibVZ5Y205eUlpd2liMjUwYVcxbGIzVjBJaXdpZEdsdFpXOTFkRVZ5Y205eVRXVnpjMkZuWlNJc0luUnlZVzV6YVhScGIyNWhiQ0lzSW1Oc1lYSnBabmxVYVcxbGIzVjBSWEp5YjNJaUxDSnBjMU4wWVc1a1lYSmtRbkp2ZDNObGNrVnVkaUlzSW5oemNtWldZV3gxWlNJc0luZHBkR2hEY21Wa1pXNTBhV0ZzY3lJc0luaHpjbVpEYjI5cmFXVk9ZVzFsSWl3aWNtVmhaQ0lzSW5WdVpHVm1hVzVsWkNJc0luaHpjbVpJWldGa1pYSk9ZVzFsSWl3aVptOXlSV0ZqYUNJc0luWmhiQ0lzSW10bGVTSXNJblJ2VEc5M1pYSkRZWE5sSWl3aWMyVjBVbVZ4ZFdWemRFaGxZV1JsY2lJc0ltbHpWVzVrWldacGJtVmtJaXdpYjI1RWIzZHViRzloWkZCeWIyZHlaWE56SWl3aVlXUmtSWFpsYm5STWFYTjBaVzVsY2lJc0ltOXVWWEJzYjJGa1VISnZaM0psYzNNaUxDSjFjR3h2WVdRaUxDSmpZVzVqWld4VWIydGxiaUlzSW5CeWIyMXBjMlVpTENKMGFHVnVJaXdpWTJGdVkyVnNJaXdpWVdKdmNuUWlMQ0p6Wlc1a0lsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeGhRVVZCTEVsQlFVbEJMRTFCUVZGRExGRkJRVkVzWTBGRGFFSkRMRTlCUVZORUxGRkJRVkVzYjBKQlEycENSU3hSUVVGVlJpeFJRVUZSTEhkQ1FVTnNRa2NzVTBGQlYwZ3NVVUZCVVN4NVFrRkRia0pKTEdOQlFXZENTaXhSUVVGUkxIbENRVU40UWtzc1lVRkJaVXdzVVVGQlVTdzJRa0ZEZGtKTkxHZENRVUZyUWs0c1VVRkJVU3huUTBGRE1VSlBMRmxCUVdOUUxGRkJRVkVzZFVKQlJURkNVU3hQUVVGUFF5eFJRVUZWTEZOQlFXOUNReXhIUVVOdVF5eFBRVUZQTEVsQlFVbERMRkZCUVZFc1UwRkJORUpETEVWQlFWTkRMRWRCUTNSRUxFbEJRVWxETEVWQlFXTktMRVZCUVU5TExFdEJRM0pDUXl4RlFVRnBRazRzUlVGQlQwOHNVVUZEZUVKRExFVkJRV1ZTTEVWQlFVOVJMR0ZCUlhSQ2JrSXNUVUZCVFc5Q0xGZEJRVmRNTEZkQlExcEZMRVZCUVdVc1owSkJSM2hDTEVsQlFVbEpMRVZCUVZVc1NVRkJTVU1zWlVGSGJFSXNSMEZCU1Znc1JVRkJUMWtzUzBGQlRTeERRVU5tTEVsQlFVbERMRVZCUVZkaUxFVkJRVTlaTEV0QlFVdERMRlZCUVZrc1IwRkRia05ETEVWQlFWZGtMRVZCUVU5WkxFdEJRVXRGTEZOQlFWZERMRk5CUVZORExHMUNRVUZ0UW1oQ0xFVkJRVTlaTEV0QlFVdEZMRmRCUVdFc1IwRkRNMFpTTEVWQlFXVlhMR05CUVdkQ0xGTkJRVmRETEV0QlFVdE1MRVZCUVZjc1NVRkJUVU1zUjBGSGJFVXNTVUZCU1Vzc1JVRkJWM3BDTEdOQlFXTk5MRVZCUVU5dlFpeFJRVUZUY0VJc1JVRkJUM0ZDTEV0QlRYQkVMRk5CUVZORExFbEJRMUFzUjBGQlMxb3NSVUZCVEN4RFFVbEJMRWxCUVVsaExFVkJRV3RDTERCQ1FVRXlRbUlzUlVGQlZXWXNZVUZCWVdVc1JVRkJVV01zZVVKQlFUSkNMRXRCUjNaSFF5eEhRVU5HY0VJc1MwRklhMEpITEVkQlFXbERMRk5CUVdwQ1FTeEhRVUUyUXl4VFFVRnFRa0VzUlVGRGRrTkZMRVZCUVZGbExGTkJRUzlDWml4RlFVRlJaMElzWVVGSFVrTXNUMEZCVVdwQ0xFVkJRVkZwUWl4UFFVTm9Ra01zVjBGQldXeENMRVZCUVZGclFpeFhRVU53UW5KQ0xGRkJRVk5uUWl4RlFVTlVka0lzVDBGQlVVRXNSVUZEVWxVc1VVRkJVMEVzUjBGSFdHNUNMRTlCUVU5WExFVkJRVk5ETEVWQlFWRnpRaXhIUVVkNFFtWXNSVUZCVlN4TlFXMUZXaXhIUVRWR1FVRXNSVUZCVVcxQ0xFdEJRVXMzUWl4RlFVRlBPRUlzVDBGQlQwTXNZMEZCWlhSRExGTkJRVk13UWl4RlFVRlZia0lzUlVGQlQyZERMRTlCUVZGb1F5eEZRVUZQYVVNc2JVSkJRVzFDTEVkQlIzUkhka0lzUlVGQlVYZENMRkZCUVZWc1F5eEZRVUZQYTBNc1VVRjVRbkpDTEdOQlFXVjRRaXhGUVVWcVFrRXNSVUZCVVZrc1ZVRkJXVUVzUlVGSGNFSmFMRVZCUVZGNVFpeHRRa0ZCY1VJc1YwRkRkRUo2UWl4SFFVRnJReXhKUVVGMlFrRXNSVUZCVVRCQ0xHRkJVVVFzU1VGQmJrSXhRaXhGUVVGUmFVSXNVVUZCYTBKcVFpeEZRVUZSTWtJc1lVRkJkMFFzU1VGQmVrTXpRaXhGUVVGUk1rSXNXVUZCV1VNc1VVRkJVU3hYUVV0cVJrTXNWMEZCVjJwQ0xFbEJTMlphTEVWQlFWRTRRaXhSUVVGVkxGZEJRMWc1UWl4SlFVbE1VQ3hGUVVGUFRpeFpRVUZaTEd0Q1FVRnRRa2NzUlVGQlVTeGxRVUZuUWxVc1NVRkhPVVJCTEVWQlFWVXNUMEZKV2tFc1JVRkJVU3RDTEZGQlFWVXNWMEZIYUVKMFF5eEZRVUZQVGl4WlFVRlpMR2RDUVVGcFFrY3NSVUZCVVN4TFFVRk5WU3hKUVVkc1JFRXNSVUZCVlN4TlFVbGFRU3hGUVVGUlowTXNWVUZCV1N4WFFVTnNRaXhKUVVGSlF5eEZRVUZ6UWl4alFVRm5Rak5ETEVWQlFVOXJReXhSUVVGVkxHTkJRM1pFYkVNc1JVRkJUekpETEhOQ1FVTlVRU3hGUVVGelFqTkRMRVZCUVU4eVF5eHhRa0ZGTDBKNFF5eEZRVUZQVGl4WlFVTk1PRU1zUlVGRFFUTkRMRVZCUTBGQkxFVkJRVTgwUXl4alFVRm5RalZETEVWQlFVODBReXhoUVVGaFF5eHZRa0ZCYzBJc1dVRkJZeXhsUVVNdlJXNURMRWxCUjBaQkxFVkJRVlVzVFVGTlVuSkNMRTFCUVUxNVJDeDFRa0ZCZDBJc1EwRkZhRU1zU1VGQlNVTXNSMEZCWVM5RExFVkJRVTluUkN4cFFrRkJiVUp3UkN4blFrRkJaMEoxUWl4TFFVRmpia0lzUlVGQlQybEVMR1ZCUXpsRmVrUXNVVUZCVVRCRUxFdEJRVXRzUkN4RlFVRlBhVVFzY1VKQlEzQkNSU3hGUVVWRlNpeEpRVU5HZWtNc1JVRkJaVTRzUlVGQlQyOUVMR2RDUVVGclFrd3NSMEZMZUVNc2NVSkJRWE5DY2tNc1IwRkRlRUp5UWl4TlFVRk5aMFVzVVVGQlVTOURMRVZCUVdkQ0xGTkJRVEJDWjBRc1JVRkJTME1zVVVGRGFFTXNTVUZCYUVKdVJDeEhRVUZ4UkN4cFFrRkJkRUp0UkN4RlFVRkpReXh4UWtGRmNrTnNSQ3hGUVVGbGFVUXNSMEZIZEVJM1F5eEZRVUZSSzBNc2FVSkJRV2xDUml4RlFVRkxSQ3hMUVUwdlFtcEZMRTFCUVUxeFJTeFpRVUZaTVVRc1JVRkJUMmRFTEcxQ1FVTTFRblJETEVWQlFWRnpReXhyUWtGQmIwSm9SQ3hGUVVGUFowUXNhVUpCU1dwRGVFTXNSMEZCYVVNc1UwRkJha0pCTEVsQlEyeENSU3hGUVVGUlJpeGhRVUZsVWl4RlFVRlBVU3hqUVVsVExHMUNRVUU1UWxJc1JVRkJUekpFTEc5Q1FVTm9RbXBFTEVWQlFWRnJSQ3hwUWtGQmFVSXNWMEZCV1RWRUxFVkJRVTh5UkN4dlFrRkpVQ3h0UWtGQk5VSXpSQ3hGUVVGUE5rUXNhMEpCUVcxRGJrUXNSVUZCVVc5RUxGRkJRek5FY0VRc1JVRkJVVzlFTEU5QlFVOUdMR2xDUVVGcFFpeFhRVUZaTlVRc1JVRkJUelpFTEd0Q1FVZHFSRGRFTEVWQlFVOHJSQ3hoUVVWVUwwUXNSVUZCVHl0RUxGbEJRVmxETEZGQlFWRkRMRXRCUVVzc1UwRkJiMEpETEVkQlF6ZERlRVFzU1VGSlRFRXNSVUZCVVhsRUxGRkJRMUpvUlN4RlFVRlBLMFFzUjBGRlVIaEVMRVZCUVZVc1VVRkpWRTRzU1VGRFNFRXNSVUZCWXl4TlFVbG9RazBzUlVGQlVUQkVMRXRCUVV0b1JTSXNJbVpwYkdVaU9pSXZRWEJ3YkdsallYUnBiMjV6TDNCeWIycGxZM1J6TDJOb1pXbHNMM1JoY21kbGRGOWZjR2h2Ym1WRGIyNTBjbUZqZEhOZlh6STBOUzl1YjJSbFgyMXZaSFZzWlhNdllYaHBiM012YkdsaUwyRmtZWEIwWlhKekwzaG9jaTVxY3lKOSIsIlwidXNlIHN0cmljdFwiO3ZhciB1dGlscz1yZXF1aXJlKFwiLi91dGlsc1wiKSxiaW5kPXJlcXVpcmUoXCIuL2hlbHBlcnMvYmluZFwiKSxBeGlvcz1yZXF1aXJlKFwiLi9jb3JlL0F4aW9zXCIpLG1lcmdlQ29uZmlnPXJlcXVpcmUoXCIuL2NvcmUvbWVyZ2VDb25maWdcIiksZGVmYXVsdHM9cmVxdWlyZShcIi4vZGVmYXVsdHNcIik7ZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZSl7dmFyIHI9bmV3IEF4aW9zKGUpLGk9YmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCxyKTtyZXR1cm4gdXRpbHMuZXh0ZW5kKGksQXhpb3MucHJvdG90eXBlLHIpLHV0aWxzLmV4dGVuZChpLHIpLGl9dmFyIGF4aW9zPWNyZWF0ZUluc3RhbmNlKGRlZmF1bHRzKTtheGlvcy5BeGlvcz1BeGlvcyxheGlvcy5jcmVhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGNyZWF0ZUluc3RhbmNlKG1lcmdlQ29uZmlnKGF4aW9zLmRlZmF1bHRzLGUpKX0sYXhpb3MuQ2FuY2VsPXJlcXVpcmUoXCIuL2NhbmNlbC9DYW5jZWxcIiksYXhpb3MuQ2FuY2VsVG9rZW49cmVxdWlyZShcIi4vY2FuY2VsL0NhbmNlbFRva2VuXCIpLGF4aW9zLmlzQ2FuY2VsPXJlcXVpcmUoXCIuL2NhbmNlbC9pc0NhbmNlbFwiKSxheGlvcy5hbGw9ZnVuY3Rpb24oZSl7cmV0dXJuIFByb21pc2UuYWxsKGUpfSxheGlvcy5zcHJlYWQ9cmVxdWlyZShcIi4vaGVscGVycy9zcHJlYWRcIiksYXhpb3MuaXNBeGlvc0Vycm9yPXJlcXVpcmUoXCIuL2hlbHBlcnMvaXNBeGlvc0Vycm9yXCIpLG1vZHVsZS5leHBvcnRzPWF4aW9zLG1vZHVsZS5leHBvcnRzLmRlZmF1bHQ9YXhpb3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUY0YVc5ekxtcHpJbDBzSW01aGJXVnpJanBiSW5WMGFXeHpJaXdpY21WeGRXbHlaU0lzSW1KcGJtUWlMQ0pCZUdsdmN5SXNJbTFsY21kbFEyOXVabWxuSWl3aVpHVm1ZWFZzZEhNaUxDSmpjbVZoZEdWSmJuTjBZVzVqWlNJc0ltUmxabUYxYkhSRGIyNW1hV2NpTENKamIyNTBaWGgwSWl3aWFXNXpkR0Z1WTJVaUxDSndjbTkwYjNSNWNHVWlMQ0p5WlhGMVpYTjBJaXdpWlhoMFpXNWtJaXdpWVhocGIzTWlMQ0pqY21WaGRHVWlMQ0pwYm5OMFlXNWpaVU52Ym1acFp5SXNJa05oYm1ObGJDSXNJa05oYm1ObGJGUnZhMlZ1SWl3aWFYTkRZVzVqWld3aUxDSmhiR3dpTENKd2NtOXRhWE5sY3lJc0lsQnliMjFwYzJVaUxDSnpjSEpsWVdRaUxDSnBjMEY0YVc5elJYSnliM0lpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aVpHVm1ZWFZzZENKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1lVRkZRU3hKUVVGSlFTeE5RVUZSUXl4UlFVRlJMRmRCUTJoQ1F5eExRVUZQUkN4UlFVRlJMR3RDUVVObVJTeE5RVUZSUml4UlFVRlJMR2RDUVVOb1FrY3NXVUZCWTBnc1VVRkJVU3h6UWtGRGRFSkpMRk5CUVZkS0xGRkJRVkVzWTBGUmRrSXNVMEZCVTBzc1pVRkJaVU1zUjBGRGRFSXNTVUZCU1VNc1JVRkJWU3hKUVVGSlRDeE5RVUZOU1N4SFFVTndRa1VzUlVGQlYxQXNTMEZCUzBNc1RVRkJUVThzVlVGQlZVTXNVVUZCVTBnc1IwRlJOME1zVDBGTVFWSXNUVUZCVFZrc1QwRkJUMGdzUlVGQlZVNHNUVUZCVFU4c1ZVRkJWMFlzUjBGSGVFTlNMRTFCUVUxWkxFOUJRVTlJTEVWQlFWVkVMRWRCUldoQ1F5eEZRVWxVTEVsQlFVbEpMRTFCUVZGUUxHVkJRV1ZFTEZWQlJ6TkNVU3hOUVVGTlZpeE5RVUZSUVN4TlFVZGtWU3hOUVVGTlF5eFBRVUZUTEZOQlFXZENReXhIUVVNM1FpeFBRVUZQVkN4bFFVRmxSaXhaUVVGWlV5eE5RVUZOVWl4VFFVRlZWU3hMUVVsd1JFWXNUVUZCVFVjc1QwRkJVMllzVVVGQlVTeHRRa0ZEZGtKWkxFMUJRVTFKTEZsQlFXTm9RaXhSUVVGUkxIZENRVU0xUWxrc1RVRkJUVXNzVTBGQlYycENMRkZCUVZFc2NVSkJSM3BDV1N4TlFVRk5UU3hKUVVGTkxGTkJRV0ZETEVkQlEzWkNMRTlCUVU5RExGRkJRVkZHTEVsQlFVbERMRWxCUlhKQ1VDeE5RVUZOVXl4UFFVRlRja0lzVVVGQlVTeHZRa0ZIZGtKWkxFMUJRVTFWTEdGQlFXVjBRaXhSUVVGUkxEQkNRVVUzUW5WQ0xFOUJRVTlETEZGQlFWVmFMRTFCUjJwQ1Z5eFBRVUZQUXl4UlFVRlJReXhSUVVGVllpSXNJbVpwYkdVaU9pSXZRWEJ3YkdsallYUnBiMjV6TDNCeWIycGxZM1J6TDJOb1pXbHNMM1JoY21kbGRGOWZjR2h2Ym1WRGIyNTBjbUZqZEhOZlh6STBOUzl1YjJSbFgyMXZaSFZzWlhNdllYaHBiM012YkdsaUwyRjRhVzl6TG1wekluMD0iLCJcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBDYW5jZWwoZSl7dGhpcy5tZXNzYWdlPWV9Q2FuY2VsLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiQ2FuY2VsXCIrKHRoaXMubWVzc2FnZT9cIjogXCIrdGhpcy5tZXNzYWdlOlwiXCIpfSxDYW5jZWwucHJvdG90eXBlLl9fQ0FOQ0VMX189ITAsbW9kdWxlLmV4cG9ydHM9Q2FuY2VsO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWtOaGJtTmxiQzVxY3lKZExDSnVZVzFsY3lJNld5SkRZVzVqWld3aUxDSnRaWE56WVdkbElpd2lkR2hwY3lJc0luQnliM1J2ZEhsd1pTSXNJblJ2VTNSeWFXNW5JaXdpWDE5RFFVNURSVXhmWHlJc0ltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxHRkJVVUVzVTBGQlUwRXNUMEZCVDBNc1IwRkRaRU1zUzBGQlMwUXNVVUZCVlVFc1JVRkhha0pFTEU5QlFVOUhMRlZCUVZWRExGTkJRVmNzVjBGRE1VSXNUVUZCVHl4VlFVRlpSaXhMUVVGTFJDeFJRVUZWTEV0QlFVOURMRXRCUVV0RUxGRkJRVlVzUzBGSE1VUkVMRTlCUVU5SExGVkJRVlZGTEZsQlFXRXNSVUZGT1VKRExFOUJRVTlETEZGQlFWVlFJaXdpWm1sc1pTSTZJaTlCY0hCc2FXTmhkR2x2Ym5NdmNISnZhbVZqZEhNdlkyaGxhV3d2ZEdGeVoyVjBYMTl3YUc5dVpVTnZiblJ5WVdOMGMxOWZNalExTDI1dlpHVmZiVzlrZFd4bGN5OWhlR2x2Y3k5c2FXSXZZMkZ1WTJWc0wwTmhibU5sYkM1cWN5SjkiLCJcInVzZSBzdHJpY3RcIjt2YXIgQ2FuY2VsPXJlcXVpcmUoXCIuL0NhbmNlbFwiKTtmdW5jdGlvbiBDYW5jZWxUb2tlbihlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoXCJleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uXCIpO3ZhciBuO3RoaXMucHJvbWlzZT1uZXcgUHJvbWlzZShmdW5jdGlvbihlKXtuPWV9KTt2YXIgbz10aGlzO2UoZnVuY3Rpb24oZSl7by5yZWFzb258fChvLnJlYXNvbj1uZXcgQ2FuY2VsKGUpLG4oby5yZWFzb24pKX0pfUNhbmNlbFRva2VuLnByb3RvdHlwZS50aHJvd0lmUmVxdWVzdGVkPWZ1bmN0aW9uKCl7aWYodGhpcy5yZWFzb24pdGhyb3cgdGhpcy5yZWFzb259LENhbmNlbFRva2VuLnNvdXJjZT1mdW5jdGlvbigpe3ZhciBlO3JldHVybnt0b2tlbjpuZXcgQ2FuY2VsVG9rZW4oZnVuY3Rpb24obil7ZT1ufSksY2FuY2VsOmV9fSxtb2R1bGUuZXhwb3J0cz1DYW5jZWxUb2tlbjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklrTmhibU5sYkZSdmEyVnVMbXB6SWwwc0ltNWhiV1Z6SWpwYklrTmhibU5sYkNJc0luSmxjWFZwY21VaUxDSkRZVzVqWld4VWIydGxiaUlzSW1WNFpXTjFkRzl5SWl3aVZIbHdaVVZ5Y205eUlpd2ljbVZ6YjJ4MlpWQnliMjFwYzJVaUxDSjBhR2x6SWl3aWNISnZiV2x6WlNJc0lsQnliMjFwYzJVaUxDSnlaWE52YkhabElpd2lkRzlyWlc0aUxDSnRaWE56WVdkbElpd2ljbVZoYzI5dUlpd2ljSEp2ZEc5MGVYQmxJaXdpZEdoeWIzZEpabEpsY1hWbGMzUmxaQ0lzSW5OdmRYSmpaU0lzSW1OaGJtTmxiQ0lzSW1NaUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25SeklsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeGhRVVZCTEVsQlFVbEJMRTlCUVZORExGRkJRVkVzV1VGUmNrSXNVMEZCVTBNc1dVRkJXVU1zUjBGRGJrSXNSMEZCZDBJc2JVSkJRV0pCTEVWQlExUXNUVUZCVFN4SlFVRkpReXhWUVVGVkxHZERRVWQwUWl4SlFVRkpReXhGUVVOS1F5eExRVUZMUXl4UlFVRlZMRWxCUVVsRExGRkJRVkVzVTBGQmVVSkRMRWRCUTJ4RVNpeEZRVUZwUWtrc1NVRkhia0lzU1VGQlNVTXNSVUZCVVVvc1MwRkRXa2dzUlVGQlV5eFRRVUZuUWxFc1IwRkRia0pFTEVWQlFVMUZMRk5CUzFaR0xFVkJRVTFGTEU5QlFWTXNTVUZCU1Zvc1QwRkJUMWNzUjBGRE1VSk9MRVZCUVdWTExFVkJRVTFGTEZkQlQzcENWaXhaUVVGWlZ5eFZRVUZWUXl4cFFrRkJiVUlzVjBGRGRrTXNSMEZCU1ZJc1MwRkJTMDBzVDBGRFVDeE5RVUZOVGl4TFFVRkxUU3hSUVZGbVZpeFpRVUZaWVN4UFFVRlRMRmRCUTI1Q0xFbEJRVWxETEVWQlNVb3NUMEZEUlU0c1RVRktWU3hKUVVGSlVpeFpRVUZaTEZOQlFXdENaU3hIUVVNMVEwUXNSVUZCVTBNc1NVRkpWRVFzVDBGQlVVRXNTVUZKV2tVc1QwRkJUME1zVVVGQlZXcENJaXdpWm1sc1pTSTZJaTlCY0hCc2FXTmhkR2x2Ym5NdmNISnZhbVZqZEhNdlkyaGxhV3d2ZEdGeVoyVjBYMTl3YUc5dVpVTnZiblJ5WVdOMGMxOWZNalExTDI1dlpHVmZiVzlrZFd4bGN5OWhlR2x2Y3k5c2FXSXZZMkZ1WTJWc0wwTmhibU5sYkZSdmEyVnVMbXB6SW4wPSIsIlwidXNlIHN0cmljdFwiO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiEoIXR8fCF0Ll9fQ0FOQ0VMX18pfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltbHpRMkZ1WTJWc0xtcHpJbDBzSW01aGJXVnpJanBiSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKMllXeDFaU0lzSWw5ZlEwRk9RMFZNWDE4aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxHRkJSVUZCTEU5QlFVOURMRkZCUVZVc1UwRkJhMEpETEVkQlEycERMRk5CUVZWQkxFbEJRVk5CTEVWQlFVMURJaXdpWm1sc1pTSTZJaTlCY0hCc2FXTmhkR2x2Ym5NdmNISnZhbVZqZEhNdlkyaGxhV3d2ZEdGeVoyVjBYMTl3YUc5dVpVTnZiblJ5WVdOMGMxOWZNalExTDI1dlpHVmZiVzlrZFd4bGN5OWhlR2x2Y3k5c2FXSXZZMkZ1WTJWc0wybHpRMkZ1WTJWc0xtcHpJbjA9IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIHV0aWxzPXJlcXVpcmUoXCIuLy4uL3V0aWxzXCIpLGJ1aWxkVVJMPXJlcXVpcmUoXCIuLi9oZWxwZXJzL2J1aWxkVVJMXCIpLEludGVyY2VwdG9yTWFuYWdlcj1yZXF1aXJlKFwiLi9JbnRlcmNlcHRvck1hbmFnZXJcIiksZGlzcGF0Y2hSZXF1ZXN0PXJlcXVpcmUoXCIuL2Rpc3BhdGNoUmVxdWVzdFwiKSxtZXJnZUNvbmZpZz1yZXF1aXJlKFwiLi9tZXJnZUNvbmZpZ1wiKSx2YWxpZGF0b3I9cmVxdWlyZShcIi4uL2hlbHBlcnMvdmFsaWRhdG9yXCIpLHZhbGlkYXRvcnM9dmFsaWRhdG9yLnZhbGlkYXRvcnM7ZnVuY3Rpb24gQXhpb3ModCl7dGhpcy5kZWZhdWx0cz10LHRoaXMuaW50ZXJjZXB0b3JzPXtyZXF1ZXN0Om5ldyBJbnRlcmNlcHRvck1hbmFnZXIscmVzcG9uc2U6bmV3IEludGVyY2VwdG9yTWFuYWdlcn19QXhpb3MucHJvdG90eXBlLnJlcXVlc3Q9ZnVuY3Rpb24odCl7XCJzdHJpbmdcIj09dHlwZW9mIHQ/KHQ9YXJndW1lbnRzWzFdfHx7fSkudXJsPWFyZ3VtZW50c1swXTp0PXR8fHt9LCh0PW1lcmdlQ29uZmlnKHRoaXMuZGVmYXVsdHMsdCkpLm1ldGhvZD90Lm1ldGhvZD10Lm1ldGhvZC50b0xvd2VyQ2FzZSgpOnRoaXMuZGVmYXVsdHMubWV0aG9kP3QubWV0aG9kPXRoaXMuZGVmYXVsdHMubWV0aG9kLnRvTG93ZXJDYXNlKCk6dC5tZXRob2Q9XCJnZXRcIjt2YXIgZT10LnRyYW5zaXRpb25hbDt2b2lkIDAhPT1lJiZ2YWxpZGF0b3IuYXNzZXJ0T3B0aW9ucyhlLHtzaWxlbnRKU09OUGFyc2luZzp2YWxpZGF0b3JzLnRyYW5zaXRpb25hbCh2YWxpZGF0b3JzLmJvb2xlYW4sXCIxLjAuMFwiKSxmb3JjZWRKU09OUGFyc2luZzp2YWxpZGF0b3JzLnRyYW5zaXRpb25hbCh2YWxpZGF0b3JzLmJvb2xlYW4sXCIxLjAuMFwiKSxjbGFyaWZ5VGltZW91dEVycm9yOnZhbGlkYXRvcnMudHJhbnNpdGlvbmFsKHZhbGlkYXRvcnMuYm9vbGVhbixcIjEuMC4wXCIpfSwhMSk7dmFyIHI9W10sbz0hMDt0aGlzLmludGVyY2VwdG9ycy5yZXF1ZXN0LmZvckVhY2goZnVuY3Rpb24oZSl7XCJmdW5jdGlvblwiPT10eXBlb2YgZS5ydW5XaGVuJiYhMT09PWUucnVuV2hlbih0KXx8KG89byYmZS5zeW5jaHJvbm91cyxyLnVuc2hpZnQoZS5mdWxmaWxsZWQsZS5yZWplY3RlZCkpfSk7dmFyIGksYT1bXTtpZih0aGlzLmludGVyY2VwdG9ycy5yZXNwb25zZS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2EucHVzaCh0LmZ1bGZpbGxlZCx0LnJlamVjdGVkKX0pLCFvKXt2YXIgcz1bZGlzcGF0Y2hSZXF1ZXN0LHZvaWQgMF07Zm9yKEFycmF5LnByb3RvdHlwZS51bnNoaWZ0LmFwcGx5KHMscikscz1zLmNvbmNhdChhKSxpPVByb21pc2UucmVzb2x2ZSh0KTtzLmxlbmd0aDspaT1pLnRoZW4ocy5zaGlmdCgpLHMuc2hpZnQoKSk7cmV0dXJuIGl9Zm9yKHZhciBuPXQ7ci5sZW5ndGg7KXt2YXIgdT1yLnNoaWZ0KCksbD1yLnNoaWZ0KCk7dHJ5e249dShuKX1jYXRjaCh0KXtsKHQpO2JyZWFrfX10cnl7aT1kaXNwYXRjaFJlcXVlc3Qobil9Y2F0Y2godCl7cmV0dXJuIFByb21pc2UucmVqZWN0KHQpfWZvcig7YS5sZW5ndGg7KWk9aS50aGVuKGEuc2hpZnQoKSxhLnNoaWZ0KCkpO3JldHVybiBpfSxBeGlvcy5wcm90b3R5cGUuZ2V0VXJpPWZ1bmN0aW9uKHQpe3JldHVybiB0PW1lcmdlQ29uZmlnKHRoaXMuZGVmYXVsdHMsdCksYnVpbGRVUkwodC51cmwsdC5wYXJhbXMsdC5wYXJhbXNTZXJpYWxpemVyKS5yZXBsYWNlKC9eXFw/LyxcIlwiKX0sdXRpbHMuZm9yRWFjaChbXCJkZWxldGVcIixcImdldFwiLFwiaGVhZFwiLFwib3B0aW9uc1wiXSxmdW5jdGlvbih0KXtBeGlvcy5wcm90b3R5cGVbdF09ZnVuY3Rpb24oZSxyKXtyZXR1cm4gdGhpcy5yZXF1ZXN0KG1lcmdlQ29uZmlnKHJ8fHt9LHttZXRob2Q6dCx1cmw6ZSxkYXRhOihyfHx7fSkuZGF0YX0pKX19KSx1dGlscy5mb3JFYWNoKFtcInBvc3RcIixcInB1dFwiLFwicGF0Y2hcIl0sZnVuY3Rpb24odCl7QXhpb3MucHJvdG90eXBlW3RdPWZ1bmN0aW9uKGUscixvKXtyZXR1cm4gdGhpcy5yZXF1ZXN0KG1lcmdlQ29uZmlnKG98fHt9LHttZXRob2Q6dCx1cmw6ZSxkYXRhOnJ9KSl9fSksbW9kdWxlLmV4cG9ydHM9QXhpb3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJa0Y0YVc5ekxtcHpJbDBzSW01aGJXVnpJanBiSW5WMGFXeHpJaXdpY21WeGRXbHlaU0lzSW1KMWFXeGtWVkpNSWl3aVNXNTBaWEpqWlhCMGIzSk5ZVzVoWjJWeUlpd2laR2x6Y0dGMFkyaFNaWEYxWlhOMElpd2liV1Z5WjJWRGIyNW1hV2NpTENKMllXeHBaR0YwYjNJaUxDSjJZV3hwWkdGMGIzSnpJaXdpUVhocGIzTWlMQ0pwYm5OMFlXNWpaVU52Ym1acFp5SXNJblJvYVhNaUxDSmtaV1poZFd4MGN5SXNJbWx1ZEdWeVkyVndkRzl5Y3lJc0luSmxjWFZsYzNRaUxDSnlaWE53YjI1elpTSXNJbkJ5YjNSdmRIbHdaU0lzSW1OdmJtWnBaeUlzSW1GeVozVnRaVzUwY3lJc0luVnliQ0lzSW0xbGRHaHZaQ0lzSW5SdlRHOTNaWEpEWVhObElpd2lkSEpoYm5OcGRHbHZibUZzSWl3aWRXNWtaV1pwYm1Wa0lpd2lZWE56WlhKMFQzQjBhVzl1Y3lJc0luTnBiR1Z1ZEVwVFQwNVFZWEp6YVc1bklpd2lZbTl2YkdWaGJpSXNJbVp2Y21ObFpFcFRUMDVRWVhKemFXNW5JaXdpWTJ4aGNtbG1lVlJwYldWdmRYUkZjbkp2Y2lJc0luSmxjWFZsYzNSSmJuUmxjbU5sY0hSdmNrTm9ZV2x1SWl3aWMzbHVZMmh5YjI1dmRYTlNaWEYxWlhOMFNXNTBaWEpqWlhCMGIzSnpJaXdpWm05eVJXRmphQ0lzSW1sdWRHVnlZMlZ3ZEc5eUlpd2ljblZ1VjJobGJpSXNJbk41Ym1Ob2NtOXViM1Z6SWl3aWRXNXphR2xtZENJc0ltWjFiR1pwYkd4bFpDSXNJbkpsYW1WamRHVmtJaXdpY0hKdmJXbHpaU0lzSW5KbGMzQnZibk5sU1c1MFpYSmpaWEIwYjNKRGFHRnBiaUlzSW5CMWMyZ2lMQ0pqYUdGcGJpSXNJa0Z5Y21GNUlpd2lZWEJ3YkhraUxDSmpiMjVqWVhRaUxDSlFjbTl0YVhObElpd2ljbVZ6YjJ4MlpTSXNJbXhsYm1kMGFDSXNJblJvWlc0aUxDSnphR2xtZENJc0ltNWxkME52Ym1acFp5SXNJbTl1Um5Wc1ptbHNiR1ZrSWl3aWIyNVNaV3BsWTNSbFpDSXNJbVZ5Y205eUlpd2ljbVZxWldOMElpd2laMlYwVlhKcElpd2ljR0Z5WVcxeklpd2ljR0Z5WVcxelUyVnlhV0ZzYVhwbGNpSXNJbkpsY0d4aFkyVWlMQ0prWVhSaElpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNZVUZGUVN4SlFVRkpRU3hOUVVGUlF5eFJRVUZSTEdOQlEyaENReXhUUVVGWFJDeFJRVUZSTEhWQ1FVTnVRa1VzYlVKQlFYRkNSaXhSUVVGUkxIZENRVU0zUWtjc1owSkJRV3RDU0N4UlFVRlJMSEZDUVVNeFFra3NXVUZCWTBvc1VVRkJVU3hwUWtGRGRFSkxMRlZCUVZsTUxGRkJRVkVzZDBKQlJYQkNUU3hYUVVGaFJDeFZRVUZWUXl4WFFVMHpRaXhUUVVGVFF5eE5RVUZOUXl4SFFVTmlReXhMUVVGTFF5eFRRVUZYUml4RlFVTm9Ra01zUzBGQlMwVXNZMEZEU0VNc1VVRkJVeXhKUVVGSlZpeHRRa0ZEWWxjc1UwRkJWU3hKUVVGSldDeHZRa0ZUYkVKTExFMUJRVTFQTEZWQlFWVkdMRkZCUVZVc1UwRkJhVUpITEVkQlIyNUNMR2xDUVVGWVFTeEhRVU5VUVN4RlFVRlRReXhWUVVGVkxGRkJRMXBETEVsQlFVMUVMRlZCUVZVc1IwRkZka0pFTEVWQlFWTkJMRTlCUjFoQkxFVkJRVk5ZTEZsQlFWbExMRXRCUVV0RExGTkJRVlZMTEVsQlIzcENSeXhQUVVOVVNDeEZRVUZQUnl4UFFVRlRTQ3hGUVVGUFJ5eFBRVUZQUXl4alFVTnlRbFlzUzBGQlMwTXNVMEZCVTFFc1QwRkRka0pJTEVWQlFVOUhMRTlCUVZOVUxFdEJRVXRETEZOQlFWTlJMRTlCUVU5RExHTkJSWEpEU2l4RlFVRlBSeXhQUVVGVExFMUJSMnhDTEVsQlFVbEZMRVZCUVdWTUxFVkJRVTlMTEd0Q1FVVk1ReXhKUVVGcVFrUXNSMEZEUm1Zc1ZVRkJWV2xDTEdOQlFXTkdMRWRCUTNSQ1J5eHJRa0ZCYlVKcVFpeFhRVUZYWXl4aFFVRmhaQ3hYUVVGWGEwSXNVVUZCVXl4VFFVTXZSRU1zYTBKQlFXMUNia0lzVjBGQlYyTXNZVUZCWVdRc1YwRkJWMnRDTEZGQlFWTXNVMEZETDBSRkxHOUNRVUZ4UW5CQ0xGZEJRVmRqTEdGQlFXRmtMRmRCUVZkclFpeFJRVUZUTEZkQlEyaEZMRWRCU1V3c1NVRkJTVWNzUzBGRFFVTXNSMEZCYVVNc1JVRkRja051UWl4TFFVRkxSU3hoUVVGaFF5eFJRVUZSYVVJc1VVRkJVU3hUUVVGdlEwTXNSMEZEYWtNc2JVSkJRWGhDUVN4RlFVRlpReXhWUVVFd1JDeEpRVUZvUTBRc1JVRkJXVU1zVVVGQlVXaENMRXRCU1hKRllTeEZRVUZwUTBFc1IwRkJhME5GTEVWQlFWbEZMRmxCUlM5RlRDeEZRVUYzUWswc1VVRkJVVWdzUlVGQldVa3NWVUZCVjBvc1JVRkJXVXNzWVVGSGNrVXNTVUZMU1VNc1JVRk1RVU1zUzBGUFNpeEhRVTVCTlVJc1MwRkJTMFVzWVVGQllVVXNVMEZCVTJkQ0xGRkJRVkVzVTBGQmEwTkRMRWRCUTI1RlR5eEZRVUY1UWtNc1MwRkJTMUlzUlVGQldVa3NWVUZCVjBvc1JVRkJXVXNzWVVGTE9VUlFMRVZCUVdkRExFTkJRMjVETEVsQlFVbFhMRWRCUVZOd1F5eHhRa0ZCYVVKclFpeEhRVTA1UWl4SlFVcEJiVUlzVFVGQlRURkNMRlZCUVZWdFFpeFJRVUZSVVN4TlFVRk5SaXhGUVVGUFdpeEhRVU55UTFrc1JVRkJVVUVzUlVGQlRVY3NUMEZCVDB3c1IwRkZja0pFTEVWQlFWVlBMRkZCUVZGRExGRkJRVkUzUWl4SFFVTnVRbmRDTEVWQlFVMU5MRkZCUTFoVUxFVkJRVlZCTEVWQlFWRlZMRXRCUVV0UUxFVkJRVTFSTEZGQlFWTlNMRVZCUVUxUkxGTkJSemxETEU5QlFVOVlMRVZCUzFRc1NVRkVRU3hKUVVGSldTeEZRVUZaYWtNc1JVRkRWRmtzUlVGQmQwSnJRaXhSUVVGUkxFTkJRM0pETEVsQlFVbEpMRVZCUVdOMFFpeEZRVUYzUW05Q0xGRkJRM1JEUnl4RlFVRmhka0lzUlVGQmQwSnZRaXhSUVVONlF5eEpRVU5GUXl4RlFVRlpReXhGUVVGWlJDeEhRVU40UWl4TlFVRlBSeXhIUVVOUVJDeEZRVUZYUXl4SFFVTllMRTlCU1Vvc1NVRkRSV1lzUlVGQlZXcERMR2RDUVVGblFqWkRMRWRCUXpGQ0xFMUJRVTlITEVkQlExQXNUMEZCVDFJc1VVRkJVVk1zVDBGQlQwUXNSMEZIZUVJc1MwRkJUMlFzUlVGQmVVSlJMRkZCUXpsQ1ZDeEZRVUZWUVN4RlFVRlJWU3hMUVVGTFZDeEZRVUY1UWxVc1VVRkJVMVlzUlVGQmVVSlZMRk5CUjNCR0xFOUJRVTlZTEVkQlIxUTNRaXhOUVVGTlR5eFZRVUZWZFVNc1QwRkJVeXhUUVVGblFuUkRMRWRCUlhaRExFOUJSRUZCTEVWQlFWTllMRmxCUVZsTExFdEJRVXRETEZOQlFWVkxMRWRCUXpkQ1pDeFRRVUZUWXl4RlFVRlBSU3hKUVVGTFJpeEZRVUZQZFVNc1QwRkJVWFpETEVWQlFVOTNReXhyUWtGQmEwSkRMRkZCUVZFc1RVRkJUeXhMUVVseVJucEVMRTFCUVUwNFFpeFRRVUZUTEZOQlFWVXNUVUZCVHl4UFFVRlJMRmRCUVZrc1UwRkJOa0pZTEVkQlJTOUZXQ3hOUVVGTlR5eFZRVUZWU1N4SFFVRlZMRk5CUVZORUxFVkJRVXRHTEVkQlEzUkRMRTlCUVU5T0xFdEJRVXRITEZGQlFWRlNMRmxCUVZsWExFOUJRemxDUnl4UFFVRlJRU3hGUVVOU1JDeEpRVUZMUVN4RlFVTk1kME1zVFVGQlR6RkRMRTlCUVdNd1F5eFhRVXN6UWpGRUxFMUJRVTA0UWl4VFFVRlRMRTlCUVZFc1RVRkJUeXhUUVVGVkxGTkJRU3RDV0N4SFFVVnlSVmdzVFVGQlRVOHNWVUZCVlVrc1IwRkJWU3hUUVVGVFJDeEZRVUZMZDBNc1JVRkJUVEZETEVkQlF6VkRMRTlCUVU5T0xFdEJRVXRITEZGQlFWRlNMRmxCUVZsWExFOUJRemxDUnl4UFFVRlJRU3hGUVVOU1JDeEpRVUZMUVN4RlFVTk1kME1zUzBGQlRVRXNVVUZMV2tNc1QwRkJUME1zVVVGQlZYQkVJaXdpWm1sc1pTSTZJaTlCY0hCc2FXTmhkR2x2Ym5NdmNISnZhbVZqZEhNdlkyaGxhV3d2ZEdGeVoyVjBYMTl3YUc5dVpVTnZiblJ5WVdOMGMxOWZNalExTDI1dlpHVmZiVzlrZFd4bGN5OWhlR2x2Y3k5c2FXSXZZMjl5WlM5QmVHbHZjeTVxY3lKOSIsIlwidXNlIHN0cmljdFwiO3ZhciB1dGlscz1yZXF1aXJlKFwiLi8uLi91dGlsc1wiKTtmdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKXt0aGlzLmhhbmRsZXJzPVtdfUludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlPWZ1bmN0aW9uKGUsbixyKXtyZXR1cm4gdGhpcy5oYW5kbGVycy5wdXNoKHtmdWxmaWxsZWQ6ZSxyZWplY3RlZDpuLHN5bmNocm9ub3VzOiEhciYmci5zeW5jaHJvbm91cyxydW5XaGVuOnI/ci5ydW5XaGVuOm51bGx9KSx0aGlzLmhhbmRsZXJzLmxlbmd0aC0xfSxJbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmVqZWN0PWZ1bmN0aW9uKGUpe3RoaXMuaGFuZGxlcnNbZV0mJih0aGlzLmhhbmRsZXJzW2VdPW51bGwpfSxJbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2g9ZnVuY3Rpb24oZSl7dXRpbHMuZm9yRWFjaCh0aGlzLmhhbmRsZXJzLGZ1bmN0aW9uKG4pe251bGwhPT1uJiZlKG4pfSl9LG1vZHVsZS5leHBvcnRzPUludGVyY2VwdG9yTWFuYWdlcjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklrbHVkR1Z5WTJWd2RHOXlUV0Z1WVdkbGNpNXFjeUpkTENKdVlXMWxjeUk2V3lKMWRHbHNjeUlzSW5KbGNYVnBjbVVpTENKSmJuUmxjbU5sY0hSdmNrMWhibUZuWlhJaUxDSjBhR2x6SWl3aWFHRnVaR3hsY25NaUxDSndjbTkwYjNSNWNHVWlMQ0oxYzJVaUxDSm1kV3htYVd4c1pXUWlMQ0p5WldwbFkzUmxaQ0lzSW05d2RHbHZibk1pTENKd2RYTm9JaXdpYzNsdVkyaHliMjV2ZFhNaUxDSnlkVzVYYUdWdUlpd2liR1Z1WjNSb0lpd2laV3BsWTNRaUxDSnBaQ0lzSW1admNrVmhZMmdpTENKbWJpSXNJbWdpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4aFFVVkJMRWxCUVVsQkxFMUJRVkZETEZGQlFWRXNZMEZGY0VJc1UwRkJVME1zY1VKQlExQkRMRXRCUVV0RExGbEJWMUJHTEcxQ1FVRnRRa2NzVlVGQlZVTXNTVUZCVFN4VFFVRmhReXhGUVVGWFF5eEZRVUZWUXl4SFFVOXVSU3hQUVU1QlRpeExRVUZMUXl4VFFVRlRUU3hOUVVOYVNDeFZRVUZYUVN4RlFVTllReXhUUVVGVlFTeEZRVU5XUnl4alFVRmhSaXhIUVVGVlFTeEZRVUZSUlN4WlFVTXZRa01zVVVGQlUwZ3NSVUZCVlVFc1JVRkJVVWNzVVVGQlZTeFBRVVZvUTFRc1MwRkJTME1zVTBGQlUxTXNUMEZCVXl4SFFWRm9RMWdzYlVKQlFXMUNSeXhWUVVGVlV5eE5RVUZSTEZOQlFXVkRMRWRCUXpsRFdpeExRVUZMUXl4VFFVRlRWeXhMUVVOb1Fsb3NTMEZCUzBNc1UwRkJVMWNzUjBGQlRTeFBRVmw0UW1Jc2JVSkJRVzFDUnl4VlFVRlZWeXhSUVVGVkxGTkJRV2xDUXl4SFFVTjBSR3BDTEUxQlFVMW5RaXhSUVVGUllpeExRVUZMUXl4VFFVRlZMRk5CUVhkQ1l5eEhRVU42UXl4UFFVRk9RU3hIUVVOR1JDeEZRVUZIUXl4TlFVdFVReXhQUVVGUFF5eFJRVUZWYkVJaUxDSm1hV3hsSWpvaUwwRndjR3hwWTJGMGFXOXVjeTl3Y205cVpXTjBjeTlqYUdWcGJDOTBZWEpuWlhSZlgzQm9iMjVsUTI5dWRISmhZM1J6WDE4eU5EVXZibTlrWlY5dGIyUjFiR1Z6TDJGNGFXOXpMMnhwWWk5amIzSmxMMGx1ZEdWeVkyVndkRzl5VFdGdVlXZGxjaTVxY3lKOSIsIlwidXNlIHN0cmljdFwiO3ZhciBpc0Fic29sdXRlVVJMPXJlcXVpcmUoXCIuLi9oZWxwZXJzL2lzQWJzb2x1dGVVUkxcIiksY29tYmluZVVSTHM9cmVxdWlyZShcIi4uL2hlbHBlcnMvY29tYmluZVVSTHNcIik7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oZSxzKXtyZXR1cm4gZSYmIWlzQWJzb2x1dGVVUkwocyk/Y29tYmluZVVSTHMoZSxzKTpzfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltSjFhV3hrUm5Wc2JGQmhkR2d1YW5NaVhTd2libUZ0WlhNaU9sc2lhWE5CWW5OdmJIVjBaVlZTVENJc0luSmxjWFZwY21VaUxDSmpiMjFpYVc1bFZWSk1jeUlzSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKaVlYTmxWVkpNSWl3aWNtVnhkV1Z6ZEdWa1ZWSk1JbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hoUVVWQkxFbEJRVWxCTEdOQlFXZENReXhSUVVGUkxEUkNRVU40UWtNc1dVRkJZMFFzVVVGQlVTd3dRa0ZYTVVKRkxFOUJRVTlETEZGQlFWVXNVMEZCZFVKRExFVkJRVk5ETEVkQlF5OURMRTlCUVVsRUxFbEJRVmxNTEdOQlFXTk5MRWRCUTNKQ1NpeFpRVUZaUnl4RlFVRlRReXhIUVVWMlFrRWlMQ0ptYVd4bElqb2lMMEZ3Y0d4cFkyRjBhVzl1Y3k5d2NtOXFaV04wY3k5amFHVnBiQzkwWVhKblpYUmZYM0JvYjI1bFEyOXVkSEpoWTNSelgxOHlORFV2Ym05a1pWOXRiMlIxYkdWekwyRjRhVzl6TDJ4cFlpOWpiM0psTDJKMWFXeGtSblZzYkZCaGRHZ3Vhbk1pZlE9PSIsIlwidXNlIHN0cmljdFwiO3ZhciBlbmhhbmNlRXJyb3I9cmVxdWlyZShcIi4vZW5oYW5jZUVycm9yXCIpO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHIsZSxuLG8sYSl7dmFyIGM9bmV3IEVycm9yKHIpO3JldHVybiBlbmhhbmNlRXJyb3IoYyxlLG4sbyxhKX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbU55WldGMFpVVnljbTl5TG1weklsMHNJbTVoYldWeklqcGJJbVZ1YUdGdVkyVkZjbkp2Y2lJc0luSmxjWFZwY21VaUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2liV1Z6YzJGblpTSXNJbU52Ym1acFp5SXNJbU52WkdVaUxDSnlaWEYxWlhOMElpd2ljbVZ6Y0c5dWMyVWlMQ0psY25KdmNpSXNJa1Z5Y205eUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeGhRVVZCTEVsQlFVbEJMR0ZCUVdWRExGRkJRVkVzYTBKQldUTkNReXhQUVVGUFF5eFJRVUZWTEZOQlFYRkNReXhGUVVGVFF5eEZRVUZSUXl4RlFVRk5ReXhGUVVGVFF5eEhRVU53UlN4SlFVRkpReXhGUVVGUkxFbEJRVWxETEUxQlFVMU9MRWRCUTNSQ0xFOUJRVTlLTEdGQlFXRlRMRVZCUVU5S0xFVkJRVkZETEVWQlFVMURMRVZCUVZORElpd2labWxzWlNJNklpOUJjSEJzYVdOaGRHbHZibk12Y0hKdmFtVmpkSE12WTJobGFXd3ZkR0Z5WjJWMFgxOXdhRzl1WlVOdmJuUnlZV04wYzE5Zk1qUTFMMjV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdlkyOXlaUzlqY21WaGRHVkZjbkp2Y2k1cWN5SjkiLCJcInVzZSBzdHJpY3RcIjt2YXIgdXRpbHM9cmVxdWlyZShcIi4vLi4vdXRpbHNcIiksdHJhbnNmb3JtRGF0YT1yZXF1aXJlKFwiLi90cmFuc2Zvcm1EYXRhXCIpLGlzQ2FuY2VsPXJlcXVpcmUoXCIuLi9jYW5jZWwvaXNDYW5jZWxcIiksZGVmYXVsdHM9cmVxdWlyZShcIi4uL2RlZmF1bHRzXCIpO2Z1bmN0aW9uIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoZSl7ZS5jYW5jZWxUb2tlbiYmZS5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCl9bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoZSksZS5oZWFkZXJzPWUuaGVhZGVyc3x8e30sZS5kYXRhPXRyYW5zZm9ybURhdGEuY2FsbChlLGUuZGF0YSxlLmhlYWRlcnMsZS50cmFuc2Zvcm1SZXF1ZXN0KSxlLmhlYWRlcnM9dXRpbHMubWVyZ2UoZS5oZWFkZXJzLmNvbW1vbnx8e30sZS5oZWFkZXJzW2UubWV0aG9kXXx8e30sZS5oZWFkZXJzKSx1dGlscy5mb3JFYWNoKFtcImRlbGV0ZVwiLFwiZ2V0XCIsXCJoZWFkXCIsXCJwb3N0XCIsXCJwdXRcIixcInBhdGNoXCIsXCJjb21tb25cIl0sZnVuY3Rpb24oYSl7ZGVsZXRlIGUuaGVhZGVyc1thXX0pLChlLmFkYXB0ZXJ8fGRlZmF1bHRzLmFkYXB0ZXIpKGUpLnRoZW4oZnVuY3Rpb24oYSl7cmV0dXJuIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoZSksYS5kYXRhPXRyYW5zZm9ybURhdGEuY2FsbChlLGEuZGF0YSxhLmhlYWRlcnMsZS50cmFuc2Zvcm1SZXNwb25zZSksYX0sZnVuY3Rpb24oYSl7cmV0dXJuIGlzQ2FuY2VsKGEpfHwodGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChlKSxhJiZhLnJlc3BvbnNlJiYoYS5yZXNwb25zZS5kYXRhPXRyYW5zZm9ybURhdGEuY2FsbChlLGEucmVzcG9uc2UuZGF0YSxhLnJlc3BvbnNlLmhlYWRlcnMsZS50cmFuc2Zvcm1SZXNwb25zZSkpKSxQcm9taXNlLnJlamVjdChhKX0pfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltUnBjM0JoZEdOb1VtVnhkV1Z6ZEM1cWN5SmRMQ0p1WVcxbGN5STZXeUoxZEdsc2N5SXNJbkpsY1hWcGNtVWlMQ0owY21GdWMyWnZjbTFFWVhSaElpd2lhWE5EWVc1alpXd2lMQ0prWldaaGRXeDBjeUlzSW5Sb2NtOTNTV1pEWVc1alpXeHNZWFJwYjI1U1pYRjFaWE4wWldRaUxDSmpiMjVtYVdjaUxDSmpZVzVqWld4VWIydGxiaUlzSW5Sb2NtOTNTV1pTWlhGMVpYTjBaV1FpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aWFHVmhaR1Z5Y3lJc0ltUmhkR0VpTENKallXeHNJaXdpZEhKaGJuTm1iM0p0VW1WeGRXVnpkQ0lzSW0xbGNtZGxJaXdpWTI5dGJXOXVJaXdpYldWMGFHOWtJaXdpWm05eVJXRmphQ0lzSW1Ga1lYQjBaWElpTENKMGFHVnVJaXdpY21WemNHOXVjMlVpTENKMGNtRnVjMlp2Y20xU1pYTndiMjV6WlNJc0luSmxZWE52YmlJc0lsQnliMjFwYzJVaUxDSnlaV3BsWTNRaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxHRkJSVUVzU1VGQlNVRXNUVUZCVVVNc1VVRkJVU3hqUVVOb1FrTXNZMEZCWjBKRUxGRkJRVkVzYlVKQlEzaENSU3hUUVVGWFJpeFJRVUZSTEhOQ1FVTnVRa2NzVTBGQlYwZ3NVVUZCVVN4bFFVdDJRaXhUUVVGVFNTdzJRa0ZCTmtKRExFZEJRMmhEUVN4RlFVRlBReXhoUVVOVVJDeEZRVUZQUXl4WlFVRlpReXh0UWtGVmRrSkRMRTlCUVU5RExGRkJRVlVzVTBGQmVVSktMRWRCT0VKNFF5eFBRVGRDUVVRc05rSkJRVFpDUXl4SFFVYzNRa0VzUlVGQlQwc3NVVUZCVlV3c1JVRkJUMHNzV1VGSGVFSk1MRVZCUVU5TkxFdEJRVTlXTEdOQlFXTlhMRXRCUXpGQ1VDeEZRVU5CUVN4RlFVRlBUU3hMUVVOUVRpeEZRVUZQU3l4UlFVTlFUQ3hGUVVGUFVTeHJRa0ZKVkZJc1JVRkJUMHNzVVVGQlZWZ3NUVUZCVFdVc1RVRkRja0pVTEVWQlFVOUxMRkZCUVZGTExGZEJRMlpXTEVWQlFVOUxMRkZCUVZGTUxFVkJRVTlYTEZsQlEzUkNXQ3hGUVVGUFN5eFRRVWRVV0N4TlFVRk5hMElzVTBGRFNDeFRRVUZWTEUxQlFVOHNUMEZCVVN4UFFVRlJMRTFCUVU4c1VVRkJVeXhWUVVOc1JDeFRRVUV5UWtRc1ZVRkRiRUpZTEVWQlFVOUxMRkZCUVZGTkxFMUJTVnBZTEVWQlFVOWhMRk5CUVZkbUxGTkJRVk5sTEZOQlJURkNZaXhIUVVGUll5eExRVUZMTEZOQlFUWkNReXhIUVZkMlJDeFBRVlpCYUVJc05rSkJRVFpDUXl4SFFVYzNRbVVzUlVGQlUxUXNTMEZCVDFZc1kwRkJZMWNzUzBGRE5VSlFMRVZCUTBGbExFVkJRVk5VTEV0QlExUlRMRVZCUVZOV0xGRkJRMVJNTEVWQlFVOW5RaXh0UWtGSFJrUXNSMEZEVGl4VFFVRTBRa1VzUjBGbE4wSXNUMEZrUzNCQ0xGTkJRVk52UWl4TFFVTmFiRUlzTmtKQlFUWkNReXhIUVVkNlFtbENMRWRCUVZWQkxFVkJRVTlHTEZkQlEyNUNSU3hGUVVGUFJpeFRRVUZUVkN4TFFVRlBWaXhqUVVGalZ5eExRVU51UTFBc1JVRkRRV2xDTEVWQlFVOUdMRk5CUVZOVUxFdEJRMmhDVnl4RlFVRlBSaXhUUVVGVFZpeFJRVU5vUWt3c1JVRkJUMmRDTEhGQ1FVdE9SU3hSUVVGUlF5eFBRVUZQUmlJc0ltWnBiR1VpT2lJdlFYQndiR2xqWVhScGIyNXpMM0J5YjJwbFkzUnpMMk5vWldsc0wzUmhjbWRsZEY5ZmNHaHZibVZEYjI1MGNtRmpkSE5mWHpJME5TOXViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJOdmNtVXZaR2x6Y0dGMFkyaFNaWEYxWlhOMExtcHpJbjA9IiwiXCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oZSxpLHMsdCxuKXtyZXR1cm4gZS5jb25maWc9aSxzJiYoZS5jb2RlPXMpLGUucmVxdWVzdD10LGUucmVzcG9uc2U9bixlLmlzQXhpb3NFcnJvcj0hMCxlLnRvSlNPTj1mdW5jdGlvbigpe3JldHVybnttZXNzYWdlOnRoaXMubWVzc2FnZSxuYW1lOnRoaXMubmFtZSxkZXNjcmlwdGlvbjp0aGlzLmRlc2NyaXB0aW9uLG51bWJlcjp0aGlzLm51bWJlcixmaWxlTmFtZTp0aGlzLmZpbGVOYW1lLGxpbmVOdW1iZXI6dGhpcy5saW5lTnVtYmVyLGNvbHVtbk51bWJlcjp0aGlzLmNvbHVtbk51bWJlcixzdGFjazp0aGlzLnN0YWNrLGNvbmZpZzp0aGlzLmNvbmZpZyxjb2RlOnRoaXMuY29kZX19LGV9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1WdWFHRnVZMlZGY25KdmNpNXFjeUpkTENKdVlXMWxjeUk2V3lKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aVpYSnliM0lpTENKamIyNW1hV2NpTENKamIyUmxJaXdpY21WeGRXVnpkQ0lzSW5KbGMzQnZibk5sSWl3aWFYTkJlR2x2YzBWeWNtOXlJaXdpZEc5S1UwOU9JaXdpYldWemMyRm5aU0lzSW5Sb2FYTWlMQ0p1WVcxbElpd2laR1Z6WTNKcGNIUnBiMjRpTENKdWRXMWlaWElpTENKbWFXeGxUbUZ0WlNJc0lteHBibVZPZFcxaVpYSWlMQ0pqYjJ4MWJXNU9kVzFpWlhJaUxDSnpkR0ZqYXlKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1lVRlpRVUVzVDBGQlQwTXNVVUZCVlN4VFFVRnpRa01zUlVGQlQwTXNSVUZCVVVNc1JVRkJUVU1zUlVGQlUwTXNSMEUwUW01RkxFOUJNMEpCU2l4RlFVRk5ReXhQUVVGVFFTeEZRVU5ZUXl4SlFVTkdSaXhGUVVGTlJTeExRVUZQUVN4SFFVZG1SaXhGUVVGTlJ5eFJRVUZWUVN4RlFVTm9Ra2dzUlVGQlRVa3NVMEZCVjBFc1JVRkRha0pLTEVWQlFVMUxMR05CUVdVc1JVRkZja0pNTEVWQlFVMU5MRTlCUVZNc1YwRkRZaXhQUVVWRlF5eFJRVUZUUXl4TFFVRkxSQ3hSUVVOa1JTeExRVUZOUkN4TFFVRkxReXhMUVVWWVF5eFpRVUZoUml4TFFVRkxSU3haUVVOc1FrTXNUMEZCVVVnc1MwRkJTMGNzVDBGRllrTXNVMEZCVlVvc1MwRkJTMGtzVTBGRFprTXNWMEZCV1V3c1MwRkJTMHNzVjBGRGFrSkRMR0ZCUVdOT0xFdEJRVXROTEdGQlEyNUNReXhOUVVGUFVDeExRVUZMVHl4TlFVVmFaQ3hQUVVGUlR5eExRVUZMVUN4UFFVTmlReXhMUVVGTlRTeExRVUZMVGl4UFFVZFNSaUlzSW1acGJHVWlPaUl2UVhCd2JHbGpZWFJwYjI1ekwzQnliMnBsWTNSekwyTm9aV2xzTDNSaGNtZGxkRjlmY0dodmJtVkRiMjUwY21GamRITmZYekkwTlM5dWIyUmxYMjF2WkhWc1pYTXZZWGhwYjNNdmJHbGlMMk52Y21VdlpXNW9ZVzVqWlVWeWNtOXlMbXB6SW4wPSIsIlwidXNlIHN0cmljdFwiO3ZhciB1dGlscz1yZXF1aXJlKFwiLi4vdXRpbHNcIik7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt0PXR8fHt9O3ZhciBpPXt9LHM9W1widXJsXCIsXCJtZXRob2RcIixcImRhdGFcIl0sbj1bXCJoZWFkZXJzXCIsXCJhdXRoXCIsXCJwcm94eVwiLFwicGFyYW1zXCJdLHI9W1wiYmFzZVVSTFwiLFwidHJhbnNmb3JtUmVxdWVzdFwiLFwidHJhbnNmb3JtUmVzcG9uc2VcIixcInBhcmFtc1NlcmlhbGl6ZXJcIixcInRpbWVvdXRcIixcInRpbWVvdXRNZXNzYWdlXCIsXCJ3aXRoQ3JlZGVudGlhbHNcIixcImFkYXB0ZXJcIixcInJlc3BvbnNlVHlwZVwiLFwieHNyZkNvb2tpZU5hbWVcIixcInhzcmZIZWFkZXJOYW1lXCIsXCJvblVwbG9hZFByb2dyZXNzXCIsXCJvbkRvd25sb2FkUHJvZ3Jlc3NcIixcImRlY29tcHJlc3NcIixcIm1heENvbnRlbnRMZW5ndGhcIixcIm1heEJvZHlMZW5ndGhcIixcIm1heFJlZGlyZWN0c1wiLFwidHJhbnNwb3J0XCIsXCJodHRwQWdlbnRcIixcImh0dHBzQWdlbnRcIixcImNhbmNlbFRva2VuXCIsXCJzb2NrZXRQYXRoXCIsXCJyZXNwb25zZUVuY29kaW5nXCJdLG89W1widmFsaWRhdGVTdGF0dXNcIl07ZnVuY3Rpb24gYShlLHQpe3JldHVybiB1dGlscy5pc1BsYWluT2JqZWN0KGUpJiZ1dGlscy5pc1BsYWluT2JqZWN0KHQpP3V0aWxzLm1lcmdlKGUsdCk6dXRpbHMuaXNQbGFpbk9iamVjdCh0KT91dGlscy5tZXJnZSh7fSx0KTp1dGlscy5pc0FycmF5KHQpP3Quc2xpY2UoKTp0fWZ1bmN0aW9uIHUocyl7dXRpbHMuaXNVbmRlZmluZWQodFtzXSk/dXRpbHMuaXNVbmRlZmluZWQoZVtzXSl8fChpW3NdPWEodm9pZCAwLGVbc10pKTppW3NdPWEoZVtzXSx0W3NdKX11dGlscy5mb3JFYWNoKHMsZnVuY3Rpb24oZSl7dXRpbHMuaXNVbmRlZmluZWQodFtlXSl8fChpW2VdPWEodm9pZCAwLHRbZV0pKX0pLHV0aWxzLmZvckVhY2gobix1KSx1dGlscy5mb3JFYWNoKHIsZnVuY3Rpb24ocyl7dXRpbHMuaXNVbmRlZmluZWQodFtzXSk/dXRpbHMuaXNVbmRlZmluZWQoZVtzXSl8fChpW3NdPWEodm9pZCAwLGVbc10pKTppW3NdPWEodm9pZCAwLHRbc10pfSksdXRpbHMuZm9yRWFjaChvLGZ1bmN0aW9uKHMpe3MgaW4gdD9pW3NdPWEoZVtzXSx0W3NdKTpzIGluIGUmJihpW3NdPWEodm9pZCAwLGVbc10pKX0pO3ZhciBjPXMuY29uY2F0KG4pLmNvbmNhdChyKS5jb25jYXQobyksbD1PYmplY3Qua2V5cyhlKS5jb25jYXQoT2JqZWN0LmtleXModCkpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4tMT09PWMuaW5kZXhPZihlKX0pO3JldHVybiB1dGlscy5mb3JFYWNoKGwsdSksaX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTFsY21kbFEyOXVabWxuTG1weklsMHNJbTVoYldWeklqcGJJblYwYVd4eklpd2ljbVZ4ZFdseVpTSXNJbTF2WkhWc1pTSXNJbVY0Y0c5eWRITWlMQ0pqYjI1bWFXY3hJaXdpWTI5dVptbG5NaUlzSW1OdmJtWnBaeUlzSW5aaGJIVmxSbkp2YlVOdmJtWnBaekpMWlhseklpd2liV1Z5WjJWRVpXVndVSEp2Y0dWeWRHbGxjMHRsZVhNaUxDSmtaV1poZFd4MFZHOURiMjVtYVdjeVMyVjVjeUlzSW1ScGNtVmpkRTFsY21kbFMyVjVjeUlzSW1kbGRFMWxjbWRsWkZaaGJIVmxJaXdpZEdGeVoyVjBJaXdpYzI5MWNtTmxJaXdpYVhOUWJHRnBiazlpYW1WamRDSXNJbTFsY21kbElpd2lhWE5CY25KaGVTSXNJbk5zYVdObElpd2liV1Z5WjJWRVpXVndVSEp2Y0dWeWRHbGxjeUlzSW5CeWIzQWlMQ0pwYzFWdVpHVm1hVzVsWkNJc0luVnVaR1ZtYVc1bFpDSXNJbVp2Y2tWaFkyZ2lMQ0poZUdsdmMwdGxlWE1pTENKamIyNWpZWFFpTENKdmRHaGxja3RsZVhNaUxDSlBZbXBsWTNRaUxDSnJaWGx6SWl3aVptbHNkR1Z5SWl3aWEyVjVJaXdpYVc1a1pYaFBaaUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzWVVGRlFTeEpRVUZKUVN4TlFVRlJReXhSUVVGUkxGbEJWWEJDUXl4UFFVRlBReXhSUVVGVkxGTkJRWEZDUXl4RlFVRlRReXhIUVVVM1EwRXNSVUZCVlVFc1RVRkRWaXhKUVVGSlF5eExRVVZCUXl4SFFVRjNRaXhOUVVGUExGTkJRVlVzVVVGRGVrTkRMRWRCUVRKQ0xGVkJRVmNzVDBGQlVTeFJRVUZUTEZWQlEzWkVReXhIUVVOR0xGVkJRVmNzYlVKQlFXOUNMRzlDUVVGeFFpeHRRa0ZEY0VRc1ZVRkJWeXhwUWtGQmEwSXNhMEpCUVcxQ0xGVkJRVmNzWlVGQlowSXNhVUpCUXpORkxHbENRVUZyUWl4dFFrRkJiMElzY1VKQlFYTkNMR0ZCUXpWRUxHMUNRVUZ2UWl4blFrRkJhVUlzWlVGQlowSXNXVUZCWVN4WlFVTnNSU3hoUVVGakxHTkJRV1VzWVVGQll5eHZRa0ZGZWtORExFZEJRVzFDTEd0Q1FVVjJRaXhUUVVGVFF5eEZRVUZsUXl4RlFVRlJReXhIUVVNNVFpeFBRVUZKWWl4TlFVRk5ZeXhqUVVGalJpeEpRVUZYV2l4TlFVRk5ZeXhqUVVGalJDeEhRVU01UTJJc1RVRkJUV1VzVFVGQlRVZ3NSVUZCVVVNc1IwRkRiRUppTEUxQlFVMWpMR05CUVdORUxFZEJRM1JDWWl4TlFVRk5aU3hUUVVGVlJpeEhRVU5rWWl4TlFVRk5aMElzVVVGQlVVZ3NSMEZEYUVKQkxFVkJRVTlKTEZGQlJWUktMRVZCUjFRc1UwRkJVMHNzUlVGQmIwSkRMRWRCUTNSQ2JrSXNUVUZCVFc5Q0xGbEJRVmxtTEVWQlFWRmpMRWxCUlc1Q2JrSXNUVUZCVFc5Q0xGbEJRVmxvUWl4RlFVRlJaU3hOUVVOd1EySXNSVUZCVDJFc1IwRkJVVklzVDBGQlpWVXNSVUZCVjJwQ0xFVkJRVkZsTEV0QlJtcEVZaXhGUVVGUFlTeEhRVUZSVWl4RlFVRmxVQ3hGUVVGUlpTeEhRVUZQWkN4RlFVRlJZeXhKUVUxNlJHNUNMRTFCUVUxelFpeFJRVUZSWml4RlFVRnpRaXhUUVVFd1Fsa3NSMEZEZGtSdVFpeE5RVUZOYjBJc1dVRkJXV1lzUlVGQlVXTXNUVUZETjBKaUxFVkJRVTloTEVkQlFWRlNMRTlCUVdWVkxFVkJRVmRvUWl4RlFVRlJZeXhQUVVseVJHNUNMRTFCUVUxelFpeFJRVUZSWkN4RlFVRjVRbFVzUjBGRmRrTnNRaXhOUVVGTmMwSXNVVUZCVVdJc1JVRkJjMElzVTBGQk1FSlZMRWRCUTNaRWJrSXNUVUZCVFc5Q0xGbEJRVmxtTEVWQlFWRmpMRWxCUlc1Q2JrSXNUVUZCVFc5Q0xGbEJRVmxvUWl4RlFVRlJaU3hOUVVOd1EySXNSVUZCVDJFc1IwRkJVVklzVDBGQlpWVXNSVUZCVjJwQ0xFVkJRVkZsTEV0QlJtcEVZaXhGUVVGUFlTeEhRVUZSVWl4UFFVRmxWU3hGUVVGWGFFSXNSVUZCVVdNc1RVRk5ja1J1UWl4TlFVRk5jMElzVVVGQlVWb3NSVUZCYVVJc1UwRkJaVk1zUjBGRGVFTkJMRXRCUVZGa0xFVkJRMVpETEVWQlFVOWhMRWRCUVZGU0xFVkJRV1ZRTEVWQlFWRmxMRWRCUVU5a0xFVkJRVkZqTEVsQlF6VkRRU3hMUVVGUlppeEpRVU5xUWtVc1JVRkJUMkVzUjBGQlVWSXNUMEZCWlZVc1JVRkJWMnBDTEVWQlFWRmxMRTlCU1hKRUxFbEJRVWxKTEVWQlFWbG9RaXhGUVVOaWFVSXNUMEZCVDJoQ0xFZEJRMUJuUWl4UFFVRlBaaXhIUVVOUVpTeFBRVUZQWkN4SFFVVk9aU3hGUVVGWlF5eFBRVU5pUXl4TFFVRkxka0lzUjBGRFRHOUNMRTlCUVU5RkxFOUJRVTlETEV0QlFVdDBRaXhKUVVOdVFuVkNMRTlCUVU4c1UwRkJlVUpETEVkQlF5OUNMRTlCUVcxRExFbEJRVFZDVGl4RlFVRlZUeXhSUVVGUlJDeExRVXMzUWl4UFFVWkJOMElzVFVGQlRYTkNMRkZCUVZGSExFVkJRVmRRTEVkQlJXeENXaUlzSW1acGJHVWlPaUl2UVhCd2JHbGpZWFJwYjI1ekwzQnliMnBsWTNSekwyTm9aV2xzTDNSaGNtZGxkRjlmY0dodmJtVkRiMjUwY21GamRITmZYekkwTlM5dWIyUmxYMjF2WkhWc1pYTXZZWGhwYjNNdmJHbGlMMk52Y21VdmJXVnlaMlZEYjI1bWFXY3Vhbk1pZlE9PSIsIlwidXNlIHN0cmljdFwiO3ZhciBjcmVhdGVFcnJvcj1yZXF1aXJlKFwiLi9jcmVhdGVFcnJvclwiKTttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbih0LHIsZSl7dmFyIHM9ZS5jb25maWcudmFsaWRhdGVTdGF0dXM7ZS5zdGF0dXMmJnMmJiFzKGUuc3RhdHVzKT9yKGNyZWF0ZUVycm9yKFwiUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZSBcIitlLnN0YXR1cyxlLmNvbmZpZyxudWxsLGUucmVxdWVzdCxlKSk6dChlKX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbk5sZEhSc1pTNXFjeUpkTENKdVlXMWxjeUk2V3lKamNtVmhkR1ZGY25KdmNpSXNJbkpsY1hWcGNtVWlMQ0p0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpY21WemIyeDJaU0lzSW5KbGFtVmpkQ0lzSW5KbGMzQnZibk5sSWl3aWRtRnNhV1JoZEdWVGRHRjBkWE1pTENKamIyNW1hV2NpTENKemRHRjBkWE1pTENKeVpYRjFaWE4wSWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4aFFVVkJMRWxCUVVsQkxGbEJRV05ETEZGQlFWRXNhVUpCVXpGQ1F5eFBRVUZQUXl4UlFVRlZMRk5CUVdkQ1F5eEZRVUZUUXl4RlFVRlJReXhIUVVOb1JDeEpRVUZKUXl4RlFVRnBRa1FzUlVGQlUwVXNUMEZCVDBRc1pVRkRhRU5FTEVWQlFWTkhMRkZCUVZkR0xFbEJRV3RDUVN4RlFVRmxSQ3hGUVVGVFJ5eFJRVWRxUlVvc1JVRkJUMHdzV1VGRFRDeHRRMEZCY1VOTkxFVkJRVk5ITEU5QlF6bERTQ3hGUVVGVFJTeFBRVU5VTEV0QlEwRkdMRVZCUVZOSkxGRkJRMVJLTEVsQlVFWkdMRVZCUVZGRklpd2labWxzWlNJNklpOUJjSEJzYVdOaGRHbHZibk12Y0hKdmFtVmpkSE12WTJobGFXd3ZkR0Z5WjJWMFgxOXdhRzl1WlVOdmJuUnlZV04wYzE5Zk1qUTFMMjV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdlkyOXlaUzl6WlhSMGJHVXVhbk1pZlE9PSIsIlwidXNlIHN0cmljdFwiO3ZhciB1dGlscz1yZXF1aXJlKFwiLi8uLi91dGlsc1wiKSxkZWZhdWx0cz1yZXF1aXJlKFwiLi8uLi9kZWZhdWx0c1wiKTttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbih0LHUsZSl7dmFyIHI9dGhpc3x8ZGVmYXVsdHM7cmV0dXJuIHV0aWxzLmZvckVhY2goZSxmdW5jdGlvbihlKXt0PWUuY2FsbChyLHQsdSl9KSx0fTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluUnlZVzV6Wm05eWJVUmhkR0V1YW5NaVhTd2libUZ0WlhNaU9sc2lkWFJwYkhNaUxDSnlaWEYxYVhKbElpd2laR1ZtWVhWc2RITWlMQ0p0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpWkdGMFlTSXNJbWhsWVdSbGNuTWlMQ0ptYm5NaUxDSmpiMjUwWlhoMElpd2lkR2hwY3lJc0ltWnZja1ZoWTJnaUxDSm1iaUlzSW1OaGJHd2lYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMR0ZCUlVFc1NVRkJTVUVzVFVGQlVVTXNVVUZCVVN4alFVTm9Ra01zVTBGQlYwUXNVVUZCVVN4cFFrRlZka0pGTEU5QlFVOURMRkZCUVZVc1UwRkJkVUpETEVWQlFVMURMRVZCUVZORExFZEJRM0pFTEVsQlFVbERMRVZCUVZWRExFMUJRVkZRTEZOQlRYUkNMRTlCU2tGR0xFMUJRVTFWTEZGQlFWRklMRVZCUVVzc1UwRkJiVUpKTEVkQlEzQkRUaXhGUVVGUFRTeEZRVUZIUXl4TFFVRkxTaXhGUVVGVFNDeEZRVUZOUXl4TFFVZDZRa1FpTENKbWFXeGxJam9pTDBGd2NHeHBZMkYwYVc5dWN5OXdjbTlxWldOMGN5OWphR1ZwYkM5MFlYSm5aWFJmWDNCb2IyNWxRMjl1ZEhKaFkzUnpYMTh5TkRVdmJtOWtaVjl0YjJSMWJHVnpMMkY0YVc5ekwyeHBZaTlqYjNKbEwzUnlZVzV6Wm05eWJVUmhkR0V1YW5NaWZRPT0iLCJcInVzZSBzdHJpY3RcIjt2YXIgdXRpbHM9cmVxdWlyZShcIi4vdXRpbHNcIiksbm9ybWFsaXplSGVhZGVyTmFtZT1yZXF1aXJlKFwiLi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWVcIiksZW5oYW5jZUVycm9yPXJlcXVpcmUoXCIuL2NvcmUvZW5oYW5jZUVycm9yXCIpLERFRkFVTFRfQ09OVEVOVF9UWVBFPXtcIkNvbnRlbnQtVHlwZVwiOlwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCJ9O2Z1bmN0aW9uIHNldENvbnRlbnRUeXBlSWZVbnNldChlLHQpeyF1dGlscy5pc1VuZGVmaW5lZChlKSYmdXRpbHMuaXNVbmRlZmluZWQoZVtcIkNvbnRlbnQtVHlwZVwiXSkmJihlW1wiQ29udGVudC1UeXBlXCJdPXQpfWZ1bmN0aW9uIGdldERlZmF1bHRBZGFwdGVyKCl7dmFyIGU7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFhNTEh0dHBSZXF1ZXN0P2U9cmVxdWlyZShcIi4vYWRhcHRlcnMveGhyXCIpOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzJiZcIltvYmplY3QgcHJvY2Vzc11cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChwcm9jZXNzKSYmKGU9cmVxdWlyZShcIi4vYWRhcHRlcnMvaHR0cFwiKSksZX1mdW5jdGlvbiBzdHJpbmdpZnlTYWZlbHkoZSx0LHIpe2lmKHV0aWxzLmlzU3RyaW5nKGUpKXRyeXtyZXR1cm4odHx8SlNPTi5wYXJzZSkoZSksdXRpbHMudHJpbShlKX1jYXRjaChlKXtpZihcIlN5bnRheEVycm9yXCIhPT1lLm5hbWUpdGhyb3cgZX1yZXR1cm4ocnx8SlNPTi5zdHJpbmdpZnkpKGUpfXZhciBkZWZhdWx0cz17dHJhbnNpdGlvbmFsOntzaWxlbnRKU09OUGFyc2luZzohMCxmb3JjZWRKU09OUGFyc2luZzohMCxjbGFyaWZ5VGltZW91dEVycm9yOiExfSxhZGFwdGVyOmdldERlZmF1bHRBZGFwdGVyKCksdHJhbnNmb3JtUmVxdWVzdDpbZnVuY3Rpb24oZSx0KXtyZXR1cm4gbm9ybWFsaXplSGVhZGVyTmFtZSh0LFwiQWNjZXB0XCIpLG5vcm1hbGl6ZUhlYWRlck5hbWUodCxcIkNvbnRlbnQtVHlwZVwiKSx1dGlscy5pc0Zvcm1EYXRhKGUpfHx1dGlscy5pc0FycmF5QnVmZmVyKGUpfHx1dGlscy5pc0J1ZmZlcihlKXx8dXRpbHMuaXNTdHJlYW0oZSl8fHV0aWxzLmlzRmlsZShlKXx8dXRpbHMuaXNCbG9iKGUpP2U6dXRpbHMuaXNBcnJheUJ1ZmZlclZpZXcoZSk/ZS5idWZmZXI6dXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMoZSk/KHNldENvbnRlbnRUeXBlSWZVbnNldCh0LFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLThcIiksZS50b1N0cmluZygpKTp1dGlscy5pc09iamVjdChlKXx8dCYmXCJhcHBsaWNhdGlvbi9qc29uXCI9PT10W1wiQ29udGVudC1UeXBlXCJdPyhzZXRDb250ZW50VHlwZUlmVW5zZXQodCxcImFwcGxpY2F0aW9uL2pzb25cIiksc3RyaW5naWZ5U2FmZWx5KGUpKTplfV0sdHJhbnNmb3JtUmVzcG9uc2U6W2Z1bmN0aW9uKGUpe3ZhciB0PXRoaXMudHJhbnNpdGlvbmFsLHI9dCYmdC5zaWxlbnRKU09OUGFyc2luZyxuPXQmJnQuZm9yY2VkSlNPTlBhcnNpbmcsaT0hciYmXCJqc29uXCI9PT10aGlzLnJlc3BvbnNlVHlwZTtpZihpfHxuJiZ1dGlscy5pc1N0cmluZyhlKSYmZS5sZW5ndGgpdHJ5e3JldHVybiBKU09OLnBhcnNlKGUpfWNhdGNoKGUpe2lmKGkpe2lmKFwiU3ludGF4RXJyb3JcIj09PWUubmFtZSl0aHJvdyBlbmhhbmNlRXJyb3IoZSx0aGlzLFwiRV9KU09OX1BBUlNFXCIpO3Rocm93IGV9fXJldHVybiBlfV0sdGltZW91dDowLHhzcmZDb29raWVOYW1lOlwiWFNSRi1UT0tFTlwiLHhzcmZIZWFkZXJOYW1lOlwiWC1YU1JGLVRPS0VOXCIsbWF4Q29udGVudExlbmd0aDotMSxtYXhCb2R5TGVuZ3RoOi0xLHZhbGlkYXRlU3RhdHVzOmZ1bmN0aW9uKGUpe3JldHVybiBlPj0yMDAmJmU8MzAwfSxoZWFkZXJzOntjb21tb246e0FjY2VwdDpcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKlwifX19O3V0aWxzLmZvckVhY2goW1wiZGVsZXRlXCIsXCJnZXRcIixcImhlYWRcIl0sZnVuY3Rpb24oZSl7ZGVmYXVsdHMuaGVhZGVyc1tlXT17fX0pLHV0aWxzLmZvckVhY2goW1wicG9zdFwiLFwicHV0XCIsXCJwYXRjaFwiXSxmdW5jdGlvbihlKXtkZWZhdWx0cy5oZWFkZXJzW2VdPXV0aWxzLm1lcmdlKERFRkFVTFRfQ09OVEVOVF9UWVBFKX0pLG1vZHVsZS5leHBvcnRzPWRlZmF1bHRzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1SbFptRjFiSFJ6TG1weklsMHNJbTVoYldWeklqcGJJblYwYVd4eklpd2ljbVZ4ZFdseVpTSXNJbTV2Y20xaGJHbDZaVWhsWVdSbGNrNWhiV1VpTENKbGJtaGhibU5sUlhKeWIzSWlMQ0pFUlVaQlZVeFVYME5QVGxSRlRsUmZWRmxRUlNJc0lrTnZiblJsYm5RdFZIbHdaU0lzSW5ObGRFTnZiblJsYm5SVWVYQmxTV1pWYm5ObGRDSXNJbWhsWVdSbGNuTWlMQ0oyWVd4MVpTSXNJbWx6Vlc1a1pXWnBibVZrSWl3aVoyVjBSR1ZtWVhWc2RFRmtZWEIwWlhJaUxDSmhaR0Z3ZEdWeUlpd2lXRTFNU0hSMGNGSmxjWFZsYzNRaUxDSndjbTlqWlhOeklpd2lUMkpxWldOMElpd2ljSEp2ZEc5MGVYQmxJaXdpZEc5VGRISnBibWNpTENKallXeHNJaXdpYzNSeWFXNW5hV1o1VTJGbVpXeDVJaXdpY21GM1ZtRnNkV1VpTENKd1lYSnpaWElpTENKbGJtTnZaR1Z5SWl3aWFYTlRkSEpwYm1jaUxDSktVMDlPSWl3aWNHRnljMlVpTENKMGNtbHRJaXdpWlNJc0ltNWhiV1VpTENKemRISnBibWRwWm5raUxDSmtaV1poZFd4MGN5SXNJblJ5WVc1emFYUnBiMjVoYkNJc0luTnBiR1Z1ZEVwVFQwNVFZWEp6YVc1bklpd2labTl5WTJWa1NsTlBUbEJoY25OcGJtY2lMQ0pqYkdGeWFXWjVWR2x0Wlc5MWRFVnljbTl5SWl3aWRISmhibk5tYjNKdFVtVnhkV1Z6ZENJc0ltUmhkR0VpTENKcGMwWnZjbTFFWVhSaElpd2lhWE5CY25KaGVVSjFabVpsY2lJc0ltbHpRblZtWm1WeUlpd2lhWE5UZEhKbFlXMGlMQ0pwYzBacGJHVWlMQ0pwYzBKc2IySWlMQ0pwYzBGeWNtRjVRblZtWm1WeVZtbGxkeUlzSW1KMVptWmxjaUlzSW1selZWSk1VMlZoY21Ob1VHRnlZVzF6SWl3aWFYTlBZbXBsWTNRaUxDSjBjbUZ1YzJadmNtMVNaWE53YjI1elpTSXNJblJvYVhNaUxDSnpkSEpwWTNSS1UwOU9VR0Z5YzJsdVp5SXNJbkpsYzNCdmJuTmxWSGx3WlNJc0lteGxibWQwYUNJc0luUnBiV1Z2ZFhRaUxDSjRjM0ptUTI5dmEybGxUbUZ0WlNJc0luaHpjbVpJWldGa1pYSk9ZVzFsSWl3aWJXRjRRMjl1ZEdWdWRFeGxibWQwYUNJc0ltMWhlRUp2WkhsTVpXNW5kR2dpTENKMllXeHBaR0YwWlZOMFlYUjFjeUlzSW5OMFlYUjFjeUlzSW1OdmJXMXZiaUlzSWtGalkyVndkQ0lzSW1admNrVmhZMmdpTENKdFpYUm9iMlFpTENKdFpYSm5aU0lzSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEdGQlJVRXNTVUZCU1VFc1RVRkJVVU1zVVVGQlVTeFhRVU5vUWtNc2IwSkJRWE5DUkN4UlFVRlJMR2xEUVVNNVFrVXNZVUZCWlVZc1VVRkJVU3gxUWtGRmRrSkhMSE5DUVVOR1F5eGxRVUZuUWl4eFEwRkhiRUlzVTBGQlUwTXNjMEpCUVhOQ1F5eEZRVUZUUXl4SlFVTnFRMUlzVFVGQlRWTXNXVUZCV1VZc1NVRkJXVkFzVFVGQlRWTXNXVUZCV1VZc1JVRkJVU3h0UWtGRE0wUkJMRVZCUVZFc1owSkJRV3RDUXl4SFFVazVRaXhUUVVGVFJTeHZRa0ZEVUN4SlFVRkpReXhGUVZGS0xFMUJVRGhDTEc5Q1FVRnVRa01zWlVGRlZFUXNSVUZCVlZZc1VVRkJVU3hyUWtGRFZTeHZRa0ZCV2xrc1UwRkJkVVVzY1VKQlFUVkRReXhQUVVGUFF5eFZRVUZWUXl4VFFVRlRReXhMUVVGTFNpeFhRVVV4UlVZc1JVRkJWVllzVVVGQlVTeHZRa0ZGWWxVc1JVRkhWQ3hUUVVGVFR5eG5Ra0ZCWjBKRExFVkJRVlZETEVWQlFWRkRMRWRCUTNwRExFZEJRVWx5UWl4TlFVRk5jMElzVTBGQlUwZ3NSMEZEYWtJc1NVRkZSU3hQUVVSRFF5eEhRVUZWUnl4TFFVRkxReXhQUVVGUFRDeEhRVU5vUW01Q0xFMUJRVTE1UWl4TFFVRkxUaXhIUVVOc1FpeE5RVUZQVHl4SFFVTlFMRWRCUVdVc1owSkJRVmhCTEVWQlFVVkRMRXRCUTBvc1RVRkJUVVFzUlVGTFdpeFBRVUZSVEN4SFFVRlhSU3hMUVVGTFN5eFhRVUZYVkN4SFFVZHlReXhKUVVGSlZTeFZRVVZHUXl4alFVTkZReXh0UWtGQmJVSXNSVUZEYmtKRExHMUNRVUZ0UWl4RlFVTnVRa01zY1VKQlFYRkNMRWRCUjNaQ2RFSXNVVUZCVTBRc2IwSkJSVlIzUWl4clFrRkJiVUlzVTBGQk1FSkRMRVZCUVUwMVFpeEhRVWxxUkN4UFFVaEJUQ3h2UWtGQmIwSkxMRVZCUVZNc1ZVRkROMEpNTEc5Q1FVRnZRa3NzUlVGQlV5eG5Ra0ZGZWtKUUxFMUJRVTF2UXl4WFFVRlhSQ3hKUVVOdVFtNURMRTFCUVUxeFF5eGpRVUZqUml4SlFVTndRbTVETEUxQlFVMXpReXhUUVVGVFNDeEpRVU5tYmtNc1RVRkJUWFZETEZOQlFWTktMRWxCUTJadVF5eE5RVUZOZDBNc1QwRkJUMHdzU1VGRFltNURMRTFCUVUxNVF5eFBRVUZQVGl4SFFVVk9RU3hGUVVWTWJrTXNUVUZCVFRCRExHdENRVUZyUWxBc1IwRkRia0pCTEVWQlFVdFJMRTlCUlZZelF5eE5RVUZOTkVNc2EwSkJRV3RDVkN4SlFVTXhRamRDTEhOQ1FVRnpRa01zUlVGQlV5eHRSRUZEZUVJMFFpeEZRVUZMYmtJc1dVRkZWbWhDTEUxQlFVMDJReXhUUVVGVFZpeEpRVUZWTlVJc1IwRkJkVU1zY1VKQlFUVkNRU3hGUVVGUkxHbENRVU01UTBRc2MwSkJRWE5DUXl4RlFVRlRMRzlDUVVONFFsY3NaMEpCUVdkQ2FVSXNTVUZGYkVKQkxFbEJSMVJYTEcxQ1FVRnZRaXhUUVVFeVFsZ3NSMEZETjBNc1NVRkJTVXdzUlVGQlpXbENMRXRCUVV0cVFpeGhRVU53UWtNc1JVRkJiMEpFTEVkQlFXZENRU3hGUVVGaFF5eHJRa0ZEYWtSRExFVkJRVzlDUml4SFFVRm5Ra0VzUlVGQllVVXNhMEpCUTJwRVowSXNSMEZCY1VKcVFpeEhRVUV5UXl4VFFVRjBRbWRDTEV0QlFVdEZMR0ZCUlc1RUxFZEJRVWxFTEVkQlFYTkNhRUlzUjBGQmNVSm9ReXhOUVVGTmMwSXNVMEZCVTJFc1NVRkJVMEVzUlVGQlMyVXNUMEZETVVVc1NVRkRSU3hQUVVGUE0wSXNTMEZCUzBNc1RVRkJUVmNzUjBGRGJFSXNUVUZCVDFRc1IwRkRVQ3hIUVVGSmMwSXNSVUZCYlVJc1EwRkRja0lzUjBGQlpTeG5Ra0ZCV0hSQ0xFVkJRVVZETEV0QlEwb3NUVUZCVFhoQ0xHRkJRV0YxUWl4RlFVRkhjVUlzUzBGQlRTeG5Ra0ZGT1VJc1RVRkJUWEpDTEVkQlMxb3NUMEZCVDFNc1NVRlBWR2RDTEZGQlFWTXNSVUZGVkVNc1pVRkJaMElzWVVGRGFFSkRMR1ZCUVdkQ0xHVkJSV2hDUXl4clFrRkJiVUlzUlVGRGJrSkRMR1ZCUVdkQ0xFVkJSV2hDUXl4bFFVRm5RaXhUUVVGM1FrTXNSMEZEZEVNc1QwRkJUMEVzUjBGQlZTeExRVUZQUVN4RlFVRlRMRXRCU1hKRGJFUXNVMEZEUlcxRUxGRkJRMFZETEU5QlFWVXNkVU5CU1dRelJDeE5RVUZOTkVRc1UwRkJVeXhUUVVGVkxFMUJRVThzVVVGQlV5eFRRVUUyUWtNc1IwRkRjRVZvUXl4VFFVRlRkRUlzVVVGQlVYTkVMRkZCUjI1Q04wUXNUVUZCVFRSRUxGTkJRVk1zVDBGQlVTeE5RVUZQTEZOQlFWVXNVMEZCSzBKRExFZEJRM0pGYUVNc1UwRkJVM1JDTEZGQlFWRnpSQ3hIUVVGVk4wUXNUVUZCVFRoRUxFMUJRVTB4UkN4M1FrRkhla015UkN4UFFVRlBReXhSUVVGVmJrTWlMQ0ptYVd4bElqb2lMMEZ3Y0d4cFkyRjBhVzl1Y3k5d2NtOXFaV04wY3k5amFHVnBiQzkwWVhKblpYUmZYM0JvYjI1bFEyOXVkSEpoWTNSelgxOHlORFV2Ym05a1pWOXRiMlIxYkdWekwyRjRhVzl6TDJ4cFlpOWtaV1poZFd4MGN5NXFjeUo5IiwiXCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24ocixuKXtyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgpLGU9MDtlPHQubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTtyZXR1cm4gci5hcHBseShuLHQpfX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUpwYm1RdWFuTWlYU3dpYm1GdFpYTWlPbHNpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW1adUlpd2lkR2hwYzBGeVp5SXNJbUZ5WjNNaUxDSkJjbkpoZVNJc0ltRnlaM1Z0Wlc1MGN5SXNJbXhsYm1kMGFDSXNJbWtpTENKaGNIQnNlU0pkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzWVVGRlFVRXNUMEZCVDBNc1VVRkJWU3hUUVVGalF5eEZRVUZKUXl4SFFVTnFReXhQUVVGUExGZEJSVXdzU1VGRVFTeEpRVUZKUXl4RlFVRlBMRWxCUVVsRExFMUJRVTFETEZWQlFWVkRMRkZCUTNSQ1F5eEZRVUZKTEVWQlFVZEJMRVZCUVVsS0xFVkJRVXRITEU5QlFWRkRMRWxCUXk5Q1NpeEZRVUZMU1N4SFFVRkxSaXhWUVVGVlJTeEhRVVYwUWl4UFFVRlBUaXhGUVVGSFR5eE5RVUZOVGl4RlFVRlRReUlzSW1acGJHVWlPaUl2UVhCd2JHbGpZWFJwYjI1ekwzQnliMnBsWTNSekwyTm9aV2xzTDNSaGNtZGxkRjlmY0dodmJtVkRiMjUwY21GamRITmZYekkwTlM5dWIyUmxYMjF2WkhWc1pYTXZZWGhwYjNNdmJHbGlMMmhsYkhCbGNuTXZZbWx1WkM1cWN5SjkiLCJcInVzZSBzdHJpY3RcIjt2YXIgdXRpbHM9cmVxdWlyZShcIi4vLi4vdXRpbHNcIik7ZnVuY3Rpb24gZW5jb2RlKGUpe3JldHVybiBlbmNvZGVVUklDb21wb25lbnQoZSkucmVwbGFjZSgvJTNBL2dpLFwiOlwiKS5yZXBsYWNlKC8lMjQvZyxcIiRcIikucmVwbGFjZSgvJTJDL2dpLFwiLFwiKS5yZXBsYWNlKC8lMjAvZyxcIitcIikucmVwbGFjZSgvJTVCL2dpLFwiW1wiKS5yZXBsYWNlKC8lNUQvZ2ksXCJdXCIpfW1vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKGUsaSxyKXtpZighaSlyZXR1cm4gZTt2YXIgdDtpZihyKXQ9cihpKTtlbHNlIGlmKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKGkpKXQ9aS50b1N0cmluZygpO2Vsc2V7dmFyIG49W107dXRpbHMuZm9yRWFjaChpLGZ1bmN0aW9uKGUsaSl7bnVsbCE9PWUmJnZvaWQgMCE9PWUmJih1dGlscy5pc0FycmF5KGUpP2krPVwiW11cIjplPVtlXSx1dGlscy5mb3JFYWNoKGUsZnVuY3Rpb24oZSl7dXRpbHMuaXNEYXRlKGUpP2U9ZS50b0lTT1N0cmluZygpOnV0aWxzLmlzT2JqZWN0KGUpJiYoZT1KU09OLnN0cmluZ2lmeShlKSksbi5wdXNoKGVuY29kZShpKStcIj1cIitlbmNvZGUoZSkpfSkpfSksdD1uLmpvaW4oXCImXCIpfWlmKHQpe3ZhciBzPWUuaW5kZXhPZihcIiNcIik7LTEhPT1zJiYoZT1lLnNsaWNlKDAscykpLGUrPSgtMT09PWUuaW5kZXhPZihcIj9cIik/XCI/XCI6XCImXCIpK3R9cmV0dXJuIGV9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1KMWFXeGtWVkpNTG1weklsMHNJbTVoYldWeklqcGJJblYwYVd4eklpd2ljbVZ4ZFdseVpTSXNJbVZ1WTI5a1pTSXNJblpoYkNJc0ltVnVZMjlrWlZWU1NVTnZiWEJ2Ym1WdWRDSXNJbkpsY0d4aFkyVWlMQ0p0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpZFhKc0lpd2ljR0Z5WVcxeklpd2ljR0Z5WVcxelUyVnlhV0ZzYVhwbGNpSXNJbk5sY21saGJHbDZaV1JRWVhKaGJYTWlMQ0pwYzFWU1RGTmxZWEpqYUZCaGNtRnRjeUlzSW5SdlUzUnlhVzVuSWl3aWNHRnlkSE1pTENKbWIzSkZZV05vSWl3aWEyVjVJaXdpYVhOQmNuSmhlU0lzSW5ZaUxDSnBjMFJoZEdVaUxDSjBiMGxUVDFOMGNtbHVaeUlzSW1selQySnFaV04wSWl3aVNsTlBUaUlzSW5OMGNtbHVaMmxtZVNJc0luQjFjMmdpTENKcWIybHVJaXdpYUdGemFHMWhjbXRKYm1SbGVDSXNJbWx1WkdWNFQyWWlMQ0p6YkdsalpTSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNZVUZGUVN4SlFVRkpRU3hOUVVGUlF5eFJRVUZSTEdOQlJYQkNMRk5CUVZORExFOUJRVTlETEVkQlEyUXNUMEZCVDBNc2JVSkJRVzFDUkN4SFFVTjRRa1VzVVVGQlVTeFJRVUZUTEV0QlEycENRU3hSUVVGUkxFOUJRVkVzUzBGRGFFSkJMRkZCUVZFc1VVRkJVeXhMUVVOcVFrRXNVVUZCVVN4UFFVRlJMRXRCUTJoQ1FTeFJRVUZSTEZGQlFWTXNTMEZEYWtKQkxGRkJRVkVzVVVGQlV5eExRVlZ5UWtNc1QwRkJUME1zVVVGQlZTeFRRVUZyUWtNc1JVRkJTME1zUlVGQlVVTXNSMEZGT1VNc1NVRkJTMFFzUlVGRFNDeFBRVUZQUkN4RlFVZFVMRWxCUVVsSExFVkJRMG9zUjBGQlNVUXNSVUZEUmtNc1JVRkJiVUpFTEVWQlFXbENSQ3hSUVVNdlFpeEhRVUZKVkN4TlFVRk5XU3hyUWtGQmEwSklMRWRCUTJwRFJTeEZRVUZ0UWtZc1JVRkJUMGtzWlVGRGNrSXNRMEZEVEN4SlFVRkpReXhMUVVWS1pDeE5RVUZOWlN4UlFVRlJUaXhGUVVGUkxGTkJRVzFDVGl4RlFVRkxZU3hIUVVOb1F5eFBRVUZTWWl4UlFVRXJRaXhKUVVGU1FTeEpRVWwyUWtnc1RVRkJUV2xDTEZGQlFWRmtMRWRCUTJoQ1lTeEhRVUZaTEV0QlJWcGlMRWRCUVU5QkxFZEJSMVJJTEUxQlFVMWxMRkZCUVZGYUxFVkJRVXNzVTBGQmIwSmxMRWRCUTJwRGJFSXNUVUZCVFcxQ0xFOUJRVTlFTEVkQlEyWkJMRVZCUVVsQkxFVkJRVVZGTEdOQlEwZHdRaXhOUVVGTmNVSXNVMEZCVTBnc1MwRkRlRUpCTEVWQlFVbEpMRXRCUVV0RExGVkJRVlZNTEVsQlJYSkNTaXhGUVVGTlZTeExRVUZMZEVJc1QwRkJUMk1zUjBGQlR5eEpRVUZOWkN4UFFVRlBaMElzVTBGSk1VTlFMRVZCUVcxQ1J5eEZRVUZOVnl4TFFVRkxMRXRCUjJoRExFZEJRVWxrTEVWQlFXdENMRU5CUTNCQ0xFbEJRVWxsTEVWQlFXZENiRUlzUlVGQlNXMUNMRkZCUVZFc1RVRkRWQ3hKUVVGdVFrUXNTVUZEUm14Q0xFVkJRVTFCTEVWQlFVbHZRaXhOUVVGTkxFVkJRVWRHTEVsQlIzSkNiRUlzUzBGQk9FSXNTVUZCZEVKQkxFVkJRVWx0UWl4UlFVRlJMRXRCUVdNc1NVRkJUU3hMUVVGUGFFSXNSVUZIYWtRc1QwRkJUMGdpTENKbWFXeGxJam9pTDBGd2NHeHBZMkYwYVc5dWN5OXdjbTlxWldOMGN5OWphR1ZwYkM5MFlYSm5aWFJmWDNCb2IyNWxRMjl1ZEhKaFkzUnpYMTh5TkRVdmJtOWtaVjl0YjJSMWJHVnpMMkY0YVc5ekwyeHBZaTlvWld4d1pYSnpMMkoxYVd4a1ZWSk1MbXB6SW4wPSIsIlwidXNlIHN0cmljdFwiO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKGUscil7cmV0dXJuIHI/ZS5yZXBsYWNlKC9cXC8rJC8sXCJcIikrXCIvXCIrci5yZXBsYWNlKC9eXFwvKy8sXCJcIik6ZX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbU52YldKcGJtVlZVa3h6TG1weklsMHNJbTVoYldWeklqcGJJbTF2WkhWc1pTSXNJbVY0Y0c5eWRITWlMQ0ppWVhObFZWSk1JaXdpY21Wc1lYUnBkbVZWVWt3aUxDSnlaWEJzWVdObElsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeGhRVk5CUVN4UFFVRlBReXhSUVVGVkxGTkJRWEZDUXl4RlFVRlRReXhIUVVNM1F5eFBRVUZQUVN4RlFVTklSQ3hGUVVGUlJTeFJRVUZSTEU5QlFWRXNTVUZCVFN4SlFVRk5SQ3hGUVVGWlF5eFJRVUZSTEU5QlFWRXNTVUZEYUVWR0lpd2labWxzWlNJNklpOUJjSEJzYVdOaGRHbHZibk12Y0hKdmFtVmpkSE12WTJobGFXd3ZkR0Z5WjJWMFgxOXdhRzl1WlVOdmJuUnlZV04wYzE5Zk1qUTFMMjV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdmFHVnNjR1Z5Y3k5amIyMWlhVzVsVlZKTWN5NXFjeUo5IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIHV0aWxzPXJlcXVpcmUoXCIuLy4uL3V0aWxzXCIpO21vZHVsZS5leHBvcnRzPXV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCk/e3dyaXRlOmZ1bmN0aW9uKGUsdCxuLGksdSxvKXt2YXIgcj1bXTtyLnB1c2goZStcIj1cIitlbmNvZGVVUklDb21wb25lbnQodCkpLHV0aWxzLmlzTnVtYmVyKG4pJiZyLnB1c2goXCJleHBpcmVzPVwiK25ldyBEYXRlKG4pLnRvR01UU3RyaW5nKCkpLHV0aWxzLmlzU3RyaW5nKGkpJiZyLnB1c2goXCJwYXRoPVwiK2kpLHV0aWxzLmlzU3RyaW5nKHUpJiZyLnB1c2goXCJkb21haW49XCIrdSksITA9PT1vJiZyLnB1c2goXCJzZWN1cmVcIiksZG9jdW1lbnQuY29va2llPXIuam9pbihcIjsgXCIpfSxyZWFkOmZ1bmN0aW9uKGUpe3ZhciB0PWRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKFwiKF58O1xcXFxzKikoXCIrZStcIik9KFteO10qKVwiKSk7cmV0dXJuIHQ/ZGVjb2RlVVJJQ29tcG9uZW50KHRbM10pOm51bGx9LHJlbW92ZTpmdW5jdGlvbihlKXt0aGlzLndyaXRlKGUsXCJcIixEYXRlLm5vdygpLTg2NGU1KX19Ont3cml0ZTpmdW5jdGlvbigpe30scmVhZDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxyZW1vdmU6ZnVuY3Rpb24oKXt9fTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltTnZiMnRwWlhNdWFuTWlYU3dpYm1GdFpYTWlPbHNpZFhScGJITWlMQ0p5WlhGMWFYSmxJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW1selUzUmhibVJoY21SQ2NtOTNjMlZ5Ulc1Mklpd2lkM0pwZEdVaUxDSnVZVzFsSWl3aWRtRnNkV1VpTENKbGVIQnBjbVZ6SWl3aWNHRjBhQ0lzSW1SdmJXRnBiaUlzSW5ObFkzVnlaU0lzSW1OdmIydHBaU0lzSW5CMWMyZ2lMQ0psYm1OdlpHVlZVa2xEYjIxd2IyNWxiblFpTENKcGMwNTFiV0psY2lJc0lrUmhkR1VpTENKMGIwZE5WRk4wY21sdVp5SXNJbWx6VTNSeWFXNW5JaXdpWkc5amRXMWxiblFpTENKcWIybHVJaXdpY21WaFpDSXNJbTFoZEdOb0lpd2lVbVZuUlhod0lpd2laR1ZqYjJSbFZWSkpRMjl0Y0c5dVpXNTBJaXdpY21WdGIzWmxJaXdpZEdocGN5SXNJbTV2ZHlKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1lVRkZRU3hKUVVGSlFTeE5RVUZSUXl4UlFVRlJMR05CUlhCQ1F5eFBRVUZQUXl4UlFVTk1TQ3hOUVVGTlNTeDNRa0ZMUVVNc1RVRkJUeXhUUVVGbFF5eEZRVUZOUXl4RlFVRlBReXhGUVVGVFF5eEZRVUZOUXl4RlFVRlJReXhIUVVONFJDeEpRVUZKUXl4TFFVTktRU3hGUVVGUFF5eExRVUZMVUN4RlFVRlBMRWxCUVUxUkxHMUNRVUZ0UWxBc1NVRkZlRU5RTEUxQlFVMWxMRk5CUVZOUUxFbEJRMnBDU1N4RlFVRlBReXhMUVVGTExGZEJRV0VzU1VGQlNVY3NTMEZCUzFJc1IwRkJVMU1zWlVGSGVrTnFRaXhOUVVGTmEwSXNVMEZCVTFRc1NVRkRha0pITEVWQlFVOURMRXRCUVVzc1VVRkJWVW9zUjBGSGNFSlVMRTFCUVUxclFpeFRRVUZUVWl4SlFVTnFRa1VzUlVGQlQwTXNTMEZCU3l4VlFVRlpTQ3hKUVVkWUxFbEJRVmhETEVkQlEwWkRMRVZCUVU5RExFdEJRVXNzVlVGSFpFMHNVMEZCVTFBc1QwRkJVMEVzUlVGQlQxRXNTMEZCU3l4UFFVZG9RME1zUzBGQlRTeFRRVUZqWml4SFFVTnNRaXhKUVVGSlowSXNSVUZCVVVnc1UwRkJVMUFzVDBGQlQxVXNUVUZCVFN4SlFVRkpReXhQUVVGUExHRkJRV1ZxUWl4RlFVRlBMR05CUTI1RkxFOUJRVkZuUWl4RlFVRlJSU3h0UWtGQmJVSkdMRVZCUVUwc1NVRkJUU3hOUVVkcVJFY3NUMEZCVVN4VFFVRm5RbTVDTEVkQlEzUkNiMElzUzBGQlMzSkNMRTFCUVUxRExFVkJRVTBzUjBGQlNWVXNTMEZCUzFjc1RVRkJVU3hWUVZGd1EzUkNMRTFCUVU4c1lVRkRVR2RDTEV0QlFVMHNWMEZCYTBJc1QwRkJUeXhOUVVNdlFra3NUMEZCVVNJc0ltWnBiR1VpT2lJdlFYQndiR2xqWVhScGIyNXpMM0J5YjJwbFkzUnpMMk5vWldsc0wzUmhjbWRsZEY5ZmNHaHZibVZEYjI1MGNtRmpkSE5mWHpJME5TOXViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJobGJIQmxjbk12WTI5dmEybGxjeTVxY3lKOSIsIlwidXNlIHN0cmljdFwiO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybi9eKFthLXpdW2EtelxcZFxcK1xcLVxcLl0qOik/XFwvXFwvL2kudGVzdCh0KX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx6UVdKemIyeDFkR1ZWVWt3dWFuTWlYU3dpYm1GdFpYTWlPbHNpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW5WeWJDSXNJblJsYzNRaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxHRkJVVUZCTEU5QlFVOURMRkZCUVZVc1UwRkJkVUpETEVkQlNYUkRMRTFCUVU4c1owTkJRV2REUXl4TFFVRkxSQ0lzSW1acGJHVWlPaUl2UVhCd2JHbGpZWFJwYjI1ekwzQnliMnBsWTNSekwyTm9aV2xzTDNSaGNtZGxkRjlmY0dodmJtVkRiMjUwY21GamRITmZYekkwTlM5dWIyUmxYMjF2WkhWc1pYTXZZWGhwYjNNdmJHbGlMMmhsYkhCbGNuTXZhWE5CWW5OdmJIVjBaVlZTVEM1cWN5SjkiLCJcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihvKXtyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgbyYmITA9PT1vLmlzQXhpb3NFcnJvcn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx6UVhocGIzTkZjbkp2Y2k1cWN5SmRMQ0p1WVcxbGN5STZXeUp0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpY0dGNWJHOWhaQ0lzSW1selFYaHBiM05GY25KdmNpSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNZVUZSUVVFc1QwRkJUME1zVVVGQlZTeFRRVUZ6UWtNc1IwRkRja01zVFVGQk1rSXNhVUpCUVZwQkxFbEJRVzFFTEVsQlFYcENRU3hGUVVGUlF5SXNJbVpwYkdVaU9pSXZRWEJ3YkdsallYUnBiMjV6TDNCeWIycGxZM1J6TDJOb1pXbHNMM1JoY21kbGRGOWZjR2h2Ym1WRGIyNTBjbUZqZEhOZlh6STBOUzl1YjJSbFgyMXZaSFZzWlhNdllYaHBiM012YkdsaUwyaGxiSEJsY25NdmFYTkJlR2x2YzBWeWNtOXlMbXB6SW4wPSIsIlwidXNlIHN0cmljdFwiO3ZhciB1dGlscz1yZXF1aXJlKFwiLi8uLi91dGlsc1wiKTttb2R1bGUuZXhwb3J0cz11dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpP2Z1bmN0aW9uKCl7dmFyIHQscj0vKG1zaWV8dHJpZGVudCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7ZnVuY3Rpb24gbyh0KXt2YXIgbz10O3JldHVybiByJiYoZS5zZXRBdHRyaWJ1dGUoXCJocmVmXCIsbyksbz1lLmhyZWYpLGUuc2V0QXR0cmlidXRlKFwiaHJlZlwiLG8pLHtocmVmOmUuaHJlZixwcm90b2NvbDplLnByb3RvY29sP2UucHJvdG9jb2wucmVwbGFjZSgvOiQvLFwiXCIpOlwiXCIsaG9zdDplLmhvc3Qsc2VhcmNoOmUuc2VhcmNoP2Uuc2VhcmNoLnJlcGxhY2UoL15cXD8vLFwiXCIpOlwiXCIsaGFzaDplLmhhc2g/ZS5oYXNoLnJlcGxhY2UoL14jLyxcIlwiKTpcIlwiLGhvc3RuYW1lOmUuaG9zdG5hbWUscG9ydDplLnBvcnQscGF0aG5hbWU6XCIvXCI9PT1lLnBhdGhuYW1lLmNoYXJBdCgwKT9lLnBhdGhuYW1lOlwiL1wiK2UucGF0aG5hbWV9fXJldHVybiB0PW8od2luZG93LmxvY2F0aW9uLmhyZWYpLGZ1bmN0aW9uKHIpe3ZhciBlPXV0aWxzLmlzU3RyaW5nKHIpP28ocik6cjtyZXR1cm4gZS5wcm90b2NvbD09PXQucHJvdG9jb2wmJmUuaG9zdD09PXQuaG9zdH19KCk6ZnVuY3Rpb24oKXtyZXR1cm4hMH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx6VlZKTVUyRnRaVTl5YVdkcGJpNXFjeUpkTENKdVlXMWxjeUk2V3lKMWRHbHNjeUlzSW5KbGNYVnBjbVVpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aWFYTlRkR0Z1WkdGeVpFSnliM2R6WlhKRmJuWWlMQ0p2Y21sbmFXNVZVa3dpTENKdGMybGxJaXdpZEdWemRDSXNJbTVoZG1sbllYUnZjaUlzSW5WelpYSkJaMlZ1ZENJc0luVnliRkJoY25OcGJtZE9iMlJsSWl3aVpHOWpkVzFsYm5RaUxDSmpjbVZoZEdWRmJHVnRaVzUwSWl3aWNtVnpiMngyWlZWU1RDSXNJblZ5YkNJc0ltaHlaV1lpTENKelpYUkJkSFJ5YVdKMWRHVWlMQ0p3Y205MGIyTnZiQ0lzSW5KbGNHeGhZMlVpTENKb2IzTjBJaXdpYzJWaGNtTm9JaXdpYUdGemFDSXNJbWh2YzNSdVlXMWxJaXdpY0c5eWRDSXNJbkJoZEdodVlXMWxJaXdpWTJoaGNrRjBJaXdpZDJsdVpHOTNJaXdpYkc5allYUnBiMjRpTENKeVpYRjFaWE4wVlZKTUlpd2ljR0Z5YzJWa0lpd2lhWE5UZEhKcGJtY2lYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMR0ZCUlVFc1NVRkJTVUVzVFVGQlVVTXNVVUZCVVN4alFVVndRa01zVDBGQlQwTXNVVUZEVEVnc1RVRkJUVWtzZFVKQlNVb3NWMEZEUlN4SlFVVkpReXhGUVVaQlF5eEZRVUZQTEd0Q1FVRnJRa01zUzBGQlMwTXNWVUZCVlVNc1YwRkRlRU5ETEVWQlFXbENReXhUUVVGVFF5eGpRVUZqTEV0QlV6VkRMRk5CUVZORExFVkJRVmRETEVkQlEyeENMRWxCUVVsRExFVkJRVTlFTEVWQlYxZ3NUMEZVU1ZJc1NVRkZSa2tzUlVGQlpVMHNZVUZCWVN4UFFVRlJSQ3hIUVVOd1EwRXNSVUZCVDB3c1JVRkJaVXNzVFVGSGVFSk1MRVZCUVdWTkxHRkJRV0VzVDBGQlVVUXNTVUZKYkVOQkxFdEJRVTFNTEVWQlFXVkxMRXRCUTNKQ1JTeFRRVUZWVUN4RlFVRmxUeXhUUVVGWFVDeEZRVUZsVHl4VFFVRlRReXhSUVVGUkxFdEJRVTBzU1VGQlRTeEhRVU5vUmtNc1MwRkJUVlFzUlVGQlpWTXNTMEZEY2tKRExFOUJRVkZXTEVWQlFXVlZMRTlCUVZOV0xFVkJRV1ZWTEU5QlFVOUdMRkZCUVZFc1RVRkJUeXhKUVVGTkxFZEJRek5GUnl4TFFVRk5XQ3hGUVVGbFZ5eExRVUZQV0N4RlFVRmxWeXhMUVVGTFNDeFJRVUZSTEV0QlFVMHNTVUZCVFN4SFFVTndSVWtzVTBGQlZWb3NSVUZCWlZrc1UwRkRla0pETEV0QlFVMWlMRVZCUVdWaExFdEJRM0pDUXl4VFFVRnBSQ3hOUVVGMFEyUXNSVUZCWldNc1UwRkJVME1zVDBGQlR5eEhRVU40UTJZc1JVRkJaV01zVTBGRFppeEpRVUZOWkN4RlFVRmxZeXhWUVZrelFpeFBRVkpCYmtJc1JVRkJXVkVzUlVGQlYyRXNUMEZCVDBNc1UwRkJVMW9zVFVGUmFFTXNVMEZCZVVKaExFZEJRemxDTEVsQlFVbERMRVZCUVZVM1FpeE5RVUZOT0VJc1UwRkJVMFlzUjBGQlpXWXNSVUZCVjJVc1IwRkJZMEVzUlVGRGNrVXNUMEZCVVVNc1JVRkJUMW9zVjBGQllWb3NSVUZCVlZrc1ZVRkRiRU5aTEVWQlFVOVdMRTlCUVZOa0xFVkJRVlZqTEUxQmFFUnNReXhIUVhORVV5eFhRVU5NTEU5QlFVOGlMQ0ptYVd4bElqb2lMMEZ3Y0d4cFkyRjBhVzl1Y3k5d2NtOXFaV04wY3k5amFHVnBiQzkwWVhKblpYUmZYM0JvYjI1bFEyOXVkSEpoWTNSelgxOHlORFV2Ym05a1pWOXRiMlIxYkdWekwyRjRhVzl6TDJ4cFlpOW9aV3h3WlhKekwybHpWVkpNVTJGdFpVOXlhV2RwYmk1cWN5SjkiLCJcInVzZSBzdHJpY3RcIjt2YXIgdXRpbHM9cmVxdWlyZShcIi4uL3V0aWxzXCIpO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dXRpbHMuZm9yRWFjaChlLGZ1bmN0aW9uKHIscyl7cyE9PXQmJnMudG9VcHBlckNhc2UoKT09PXQudG9VcHBlckNhc2UoKSYmKGVbdF09cixkZWxldGUgZVtzXSl9KX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTV2Y20xaGJHbDZaVWhsWVdSbGNrNWhiV1V1YW5NaVhTd2libUZ0WlhNaU9sc2lkWFJwYkhNaUxDSnlaWEYxYVhKbElpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SXNJbWhsWVdSbGNuTWlMQ0p1YjNKdFlXeHBlbVZrVG1GdFpTSXNJbVp2Y2tWaFkyZ2lMQ0oyWVd4MVpTSXNJbTVoYldVaUxDSjBiMVZ3Y0dWeVEyRnpaU0pkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzWVVGRlFTeEpRVUZKUVN4TlFVRlJReXhSUVVGUkxGbEJSWEJDUXl4UFFVRlBReXhSUVVGVkxGTkJRVFpDUXl4RlFVRlRReXhIUVVOeVJFd3NUVUZCVFUwc1VVRkJVVVlzUlVGQlV5eFRRVUYxUWtjc1JVRkJUME1zUjBGREwwTkJMRWxCUVZOSUxFZEJRV3RDUnl4RlFVRkxReXhuUWtGQmEwSktMRVZCUVdWSkxHZENRVU51UlV3c1JVRkJVVU1zUjBGQmEwSkZMRk5CUTI1Q1NDeEZRVUZSU1NJc0ltWnBiR1VpT2lJdlFYQndiR2xqWVhScGIyNXpMM0J5YjJwbFkzUnpMMk5vWldsc0wzUmhjbWRsZEY5ZmNHaHZibVZEYjI1MGNtRmpkSE5mWHpJME5TOXViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJobGJIQmxjbk12Ym05eWJXRnNhWHBsU0dWaFpHVnlUbUZ0WlM1cWN5SjkiLCJcInVzZSBzdHJpY3RcIjt2YXIgdXRpbHM9cmVxdWlyZShcIi4vLi4vdXRpbHNcIiksaWdub3JlRHVwbGljYXRlT2Y9W1wiYWdlXCIsXCJhdXRob3JpemF0aW9uXCIsXCJjb250ZW50LWxlbmd0aFwiLFwiY29udGVudC10eXBlXCIsXCJldGFnXCIsXCJleHBpcmVzXCIsXCJmcm9tXCIsXCJob3N0XCIsXCJpZi1tb2RpZmllZC1zaW5jZVwiLFwiaWYtdW5tb2RpZmllZC1zaW5jZVwiLFwibGFzdC1tb2RpZmllZFwiLFwibG9jYXRpb25cIixcIm1heC1mb3J3YXJkc1wiLFwicHJveHktYXV0aG9yaXphdGlvblwiLFwicmVmZXJlclwiLFwicmV0cnktYWZ0ZXJcIixcInVzZXItYWdlbnRcIl07bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIGUsaSxyLG89e307cmV0dXJuIHQ/KHV0aWxzLmZvckVhY2godC5zcGxpdChcIlxcblwiKSxmdW5jdGlvbih0KXtpZihyPXQuaW5kZXhPZihcIjpcIiksZT11dGlscy50cmltKHQuc3Vic3RyKDAscikpLnRvTG93ZXJDYXNlKCksaT11dGlscy50cmltKHQuc3Vic3RyKHIrMSkpLGUpe2lmKG9bZV0mJmlnbm9yZUR1cGxpY2F0ZU9mLmluZGV4T2YoZSk+PTApcmV0dXJuO29bZV09XCJzZXQtY29va2llXCI9PT1lPyhvW2VdP29bZV06W10pLmNvbmNhdChbaV0pOm9bZV0/b1tlXStcIiwgXCIraTppfX0pLG8pOm99O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5CaGNuTmxTR1ZoWkdWeWN5NXFjeUpkTENKdVlXMWxjeUk2V3lKMWRHbHNjeUlzSW5KbGNYVnBjbVVpTENKcFoyNXZjbVZFZFhCc2FXTmhkR1ZQWmlJc0ltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaUxDSm9aV0ZrWlhKeklpd2lhMlY1SWl3aWRtRnNJaXdpYVNJc0luQmhjbk5sWkNJc0ltWnZja1ZoWTJnaUxDSnpjR3hwZENJc0lteHBibVVpTENKcGJtUmxlRTltSWl3aWRISnBiU0lzSW5OMVluTjBjaUlzSW5SdlRHOTNaWEpEWVhObElpd2lZMjl1WTJGMElsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeGhRVVZCTEVsQlFVbEJMRTFCUVZGRExGRkJRVkVzWTBGSmFFSkRMRzFDUVVOR0xFMUJRVThzWjBKQlFXbENMR2xDUVVGclFpeGxRVUZuUWl4UFFVTXhSQ3hWUVVGWExFOUJRVkVzVDBGQlVTeHZRa0ZCY1VJc2MwSkJRMmhFTEdkQ1FVRnBRaXhYUVVGWkxHVkJRV2RDTEhOQ1FVTTNReXhWUVVGWExHTkJRV1VzWTBGblFqVkNReXhQUVVGUFF5eFJRVUZWTEZOQlFYTkNReXhIUVVOeVF5eEpRVU5KUXl4RlFVTkJReXhGUVVOQlF5eEZRVWhCUXl4TFFVdEtMRTlCUVV0S0xFZEJSVXhNTEUxQlFVMVZMRkZCUVZGTUxFVkJRVkZOTEUxQlFVMHNUVUZCVHl4VFFVRm5Ra01zUjBGTGFrUXNSMEZLUVVvc1JVRkJTVWtzUlVGQlMwTXNVVUZCVVN4TFFVTnFRbEFzUlVGQlRVNHNUVUZCVFdNc1MwRkJTMFlzUlVGQlMwY3NUMEZCVHl4RlFVRkhVQ3hKUVVGSlVTeGpRVU53UTFRc1JVRkJUVkFzVFVGQlRXTXNTMEZCUzBZc1JVRkJTMGNzVDBGQlQxQXNSVUZCU1N4SlFVVTNRa1lzUlVGQlN5eERRVU5RTEVkQlFVbEhMRVZCUVU5SUxFbEJRVkZLTEd0Q1FVRnJRbGNzVVVGQlVWQXNTVUZCVVN4RlFVTnVSQ3hQUVVkQlJ5eEZRVUZQU0N4SFFVUkhMR1ZCUVZKQkxFZEJRMkZITEVWQlFVOUlMRWRCUVU5SExFVkJRVTlJTEU5QlFWZFhMRkZCUVZGV0xFbEJSWHBEUlN4RlFVRlBTQ3hIUVVGUFJ5eEZRVUZQU0N4SFFVRlBMRXRCUVU5RExFVkJRVTFCTEV0QlMzUkVSU3hIUVc1Q1owSkJJaXdpWm1sc1pTSTZJaTlCY0hCc2FXTmhkR2x2Ym5NdmNISnZhbVZqZEhNdlkyaGxhV3d2ZEdGeVoyVjBYMTl3YUc5dVpVTnZiblJ5WVdOMGMxOWZNalExTDI1dlpHVmZiVzlrZFd4bGN5OWhlR2x2Y3k5c2FXSXZhR1ZzY0dWeWN5OXdZWEp6WlVobFlXUmxjbk11YW5NaWZRPT0iLCJcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihuKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIG4uYXBwbHkobnVsbCx0KX19O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5Od2NtVmhaQzVxY3lKZExDSnVZVzFsY3lJNld5SnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2lZMkZzYkdKaFkyc2lMQ0poY25JaUxDSmhjSEJzZVNKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1lVRnpRa0ZCTEU5QlFVOURMRkZCUVZVc1UwRkJaMEpETEVkQlF5OUNMRTlCUVU4c1UwRkJZME1zUjBGRGJrSXNUMEZCVDBRc1JVRkJVMFVzVFVGQlRTeExRVUZOUkNJc0ltWnBiR1VpT2lJdlFYQndiR2xqWVhScGIyNXpMM0J5YjJwbFkzUnpMMk5vWldsc0wzUmhjbWRsZEY5ZmNHaHZibVZEYjI1MGNtRmpkSE5mWHpJME5TOXViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJobGJIQmxjbk12YzNCeVpXRmtMbXB6SW4wPSIsIlwidXNlIHN0cmljdFwiO3ZhciBwa2c9cmVxdWlyZShcIi4vLi4vLi4vcGFja2FnZS5qc29uXCIpLHZhbGlkYXRvcnM9e307W1wib2JqZWN0XCIsXCJib29sZWFuXCIsXCJudW1iZXJcIixcImZ1bmN0aW9uXCIsXCJzdHJpbmdcIixcInN5bWJvbFwiXS5mb3JFYWNoKGZ1bmN0aW9uKHIsZSl7dmFsaWRhdG9yc1tyXT1mdW5jdGlvbihuKXtyZXR1cm4gdHlwZW9mIG49PT1yfHxcImFcIisoZTwxP1wibiBcIjpcIiBcIikrcn19KTt2YXIgZGVwcmVjYXRlZFdhcm5pbmdzPXt9LGN1cnJlbnRWZXJBcnI9cGtnLnZlcnNpb24uc3BsaXQoXCIuXCIpO2Z1bmN0aW9uIGlzT2xkZXJWZXJzaW9uKHIsZSl7Zm9yKHZhciBuPWU/ZS5zcGxpdChcIi5cIik6Y3VycmVudFZlckFycixvPXIuc3BsaXQoXCIuXCIpLHQ9MDt0PDM7dCsrKXtpZihuW3RdPm9bdF0pcmV0dXJuITA7aWYoblt0XTxvW3RdKXJldHVybiExfXJldHVybiExfWZ1bmN0aW9uIGFzc2VydE9wdGlvbnMocixlLG4pe2lmKFwib2JqZWN0XCIhPXR5cGVvZiByKXRocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb25zIG11c3QgYmUgYW4gb2JqZWN0XCIpO2Zvcih2YXIgbz1PYmplY3Qua2V5cyhyKSx0PW8ubGVuZ3RoO3QtLSA+MDspe3ZhciBpPW9bdF0scz1lW2ldO2lmKHMpe3ZhciBhPXJbaV0sdT12b2lkIDA9PT1hfHxzKGEsaSxyKTtpZighMCE9PXUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBcIitpK1wiIG11c3QgYmUgXCIrdSl9ZWxzZSBpZighMCE9PW4pdGhyb3cgRXJyb3IoXCJVbmtub3duIG9wdGlvbiBcIitpKX19dmFsaWRhdG9ycy50cmFuc2l0aW9uYWw9ZnVuY3Rpb24ocixlLG4pe3ZhciBvPWUmJmlzT2xkZXJWZXJzaW9uKGUpO2Z1bmN0aW9uIHQocixlKXtyZXR1cm5cIltBeGlvcyB2XCIrcGtnLnZlcnNpb24rXCJdIFRyYW5zaXRpb25hbCBvcHRpb24gJ1wiK3IrXCInXCIrZSsobj9cIi4gXCIrbjpcIlwiKX1yZXR1cm4gZnVuY3Rpb24obixpLHMpe2lmKCExPT09cil0aHJvdyBuZXcgRXJyb3IodChpLFwiIGhhcyBiZWVuIHJlbW92ZWQgaW4gXCIrZSkpO3JldHVybiBvJiYhZGVwcmVjYXRlZFdhcm5pbmdzW2ldJiYoZGVwcmVjYXRlZFdhcm5pbmdzW2ldPSEwLGNvbnNvbGUud2Fybih0KGksXCIgaGFzIGJlZW4gZGVwcmVjYXRlZCBzaW5jZSB2XCIrZStcIiBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZWFyIGZ1dHVyZVwiKSkpLCFyfHxyKG4saSxzKX19LG1vZHVsZS5leHBvcnRzPXtpc09sZGVyVmVyc2lvbjppc09sZGVyVmVyc2lvbixhc3NlcnRPcHRpb25zOmFzc2VydE9wdGlvbnMsdmFsaWRhdG9yczp2YWxpZGF0b3JzfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluWmhiR2xrWVhSdmNpNXFjeUpkTENKdVlXMWxjeUk2V3lKd2EyY2lMQ0p5WlhGMWFYSmxJaXdpZG1Gc2FXUmhkRzl5Y3lJc0ltWnZja1ZoWTJnaUxDSjBlWEJsSWl3aWFTSXNJblJvYVc1bklpd2laR1Z3Y21WallYUmxaRmRoY201cGJtZHpJaXdpWTNWeWNtVnVkRlpsY2tGeWNpSXNJblpsY25OcGIyNGlMQ0p6Y0d4cGRDSXNJbWx6VDJ4a1pYSldaWEp6YVc5dUlpd2lkR2hoYmxabGNuTnBiMjRpTENKd2EyZFdaWEp6YVc5dVFYSnlJaXdpWkdWemRGWmxjaUlzSW1GemMyVnlkRTl3ZEdsdmJuTWlMQ0p2Y0hScGIyNXpJaXdpYzJOb1pXMWhJaXdpWVd4c2IzZFZibXR1YjNkdUlpd2lWSGx3WlVWeWNtOXlJaXdpYTJWNWN5SXNJazlpYW1WamRDSXNJbXhsYm1kMGFDSXNJbTl3ZENJc0luWmhiR2xrWVhSdmNpSXNJblpoYkhWbElpd2ljbVZ6ZFd4MElpd2lkVzVrWldacGJtVmtJaXdpUlhKeWIzSWlMQ0owY21GdWMybDBhVzl1WVd3aUxDSnRaWE56WVdkbElpd2lhWE5FWlhCeVpXTmhkR1ZrSWl3aVptOXliV0YwVFdWemMyRm5aU0lzSW1SbGMyTWlMQ0p2Y0hSeklpd2lZMjl1YzI5c1pTSXNJbmRoY200aUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25SeklsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeGhRVVZCTEVsQlFVbEJMRWxCUVUxRExGRkJRVkVzZDBKQlJXUkRMR1ZCUjBnc1UwRkJWU3hWUVVGWExGTkJRVlVzVjBGQldTeFRRVUZWTEZWQlFWVkRMRkZCUVZFc1UwRkJVME1zUlVGQlRVTXNSMEZEY2taSUxGZEJRVmRGTEVkQlFWRXNVMEZCYlVKRkxFZEJRM0JETEdOQlFXTkJMRWxCUVZWR0xFZEJRVkVzUzBGQlQwTXNSVUZCU1N4RlFVRkpMRXRCUVU4c1MwRkJUMFFzUzBGSmFrVXNTVUZCU1Vjc2MwSkJRMEZETEdOQlFXZENVaXhKUVVGSlV5eFJRVUZSUXl4TlFVRk5MRXRCVVhSRExGTkJRVk5ETEdWQlFXVkdMRVZCUVZOSExFZEJSeTlDTEVsQlJrRXNTVUZCU1VNc1JVRkJaMEpFTEVWQlFXTkJMRVZCUVZsR0xFMUJRVTBzUzBGQlQwWXNZMEZEZGtSTkxFVkJRVlZNTEVWQlFWRkRMRTFCUVUwc1MwRkRia0pNTEVWQlFVa3NSVUZCUjBFc1JVRkJTU3hGUVVGSFFTeEpRVUZMTEVOQlF6RkNMRWRCUVVsUkxFVkJRV05TTEVkQlFVdFRMRVZCUVZGVUxFZEJRemRDTEU5QlFVOHNSVUZEUml4SFFVRkpVU3hGUVVGalVpeEhRVUZMVXl4RlFVRlJWQ3hIUVVOd1F5eFBRVUZQTEVWQlIxZ3NUMEZCVHl4RlFUWkRWQ3hUUVVGVFZTeGpRVUZqUXl4RlFVRlRReXhGUVVGUlF5eEhRVU4wUXl4SFFVRjFRaXhwUWtGQldrWXNSVUZEVkN4TlFVRk5MRWxCUVVsSExGVkJRVlVzTmtKQlNYUkNMRWxCUmtFc1NVRkJTVU1zUlVGQlQwTXNUMEZCVDBRc1MwRkJTMG9zUjBGRGJrSllMRVZCUVVsbExFVkJRVXRGTEU5QlEwNXFRaXhMUVVGTkxFZEJRVWNzUTBGRFpDeEpRVUZKYTBJc1JVRkJUVWdzUlVGQlMyWXNSMEZEV0cxQ0xFVkJRVmxRTEVWQlFVOU5MRWRCUTNaQ0xFZEJRVWxETEVWQlFVb3NRMEZEUlN4SlFVRkpReXhGUVVGUlZDeEZRVUZSVHl4SFFVTm9Ra2NzVDBGQmJVSkRMRWxCUVZaR0xFZEJRWFZDUkN4RlFVRlZReXhGUVVGUFJpeEZRVUZMVUN4SFFVTXhSQ3hKUVVGbExFbEJRVmhWTEVWQlEwWXNUVUZCVFN4SlFVRkpVQ3hWUVVGVkxGVkJRVmxKTEVWQlFVMHNXVUZCWTBjc1VVRkplRVFzU1VGQmNVSXNTVUZCYWtKU0xFVkJRMFlzVFVGQlRWVXNUVUZCVFN4clFrRkJiMEpNTEVsQmNrUjBRM0pDTEZkQlFWY3lRaXhoUVVGbExGTkJRWE5DVEN4RlFVRlhaaXhGUVVGVGNVSXNSMEZEYkVVc1NVRkJTVU1zUlVGQlpYUkNMRWRCUVZkRkxHVkJRV1ZHTEVkQlJUZERMRk5CUVZOMVFpeEZRVUZqVkN4RlFVRkxWU3hIUVVNeFFpeE5RVUZQTEZkQlFXRnFReXhKUVVGSlV5eFJRVUZWTERCQ1FVRTJRbU1zUlVGQlRTeEpRVUZQVlN4SFFVRlJTQ3hGUVVGVkxFdEJRVTlCTEVWQlFWVXNTVUZKYWtnc1QwRkJUeXhUUVVGVFRDeEZRVUZQUml4RlFVRkxWeXhIUVVNeFFpeEpRVUZyUWl4SlFVRmtWaXhGUVVOR0xFMUJRVTBzU1VGQlNVa3NUVUZCVFVrc1JVRkJZMVFzUlVGQlN5eDNRa0ZCTUVKa0xFbEJZeTlFTEU5QldFbHpRaXhKUVVGcFFuaENMRzFDUVVGdFFtZENMRXRCUTNSRGFFSXNiVUpCUVcxQ1owSXNTVUZCVHl4RlFVVXhRbGtzVVVGQlVVTXNTMEZEVGtvc1JVRkRSVlFzUlVGRFFTd3JRa0ZCYVVOa0xFVkJRVlVzT0VOQlN6RkRaU3hIUVVGWlFTeEZRVUZWUXl4RlFVRlBSaXhGUVVGTFZ5eExRV3RETjBOSExFOUJRVTlETEZOQlEwd3pRaXhsUVVGblFrRXNaVUZEYUVKSkxHTkJRV1ZCTEdOQlEyWmlMRmRCUVZsQklpd2labWxzWlNJNklpOUJjSEJzYVdOaGRHbHZibk12Y0hKdmFtVmpkSE12WTJobGFXd3ZkR0Z5WjJWMFgxOXdhRzl1WlVOdmJuUnlZV04wYzE5Zk1qUTFMMjV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdmFHVnNjR1Z5Y3k5MllXeHBaR0YwYjNJdWFuTWlmUT09IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIGJpbmQ9cmVxdWlyZShcIi4vaGVscGVycy9iaW5kXCIpLHRvU3RyaW5nPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7ZnVuY3Rpb24gaXNBcnJheShyKXtyZXR1cm5cIltvYmplY3QgQXJyYXldXCI9PT10b1N0cmluZy5jYWxsKHIpfWZ1bmN0aW9uIGlzVW5kZWZpbmVkKHIpe3JldHVybiB2b2lkIDA9PT1yfWZ1bmN0aW9uIGlzQnVmZmVyKHIpe3JldHVybiBudWxsIT09ciYmIWlzVW5kZWZpbmVkKHIpJiZudWxsIT09ci5jb25zdHJ1Y3RvciYmIWlzVW5kZWZpbmVkKHIuY29uc3RydWN0b3IpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmNvbnN0cnVjdG9yLmlzQnVmZmVyJiZyLmNvbnN0cnVjdG9yLmlzQnVmZmVyKHIpfWZ1bmN0aW9uIGlzQXJyYXlCdWZmZXIocil7cmV0dXJuXCJbb2JqZWN0IEFycmF5QnVmZmVyXVwiPT09dG9TdHJpbmcuY2FsbChyKX1mdW5jdGlvbiBpc0Zvcm1EYXRhKHIpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBGb3JtRGF0YSYmciBpbnN0YW5jZW9mIEZvcm1EYXRhfWZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJWaWV3KHIpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBBcnJheUJ1ZmZlciYmQXJyYXlCdWZmZXIuaXNWaWV3P0FycmF5QnVmZmVyLmlzVmlldyhyKTpyJiZyLmJ1ZmZlciYmci5idWZmZXIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcn1mdW5jdGlvbiBpc1N0cmluZyhyKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2Ygcn1mdW5jdGlvbiBpc051bWJlcihyKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2Ygcn1mdW5jdGlvbiBpc09iamVjdChyKXtyZXR1cm4gbnVsbCE9PXImJlwib2JqZWN0XCI9PXR5cGVvZiByfWZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qocil7aWYoXCJbb2JqZWN0IE9iamVjdF1cIiE9PXRvU3RyaW5nLmNhbGwocikpcmV0dXJuITE7dmFyIHQ9T2JqZWN0LmdldFByb3RvdHlwZU9mKHIpO3JldHVybiBudWxsPT09dHx8dD09PU9iamVjdC5wcm90b3R5cGV9ZnVuY3Rpb24gaXNEYXRlKHIpe3JldHVyblwiW29iamVjdCBEYXRlXVwiPT09dG9TdHJpbmcuY2FsbChyKX1mdW5jdGlvbiBpc0ZpbGUocil7cmV0dXJuXCJbb2JqZWN0IEZpbGVdXCI9PT10b1N0cmluZy5jYWxsKHIpfWZ1bmN0aW9uIGlzQmxvYihyKXtyZXR1cm5cIltvYmplY3QgQmxvYl1cIj09PXRvU3RyaW5nLmNhbGwocil9ZnVuY3Rpb24gaXNGdW5jdGlvbihyKXtyZXR1cm5cIltvYmplY3QgRnVuY3Rpb25dXCI9PT10b1N0cmluZy5jYWxsKHIpfWZ1bmN0aW9uIGlzU3RyZWFtKHIpe3JldHVybiBpc09iamVjdChyKSYmaXNGdW5jdGlvbihyLnBpcGUpfWZ1bmN0aW9uIGlzVVJMU2VhcmNoUGFyYW1zKHIpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBVUkxTZWFyY2hQYXJhbXMmJnIgaW5zdGFuY2VvZiBVUkxTZWFyY2hQYXJhbXN9ZnVuY3Rpb24gdHJpbShyKXtyZXR1cm4gci50cmltP3IudHJpbSgpOnIucmVwbGFjZSgvXlxccyt8XFxzKyQvZyxcIlwiKX1mdW5jdGlvbiBpc1N0YW5kYXJkQnJvd3NlckVudigpe3JldHVybihcInVuZGVmaW5lZFwiPT10eXBlb2YgbmF2aWdhdG9yfHxcIlJlYWN0TmF0aXZlXCIhPT1uYXZpZ2F0b3IucHJvZHVjdCYmXCJOYXRpdmVTY3JpcHRcIiE9PW5hdmlnYXRvci5wcm9kdWN0JiZcIk5TXCIhPT1uYXZpZ2F0b3IucHJvZHVjdCkmJihcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZcInVuZGVmaW5lZFwiIT10eXBlb2YgZG9jdW1lbnQpfWZ1bmN0aW9uIGZvckVhY2gocix0KXtpZihudWxsIT09ciYmdm9pZCAwIT09cilpZihcIm9iamVjdFwiIT10eXBlb2YgciYmKHI9W3JdKSxpc0FycmF5KHIpKWZvcih2YXIgZT0wLGk9ci5sZW5ndGg7ZTxpO2UrKyl0LmNhbGwobnVsbCxyW2VdLGUscik7ZWxzZSBmb3IodmFyIG4gaW4gcilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocixuKSYmdC5jYWxsKG51bGwscltuXSxuLHIpfWZ1bmN0aW9uIG1lcmdlKCl7dmFyIHI9e307ZnVuY3Rpb24gdCh0LGUpe2lzUGxhaW5PYmplY3QocltlXSkmJmlzUGxhaW5PYmplY3QodCk/cltlXT1tZXJnZShyW2VdLHQpOmlzUGxhaW5PYmplY3QodCk/cltlXT1tZXJnZSh7fSx0KTppc0FycmF5KHQpP3JbZV09dC5zbGljZSgpOnJbZV09dH1mb3IodmFyIGU9MCxpPWFyZ3VtZW50cy5sZW5ndGg7ZTxpO2UrKylmb3JFYWNoKGFyZ3VtZW50c1tlXSx0KTtyZXR1cm4gcn1mdW5jdGlvbiBleHRlbmQocix0LGUpe3JldHVybiBmb3JFYWNoKHQsZnVuY3Rpb24odCxpKXtyW2ldPWUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/YmluZCh0LGUpOnR9KSxyfWZ1bmN0aW9uIHN0cmlwQk9NKHIpe3JldHVybiA2NTI3OT09PXIuY2hhckNvZGVBdCgwKSYmKHI9ci5zbGljZSgxKSkscn1tb2R1bGUuZXhwb3J0cz17aXNBcnJheTppc0FycmF5LGlzQXJyYXlCdWZmZXI6aXNBcnJheUJ1ZmZlcixpc0J1ZmZlcjppc0J1ZmZlcixpc0Zvcm1EYXRhOmlzRm9ybURhdGEsaXNBcnJheUJ1ZmZlclZpZXc6aXNBcnJheUJ1ZmZlclZpZXcsaXNTdHJpbmc6aXNTdHJpbmcsaXNOdW1iZXI6aXNOdW1iZXIsaXNPYmplY3Q6aXNPYmplY3QsaXNQbGFpbk9iamVjdDppc1BsYWluT2JqZWN0LGlzVW5kZWZpbmVkOmlzVW5kZWZpbmVkLGlzRGF0ZTppc0RhdGUsaXNGaWxlOmlzRmlsZSxpc0Jsb2I6aXNCbG9iLGlzRnVuY3Rpb246aXNGdW5jdGlvbixpc1N0cmVhbTppc1N0cmVhbSxpc1VSTFNlYXJjaFBhcmFtczppc1VSTFNlYXJjaFBhcmFtcyxpc1N0YW5kYXJkQnJvd3NlckVudjppc1N0YW5kYXJkQnJvd3NlckVudixmb3JFYWNoOmZvckVhY2gsbWVyZ2U6bWVyZ2UsZXh0ZW5kOmV4dGVuZCx0cmltOnRyaW0sc3RyaXBCT006c3RyaXBCT019O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5WMGFXeHpMbXB6SWwwc0ltNWhiV1Z6SWpwYkltSnBibVFpTENKeVpYRjFhWEpsSWl3aWRHOVRkSEpwYm1jaUxDSlBZbXBsWTNRaUxDSndjbTkwYjNSNWNHVWlMQ0pwYzBGeWNtRjVJaXdpZG1Gc0lpd2lZMkZzYkNJc0ltbHpWVzVrWldacGJtVmtJaXdpYVhOQ2RXWm1aWElpTENKamIyNXpkSEoxWTNSdmNpSXNJbWx6UVhKeVlYbENkV1ptWlhJaUxDSnBjMFp2Y20xRVlYUmhJaXdpUm05eWJVUmhkR0VpTENKcGMwRnljbUY1UW5WbVptVnlWbWxsZHlJc0lrRnljbUY1UW5WbVptVnlJaXdpYVhOV2FXVjNJaXdpWW5WbVptVnlJaXdpYVhOVGRISnBibWNpTENKcGMwNTFiV0psY2lJc0ltbHpUMkpxWldOMElpd2lhWE5RYkdGcGJrOWlhbVZqZENJc0ltZGxkRkJ5YjNSdmRIbHdaVTltSWl3aWFYTkVZWFJsSWl3aWFYTkdhV3hsSWl3aWFYTkNiRzlpSWl3aWFYTkdkVzVqZEdsdmJpSXNJbWx6VTNSeVpXRnRJaXdpY0dsd1pTSXNJbWx6VlZKTVUyVmhjbU5vVUdGeVlXMXpJaXdpVlZKTVUyVmhjbU5vVUdGeVlXMXpJaXdpZEhKcGJTSXNJbk4wY2lJc0luSmxjR3hoWTJVaUxDSnBjMU4wWVc1a1lYSmtRbkp2ZDNObGNrVnVkaUlzSW01aGRtbG5ZWFJ2Y2lJc0luQnliMlIxWTNRaUxDSjNhVzVrYjNjaUxDSmtiMk4xYldWdWRDSXNJbVp2Y2tWaFkyZ2lMQ0p2WW1vaUxDSm1iaUlzSW1raUxDSnNJaXdpYkdWdVozUm9JaXdpYTJWNUlpd2lhR0Z6VDNkdVVISnZjR1Z5ZEhraUxDSnRaWEpuWlNJc0luSmxjM1ZzZENJc0ltRnpjMmxuYmxaaGJIVmxJaXdpYzJ4cFkyVWlMQ0poY21kMWJXVnVkSE1pTENKbGVIUmxibVFpTENKaElpd2lZaUlzSW5Sb2FYTkJjbWNpTENKemRISnBjRUpQVFNJc0ltTnZiblJsYm5RaUxDSmphR0Z5UTI5a1pVRjBJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzWVVGRlFTeEpRVUZKUVN4TFFVRlBReXhSUVVGUkxHdENRVWxtUXl4VFFVRlhReXhQUVVGUFF5eFZRVUZWUml4VFFWRm9ReXhUUVVGVFJ5eFJRVUZSUXl4SFFVTm1MRTFCUVRoQ0xHMUNRVUYyUWtvc1UwRkJVMHNzUzBGQlMwUXNSMEZUZGtJc1UwRkJVMFVzV1VGQldVWXNSMEZEYmtJc1dVRkJjMElzU1VGQlVrRXNSVUZUYUVJc1UwRkJVMGNzVTBGQlUwZ3NSMEZEYUVJc1QwRkJaU3hQUVVGU1FTeEpRVUZwUWtVc1dVRkJXVVlzU1VGQk5FSXNUMEZCY0VKQkxFVkJRVWxKTEdOQlFYbENSaXhaUVVGWlJpeEZRVUZKU1N4alFVTm9SQ3h0UWtGQk4wSktMRVZCUVVsSkxGbEJRVmxFTEZWQlFUSkNTQ3hGUVVGSlNTeFpRVUZaUkN4VFFVRlRTQ3hIUVZOc1JpeFRRVUZUU3l4alFVRmpUQ3hIUVVOeVFpeE5RVUU0UWl4NVFrRkJka0pLTEZOQlFWTkxMRXRCUVV0RUxFZEJVM1pDTEZOQlFWTk5MRmRCUVZkT0xFZEJRMnhDTEUxQlFUUkNMRzlDUVVGaVR5eFZRVUU0UWxBc1lVRkJaVThzVTBGVE9VUXNVMEZCVTBNc2EwSkJRV3RDVWl4SFFVOTZRaXhOUVV3MFFpeHZRa0ZCYUVKVExHRkJRV2xEUVN4WlFVRnJRaXhQUVVOd1JFRXNXVUZCV1VNc1QwRkJUMVlzUjBGRmJrSXNSMEZCVlVFc1JVRkJWU3hSUVVGTlFTeEZRVUZKVnl4clFrRkJhMEpHTEZsQlZ6ZEVMRk5CUVZOSExGTkJRVk5hTEVkQlEyaENMRTFCUVhOQ0xHbENRVUZTUVN4RlFWTm9RaXhUUVVGVFlTeFRRVUZUWWl4SFFVTm9RaXhOUVVGelFpeHBRa0ZCVWtFc1JVRlRhRUlzVTBGQlUyTXNVMEZCVTJRc1IwRkRhRUlzVDBGQlpTeFBRVUZTUVN4SFFVRXJRaXhwUWtGQlVrRXNSVUZUYUVNc1UwRkJVMlVzWTBGQlkyWXNSMEZEY2tJc1IwRkJNa0lzYjBKQlFYWkNTaXhUUVVGVFN5eExRVUZMUkN4SFFVTm9RaXhQUVVGUExFVkJSMVFzU1VGQlNVWXNSVUZCV1VRc1QwRkJUMjFDTEdWQlFXVm9RaXhIUVVOMFF5eFBRVUZ4UWl4UFFVRmtSaXhIUVVGelFrRXNTVUZCWTBRc1QwRkJUME1zVlVGVGNFUXNVMEZCVTIxQ0xFOUJRVTlxUWl4SFFVTmtMRTFCUVRoQ0xHdENRVUYyUWtvc1UwRkJVMHNzUzBGQlMwUXNSMEZUZGtJc1UwRkJVMnRDTEU5QlFVOXNRaXhIUVVOa0xFMUJRVGhDTEd0Q1FVRjJRa29zVTBGQlUwc3NTMEZCUzBRc1IwRlRka0lzVTBGQlUyMUNMRTlCUVU5dVFpeEhRVU5rTEUxQlFUaENMR3RDUVVGMlFrb3NVMEZCVTBzc1MwRkJTMFFzUjBGVGRrSXNVMEZCVTI5Q0xGZEJRVmR3UWl4SFFVTnNRaXhOUVVFNFFpeHpRa0ZCZGtKS0xGTkJRVk5MTEV0QlFVdEVMRWRCVTNaQ0xGTkJRVk54UWl4VFFVRlRja0lzUjBGRGFFSXNUMEZCVDJNc1UwRkJVMlFzU1VGQlVXOUNMRmRCUVZkd1FpeEZRVUZKYzBJc1RVRlRla01zVTBGQlUwTXNhMEpCUVd0Q2RrSXNSMEZEZWtJc1RVRkJhME1zYjBKQlFYQkNkMElzYVVKQlFXMURlRUlzWVVGQlpYZENMR2RDUVZOc1JTeFRRVUZUUXl4TFFVRkxReXhIUVVOYUxFOUJRVTlCTEVWQlFVbEVMRXRCUVU5RExFVkJRVWxFTEU5QlFWTkRMRVZCUVVsRExGRkJRVkVzWVVGQll5eEpRV3RDTTBRc1UwRkJVME1zZFVKQlExQXNUMEZCZVVJc2IwSkJRV1JETEZkQlFXOUVMR2RDUVVGMFFrRXNWVUZCVlVNc1UwRkRXU3hwUWtGQmRFSkVMRlZCUVZWRExGTkJRMWtzVDBGQmRFSkVMRlZCUVZWRExGZEJTUzlDTEc5Q1FVRllReXhSUVVOaExHOUNRVUZpUXl4VlFXZENXQ3hUUVVGVFF5eFJRVUZSUXl4RlFVRkxReXhIUVVWd1FpeEhRVUZaTEU5QlFWSkVMRkZCUVN0Q0xFbEJRVkpCTEVWQlZUTkNMRWRCVEcxQ0xHbENRVUZTUVN4SlFVVlVRU3hIUVVGUFFTeEpRVWRNYmtNc1VVRkJVVzFETEVkQlJWWXNTVUZCU3l4SlFVRkpSU3hGUVVGSkxFVkJRVWRETEVWQlFVbElMRVZCUVVsSkxFOUJRVkZHTEVWQlFVbERMRVZCUVVkRUxFbEJRM0pEUkN4RlFVRkhiRU1zUzBGQlN5eExRVUZOYVVNc1JVRkJTVVVzUjBGQlNVRXNSVUZCUjBZc1VVRkpNMElzU1VGQlN5eEpRVUZKU3l4TFFVRlBUQ3hGUVVOV2NrTXNUMEZCVDBNc1ZVRkJWVEJETEdWQlFXVjJReXhMUVVGTGFVTXNSVUZCUzBzc1NVRkROVU5LTEVWQlFVZHNReXhMUVVGTExFdEJRVTFwUXl4RlFVRkpTeXhIUVVGTlFTeEZRVUZMVEN4SFFYVkNja01zVTBGQlUwOHNVVUZEVUN4SlFVRkpReXhMUVVOS0xGTkJRVk5ETEVWQlFWa3pReXhGUVVGTGRVTXNSMEZEY0VKNFFpeGpRVUZqTWtJc1JVRkJUMGdzUzBGQlUzaENMR05CUVdObUxFZEJRemxETUVNc1JVRkJUMGdzUjBGQlQwVXNUVUZCVFVNc1JVRkJUMGdzUjBGQlRYWkRMRWRCUTNoQ1pTeGpRVUZqWml4SFFVTjJRakJETEVWQlFVOUlMRWRCUVU5RkxGTkJRVlY2UXl4SFFVTm1SQ3hSUVVGUlF5eEhRVU5xUWpCRExFVkJRVTlJTEVkQlFVOTJReXhGUVVGSk5FTXNVVUZGYkVKR0xFVkJRVTlJTEVkQlFVOTJReXhGUVVsc1FpeEpRVUZMTEVsQlFVbHZReXhGUVVGSkxFVkJRVWRETEVWQlFVbFJMRlZCUVZWUUxFOUJRVkZHTEVWQlFVbERMRVZCUVVkRUxFbEJRek5EU0N4UlFVRlJXU3hWUVVGVlZDeEhRVUZKVHl4SFFVVjRRaXhQUVVGUFJDeEZRVmRVTEZOQlFWTkpMRTlCUVU5RExFVkJRVWRETEVWQlFVZERMRWRCVVhCQ0xFOUJVRUZvUWl4UlFVRlJaU3hGUVVGSExGTkJRWEZDYUVRc1JVRkJTM1ZETEVkQlJXcERVU3hGUVVGRlVpeEhRVVJCVlN4SFFVRXdRaXh0UWtGQlVtcEVMRVZCUTFoT0xFdEJRVXROTEVWQlFVdHBSQ3hIUVVWV2FrUXNTVUZIVGl0RExFVkJVMVFzVTBGQlUwY3NVMEZCVTBNc1IwRkphRUlzVDBGSU9FSXNVVUZCTVVKQkxFVkJRVkZETEZkQlFWY3NTMEZEY2tKRUxFVkJRVlZCTEVWQlFWRlFMRTFCUVUwc1NVRkZia0pQTEVWQlIxUkZMRTlCUVU5RExGTkJRMHgyUkN4UlFVRlRRU3hSUVVOVVRTeGpRVUZsUVN4alFVTm1SaXhUUVVGVlFTeFRRVU5XUnl4WFFVRlpRU3hYUVVOYVJTeHJRa0ZCYlVKQkxHdENRVU51UWtrc1UwRkJWVUVzVTBGRFZrTXNVMEZCVlVFc1UwRkRWa01zVTBGQlZVRXNVMEZEVmtNc1kwRkJaVUVzWTBGRFptSXNXVUZCWVVFc1dVRkRZbVVzVDBGQlVVRXNUMEZEVWtNc1QwRkJVVUVzVDBGRFVrTXNUMEZCVVVFc1QwRkRVa01zVjBGQldVRXNWMEZEV2tNc1UwRkJWVUVzVTBGRFZrVXNhMEpCUVcxQ1FTeHJRa0ZEYmtKTExIRkNRVUZ6UWtFc2NVSkJRM1JDU3l4UlFVRlRRU3hSUVVOVVVTeE5RVUZQUVN4TlFVTlFTeXhQUVVGUlFTeFBRVU5TY2tJc1MwRkJUVUVzUzBGRFRubENMRk5CUVZWQklpd2labWxzWlNJNklpOUJjSEJzYVdOaGRHbHZibk12Y0hKdmFtVmpkSE12WTJobGFXd3ZkR0Z5WjJWMFgxOXdhRzl1WlVOdmJuUnlZV04wYzE5Zk1qUTFMMjV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdmRYUnBiSE11YW5NaWZRPT0iLCJtb2R1bGUuZXhwb3J0cz17XG4gIFwibmFtZVwiOiBcImF4aW9zXCIsXG4gIFwidmVyc2lvblwiOiBcIjAuMjEuNFwiLFxuICBcImRlc2NyaXB0aW9uXCI6IFwiUHJvbWlzZSBiYXNlZCBIVFRQIGNsaWVudCBmb3IgdGhlIGJyb3dzZXIgYW5kIG5vZGUuanNcIixcbiAgXCJtYWluXCI6IFwiaW5kZXguanNcIixcbiAgXCJzY3JpcHRzXCI6IHtcbiAgICBcInRlc3RcIjogXCJncnVudCB0ZXN0XCIsXG4gICAgXCJzdGFydFwiOiBcIm5vZGUgLi9zYW5kYm94L3NlcnZlci5qc1wiLFxuICAgIFwiYnVpbGRcIjogXCJOT0RFX0VOVj1wcm9kdWN0aW9uIGdydW50IGJ1aWxkXCIsXG4gICAgXCJwcmV2ZXJzaW9uXCI6IFwibnBtIHRlc3RcIixcbiAgICBcInZlcnNpb25cIjogXCJucG0gcnVuIGJ1aWxkICYmIGdydW50IHZlcnNpb24gJiYgZ2l0IGFkZCAtQSBkaXN0ICYmIGdpdCBhZGQgQ0hBTkdFTE9HLm1kIGJvd2VyLmpzb24gcGFja2FnZS5qc29uXCIsXG4gICAgXCJwb3N0dmVyc2lvblwiOiBcImdpdCBwdXNoICYmIGdpdCBwdXNoIC0tdGFnc1wiLFxuICAgIFwiZXhhbXBsZXNcIjogXCJub2RlIC4vZXhhbXBsZXMvc2VydmVyLmpzXCIsXG4gICAgXCJjb3ZlcmFsbHNcIjogXCJjYXQgY292ZXJhZ2UvbGNvdi5pbmZvIHwgLi9ub2RlX21vZHVsZXMvY292ZXJhbGxzL2Jpbi9jb3ZlcmFsbHMuanNcIixcbiAgICBcImZpeFwiOiBcImVzbGludCAtLWZpeCBsaWIvKiovKi5qc1wiXG4gIH0sXG4gIFwicmVwb3NpdG9yeVwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiZ2l0XCIsXG4gICAgXCJ1cmxcIjogXCJodHRwczovL2dpdGh1Yi5jb20vYXhpb3MvYXhpb3MuZ2l0XCJcbiAgfSxcbiAgXCJrZXl3b3Jkc1wiOiBbXG4gICAgXCJ4aHJcIixcbiAgICBcImh0dHBcIixcbiAgICBcImFqYXhcIixcbiAgICBcInByb21pc2VcIixcbiAgICBcIm5vZGVcIlxuICBdLFxuICBcImF1dGhvclwiOiBcIk1hdHQgWmFicmlza2llXCIsXG4gIFwibGljZW5zZVwiOiBcIk1JVFwiLFxuICBcImJ1Z3NcIjoge1xuICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL2F4aW9zL2F4aW9zL2lzc3Vlc1wiXG4gIH0sXG4gIFwiaG9tZXBhZ2VcIjogXCJodHRwczovL2F4aW9zLWh0dHAuY29tXCIsXG4gIFwiZGV2RGVwZW5kZW5jaWVzXCI6IHtcbiAgICBcImNvdmVyYWxsc1wiOiBcIl4zLjAuMFwiLFxuICAgIFwiZXM2LXByb21pc2VcIjogXCJeNC4yLjRcIixcbiAgICBcImdydW50XCI6IFwiXjEuMy4wXCIsXG4gICAgXCJncnVudC1iYW5uZXJcIjogXCJeMC42LjBcIixcbiAgICBcImdydW50LWNsaVwiOiBcIl4xLjIuMFwiLFxuICAgIFwiZ3J1bnQtY29udHJpYi1jbGVhblwiOiBcIl4xLjEuMFwiLFxuICAgIFwiZ3J1bnQtY29udHJpYi13YXRjaFwiOiBcIl4xLjAuMFwiLFxuICAgIFwiZ3J1bnQtZXNsaW50XCI6IFwiXjIzLjAuMFwiLFxuICAgIFwiZ3J1bnQta2FybWFcIjogXCJeNC4wLjBcIixcbiAgICBcImdydW50LW1vY2hhLXRlc3RcIjogXCJeMC4xMy4zXCIsXG4gICAgXCJncnVudC10c1wiOiBcIl42LjAuMC1iZXRhLjE5XCIsXG4gICAgXCJncnVudC13ZWJwYWNrXCI6IFwiXjQuMC4yXCIsXG4gICAgXCJpc3RhbmJ1bC1pbnN0cnVtZW50ZXItbG9hZGVyXCI6IFwiXjEuMC4wXCIsXG4gICAgXCJqYXNtaW5lLWNvcmVcIjogXCJeMi40LjFcIixcbiAgICBcImthcm1hXCI6IFwiXjYuMy4yXCIsXG4gICAgXCJrYXJtYS1jaHJvbWUtbGF1bmNoZXJcIjogXCJeMy4xLjBcIixcbiAgICBcImthcm1hLWZpcmVmb3gtbGF1bmNoZXJcIjogXCJeMi4xLjBcIixcbiAgICBcImthcm1hLWphc21pbmVcIjogXCJeMS4xLjFcIixcbiAgICBcImthcm1hLWphc21pbmUtYWpheFwiOiBcIl4wLjEuMTNcIixcbiAgICBcImthcm1hLXNhZmFyaS1sYXVuY2hlclwiOiBcIl4xLjAuMFwiLFxuICAgIFwia2FybWEtc2F1Y2UtbGF1bmNoZXJcIjogXCJeNC4zLjZcIixcbiAgICBcImthcm1hLXNpbm9uXCI6IFwiXjEuMC41XCIsXG4gICAgXCJrYXJtYS1zb3VyY2VtYXAtbG9hZGVyXCI6IFwiXjAuMy44XCIsXG4gICAgXCJrYXJtYS13ZWJwYWNrXCI6IFwiXjQuMC4yXCIsXG4gICAgXCJsb2FkLWdydW50LXRhc2tzXCI6IFwiXjMuNS4yXCIsXG4gICAgXCJtaW5pbWlzdFwiOiBcIl4xLjIuMFwiLFxuICAgIFwibW9jaGFcIjogXCJeOC4yLjFcIixcbiAgICBcInNpbm9uXCI6IFwiXjQuNS4wXCIsXG4gICAgXCJ0ZXJzZXItd2VicGFjay1wbHVnaW5cIjogXCJeNC4yLjNcIixcbiAgICBcInR5cGVzY3JpcHRcIjogXCJeNC4wLjVcIixcbiAgICBcInVybC1zZWFyY2gtcGFyYW1zXCI6IFwiXjAuMTAuMFwiLFxuICAgIFwid2VicGFja1wiOiBcIl40LjQ0LjJcIixcbiAgICBcIndlYnBhY2stZGV2LXNlcnZlclwiOiBcIl4zLjExLjBcIlxuICB9LFxuICBcImJyb3dzZXJcIjoge1xuICAgIFwiLi9saWIvYWRhcHRlcnMvaHR0cC5qc1wiOiBcIi4vbGliL2FkYXB0ZXJzL3hoci5qc1wiXG4gIH0sXG4gIFwianNkZWxpdnJcIjogXCJkaXN0L2F4aW9zLm1pbi5qc1wiLFxuICBcInVucGtnXCI6IFwiZGlzdC9heGlvcy5taW4uanNcIixcbiAgXCJ0eXBpbmdzXCI6IFwiLi9pbmRleC5kLnRzXCIsXG4gIFwiZGVwZW5kZW5jaWVzXCI6IHtcbiAgICBcImZvbGxvdy1yZWRpcmVjdHNcIjogXCJeMS4xNC4wXCJcbiAgfSxcbiAgXCJidW5kbGVzaXplXCI6IFtcbiAgICB7XG4gICAgICBcInBhdGhcIjogXCIuL2Rpc3QvYXhpb3MubWluLmpzXCIsXG4gICAgICBcInRocmVzaG9sZFwiOiBcIjVrQlwiXG4gICAgfVxuICBdXG59XG4iLCIoZnVuY3Rpb24oKXt2YXIgbix0PTIwMCxyPVwiVW5zdXBwb3J0ZWQgY29yZS1qcyB1c2UuIFRyeSBodHRwczovL25wbXMuaW8vc2VhcmNoP3E9cG9ueWZpbGwuXCIsZT1cIkV4cGVjdGVkIGEgZnVuY3Rpb25cIix1PVwiSW52YWxpZCBgdmFyaWFibGVgIG9wdGlvbiBwYXNzZWQgaW50byBgXy50ZW1wbGF0ZWBcIixpPVwiX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfX1wiLG89NTAwLGY9XCJfX2xvZGFzaF9wbGFjZWhvbGRlcl9fXCIsYT0xLGM9MixsPTQscz0xLGg9MixwPTEsdj0yLF89NCxnPTgseT0xNixkPTMyLGI9NjQsdz0xMjgsbT0yNTYseD01MTIsaj0zMCxBPVwiLi4uXCIsaz04MDAsTz0xNixJPTEsUj0yLEU9MS8wLHo9OTAwNzE5OTI1NDc0MDk5MSxTPTEuNzk3NjkzMTM0ODYyMzE1N2UzMDgsTD1OYU4sVz00Mjk0OTY3Mjk1LEM9Vy0xLFU9Vz4+PjEsQj1bW1wiYXJ5XCIsd10sW1wiYmluZFwiLHBdLFtcImJpbmRLZXlcIix2XSxbXCJjdXJyeVwiLGddLFtcImN1cnJ5UmlnaHRcIix5XSxbXCJmbGlwXCIseF0sW1wicGFydGlhbFwiLGRdLFtcInBhcnRpYWxSaWdodFwiLGJdLFtcInJlYXJnXCIsbV1dLFQ9XCJbb2JqZWN0IEFyZ3VtZW50c11cIixEPVwiW29iamVjdCBBcnJheV1cIiwkPVwiW29iamVjdCBBc3luY0Z1bmN0aW9uXVwiLE09XCJbb2JqZWN0IEJvb2xlYW5dXCIsRj1cIltvYmplY3QgRGF0ZV1cIixOPVwiW29iamVjdCBET01FeGNlcHRpb25dXCIsUD1cIltvYmplY3QgRXJyb3JdXCIscT1cIltvYmplY3QgRnVuY3Rpb25dXCIsWj1cIltvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dXCIsSz1cIltvYmplY3QgTWFwXVwiLFY9XCJbb2JqZWN0IE51bWJlcl1cIixHPVwiW29iamVjdCBOdWxsXVwiLEg9XCJbb2JqZWN0IE9iamVjdF1cIixKPVwiW29iamVjdCBQcm94eV1cIixZPVwiW29iamVjdCBSZWdFeHBdXCIsUT1cIltvYmplY3QgU2V0XVwiLFg9XCJbb2JqZWN0IFN0cmluZ11cIixubj1cIltvYmplY3QgU3ltYm9sXVwiLHRuPVwiW29iamVjdCBVbmRlZmluZWRdXCIscm49XCJbb2JqZWN0IFdlYWtNYXBdXCIsZW49XCJbb2JqZWN0IFdlYWtTZXRdXCIsdW49XCJbb2JqZWN0IEFycmF5QnVmZmVyXVwiLG9uPVwiW29iamVjdCBEYXRhVmlld11cIixmbj1cIltvYmplY3QgRmxvYXQzMkFycmF5XVwiLGFuPVwiW29iamVjdCBGbG9hdDY0QXJyYXldXCIsY249XCJbb2JqZWN0IEludDhBcnJheV1cIixsbj1cIltvYmplY3QgSW50MTZBcnJheV1cIixzbj1cIltvYmplY3QgSW50MzJBcnJheV1cIixobj1cIltvYmplY3QgVWludDhBcnJheV1cIixwbj1cIltvYmplY3QgVWludDhDbGFtcGVkQXJyYXldXCIsdm49XCJbb2JqZWN0IFVpbnQxNkFycmF5XVwiLF9uPVwiW29iamVjdCBVaW50MzJBcnJheV1cIixnbj0vXFxiX19wIFxcKz0gJyc7L2cseW49L1xcYihfX3AgXFwrPSkgJycgXFwrL2csZG49LyhfX2VcXCguKj9cXCl8XFxiX190XFwpKSBcXCtcXG4nJzsvZyxibj0vJig/OmFtcHxsdHxndHxxdW90fCMzOSk7L2csd249L1smPD5cIiddL2csbW49UmVnRXhwKGJuLnNvdXJjZSkseG49UmVnRXhwKHduLnNvdXJjZSksam49LzwlLShbXFxzXFxTXSs/KSU+L2csQW49LzwlKFtcXHNcXFNdKz8pJT4vZyxrbj0vPCU9KFtcXHNcXFNdKz8pJT4vZyxPbj0vXFwufFxcWyg/OlteW1xcXV0qfChbXCInXSkoPzooPyFcXDEpW15cXFxcXXxcXFxcLikqP1xcMSlcXF0vLEluPS9eXFx3KiQvLFJuPS9bXi5bXFxdXSt8XFxbKD86KC0/XFxkKyg/OlxcLlxcZCspPyl8KFtcIiddKSgoPzooPyFcXDIpW15cXFxcXXxcXFxcLikqPylcXDIpXFxdfCg/PSg/OlxcLnxcXFtcXF0pKD86XFwufFxcW1xcXXwkKSkvZyxFbj0vW1xcXFxeJC4qKz8oKVtcXF17fXxdL2csem49UmVnRXhwKEVuLnNvdXJjZSksU249L15cXHMrLyxMbj0vXFxzLyxXbj0vXFx7KD86XFxuXFwvXFwqIFxcW3dyYXBwZWQgd2l0aCAuK1xcXSBcXCpcXC8pP1xcbj8vLENuPS9cXHtcXG5cXC9cXCogXFxbd3JhcHBlZCB3aXRoICguKylcXF0gXFwqLyxVbj0vLD8gJiAvLEJuPS9bXlxceDAwLVxceDJmXFx4M2EtXFx4NDBcXHg1Yi1cXHg2MFxceDdiLVxceDdmXSsvZyxUbj0vWygpPSx7fVxcW1xcXVxcL1xcc10vLERuPS9cXFxcKFxcXFwpPy9nLCRuPS9cXCRcXHsoW15cXFxcfV0qKD86XFxcXC5bXlxcXFx9XSopKilcXH0vZyxNbj0vXFx3KiQvLEZuPS9eWy0rXTB4WzAtOWEtZl0rJC9pLE5uPS9eMGJbMDFdKyQvaSxQbj0vXlxcW29iamVjdCAuKz9Db25zdHJ1Y3RvclxcXSQvLHFuPS9eMG9bMC03XSskL2ksWm49L14oPzowfFsxLTldXFxkKikkLyxLbj0vW1xceGMwLVxceGQ2XFx4ZDgtXFx4ZjZcXHhmOC1cXHhmZlxcdTAxMDAtXFx1MDE3Zl0vZyxWbj0vKCReKS8sR249L1snXFxuXFxyXFx1MjAyOFxcdTIwMjlcXFxcXS9nLEhuPVwiXFxcXHUwMzAwLVxcXFx1MDM2ZlxcXFx1ZmUyMC1cXFxcdWZlMmZcXFxcdTIwZDAtXFxcXHUyMGZmXCIsSm49XCJcXFxceGFjXFxcXHhiMVxcXFx4ZDdcXFxceGY3XFxcXHgwMC1cXFxceDJmXFxcXHgzYS1cXFxceDQwXFxcXHg1Yi1cXFxceDYwXFxcXHg3Yi1cXFxceGJmXFxcXHUyMDAwLVxcXFx1MjA2ZiBcXFxcdFxcXFx4MGJcXFxcZlxcXFx4YTBcXFxcdWZlZmZcXFxcblxcXFxyXFxcXHUyMDI4XFxcXHUyMDI5XFxcXHUxNjgwXFxcXHUxODBlXFxcXHUyMDAwXFxcXHUyMDAxXFxcXHUyMDAyXFxcXHUyMDAzXFxcXHUyMDA0XFxcXHUyMDA1XFxcXHUyMDA2XFxcXHUyMDA3XFxcXHUyMDA4XFxcXHUyMDA5XFxcXHUyMDBhXFxcXHUyMDJmXFxcXHUyMDVmXFxcXHUzMDAwXCIsWW49XCJbXFxcXHVkODAwLVxcXFx1ZGZmZl1cIixRbj1cIltcIitKbitcIl1cIixYbj1cIltcIitIbitcIl1cIixudD1cIlxcXFxkK1wiLHR0PVwiW1xcXFx1MjcwMC1cXFxcdTI3YmZdXCIscnQ9XCJbYS16XFxcXHhkZi1cXFxceGY2XFxcXHhmOC1cXFxceGZmXVwiLGV0PVwiW15cXFxcdWQ4MDAtXFxcXHVkZmZmXCIrSm4rbnQrXCJcXFxcdTI3MDAtXFxcXHUyN2JmYS16XFxcXHhkZi1cXFxceGY2XFxcXHhmOC1cXFxceGZmQS1aXFxcXHhjMC1cXFxceGQ2XFxcXHhkOC1cXFxceGRlXVwiLHV0PVwiXFxcXHVkODNjW1xcXFx1ZGZmYi1cXFxcdWRmZmZdXCIsaXQ9XCJbXlxcXFx1ZDgwMC1cXFxcdWRmZmZdXCIsb3Q9XCIoPzpcXFxcdWQ4M2NbXFxcXHVkZGU2LVxcXFx1ZGRmZl0pezJ9XCIsZnQ9XCJbXFxcXHVkODAwLVxcXFx1ZGJmZl1bXFxcXHVkYzAwLVxcXFx1ZGZmZl1cIixhdD1cIltBLVpcXFxceGMwLVxcXFx4ZDZcXFxceGQ4LVxcXFx4ZGVdXCIsY3Q9XCIoPzpcIitydCtcInxcIitldCtcIilcIixsdD1cIig/OlwiK2F0K1wifFwiK2V0K1wiKVwiLHN0PVwiKD86XCIrWG4rXCJ8XCIrdXQrXCIpXCIrXCI/XCIsaHQ9XCJbXFxcXHVmZTBlXFxcXHVmZTBmXT9cIitzdCsoXCIoPzpcXFxcdTIwMGQoPzpcIitbaXQsb3QsZnRdLmpvaW4oXCJ8XCIpK1wiKVtcXFxcdWZlMGVcXFxcdWZlMGZdP1wiK3N0K1wiKSpcIikscHQ9XCIoPzpcIitbdHQsb3QsZnRdLmpvaW4oXCJ8XCIpK1wiKVwiK2h0LHZ0PVwiKD86XCIrW2l0K1huK1wiP1wiLFhuLG90LGZ0LFluXS5qb2luKFwifFwiKStcIilcIixfdD1SZWdFeHAoXCJbJ+KAmV1cIixcImdcIiksZ3Q9UmVnRXhwKFhuLFwiZ1wiKSx5dD1SZWdFeHAodXQrXCIoPz1cIit1dCtcIil8XCIrdnQraHQsXCJnXCIpLGR0PVJlZ0V4cChbYXQrXCI/XCIrcnQrXCIrKD86WyfigJldKD86ZHxsbHxtfHJlfHN8dHx2ZSkpPyg/PVwiK1tRbixhdCxcIiRcIl0uam9pbihcInxcIikrXCIpXCIsbHQrXCIrKD86WyfigJldKD86RHxMTHxNfFJFfFN8VHxWRSkpPyg/PVwiK1tRbixhdCtjdCxcIiRcIl0uam9pbihcInxcIikrXCIpXCIsYXQrXCI/XCIrY3QrXCIrKD86WyfigJldKD86ZHxsbHxtfHJlfHN8dHx2ZSkpP1wiLGF0K1wiKyg/Olsn4oCZXSg/OkR8TEx8TXxSRXxTfFR8VkUpKT9cIixcIlxcXFxkKig/OjFTVHwyTkR8M1JEfCg/IVsxMjNdKVxcXFxkVEgpKD89XFxcXGJ8W2Etel9dKVwiLFwiXFxcXGQqKD86MXN0fDJuZHwzcmR8KD8hWzEyM10pXFxcXGR0aCkoPz1cXFxcYnxbQS1aX10pXCIsbnQscHRdLmpvaW4oXCJ8XCIpLFwiZ1wiKSxidD1SZWdFeHAoXCJbXFxcXHUyMDBkXFxcXHVkODAwLVxcXFx1ZGZmZlwiK0huK1wiXFxcXHVmZTBlXFxcXHVmZTBmXVwiKSx3dD0vW2Etel1bQS1aXXxbQS1aXXsyfVthLXpdfFswLTldW2EtekEtWl18W2EtekEtWl1bMC05XXxbXmEtekEtWjAtOSBdLyxtdD1bXCJBcnJheVwiLFwiQnVmZmVyXCIsXCJEYXRhVmlld1wiLFwiRGF0ZVwiLFwiRXJyb3JcIixcIkZsb2F0MzJBcnJheVwiLFwiRmxvYXQ2NEFycmF5XCIsXCJGdW5jdGlvblwiLFwiSW50OEFycmF5XCIsXCJJbnQxNkFycmF5XCIsXCJJbnQzMkFycmF5XCIsXCJNYXBcIixcIk1hdGhcIixcIk9iamVjdFwiLFwiUHJvbWlzZVwiLFwiUmVnRXhwXCIsXCJTZXRcIixcIlN0cmluZ1wiLFwiU3ltYm9sXCIsXCJUeXBlRXJyb3JcIixcIlVpbnQ4QXJyYXlcIixcIlVpbnQ4Q2xhbXBlZEFycmF5XCIsXCJVaW50MTZBcnJheVwiLFwiVWludDMyQXJyYXlcIixcIldlYWtNYXBcIixcIl9cIixcImNsZWFyVGltZW91dFwiLFwiaXNGaW5pdGVcIixcInBhcnNlSW50XCIsXCJzZXRUaW1lb3V0XCJdLHh0PS0xLGp0PXt9O2p0W2ZuXT1qdFthbl09anRbY25dPWp0W2xuXT1qdFtzbl09anRbaG5dPWp0W3BuXT1qdFt2bl09anRbX25dPSEwLGp0W1RdPWp0W0RdPWp0W3VuXT1qdFtNXT1qdFtvbl09anRbRl09anRbUF09anRbcV09anRbS109anRbVl09anRbSF09anRbWV09anRbUV09anRbWF09anRbcm5dPSExO3ZhciBBdD17fTtBdFtUXT1BdFtEXT1BdFt1bl09QXRbb25dPUF0W01dPUF0W0ZdPUF0W2ZuXT1BdFthbl09QXRbY25dPUF0W2xuXT1BdFtzbl09QXRbS109QXRbVl09QXRbSF09QXRbWV09QXRbUV09QXRbWF09QXRbbm5dPUF0W2huXT1BdFtwbl09QXRbdm5dPUF0W19uXT0hMCxBdFtQXT1BdFtxXT1BdFtybl09ITE7dmFyIGt0PXtcIlxcXFxcIjpcIlxcXFxcIixcIidcIjpcIidcIixcIlxcblwiOlwiblwiLFwiXFxyXCI6XCJyXCIsXCJcXHUyMDI4XCI6XCJ1MjAyOFwiLFwiXFx1MjAyOVwiOlwidTIwMjlcIn0sT3Q9cGFyc2VGbG9hdCxJdD1wYXJzZUludCxSdD1cIm9iamVjdFwiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWwmJmdsb2JhbC5PYmplY3Q9PT1PYmplY3QmJmdsb2JhbCxFdD1cIm9iamVjdFwiPT10eXBlb2Ygc2VsZiYmc2VsZiYmc2VsZi5PYmplY3Q9PT1PYmplY3QmJnNlbGYsenQ9UnR8fEV0fHxGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCksU3Q9XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJmV4cG9ydHMmJiFleHBvcnRzLm5vZGVUeXBlJiZleHBvcnRzLEx0PVN0JiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZtb2R1bGUmJiFtb2R1bGUubm9kZVR5cGUmJm1vZHVsZSxXdD1MdCYmTHQuZXhwb3J0cz09PVN0LEN0PVd0JiZSdC5wcm9jZXNzLFV0PWZ1bmN0aW9uKCl7dHJ5e3ZhciBuPUx0JiZMdC5yZXF1aXJlJiZMdC5yZXF1aXJlKFwidXRpbFwiKS50eXBlcztyZXR1cm4gbnx8Q3QmJkN0LmJpbmRpbmcmJkN0LmJpbmRpbmcoXCJ1dGlsXCIpfWNhdGNoKG4pe319KCksQnQ9VXQmJlV0LmlzQXJyYXlCdWZmZXIsVHQ9VXQmJlV0LmlzRGF0ZSxEdD1VdCYmVXQuaXNNYXAsJHQ9VXQmJlV0LmlzUmVnRXhwLE10PVV0JiZVdC5pc1NldCxGdD1VdCYmVXQuaXNUeXBlZEFycmF5O2Z1bmN0aW9uIE50KG4sdCxyKXtzd2l0Y2goci5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbi5jYWxsKHQpO2Nhc2UgMTpyZXR1cm4gbi5jYWxsKHQsclswXSk7Y2FzZSAyOnJldHVybiBuLmNhbGwodCxyWzBdLHJbMV0pO2Nhc2UgMzpyZXR1cm4gbi5jYWxsKHQsclswXSxyWzFdLHJbMl0pfXJldHVybiBuLmFwcGx5KHQscil9ZnVuY3Rpb24gUHQobix0LHIsZSl7Zm9yKHZhciB1PS0xLGk9bnVsbD09bj8wOm4ubGVuZ3RoOysrdTxpOyl7dmFyIG89blt1XTt0KGUsbyxyKG8pLG4pfXJldHVybiBlfWZ1bmN0aW9uIHF0KG4sdCl7Zm9yKHZhciByPS0xLGU9bnVsbD09bj8wOm4ubGVuZ3RoOysrcjxlJiYhMSE9PXQobltyXSxyLG4pOyk7cmV0dXJuIG59ZnVuY3Rpb24gWnQobix0KXtmb3IodmFyIHI9bnVsbD09bj8wOm4ubGVuZ3RoO3ItLSYmITEhPT10KG5bcl0scixuKTspO3JldHVybiBufWZ1bmN0aW9uIEt0KG4sdCl7Zm9yKHZhciByPS0xLGU9bnVsbD09bj8wOm4ubGVuZ3RoOysrcjxlOylpZighdChuW3JdLHIsbikpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gVnQobix0KXtmb3IodmFyIHI9LTEsZT1udWxsPT1uPzA6bi5sZW5ndGgsdT0wLGk9W107KytyPGU7KXt2YXIgbz1uW3JdO3QobyxyLG4pJiYoaVt1KytdPW8pfXJldHVybiBpfWZ1bmN0aW9uIEd0KG4sdCl7cmV0dXJuISEobnVsbD09bj8wOm4ubGVuZ3RoKSYmdXIobix0LDApPi0xfWZ1bmN0aW9uIEh0KG4sdCxyKXtmb3IodmFyIGU9LTEsdT1udWxsPT1uPzA6bi5sZW5ndGg7KytlPHU7KWlmKHIodCxuW2VdKSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBKdChuLHQpe2Zvcih2YXIgcj0tMSxlPW51bGw9PW4/MDpuLmxlbmd0aCx1PUFycmF5KGUpOysrcjxlOyl1W3JdPXQobltyXSxyLG4pO3JldHVybiB1fWZ1bmN0aW9uIFl0KG4sdCl7Zm9yKHZhciByPS0xLGU9dC5sZW5ndGgsdT1uLmxlbmd0aDsrK3I8ZTspblt1K3JdPXRbcl07cmV0dXJuIG59ZnVuY3Rpb24gUXQobix0LHIsZSl7dmFyIHU9LTEsaT1udWxsPT1uPzA6bi5sZW5ndGg7Zm9yKGUmJmkmJihyPW5bKyt1XSk7Kyt1PGk7KXI9dChyLG5bdV0sdSxuKTtyZXR1cm4gcn1mdW5jdGlvbiBYdChuLHQscixlKXt2YXIgdT1udWxsPT1uPzA6bi5sZW5ndGg7Zm9yKGUmJnUmJihyPW5bLS11XSk7dS0tOylyPXQocixuW3VdLHUsbik7cmV0dXJuIHJ9ZnVuY3Rpb24gbnIobix0KXtmb3IodmFyIHI9LTEsZT1udWxsPT1uPzA6bi5sZW5ndGg7KytyPGU7KWlmKHQobltyXSxyLG4pKXJldHVybiEwO3JldHVybiExfXZhciB0cj1hcihcImxlbmd0aFwiKTtmdW5jdGlvbiBycihuLHQscil7dmFyIGU7cmV0dXJuIHIobixmdW5jdGlvbihuLHIsdSl7aWYodChuLHIsdSkpcmV0dXJuIGU9ciwhMX0pLGV9ZnVuY3Rpb24gZXIobix0LHIsZSl7Zm9yKHZhciB1PW4ubGVuZ3RoLGk9cisoZT8xOi0xKTtlP2ktLTorK2k8dTspaWYodChuW2ldLGksbikpcmV0dXJuIGk7cmV0dXJuLTF9ZnVuY3Rpb24gdXIobix0LHIpe3JldHVybiB0PT10P2Z1bmN0aW9uKG4sdCxyKXt2YXIgZT1yLTEsdT1uLmxlbmd0aDtmb3IoOysrZTx1OylpZihuW2VdPT09dClyZXR1cm4gZTtyZXR1cm4tMX0obix0LHIpOmVyKG4sb3Iscil9ZnVuY3Rpb24gaXIobix0LHIsZSl7Zm9yKHZhciB1PXItMSxpPW4ubGVuZ3RoOysrdTxpOylpZihlKG5bdV0sdCkpcmV0dXJuIHU7cmV0dXJuLTF9ZnVuY3Rpb24gb3Iobil7cmV0dXJuIG4hPW59ZnVuY3Rpb24gZnIobix0KXt2YXIgcj1udWxsPT1uPzA6bi5sZW5ndGg7cmV0dXJuIHI/c3Iobix0KS9yOkx9ZnVuY3Rpb24gYXIodCl7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBudWxsPT1yP246clt0XX19ZnVuY3Rpb24gY3IodCl7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBudWxsPT10P246dFtyXX19ZnVuY3Rpb24gbHIobix0LHIsZSx1KXtyZXR1cm4gdShuLGZ1bmN0aW9uKG4sdSxpKXtyPWU/KGU9ITEsbik6dChyLG4sdSxpKX0pLHJ9ZnVuY3Rpb24gc3IodCxyKXtmb3IodmFyIGUsdT0tMSxpPXQubGVuZ3RoOysrdTxpOyl7dmFyIG89cih0W3VdKTtvIT09biYmKGU9ZT09PW4/bzplK28pfXJldHVybiBlfWZ1bmN0aW9uIGhyKG4sdCl7Zm9yKHZhciByPS0xLGU9QXJyYXkobik7KytyPG47KWVbcl09dChyKTtyZXR1cm4gZX1mdW5jdGlvbiBwcihuKXtyZXR1cm4gbj9uLnNsaWNlKDAsenIobikrMSkucmVwbGFjZShTbixcIlwiKTpufWZ1bmN0aW9uIHZyKG4pe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gbih0KX19ZnVuY3Rpb24gX3Iobix0KXtyZXR1cm4gSnQodCxmdW5jdGlvbih0KXtyZXR1cm4gblt0XX0pfWZ1bmN0aW9uIGdyKG4sdCl7cmV0dXJuIG4uaGFzKHQpfWZ1bmN0aW9uIHlyKG4sdCl7Zm9yKHZhciByPS0xLGU9bi5sZW5ndGg7KytyPGUmJnVyKHQsbltyXSwwKT4tMTspO3JldHVybiByfWZ1bmN0aW9uIGRyKG4sdCl7Zm9yKHZhciByPW4ubGVuZ3RoO3ItLSYmdXIodCxuW3JdLDApPi0xOyk7cmV0dXJuIHJ9dmFyIGJyPWNyKHtcIsOAXCI6XCJBXCIsXCLDgVwiOlwiQVwiLFwiw4JcIjpcIkFcIixcIsODXCI6XCJBXCIsXCLDhFwiOlwiQVwiLFwiw4VcIjpcIkFcIixcIsOgXCI6XCJhXCIsXCLDoVwiOlwiYVwiLFwiw6JcIjpcImFcIixcIsOjXCI6XCJhXCIsXCLDpFwiOlwiYVwiLFwiw6VcIjpcImFcIixcIsOHXCI6XCJDXCIsXCLDp1wiOlwiY1wiLFwiw5BcIjpcIkRcIixcIsOwXCI6XCJkXCIsXCLDiFwiOlwiRVwiLFwiw4lcIjpcIkVcIixcIsOKXCI6XCJFXCIsXCLDi1wiOlwiRVwiLFwiw6hcIjpcImVcIixcIsOpXCI6XCJlXCIsXCLDqlwiOlwiZVwiLFwiw6tcIjpcImVcIixcIsOMXCI6XCJJXCIsXCLDjVwiOlwiSVwiLFwiw45cIjpcIklcIixcIsOPXCI6XCJJXCIsXCLDrFwiOlwiaVwiLFwiw61cIjpcImlcIixcIsOuXCI6XCJpXCIsXCLDr1wiOlwiaVwiLFwiw5FcIjpcIk5cIixcIsOxXCI6XCJuXCIsXCLDklwiOlwiT1wiLFwiw5NcIjpcIk9cIixcIsOUXCI6XCJPXCIsXCLDlVwiOlwiT1wiLFwiw5ZcIjpcIk9cIixcIsOYXCI6XCJPXCIsXCLDslwiOlwib1wiLFwiw7NcIjpcIm9cIixcIsO0XCI6XCJvXCIsXCLDtVwiOlwib1wiLFwiw7ZcIjpcIm9cIixcIsO4XCI6XCJvXCIsXCLDmVwiOlwiVVwiLFwiw5pcIjpcIlVcIixcIsObXCI6XCJVXCIsXCLDnFwiOlwiVVwiLFwiw7lcIjpcInVcIixcIsO6XCI6XCJ1XCIsXCLDu1wiOlwidVwiLFwiw7xcIjpcInVcIixcIsOdXCI6XCJZXCIsXCLDvVwiOlwieVwiLFwiw79cIjpcInlcIixcIsOGXCI6XCJBZVwiLFwiw6ZcIjpcImFlXCIsXCLDnlwiOlwiVGhcIixcIsO+XCI6XCJ0aFwiLFwiw59cIjpcInNzXCIsXCLEgFwiOlwiQVwiLFwixIJcIjpcIkFcIixcIsSEXCI6XCJBXCIsXCLEgVwiOlwiYVwiLFwixINcIjpcImFcIixcIsSFXCI6XCJhXCIsXCLEhlwiOlwiQ1wiLFwixIhcIjpcIkNcIixcIsSKXCI6XCJDXCIsXCLEjFwiOlwiQ1wiLFwixIdcIjpcImNcIixcIsSJXCI6XCJjXCIsXCLEi1wiOlwiY1wiLFwixI1cIjpcImNcIixcIsSOXCI6XCJEXCIsXCLEkFwiOlwiRFwiLFwixI9cIjpcImRcIixcIsSRXCI6XCJkXCIsXCLEklwiOlwiRVwiLFwixJRcIjpcIkVcIixcIsSWXCI6XCJFXCIsXCLEmFwiOlwiRVwiLFwixJpcIjpcIkVcIixcIsSTXCI6XCJlXCIsXCLElVwiOlwiZVwiLFwixJdcIjpcImVcIixcIsSZXCI6XCJlXCIsXCLEm1wiOlwiZVwiLFwixJxcIjpcIkdcIixcIsSeXCI6XCJHXCIsXCLEoFwiOlwiR1wiLFwixKJcIjpcIkdcIixcIsSdXCI6XCJnXCIsXCLEn1wiOlwiZ1wiLFwixKFcIjpcImdcIixcIsSjXCI6XCJnXCIsXCLEpFwiOlwiSFwiLFwixKZcIjpcIkhcIixcIsSlXCI6XCJoXCIsXCLEp1wiOlwiaFwiLFwixKhcIjpcIklcIixcIsSqXCI6XCJJXCIsXCLErFwiOlwiSVwiLFwixK5cIjpcIklcIixcIsSwXCI6XCJJXCIsXCLEqVwiOlwiaVwiLFwixKtcIjpcImlcIixcIsStXCI6XCJpXCIsXCLEr1wiOlwiaVwiLFwixLFcIjpcImlcIixcIsS0XCI6XCJKXCIsXCLEtVwiOlwialwiLFwixLZcIjpcIktcIixcIsS3XCI6XCJrXCIsXCLEuFwiOlwia1wiLFwixLlcIjpcIkxcIixcIsS7XCI6XCJMXCIsXCLEvVwiOlwiTFwiLFwixL9cIjpcIkxcIixcIsWBXCI6XCJMXCIsXCLEulwiOlwibFwiLFwixLxcIjpcImxcIixcIsS+XCI6XCJsXCIsXCLFgFwiOlwibFwiLFwixYJcIjpcImxcIixcIsWDXCI6XCJOXCIsXCLFhVwiOlwiTlwiLFwixYdcIjpcIk5cIixcIsWKXCI6XCJOXCIsXCLFhFwiOlwiblwiLFwixYZcIjpcIm5cIixcIsWIXCI6XCJuXCIsXCLFi1wiOlwiblwiLFwixYxcIjpcIk9cIixcIsWOXCI6XCJPXCIsXCLFkFwiOlwiT1wiLFwixY1cIjpcIm9cIixcIsWPXCI6XCJvXCIsXCLFkVwiOlwib1wiLFwixZRcIjpcIlJcIixcIsWWXCI6XCJSXCIsXCLFmFwiOlwiUlwiLFwixZVcIjpcInJcIixcIsWXXCI6XCJyXCIsXCLFmVwiOlwiclwiLFwixZpcIjpcIlNcIixcIsWcXCI6XCJTXCIsXCLFnlwiOlwiU1wiLFwixaBcIjpcIlNcIixcIsWbXCI6XCJzXCIsXCLFnVwiOlwic1wiLFwixZ9cIjpcInNcIixcIsWhXCI6XCJzXCIsXCLFolwiOlwiVFwiLFwixaRcIjpcIlRcIixcIsWmXCI6XCJUXCIsXCLFo1wiOlwidFwiLFwixaVcIjpcInRcIixcIsWnXCI6XCJ0XCIsXCLFqFwiOlwiVVwiLFwixapcIjpcIlVcIixcIsWsXCI6XCJVXCIsXCLFrlwiOlwiVVwiLFwixbBcIjpcIlVcIixcIsWyXCI6XCJVXCIsXCLFqVwiOlwidVwiLFwixatcIjpcInVcIixcIsWtXCI6XCJ1XCIsXCLFr1wiOlwidVwiLFwixbFcIjpcInVcIixcIsWzXCI6XCJ1XCIsXCLFtFwiOlwiV1wiLFwixbVcIjpcIndcIixcIsW2XCI6XCJZXCIsXCLFt1wiOlwieVwiLFwixbhcIjpcIllcIixcIsW5XCI6XCJaXCIsXCLFu1wiOlwiWlwiLFwixb1cIjpcIlpcIixcIsW6XCI6XCJ6XCIsXCLFvFwiOlwielwiLFwixb5cIjpcInpcIixcIsSyXCI6XCJJSlwiLFwixLNcIjpcImlqXCIsXCLFklwiOlwiT2VcIixcIsWTXCI6XCJvZVwiLFwixYlcIjpcIiduXCIsXCLFv1wiOlwic1wifSksd3I9Y3Ioe1wiJlwiOlwiJmFtcDtcIixcIjxcIjpcIiZsdDtcIixcIj5cIjpcIiZndDtcIiwnXCInOlwiJnF1b3Q7XCIsXCInXCI6XCImIzM5O1wifSk7ZnVuY3Rpb24gbXIobil7cmV0dXJuXCJcXFxcXCIra3Rbbl19ZnVuY3Rpb24geHIobil7cmV0dXJuIGJ0LnRlc3Qobil9ZnVuY3Rpb24ganIobil7dmFyIHQ9LTEscj1BcnJheShuLnNpemUpO3JldHVybiBuLmZvckVhY2goZnVuY3Rpb24obixlKXtyWysrdF09W2Usbl19KSxyfWZ1bmN0aW9uIEFyKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBuKHQocikpfX1mdW5jdGlvbiBrcihuLHQpe2Zvcih2YXIgcj0tMSxlPW4ubGVuZ3RoLHU9MCxpPVtdOysrcjxlOyl7dmFyIG89bltyXTtvIT09dCYmbyE9PWZ8fChuW3JdPWYsaVt1KytdPXIpfXJldHVybiBpfWZ1bmN0aW9uIE9yKG4pe3ZhciB0PS0xLHI9QXJyYXkobi5zaXplKTtyZXR1cm4gbi5mb3JFYWNoKGZ1bmN0aW9uKG4pe3JbKyt0XT1ufSkscn1mdW5jdGlvbiBJcihuKXt2YXIgdD0tMSxyPUFycmF5KG4uc2l6ZSk7cmV0dXJuIG4uZm9yRWFjaChmdW5jdGlvbihuKXtyWysrdF09W24sbl19KSxyfWZ1bmN0aW9uIFJyKG4pe3JldHVybiB4cihuKT9mdW5jdGlvbihuKXt2YXIgdD15dC5sYXN0SW5kZXg9MDtmb3IoO3l0LnRlc3Qobik7KSsrdDtyZXR1cm4gdH0obik6dHIobil9ZnVuY3Rpb24gRXIobil7cmV0dXJuIHhyKG4pP2Z1bmN0aW9uKG4pe3JldHVybiBuLm1hdGNoKHl0KXx8W119KG4pOmZ1bmN0aW9uKG4pe3JldHVybiBuLnNwbGl0KFwiXCIpfShuKX1mdW5jdGlvbiB6cihuKXtmb3IodmFyIHQ9bi5sZW5ndGg7dC0tJiZMbi50ZXN0KG4uY2hhckF0KHQpKTspO3JldHVybiB0fXZhciBTcj1jcih7XCImYW1wO1wiOlwiJlwiLFwiJmx0O1wiOlwiPFwiLFwiJmd0O1wiOlwiPlwiLFwiJnF1b3Q7XCI6J1wiJyxcIiYjMzk7XCI6XCInXCJ9KTt2YXIgTHI9ZnVuY3Rpb24gTG4oSG4pe3ZhciBKbixZbj0oSG49bnVsbD09SG4/enQ6THIuZGVmYXVsdHMoenQuT2JqZWN0KCksSG4sTHIucGljayh6dCxtdCkpKS5BcnJheSxRbj1Ibi5EYXRlLFhuPUhuLkVycm9yLG50PUhuLkZ1bmN0aW9uLHR0PUhuLk1hdGgscnQ9SG4uT2JqZWN0LGV0PUhuLlJlZ0V4cCx1dD1Ibi5TdHJpbmcsaXQ9SG4uVHlwZUVycm9yLG90PVluLnByb3RvdHlwZSxmdD1udC5wcm90b3R5cGUsYXQ9cnQucHJvdG90eXBlLGN0PUhuW1wiX19jb3JlLWpzX3NoYXJlZF9fXCJdLGx0PWZ0LnRvU3RyaW5nLHN0PWF0Lmhhc093blByb3BlcnR5LGh0PTAscHQ9KEpuPS9bXi5dKyQvLmV4ZWMoY3QmJmN0LmtleXMmJmN0LmtleXMuSUVfUFJPVE98fFwiXCIpKT9cIlN5bWJvbChzcmMpXzEuXCIrSm46XCJcIix2dD1hdC50b1N0cmluZyx5dD1sdC5jYWxsKHJ0KSxidD16dC5fLGt0PWV0KFwiXlwiK2x0LmNhbGwoc3QpLnJlcGxhY2UoRW4sXCJcXFxcJCZcIikucmVwbGFjZSgvaGFzT3duUHJvcGVydHl8KGZ1bmN0aW9uKS4qPyg/PVxcXFxcXCgpfCBmb3IgLis/KD89XFxcXFxcXSkvZyxcIiQxLio/XCIpK1wiJFwiKSxSdD1XdD9Ibi5CdWZmZXI6bixFdD1Ibi5TeW1ib2wsU3Q9SG4uVWludDhBcnJheSxMdD1SdD9SdC5hbGxvY1Vuc2FmZTpuLEN0PUFyKHJ0LmdldFByb3RvdHlwZU9mLHJ0KSxVdD1ydC5jcmVhdGUsdHI9YXQucHJvcGVydHlJc0VudW1lcmFibGUsY3I9b3Quc3BsaWNlLFdyPUV0P0V0LmlzQ29uY2F0U3ByZWFkYWJsZTpuLENyPUV0P0V0Lml0ZXJhdG9yOm4sVXI9RXQ/RXQudG9TdHJpbmdUYWc6bixCcj1mdW5jdGlvbigpe3RyeXt2YXIgbj1NaShydCxcImRlZmluZVByb3BlcnR5XCIpO3JldHVybiBuKHt9LFwiXCIse30pLG59Y2F0Y2gobil7fX0oKSxUcj1Ibi5jbGVhclRpbWVvdXQhPT16dC5jbGVhclRpbWVvdXQmJkhuLmNsZWFyVGltZW91dCxEcj1RbiYmUW4ubm93IT09enQuRGF0ZS5ub3cmJlFuLm5vdywkcj1Ibi5zZXRUaW1lb3V0IT09enQuc2V0VGltZW91dCYmSG4uc2V0VGltZW91dCxNcj10dC5jZWlsLEZyPXR0LmZsb29yLE5yPXJ0LmdldE93blByb3BlcnR5U3ltYm9scyxQcj1SdD9SdC5pc0J1ZmZlcjpuLHFyPUhuLmlzRmluaXRlLFpyPW90LmpvaW4sS3I9QXIocnQua2V5cyxydCksVnI9dHQubWF4LEdyPXR0Lm1pbixIcj1Rbi5ub3csSnI9SG4ucGFyc2VJbnQsWXI9dHQucmFuZG9tLFFyPW90LnJldmVyc2UsWHI9TWkoSG4sXCJEYXRhVmlld1wiKSxuZT1NaShIbixcIk1hcFwiKSx0ZT1NaShIbixcIlByb21pc2VcIikscmU9TWkoSG4sXCJTZXRcIiksZWU9TWkoSG4sXCJXZWFrTWFwXCIpLHVlPU1pKHJ0LFwiY3JlYXRlXCIpLGllPWVlJiZuZXcgZWUsb2U9e30sZmU9aG8oWHIpLGFlPWhvKG5lKSxjZT1obyh0ZSksbGU9aG8ocmUpLHNlPWhvKGVlKSxoZT1FdD9FdC5wcm90b3R5cGU6bixwZT1oZT9oZS52YWx1ZU9mOm4sdmU9aGU/aGUudG9TdHJpbmc6bjtmdW5jdGlvbiBfZShuKXtpZihTZihuKSYmIXdmKG4pJiYhKG4gaW5zdGFuY2VvZiBiZSkpe2lmKG4gaW5zdGFuY2VvZiBkZSlyZXR1cm4gbjtpZihzdC5jYWxsKG4sXCJfX3dyYXBwZWRfX1wiKSlyZXR1cm4gcG8obil9cmV0dXJuIG5ldyBkZShuKX12YXIgZ2U9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7fXJldHVybiBmdW5jdGlvbihyKXtpZighemYocikpcmV0dXJue307aWYoVXQpcmV0dXJuIFV0KHIpO3QucHJvdG90eXBlPXI7dmFyIGU9bmV3IHQ7cmV0dXJuIHQucHJvdG90eXBlPW4sZX19KCk7ZnVuY3Rpb24geWUoKXt9ZnVuY3Rpb24gZGUodCxyKXt0aGlzLl9fd3JhcHBlZF9fPXQsdGhpcy5fX2FjdGlvbnNfXz1bXSx0aGlzLl9fY2hhaW5fXz0hIXIsdGhpcy5fX2luZGV4X189MCx0aGlzLl9fdmFsdWVzX189bn1mdW5jdGlvbiBiZShuKXt0aGlzLl9fd3JhcHBlZF9fPW4sdGhpcy5fX2FjdGlvbnNfXz1bXSx0aGlzLl9fZGlyX189MSx0aGlzLl9fZmlsdGVyZWRfXz0hMSx0aGlzLl9faXRlcmF0ZWVzX189W10sdGhpcy5fX3Rha2VDb3VudF9fPVcsdGhpcy5fX3ZpZXdzX189W119ZnVuY3Rpb24gd2Uobil7dmFyIHQ9LTEscj1udWxsPT1uPzA6bi5sZW5ndGg7Zm9yKHRoaXMuY2xlYXIoKTsrK3Q8cjspe3ZhciBlPW5bdF07dGhpcy5zZXQoZVswXSxlWzFdKX19ZnVuY3Rpb24gbWUobil7dmFyIHQ9LTEscj1udWxsPT1uPzA6bi5sZW5ndGg7Zm9yKHRoaXMuY2xlYXIoKTsrK3Q8cjspe3ZhciBlPW5bdF07dGhpcy5zZXQoZVswXSxlWzFdKX19ZnVuY3Rpb24geGUobil7dmFyIHQ9LTEscj1udWxsPT1uPzA6bi5sZW5ndGg7Zm9yKHRoaXMuY2xlYXIoKTsrK3Q8cjspe3ZhciBlPW5bdF07dGhpcy5zZXQoZVswXSxlWzFdKX19ZnVuY3Rpb24gamUobil7dmFyIHQ9LTEscj1udWxsPT1uPzA6bi5sZW5ndGg7Zm9yKHRoaXMuX19kYXRhX189bmV3IHhlOysrdDxyOyl0aGlzLmFkZChuW3RdKX1mdW5jdGlvbiBBZShuKXt2YXIgdD10aGlzLl9fZGF0YV9fPW5ldyBtZShuKTt0aGlzLnNpemU9dC5zaXplfWZ1bmN0aW9uIGtlKG4sdCl7dmFyIHI9d2YobiksZT0hciYmYmYobiksdT0hciYmIWUmJkFmKG4pLGk9IXImJiFlJiYhdSYmJGYobiksbz1yfHxlfHx1fHxpLGY9bz9ocihuLmxlbmd0aCx1dCk6W10sYT1mLmxlbmd0aDtmb3IodmFyIGMgaW4gbikhdCYmIXN0LmNhbGwobixjKXx8byYmKFwibGVuZ3RoXCI9PWN8fHUmJihcIm9mZnNldFwiPT1jfHxcInBhcmVudFwiPT1jKXx8aSYmKFwiYnVmZmVyXCI9PWN8fFwiYnl0ZUxlbmd0aFwiPT1jfHxcImJ5dGVPZmZzZXRcIj09Yyl8fFZpKGMsYSkpfHxmLnB1c2goYyk7cmV0dXJuIGZ9ZnVuY3Rpb24gT2UodCl7dmFyIHI9dC5sZW5ndGg7cmV0dXJuIHI/dFtqdSgwLHItMSldOm59ZnVuY3Rpb24gSWUobix0KXtyZXR1cm4gY28odWkobiksQmUodCwwLG4ubGVuZ3RoKSl9ZnVuY3Rpb24gUmUobil7cmV0dXJuIGNvKHVpKG4pKX1mdW5jdGlvbiBFZSh0LHIsZSl7KGU9PT1ufHxnZih0W3JdLGUpKSYmKGUhPT1ufHxyIGluIHQpfHxDZSh0LHIsZSl9ZnVuY3Rpb24gemUodCxyLGUpe3ZhciB1PXRbcl07c3QuY2FsbCh0LHIpJiZnZih1LGUpJiYoZSE9PW58fHIgaW4gdCl8fENlKHQscixlKX1mdW5jdGlvbiBTZShuLHQpe2Zvcih2YXIgcj1uLmxlbmd0aDtyLS07KWlmKGdmKG5bcl1bMF0sdCkpcmV0dXJuIHI7cmV0dXJuLTF9ZnVuY3Rpb24gTGUobix0LHIsZSl7cmV0dXJuIEZlKG4sZnVuY3Rpb24obix1LGkpe3QoZSxuLHIobiksaSl9KSxlfWZ1bmN0aW9uIFdlKG4sdCl7cmV0dXJuIG4mJmlpKHQsZmEodCksbil9ZnVuY3Rpb24gQ2Uobix0LHIpe1wiX19wcm90b19fXCI9PXQmJkJyP0JyKG4sdCx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsdmFsdWU6cix3cml0YWJsZTohMH0pOm5bdF09cn1mdW5jdGlvbiBVZSh0LHIpe2Zvcih2YXIgZT0tMSx1PXIubGVuZ3RoLGk9WW4odSksbz1udWxsPT10OysrZTx1OylpW2VdPW8/bjpyYSh0LHJbZV0pO3JldHVybiBpfWZ1bmN0aW9uIEJlKHQscixlKXtyZXR1cm4gdD09dCYmKGUhPT1uJiYodD10PD1lP3Q6ZSksciE9PW4mJih0PXQ+PXI/dDpyKSksdH1mdW5jdGlvbiBUZSh0LHIsZSx1LGksbyl7dmFyIGYscz1yJmEsaD1yJmMscD1yJmw7aWYoZSYmKGY9aT9lKHQsdSxpLG8pOmUodCkpLGYhPT1uKXJldHVybiBmO2lmKCF6Zih0KSlyZXR1cm4gdDt2YXIgdj13Zih0KTtpZih2KXtpZihmPWZ1bmN0aW9uKG4pe3ZhciB0PW4ubGVuZ3RoLHI9bmV3IG4uY29uc3RydWN0b3IodCk7cmV0dXJuIHQmJlwic3RyaW5nXCI9PXR5cGVvZiBuWzBdJiZzdC5jYWxsKG4sXCJpbmRleFwiKSYmKHIuaW5kZXg9bi5pbmRleCxyLmlucHV0PW4uaW5wdXQpLHJ9KHQpLCFzKXJldHVybiB1aSh0LGYpfWVsc2V7dmFyIF89UGkodCksZz1fPT1xfHxfPT1aO2lmKEFmKHQpKXJldHVybiBRdSh0LHMpO2lmKF89PUh8fF89PVR8fGcmJiFpKXtpZihmPWh8fGc/e306WmkodCksIXMpcmV0dXJuIGg/ZnVuY3Rpb24obix0KXtyZXR1cm4gaWkobixOaShuKSx0KX0odCxmdW5jdGlvbihuLHQpe3JldHVybiBuJiZpaSh0LGFhKHQpLG4pfShmLHQpKTpmdW5jdGlvbihuLHQpe3JldHVybiBpaShuLEZpKG4pLHQpfSh0LFdlKGYsdCkpfWVsc2V7aWYoIUF0W19dKXJldHVybiBpP3Q6e307Zj1mdW5jdGlvbihuLHQscil7dmFyIGUsdSxpLG89bi5jb25zdHJ1Y3Rvcjtzd2l0Y2godCl7Y2FzZSB1bjpyZXR1cm4gWHUobik7Y2FzZSBNOmNhc2UgRjpyZXR1cm4gbmV3IG8oK24pO2Nhc2Ugb246cmV0dXJuIGZ1bmN0aW9uKG4sdCl7dmFyIHI9dD9YdShuLmJ1ZmZlcik6bi5idWZmZXI7cmV0dXJuIG5ldyBuLmNvbnN0cnVjdG9yKHIsbi5ieXRlT2Zmc2V0LG4uYnl0ZUxlbmd0aCl9KG4scik7Y2FzZSBmbjpjYXNlIGFuOmNhc2UgY246Y2FzZSBsbjpjYXNlIHNuOmNhc2UgaG46Y2FzZSBwbjpjYXNlIHZuOmNhc2UgX246cmV0dXJuIG5pKG4scik7Y2FzZSBLOnJldHVybiBuZXcgbztjYXNlIFY6Y2FzZSBYOnJldHVybiBuZXcgbyhuKTtjYXNlIFk6cmV0dXJuKGk9bmV3KHU9bikuY29uc3RydWN0b3IodS5zb3VyY2UsTW4uZXhlYyh1KSkpLmxhc3RJbmRleD11Lmxhc3RJbmRleCxpO2Nhc2UgUTpyZXR1cm4gbmV3IG87Y2FzZSBubjpyZXR1cm4gZT1uLHBlP3J0KHBlLmNhbGwoZSkpOnt9fX0odCxfLHMpfX1vfHwobz1uZXcgQWUpO3ZhciB5PW8uZ2V0KHQpO2lmKHkpcmV0dXJuIHk7by5zZXQodCxmKSxCZih0KT90LmZvckVhY2goZnVuY3Rpb24obil7Zi5hZGQoVGUobixyLGUsbix0LG8pKX0pOkxmKHQpJiZ0LmZvckVhY2goZnVuY3Rpb24obix1KXtmLnNldCh1LFRlKG4scixlLHUsdCxvKSl9KTt2YXIgZD12P246KHA/aD9XaTpMaTpoP2FhOmZhKSh0KTtyZXR1cm4gcXQoZHx8dCxmdW5jdGlvbihuLHUpe2QmJihuPXRbdT1uXSksemUoZix1LFRlKG4scixlLHUsdCxvKSl9KSxmfWZ1bmN0aW9uIERlKHQscixlKXt2YXIgdT1lLmxlbmd0aDtpZihudWxsPT10KXJldHVybiF1O2Zvcih0PXJ0KHQpO3UtLTspe3ZhciBpPWVbdV0sbz1yW2ldLGY9dFtpXTtpZihmPT09biYmIShpIGluIHQpfHwhbyhmKSlyZXR1cm4hMX1yZXR1cm4hMH1mdW5jdGlvbiAkZSh0LHIsdSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl0aHJvdyBuZXcgaXQoZSk7cmV0dXJuIGlvKGZ1bmN0aW9uKCl7dC5hcHBseShuLHUpfSxyKX1mdW5jdGlvbiBNZShuLHIsZSx1KXt2YXIgaT0tMSxvPUd0LGY9ITAsYT1uLmxlbmd0aCxjPVtdLGw9ci5sZW5ndGg7aWYoIWEpcmV0dXJuIGM7ZSYmKHI9SnQocix2cihlKSkpLHU/KG89SHQsZj0hMSk6ci5sZW5ndGg+PXQmJihvPWdyLGY9ITEscj1uZXcgamUocikpO246Zm9yKDsrK2k8YTspe3ZhciBzPW5baV0saD1udWxsPT1lP3M6ZShzKTtpZihzPXV8fDAhPT1zP3M6MCxmJiZoPT1oKXtmb3IodmFyIHA9bDtwLS07KWlmKHJbcF09PT1oKWNvbnRpbnVlIG47Yy5wdXNoKHMpfWVsc2UgbyhyLGgsdSl8fGMucHVzaChzKX1yZXR1cm4gY31fZS50ZW1wbGF0ZVNldHRpbmdzPXtlc2NhcGU6am4sZXZhbHVhdGU6QW4saW50ZXJwb2xhdGU6a24sdmFyaWFibGU6XCJcIixpbXBvcnRzOntfOl9lfX0sX2UucHJvdG90eXBlPXllLnByb3RvdHlwZSxfZS5wcm90b3R5cGUuY29uc3RydWN0b3I9X2UsZGUucHJvdG90eXBlPWdlKHllLnByb3RvdHlwZSksZGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWRlLGJlLnByb3RvdHlwZT1nZSh5ZS5wcm90b3R5cGUpLGJlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1iZSx3ZS5wcm90b3R5cGUuY2xlYXI9ZnVuY3Rpb24oKXt0aGlzLl9fZGF0YV9fPXVlP3VlKG51bGwpOnt9LHRoaXMuc2l6ZT0wfSx3ZS5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKG4pe3ZhciB0PXRoaXMuaGFzKG4pJiZkZWxldGUgdGhpcy5fX2RhdGFfX1tuXTtyZXR1cm4gdGhpcy5zaXplLT10PzE6MCx0fSx3ZS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQpe3ZhciByPXRoaXMuX19kYXRhX187aWYodWUpe3ZhciBlPXJbdF07cmV0dXJuIGU9PT1pP246ZX1yZXR1cm4gc3QuY2FsbChyLHQpP3JbdF06bn0sd2UucHJvdG90eXBlLmhhcz1mdW5jdGlvbih0KXt2YXIgcj10aGlzLl9fZGF0YV9fO3JldHVybiB1ZT9yW3RdIT09bjpzdC5jYWxsKHIsdCl9LHdlLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCxyKXt2YXIgZT10aGlzLl9fZGF0YV9fO3JldHVybiB0aGlzLnNpemUrPXRoaXMuaGFzKHQpPzA6MSxlW3RdPXVlJiZyPT09bj9pOnIsdGhpc30sbWUucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5fX2RhdGFfXz1bXSx0aGlzLnNpemU9MH0sbWUucHJvdG90eXBlLmRlbGV0ZT1mdW5jdGlvbihuKXt2YXIgdD10aGlzLl9fZGF0YV9fLHI9U2UodCxuKTtyZXR1cm4hKHI8MHx8KHI9PXQubGVuZ3RoLTE/dC5wb3AoKTpjci5jYWxsKHQsciwxKSwtLXRoaXMuc2l6ZSwwKSl9LG1lLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24odCl7dmFyIHI9dGhpcy5fX2RhdGFfXyxlPVNlKHIsdCk7cmV0dXJuIGU8MD9uOnJbZV1bMV19LG1lLnByb3RvdHlwZS5oYXM9ZnVuY3Rpb24obil7cmV0dXJuIFNlKHRoaXMuX19kYXRhX18sbik+LTF9LG1lLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24obix0KXt2YXIgcj10aGlzLl9fZGF0YV9fLGU9U2UocixuKTtyZXR1cm4gZTwwPygrK3RoaXMuc2l6ZSxyLnB1c2goW24sdF0pKTpyW2VdWzFdPXQsdGhpc30seGUucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5zaXplPTAsdGhpcy5fX2RhdGFfXz17aGFzaDpuZXcgd2UsbWFwOm5ldyhuZXx8bWUpLHN0cmluZzpuZXcgd2V9fSx4ZS5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKG4pe3ZhciB0PURpKHRoaXMsbikuZGVsZXRlKG4pO3JldHVybiB0aGlzLnNpemUtPXQ/MTowLHR9LHhlLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24obil7cmV0dXJuIERpKHRoaXMsbikuZ2V0KG4pfSx4ZS5wcm90b3R5cGUuaGFzPWZ1bmN0aW9uKG4pe3JldHVybiBEaSh0aGlzLG4pLmhhcyhuKX0seGUucHJvdG90eXBlLnNldD1mdW5jdGlvbihuLHQpe3ZhciByPURpKHRoaXMsbiksZT1yLnNpemU7cmV0dXJuIHIuc2V0KG4sdCksdGhpcy5zaXplKz1yLnNpemU9PWU/MDoxLHRoaXN9LGplLnByb3RvdHlwZS5hZGQ9amUucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMuX19kYXRhX18uc2V0KG4saSksdGhpc30samUucHJvdG90eXBlLmhhcz1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXMobil9LEFlLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3RoaXMuX19kYXRhX189bmV3IG1lLHRoaXMuc2l6ZT0wfSxBZS5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKG4pe3ZhciB0PXRoaXMuX19kYXRhX18scj10LmRlbGV0ZShuKTtyZXR1cm4gdGhpcy5zaXplPXQuc2l6ZSxyfSxBZS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKG4pe3JldHVybiB0aGlzLl9fZGF0YV9fLmdldChuKX0sQWUucHJvdG90eXBlLmhhcz1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXMobil9LEFlLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24obixyKXt2YXIgZT10aGlzLl9fZGF0YV9fO2lmKGUgaW5zdGFuY2VvZiBtZSl7dmFyIHU9ZS5fX2RhdGFfXztpZighbmV8fHUubGVuZ3RoPHQtMSlyZXR1cm4gdS5wdXNoKFtuLHJdKSx0aGlzLnNpemU9KytlLnNpemUsdGhpcztlPXRoaXMuX19kYXRhX189bmV3IHhlKHUpfXJldHVybiBlLnNldChuLHIpLHRoaXMuc2l6ZT1lLnNpemUsdGhpc307dmFyIEZlPWFpKEhlKSxOZT1haShKZSwhMCk7ZnVuY3Rpb24gUGUobix0KXt2YXIgcj0hMDtyZXR1cm4gRmUobixmdW5jdGlvbihuLGUsdSl7cmV0dXJuIHI9ISF0KG4sZSx1KX0pLHJ9ZnVuY3Rpb24gcWUodCxyLGUpe2Zvcih2YXIgdT0tMSxpPXQubGVuZ3RoOysrdTxpOyl7dmFyIG89dFt1XSxmPXIobyk7aWYobnVsbCE9ZiYmKGE9PT1uP2Y9PWYmJiFEZihmKTplKGYsYSkpKXZhciBhPWYsYz1vfXJldHVybiBjfWZ1bmN0aW9uIFplKG4sdCl7dmFyIHI9W107cmV0dXJuIEZlKG4sZnVuY3Rpb24obixlLHUpe3QobixlLHUpJiZyLnB1c2gobil9KSxyfWZ1bmN0aW9uIEtlKG4sdCxyLGUsdSl7dmFyIGk9LTEsbz1uLmxlbmd0aDtmb3Iocnx8KHI9S2kpLHV8fCh1PVtdKTsrK2k8bzspe3ZhciBmPW5baV07dD4wJiZyKGYpP3Q+MT9LZShmLHQtMSxyLGUsdSk6WXQodSxmKTplfHwodVt1Lmxlbmd0aF09Zil9cmV0dXJuIHV9dmFyIFZlPWNpKCksR2U9Y2koITApO2Z1bmN0aW9uIEhlKG4sdCl7cmV0dXJuIG4mJlZlKG4sdCxmYSl9ZnVuY3Rpb24gSmUobix0KXtyZXR1cm4gbiYmR2Uobix0LGZhKX1mdW5jdGlvbiBZZShuLHQpe3JldHVybiBWdCh0LGZ1bmN0aW9uKHQpe3JldHVybiBJZihuW3RdKX0pfWZ1bmN0aW9uIFFlKHQscil7Zm9yKHZhciBlPTAsdT0ocj1HdShyLHQpKS5sZW5ndGg7bnVsbCE9dCYmZTx1Oyl0PXRbc28ocltlKytdKV07cmV0dXJuIGUmJmU9PXU/dDpufWZ1bmN0aW9uIFhlKG4sdCxyKXt2YXIgZT10KG4pO3JldHVybiB3ZihuKT9lOll0KGUscihuKSl9ZnVuY3Rpb24gbnUodCl7cmV0dXJuIG51bGw9PXQ/dD09PW4/dG46RzpVciYmVXIgaW4gcnQodCk/ZnVuY3Rpb24odCl7dmFyIHI9c3QuY2FsbCh0LFVyKSxlPXRbVXJdO3RyeXt0W1VyXT1uO3ZhciB1PSEwfWNhdGNoKG4pe312YXIgaT12dC5jYWxsKHQpO3JldHVybiB1JiYocj90W1VyXT1lOmRlbGV0ZSB0W1VyXSksaX0odCk6ZnVuY3Rpb24obil7cmV0dXJuIHZ0LmNhbGwobil9KHQpfWZ1bmN0aW9uIHR1KG4sdCl7cmV0dXJuIG4+dH1mdW5jdGlvbiBydShuLHQpe3JldHVybiBudWxsIT1uJiZzdC5jYWxsKG4sdCl9ZnVuY3Rpb24gZXUobix0KXtyZXR1cm4gbnVsbCE9biYmdCBpbiBydChuKX1mdW5jdGlvbiB1dSh0LHIsZSl7Zm9yKHZhciB1PWU/SHQ6R3QsaT10WzBdLmxlbmd0aCxvPXQubGVuZ3RoLGY9byxhPVluKG8pLGM9MS8wLGw9W107Zi0tOyl7dmFyIHM9dFtmXTtmJiZyJiYocz1KdChzLHZyKHIpKSksYz1HcihzLmxlbmd0aCxjKSxhW2ZdPSFlJiYocnx8aT49MTIwJiZzLmxlbmd0aD49MTIwKT9uZXcgamUoZiYmcyk6bn1zPXRbMF07dmFyIGg9LTEscD1hWzBdO246Zm9yKDsrK2g8aSYmbC5sZW5ndGg8Yzspe3ZhciB2PXNbaF0sXz1yP3Iodik6djtpZih2PWV8fDAhPT12P3Y6MCwhKHA/Z3IocCxfKTp1KGwsXyxlKSkpe2ZvcihmPW87LS1mOyl7dmFyIGc9YVtmXTtpZighKGc/Z3IoZyxfKTp1KHRbZl0sXyxlKSkpY29udGludWUgbn1wJiZwLnB1c2goXyksbC5wdXNoKHYpfX1yZXR1cm4gbH1mdW5jdGlvbiBpdSh0LHIsZSl7dmFyIHU9bnVsbD09KHQ9cm8odCxyPUd1KHIsdCkpKT90OnRbc28oa28ocikpXTtyZXR1cm4gbnVsbD09dT9uOk50KHUsdCxlKX1mdW5jdGlvbiBvdShuKXtyZXR1cm4gU2YobikmJm51KG4pPT1UfWZ1bmN0aW9uIGZ1KHQscixlLHUsaSl7cmV0dXJuIHQ9PT1yfHwobnVsbD09dHx8bnVsbD09cnx8IVNmKHQpJiYhU2Yocik/dCE9dCYmciE9cjpmdW5jdGlvbih0LHIsZSx1LGksbyl7dmFyIGY9d2YodCksYT13ZihyKSxjPWY/RDpQaSh0KSxsPWE/RDpQaShyKSxwPShjPWM9PVQ/SDpjKT09SCx2PShsPWw9PVQ/SDpsKT09SCxfPWM9PWw7aWYoXyYmQWYodCkpe2lmKCFBZihyKSlyZXR1cm4hMTtmPSEwLHA9ITF9aWYoXyYmIXApcmV0dXJuIG98fChvPW5ldyBBZSksZnx8JGYodCk/emkodCxyLGUsdSxpLG8pOmZ1bmN0aW9uKG4sdCxyLGUsdSxpLG8pe3N3aXRjaChyKXtjYXNlIG9uOmlmKG4uYnl0ZUxlbmd0aCE9dC5ieXRlTGVuZ3RofHxuLmJ5dGVPZmZzZXQhPXQuYnl0ZU9mZnNldClyZXR1cm4hMTtuPW4uYnVmZmVyLHQ9dC5idWZmZXI7Y2FzZSB1bjpyZXR1cm4hKG4uYnl0ZUxlbmd0aCE9dC5ieXRlTGVuZ3RofHwhaShuZXcgU3QobiksbmV3IFN0KHQpKSk7Y2FzZSBNOmNhc2UgRjpjYXNlIFY6cmV0dXJuIGdmKCtuLCt0KTtjYXNlIFA6cmV0dXJuIG4ubmFtZT09dC5uYW1lJiZuLm1lc3NhZ2U9PXQubWVzc2FnZTtjYXNlIFk6Y2FzZSBYOnJldHVybiBuPT10K1wiXCI7Y2FzZSBLOnZhciBmPWpyO2Nhc2UgUTp2YXIgYT1lJnM7aWYoZnx8KGY9T3IpLG4uc2l6ZSE9dC5zaXplJiYhYSlyZXR1cm4hMTt2YXIgYz1vLmdldChuKTtpZihjKXJldHVybiBjPT10O2V8PWgsby5zZXQobix0KTt2YXIgbD16aShmKG4pLGYodCksZSx1LGksbyk7cmV0dXJuIG8uZGVsZXRlKG4pLGw7Y2FzZSBubjppZihwZSlyZXR1cm4gcGUuY2FsbChuKT09cGUuY2FsbCh0KX1yZXR1cm4hMX0odCxyLGMsZSx1LGksbyk7aWYoIShlJnMpKXt2YXIgZz1wJiZzdC5jYWxsKHQsXCJfX3dyYXBwZWRfX1wiKSx5PXYmJnN0LmNhbGwocixcIl9fd3JhcHBlZF9fXCIpO2lmKGd8fHkpe3ZhciBkPWc/dC52YWx1ZSgpOnQsYj15P3IudmFsdWUoKTpyO3JldHVybiBvfHwobz1uZXcgQWUpLGkoZCxiLGUsdSxvKX19cmV0dXJuISFfJiYob3x8KG89bmV3IEFlKSxmdW5jdGlvbih0LHIsZSx1LGksbyl7dmFyIGY9ZSZzLGE9TGkodCksYz1hLmxlbmd0aCxsPUxpKHIpLmxlbmd0aDtpZihjIT1sJiYhZilyZXR1cm4hMTtmb3IodmFyIGg9YztoLS07KXt2YXIgcD1hW2hdO2lmKCEoZj9wIGluIHI6c3QuY2FsbChyLHApKSlyZXR1cm4hMX12YXIgdj1vLmdldCh0KSxfPW8uZ2V0KHIpO2lmKHYmJl8pcmV0dXJuIHY9PXImJl89PXQ7dmFyIGc9ITA7by5zZXQodCxyKSxvLnNldChyLHQpO2Zvcih2YXIgeT1mOysraDxjOyl7cD1hW2hdO3ZhciBkPXRbcF0sYj1yW3BdO2lmKHUpdmFyIHc9Zj91KGIsZCxwLHIsdCxvKTp1KGQsYixwLHQscixvKTtpZighKHc9PT1uP2Q9PT1ifHxpKGQsYixlLHUsbyk6dykpe2c9ITE7YnJlYWt9eXx8KHk9XCJjb25zdHJ1Y3RvclwiPT1wKX1pZihnJiYheSl7dmFyIG09dC5jb25zdHJ1Y3Rvcix4PXIuY29uc3RydWN0b3I7bSE9eCYmXCJjb25zdHJ1Y3RvclwiaW4gdCYmXCJjb25zdHJ1Y3RvclwiaW4gciYmIShcImZ1bmN0aW9uXCI9PXR5cGVvZiBtJiZtIGluc3RhbmNlb2YgbSYmXCJmdW5jdGlvblwiPT10eXBlb2YgeCYmeCBpbnN0YW5jZW9mIHgpJiYoZz0hMSl9cmV0dXJuIG8uZGVsZXRlKHQpLG8uZGVsZXRlKHIpLGd9KHQscixlLHUsaSxvKSl9KHQscixlLHUsZnUsaSkpfWZ1bmN0aW9uIGF1KHQscixlLHUpe3ZhciBpPWUubGVuZ3RoLG89aSxmPSF1O2lmKG51bGw9PXQpcmV0dXJuIW87Zm9yKHQ9cnQodCk7aS0tOyl7dmFyIGE9ZVtpXTtpZihmJiZhWzJdP2FbMV0hPT10W2FbMF1dOiEoYVswXWluIHQpKXJldHVybiExfWZvcig7KytpPG87KXt2YXIgYz0oYT1lW2ldKVswXSxsPXRbY10scD1hWzFdO2lmKGYmJmFbMl0pe2lmKGw9PT1uJiYhKGMgaW4gdCkpcmV0dXJuITF9ZWxzZXt2YXIgdj1uZXcgQWU7aWYodSl2YXIgXz11KGwscCxjLHQscix2KTtpZighKF89PT1uP2Z1KHAsbCxzfGgsdSx2KTpfKSlyZXR1cm4hMX19cmV0dXJuITB9ZnVuY3Rpb24gY3Uobil7cmV0dXJuISghemYobil8fHB0JiZwdCBpbiBuKSYmKElmKG4pP2t0OlBuKS50ZXN0KGhvKG4pKX1mdW5jdGlvbiBsdShuKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP246bnVsbD09bj9XYTpcIm9iamVjdFwiPT10eXBlb2Ygbj93ZihuKT9ndShuWzBdLG5bMV0pOl91KG4pOk5hKG4pfWZ1bmN0aW9uIHN1KG4pe2lmKCFRaShuKSlyZXR1cm4gS3Iobik7dmFyIHQ9W107Zm9yKHZhciByIGluIHJ0KG4pKXN0LmNhbGwobixyKSYmXCJjb25zdHJ1Y3RvclwiIT1yJiZ0LnB1c2gocik7cmV0dXJuIHR9ZnVuY3Rpb24gaHUobil7aWYoIXpmKG4pKXJldHVybiBmdW5jdGlvbihuKXt2YXIgdD1bXTtpZihudWxsIT1uKWZvcih2YXIgciBpbiBydChuKSl0LnB1c2gocik7cmV0dXJuIHR9KG4pO3ZhciB0PVFpKG4pLHI9W107Zm9yKHZhciBlIGluIG4pKFwiY29uc3RydWN0b3JcIiE9ZXx8IXQmJnN0LmNhbGwobixlKSkmJnIucHVzaChlKTtyZXR1cm4gcn1mdW5jdGlvbiBwdShuLHQpe3JldHVybiBuPHR9ZnVuY3Rpb24gdnUobix0KXt2YXIgcj0tMSxlPXhmKG4pP1luKG4ubGVuZ3RoKTpbXTtyZXR1cm4gRmUobixmdW5jdGlvbihuLHUsaSl7ZVsrK3JdPXQobix1LGkpfSksZX1mdW5jdGlvbiBfdShuKXt2YXIgdD0kaShuKTtyZXR1cm4gMT09dC5sZW5ndGgmJnRbMF1bMl0/bm8odFswXVswXSx0WzBdWzFdKTpmdW5jdGlvbihyKXtyZXR1cm4gcj09PW58fGF1KHIsbix0KX19ZnVuY3Rpb24gZ3UodCxyKXtyZXR1cm4gSGkodCkmJlhpKHIpP25vKHNvKHQpLHIpOmZ1bmN0aW9uKGUpe3ZhciB1PXJhKGUsdCk7cmV0dXJuIHU9PT1uJiZ1PT09cj9lYShlLHQpOmZ1KHIsdSxzfGgpfX1mdW5jdGlvbiB5dSh0LHIsZSx1LGkpe3QhPT1yJiZWZShyLGZ1bmN0aW9uKG8sZil7aWYoaXx8KGk9bmV3IEFlKSx6ZihvKSkhZnVuY3Rpb24odCxyLGUsdSxpLG8sZil7dmFyIGE9ZW8odCxlKSxjPWVvKHIsZSksbD1mLmdldChjKTtpZihsKUVlKHQsZSxsKTtlbHNle3ZhciBzPW8/byhhLGMsZStcIlwiLHQscixmKTpuLGg9cz09PW47aWYoaCl7dmFyIHA9d2YoYyksdj0hcCYmQWYoYyksXz0hcCYmIXYmJiRmKGMpO3M9YyxwfHx2fHxfP3dmKGEpP3M9YTpqZihhKT9zPXVpKGEpOnY/KGg9ITEscz1RdShjLCEwKSk6Xz8oaD0hMSxzPW5pKGMsITApKTpzPVtdOkNmKGMpfHxiZihjKT8ocz1hLGJmKGEpP3M9VmYoYSk6emYoYSkmJiFJZihhKXx8KHM9WmkoYykpKTpoPSExfWgmJihmLnNldChjLHMpLGkocyxjLHUsbyxmKSxmLmRlbGV0ZShjKSksRWUodCxlLHMpfX0odCxyLGYsZSx5dSx1LGkpO2Vsc2V7dmFyIGE9dT91KGVvKHQsZiksbyxmK1wiXCIsdCxyLGkpOm47YT09PW4mJihhPW8pLEVlKHQsZixhKX19LGFhKX1mdW5jdGlvbiBkdSh0LHIpe3ZhciBlPXQubGVuZ3RoO2lmKGUpcmV0dXJuIFZpKHIrPXI8MD9lOjAsZSk/dFtyXTpufWZ1bmN0aW9uIGJ1KG4sdCxyKXt2YXIgZT0tMTtyZXR1cm4gdD1KdCh0PXQubGVuZ3RoP0p0KHQsZnVuY3Rpb24obil7cmV0dXJuIHdmKG4pP2Z1bmN0aW9uKHQpe3JldHVybiBRZSh0LDE9PT1uLmxlbmd0aD9uWzBdOm4pfTpufSk6W1dhXSx2cihUaSgpKSksZnVuY3Rpb24obix0KXt2YXIgcj1uLmxlbmd0aDtmb3Iobi5zb3J0KHQpO3ItLTspbltyXT1uW3JdLnZhbHVlO3JldHVybiBufSh2dShuLGZ1bmN0aW9uKG4scix1KXtyZXR1cm57Y3JpdGVyaWE6SnQodCxmdW5jdGlvbih0KXtyZXR1cm4gdChuKX0pLGluZGV4OisrZSx2YWx1ZTpufX0pLGZ1bmN0aW9uKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKG4sdCxyKXtmb3IodmFyIGU9LTEsdT1uLmNyaXRlcmlhLGk9dC5jcml0ZXJpYSxvPXUubGVuZ3RoLGY9ci5sZW5ndGg7KytlPG87KXt2YXIgYT10aSh1W2VdLGlbZV0pO2lmKGEpe2lmKGU+PWYpcmV0dXJuIGE7dmFyIGM9cltlXTtyZXR1cm4gYSooXCJkZXNjXCI9PWM/LTE6MSl9fXJldHVybiBuLmluZGV4LXQuaW5kZXh9KG4sdCxyKX0pfWZ1bmN0aW9uIHd1KG4sdCxyKXtmb3IodmFyIGU9LTEsdT10Lmxlbmd0aCxpPXt9OysrZTx1Oyl7dmFyIG89dFtlXSxmPVFlKG4sbyk7cihmLG8pJiZSdShpLEd1KG8sbiksZil9cmV0dXJuIGl9ZnVuY3Rpb24gbXUobix0LHIsZSl7dmFyIHU9ZT9pcjp1cixpPS0xLG89dC5sZW5ndGgsZj1uO2ZvcihuPT09dCYmKHQ9dWkodCkpLHImJihmPUp0KG4sdnIocikpKTsrK2k8bzspZm9yKHZhciBhPTAsYz10W2ldLGw9cj9yKGMpOmM7KGE9dShmLGwsYSxlKSk+LTE7KWYhPT1uJiZjci5jYWxsKGYsYSwxKSxjci5jYWxsKG4sYSwxKTtyZXR1cm4gbn1mdW5jdGlvbiB4dShuLHQpe2Zvcih2YXIgcj1uP3QubGVuZ3RoOjAsZT1yLTE7ci0tOyl7dmFyIHU9dFtyXTtpZihyPT1lfHx1IT09aSl7dmFyIGk9dTtWaSh1KT9jci5jYWxsKG4sdSwxKTpNdShuLHUpfX1yZXR1cm4gbn1mdW5jdGlvbiBqdShuLHQpe3JldHVybiBuK0ZyKFlyKCkqKHQtbisxKSl9ZnVuY3Rpb24gQXUobix0KXt2YXIgcj1cIlwiO2lmKCFufHx0PDF8fHQ+eilyZXR1cm4gcjtkb3t0JTImJihyKz1uKSwodD1Gcih0LzIpKSYmKG4rPW4pfXdoaWxlKHQpO3JldHVybiByfWZ1bmN0aW9uIGt1KG4sdCl7cmV0dXJuIG9vKHRvKG4sdCxXYSksbitcIlwiKX1mdW5jdGlvbiBPdShuKXtyZXR1cm4gT2UoZ2EobikpfWZ1bmN0aW9uIEl1KG4sdCl7dmFyIHI9Z2Eobik7cmV0dXJuIGNvKHIsQmUodCwwLHIubGVuZ3RoKSl9ZnVuY3Rpb24gUnUodCxyLGUsdSl7aWYoIXpmKHQpKXJldHVybiB0O2Zvcih2YXIgaT0tMSxvPShyPUd1KHIsdCkpLmxlbmd0aCxmPW8tMSxhPXQ7bnVsbCE9YSYmKytpPG87KXt2YXIgYz1zbyhyW2ldKSxsPWU7aWYoXCJfX3Byb3RvX19cIj09PWN8fFwiY29uc3RydWN0b3JcIj09PWN8fFwicHJvdG90eXBlXCI9PT1jKXJldHVybiB0O2lmKGkhPWYpe3ZhciBzPWFbY107KGw9dT91KHMsYyxhKTpuKT09PW4mJihsPXpmKHMpP3M6VmkocltpKzFdKT9bXTp7fSl9emUoYSxjLGwpLGE9YVtjXX1yZXR1cm4gdH12YXIgRXU9aWU/ZnVuY3Rpb24obix0KXtyZXR1cm4gaWUuc2V0KG4sdCksbn06V2EsenU9QnI/ZnVuY3Rpb24obix0KXtyZXR1cm4gQnIobixcInRvU3RyaW5nXCIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHZhbHVlOnphKHQpLHdyaXRhYmxlOiEwfSl9OldhO2Z1bmN0aW9uIFN1KG4pe3JldHVybiBjbyhnYShuKSl9ZnVuY3Rpb24gTHUobix0LHIpe3ZhciBlPS0xLHU9bi5sZW5ndGg7dDwwJiYodD0tdD51PzA6dSt0KSwocj1yPnU/dTpyKTwwJiYocis9dSksdT10PnI/MDpyLXQ+Pj4wLHQ+Pj49MDtmb3IodmFyIGk9WW4odSk7KytlPHU7KWlbZV09bltlK3RdO3JldHVybiBpfWZ1bmN0aW9uIFd1KG4sdCl7dmFyIHI7cmV0dXJuIEZlKG4sZnVuY3Rpb24obixlLHUpe3JldHVybiEocj10KG4sZSx1KSl9KSwhIXJ9ZnVuY3Rpb24gQ3Uobix0LHIpe3ZhciBlPTAsdT1udWxsPT1uP2U6bi5sZW5ndGg7aWYoXCJudW1iZXJcIj09dHlwZW9mIHQmJnQ9PXQmJnU8PVUpe2Zvcig7ZTx1Oyl7dmFyIGk9ZSt1Pj4+MSxvPW5baV07bnVsbCE9PW8mJiFEZihvKSYmKHI/bzw9dDpvPHQpP2U9aSsxOnU9aX1yZXR1cm4gdX1yZXR1cm4gVXUobix0LFdhLHIpfWZ1bmN0aW9uIFV1KHQscixlLHUpe3ZhciBpPTAsbz1udWxsPT10PzA6dC5sZW5ndGg7aWYoMD09PW8pcmV0dXJuIDA7Zm9yKHZhciBmPShyPWUocikpIT1yLGE9bnVsbD09PXIsYz1EZihyKSxsPXI9PT1uO2k8bzspe3ZhciBzPUZyKChpK28pLzIpLGg9ZSh0W3NdKSxwPWghPT1uLHY9bnVsbD09PWgsXz1oPT1oLGc9RGYoaCk7aWYoZil2YXIgeT11fHxfO2Vsc2UgeT1sP18mJih1fHxwKTphP18mJnAmJih1fHwhdik6Yz9fJiZwJiYhdiYmKHV8fCFnKTohdiYmIWcmJih1P2g8PXI6aDxyKTt5P2k9cysxOm89c31yZXR1cm4gR3IobyxDKX1mdW5jdGlvbiBCdShuLHQpe2Zvcih2YXIgcj0tMSxlPW4ubGVuZ3RoLHU9MCxpPVtdOysrcjxlOyl7dmFyIG89bltyXSxmPXQ/dChvKTpvO2lmKCFyfHwhZ2YoZixhKSl7dmFyIGE9ZjtpW3UrK109MD09PW8/MDpvfX1yZXR1cm4gaX1mdW5jdGlvbiBUdShuKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2Ygbj9uOkRmKG4pP0w6K259ZnVuY3Rpb24gRHUobil7aWYoXCJzdHJpbmdcIj09dHlwZW9mIG4pcmV0dXJuIG47aWYod2YobikpcmV0dXJuIEp0KG4sRHUpK1wiXCI7aWYoRGYobikpcmV0dXJuIHZlP3ZlLmNhbGwobik6XCJcIjt2YXIgdD1uK1wiXCI7cmV0dXJuXCIwXCI9PXQmJjEvbj09LUU/XCItMFwiOnR9ZnVuY3Rpb24gJHUobixyLGUpe3ZhciB1PS0xLGk9R3Qsbz1uLmxlbmd0aCxmPSEwLGE9W10sYz1hO2lmKGUpZj0hMSxpPUh0O2Vsc2UgaWYobz49dCl7dmFyIGw9cj9udWxsOkFpKG4pO2lmKGwpcmV0dXJuIE9yKGwpO2Y9ITEsaT1ncixjPW5ldyBqZX1lbHNlIGM9cj9bXTphO246Zm9yKDsrK3U8bzspe3ZhciBzPW5bdV0saD1yP3Iocyk6cztpZihzPWV8fDAhPT1zP3M6MCxmJiZoPT1oKXtmb3IodmFyIHA9Yy5sZW5ndGg7cC0tOylpZihjW3BdPT09aCljb250aW51ZSBuO3ImJmMucHVzaChoKSxhLnB1c2gocyl9ZWxzZSBpKGMsaCxlKXx8KGMhPT1hJiZjLnB1c2goaCksYS5wdXNoKHMpKX1yZXR1cm4gYX1mdW5jdGlvbiBNdShuLHQpe3JldHVybiBudWxsPT0obj1ybyhuLHQ9R3UodCxuKSkpfHxkZWxldGUgbltzbyhrbyh0KSldfWZ1bmN0aW9uIEZ1KG4sdCxyLGUpe3JldHVybiBSdShuLHQscihRZShuLHQpKSxlKX1mdW5jdGlvbiBOdShuLHQscixlKXtmb3IodmFyIHU9bi5sZW5ndGgsaT1lP3U6LTE7KGU/aS0tOisraTx1KSYmdChuW2ldLGksbik7KTtyZXR1cm4gcj9MdShuLGU/MDppLGU/aSsxOnUpOkx1KG4sZT9pKzE6MCxlP3U6aSl9ZnVuY3Rpb24gUHUobix0KXt2YXIgcj1uO3JldHVybiByIGluc3RhbmNlb2YgYmUmJihyPXIudmFsdWUoKSksUXQodCxmdW5jdGlvbihuLHQpe3JldHVybiB0LmZ1bmMuYXBwbHkodC50aGlzQXJnLFl0KFtuXSx0LmFyZ3MpKX0scil9ZnVuY3Rpb24gcXUobix0LHIpe3ZhciBlPW4ubGVuZ3RoO2lmKGU8MilyZXR1cm4gZT8kdShuWzBdKTpbXTtmb3IodmFyIHU9LTEsaT1ZbihlKTsrK3U8ZTspZm9yKHZhciBvPW5bdV0sZj0tMTsrK2Y8ZTspZiE9dSYmKGlbdV09TWUoaVt1XXx8byxuW2ZdLHQscikpO3JldHVybiAkdShLZShpLDEpLHQscil9ZnVuY3Rpb24gWnUodCxyLGUpe2Zvcih2YXIgdT0tMSxpPXQubGVuZ3RoLG89ci5sZW5ndGgsZj17fTsrK3U8aTspe3ZhciBhPXU8bz9yW3VdOm47ZShmLHRbdV0sYSl9cmV0dXJuIGZ9ZnVuY3Rpb24gS3Uobil7cmV0dXJuIGpmKG4pP246W119ZnVuY3Rpb24gVnUobil7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOldhfWZ1bmN0aW9uIEd1KG4sdCl7cmV0dXJuIHdmKG4pP246SGkobix0KT9bbl06bG8oR2YobikpfXZhciBIdT1rdTtmdW5jdGlvbiBKdSh0LHIsZSl7dmFyIHU9dC5sZW5ndGg7cmV0dXJuIGU9ZT09PW4/dTplLCFyJiZlPj11P3Q6THUodCxyLGUpfXZhciBZdT1Ucnx8ZnVuY3Rpb24obil7cmV0dXJuIHp0LmNsZWFyVGltZW91dChuKX07ZnVuY3Rpb24gUXUobix0KXtpZih0KXJldHVybiBuLnNsaWNlKCk7dmFyIHI9bi5sZW5ndGgsZT1MdD9MdChyKTpuZXcgbi5jb25zdHJ1Y3RvcihyKTtyZXR1cm4gbi5jb3B5KGUpLGV9ZnVuY3Rpb24gWHUobil7dmFyIHQ9bmV3IG4uY29uc3RydWN0b3Iobi5ieXRlTGVuZ3RoKTtyZXR1cm4gbmV3IFN0KHQpLnNldChuZXcgU3QobikpLHR9ZnVuY3Rpb24gbmkobix0KXt2YXIgcj10P1h1KG4uYnVmZmVyKTpuLmJ1ZmZlcjtyZXR1cm4gbmV3IG4uY29uc3RydWN0b3IocixuLmJ5dGVPZmZzZXQsbi5sZW5ndGgpfWZ1bmN0aW9uIHRpKHQscil7aWYodCE9PXIpe3ZhciBlPXQhPT1uLHU9bnVsbD09PXQsaT10PT10LG89RGYodCksZj1yIT09bixhPW51bGw9PT1yLGM9cj09cixsPURmKHIpO2lmKCFhJiYhbCYmIW8mJnQ+cnx8byYmZiYmYyYmIWEmJiFsfHx1JiZmJiZjfHwhZSYmY3x8IWkpcmV0dXJuIDE7aWYoIXUmJiFvJiYhbCYmdDxyfHxsJiZlJiZpJiYhdSYmIW98fGEmJmUmJml8fCFmJiZpfHwhYylyZXR1cm4tMX1yZXR1cm4gMH1mdW5jdGlvbiByaShuLHQscixlKXtmb3IodmFyIHU9LTEsaT1uLmxlbmd0aCxvPXIubGVuZ3RoLGY9LTEsYT10Lmxlbmd0aCxjPVZyKGktbywwKSxsPVluKGErYykscz0hZTsrK2Y8YTspbFtmXT10W2ZdO2Zvcig7Kyt1PG87KShzfHx1PGkpJiYobFtyW3VdXT1uW3VdKTtmb3IoO2MtLTspbFtmKytdPW5bdSsrXTtyZXR1cm4gbH1mdW5jdGlvbiBlaShuLHQscixlKXtmb3IodmFyIHU9LTEsaT1uLmxlbmd0aCxvPS0xLGY9ci5sZW5ndGgsYT0tMSxjPXQubGVuZ3RoLGw9VnIoaS1mLDApLHM9WW4obCtjKSxoPSFlOysrdTxsOylzW3VdPW5bdV07Zm9yKHZhciBwPXU7KythPGM7KXNbcCthXT10W2FdO2Zvcig7KytvPGY7KShofHx1PGkpJiYoc1twK3Jbb11dPW5bdSsrXSk7cmV0dXJuIHN9ZnVuY3Rpb24gdWkobix0KXt2YXIgcj0tMSxlPW4ubGVuZ3RoO2Zvcih0fHwodD1ZbihlKSk7KytyPGU7KXRbcl09bltyXTtyZXR1cm4gdH1mdW5jdGlvbiBpaSh0LHIsZSx1KXt2YXIgaT0hZTtlfHwoZT17fSk7Zm9yKHZhciBvPS0xLGY9ci5sZW5ndGg7KytvPGY7KXt2YXIgYT1yW29dLGM9dT91KGVbYV0sdFthXSxhLGUsdCk6bjtjPT09biYmKGM9dFthXSksaT9DZShlLGEsYyk6emUoZSxhLGMpfXJldHVybiBlfWZ1bmN0aW9uIG9pKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKHIsZSl7dmFyIHU9d2Yocik/UHQ6TGUsaT10P3QoKTp7fTtyZXR1cm4gdShyLG4sVGkoZSwyKSxpKX19ZnVuY3Rpb24gZmkodCl7cmV0dXJuIGt1KGZ1bmN0aW9uKHIsZSl7dmFyIHU9LTEsaT1lLmxlbmd0aCxvPWk+MT9lW2ktMV06bixmPWk+Mj9lWzJdOm47Zm9yKG89dC5sZW5ndGg+MyYmXCJmdW5jdGlvblwiPT10eXBlb2Ygbz8oaS0tLG8pOm4sZiYmR2koZVswXSxlWzFdLGYpJiYobz1pPDM/bjpvLGk9MSkscj1ydChyKTsrK3U8aTspe3ZhciBhPWVbdV07YSYmdChyLGEsdSxvKX1yZXR1cm4gcn0pfWZ1bmN0aW9uIGFpKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKHIsZSl7aWYobnVsbD09cilyZXR1cm4gcjtpZigheGYocikpcmV0dXJuIG4ocixlKTtmb3IodmFyIHU9ci5sZW5ndGgsaT10P3U6LTEsbz1ydChyKTsodD9pLS06KytpPHUpJiYhMSE9PWUob1tpXSxpLG8pOyk7cmV0dXJuIHJ9fWZ1bmN0aW9uIGNpKG4pe3JldHVybiBmdW5jdGlvbih0LHIsZSl7Zm9yKHZhciB1PS0xLGk9cnQodCksbz1lKHQpLGY9by5sZW5ndGg7Zi0tOyl7dmFyIGE9b1tuP2Y6Kyt1XTtpZighMT09PXIoaVthXSxhLGkpKWJyZWFrfXJldHVybiB0fX1mdW5jdGlvbiBsaSh0KXtyZXR1cm4gZnVuY3Rpb24ocil7dmFyIGU9eHIocj1HZihyKSk/RXIocik6bix1PWU/ZVswXTpyLmNoYXJBdCgwKSxpPWU/SnUoZSwxKS5qb2luKFwiXCIpOnIuc2xpY2UoMSk7cmV0dXJuIHVbdF0oKStpfX1mdW5jdGlvbiBzaShuKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIFF0KElhKGJhKHQpLnJlcGxhY2UoX3QsXCJcIikpLG4sXCJcIil9fWZ1bmN0aW9uIGhpKG4pe3JldHVybiBmdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cztzd2l0Y2godC5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbmV3IG47Y2FzZSAxOnJldHVybiBuZXcgbih0WzBdKTtjYXNlIDI6cmV0dXJuIG5ldyBuKHRbMF0sdFsxXSk7Y2FzZSAzOnJldHVybiBuZXcgbih0WzBdLHRbMV0sdFsyXSk7Y2FzZSA0OnJldHVybiBuZXcgbih0WzBdLHRbMV0sdFsyXSx0WzNdKTtjYXNlIDU6cmV0dXJuIG5ldyBuKHRbMF0sdFsxXSx0WzJdLHRbM10sdFs0XSk7Y2FzZSA2OnJldHVybiBuZXcgbih0WzBdLHRbMV0sdFsyXSx0WzNdLHRbNF0sdFs1XSk7Y2FzZSA3OnJldHVybiBuZXcgbih0WzBdLHRbMV0sdFsyXSx0WzNdLHRbNF0sdFs1XSx0WzZdKX12YXIgcj1nZShuLnByb3RvdHlwZSksZT1uLmFwcGx5KHIsdCk7cmV0dXJuIHpmKGUpP2U6cn19ZnVuY3Rpb24gcGkodCl7cmV0dXJuIGZ1bmN0aW9uKHIsZSx1KXt2YXIgaT1ydChyKTtpZigheGYocikpe3ZhciBvPVRpKGUsMyk7cj1mYShyKSxlPWZ1bmN0aW9uKG4pe3JldHVybiBvKGlbbl0sbixpKX19dmFyIGY9dChyLGUsdSk7cmV0dXJuIGY+LTE/aVtvP3JbZl06Zl06bn19ZnVuY3Rpb24gdmkodCl7cmV0dXJuIFNpKGZ1bmN0aW9uKHIpe3ZhciB1PXIubGVuZ3RoLGk9dSxvPWRlLnByb3RvdHlwZS50aHJ1O2Zvcih0JiZyLnJldmVyc2UoKTtpLS07KXt2YXIgZj1yW2ldO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGYpdGhyb3cgbmV3IGl0KGUpO2lmKG8mJiFhJiZcIndyYXBwZXJcIj09VWkoZikpdmFyIGE9bmV3IGRlKFtdLCEwKX1mb3IoaT1hP2k6dTsrK2k8dTspe3ZhciBjPVVpKGY9cltpXSksbD1cIndyYXBwZXJcIj09Yz9DaShmKTpuO2E9bCYmSmkobFswXSkmJmxbMV09PSh3fGd8ZHxtKSYmIWxbNF0ubGVuZ3RoJiYxPT1sWzldP2FbVWkobFswXSldLmFwcGx5KGEsbFszXSk6MT09Zi5sZW5ndGgmJkppKGYpP2FbY10oKTphLnRocnUoZil9cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49YXJndW1lbnRzLHQ9blswXTtpZihhJiYxPT1uLmxlbmd0aCYmd2YodCkpcmV0dXJuIGEucGxhbnQodCkudmFsdWUoKTtmb3IodmFyIGU9MCxpPXU/cltlXS5hcHBseSh0aGlzLG4pOnQ7KytlPHU7KWk9cltlXS5jYWxsKHRoaXMsaSk7cmV0dXJuIGl9fSl9ZnVuY3Rpb24gX2kodCxyLGUsdSxpLG8sZixhLGMsbCl7dmFyIHM9ciZ3LGg9ciZwLF89ciZ2LGQ9ciYoZ3x5KSxiPXImeCxtPV8/bjpoaSh0KTtyZXR1cm4gZnVuY3Rpb24gcCgpe2Zvcih2YXIgdj1hcmd1bWVudHMubGVuZ3RoLGc9WW4odikseT12O3ktLTspZ1t5XT1hcmd1bWVudHNbeV07aWYoZCl2YXIgdz1CaShwKSx4PWZ1bmN0aW9uKG4sdCl7Zm9yKHZhciByPW4ubGVuZ3RoLGU9MDtyLS07KW5bcl09PT10JiYrK2U7cmV0dXJuIGV9KGcsdyk7aWYodSYmKGc9cmkoZyx1LGksZCkpLG8mJihnPWVpKGcsbyxmLGQpKSx2LT14LGQmJnY8bCl7dmFyIGo9a3IoZyx3KTtyZXR1cm4geGkodCxyLF9pLHAucGxhY2Vob2xkZXIsZSxnLGosYSxjLGwtdil9dmFyIEE9aD9lOnRoaXMsaz1fP0FbdF06dDtyZXR1cm4gdj1nLmxlbmd0aCxhP2c9ZnVuY3Rpb24odCxyKXtmb3IodmFyIGU9dC5sZW5ndGgsdT1HcihyLmxlbmd0aCxlKSxpPXVpKHQpO3UtLTspe3ZhciBvPXJbdV07dFt1XT1WaShvLGUpP2lbb106bn1yZXR1cm4gdH0oZyxhKTpiJiZ2PjEmJmcucmV2ZXJzZSgpLHMmJmM8diYmKGcubGVuZ3RoPWMpLHRoaXMmJnRoaXMhPT16dCYmdGhpcyBpbnN0YW5jZW9mIHAmJihrPW18fGhpKGspKSxrLmFwcGx5KEEsZyl9fWZ1bmN0aW9uIGdpKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKHIsZSl7cmV0dXJuIGZ1bmN0aW9uKG4sdCxyLGUpe3JldHVybiBIZShuLGZ1bmN0aW9uKG4sdSxpKXt0KGUscihuKSx1LGkpfSksZX0ocixuLHQoZSkse30pfX1mdW5jdGlvbiB5aSh0LHIpe3JldHVybiBmdW5jdGlvbihlLHUpe3ZhciBpO2lmKGU9PT1uJiZ1PT09bilyZXR1cm4gcjtpZihlIT09biYmKGk9ZSksdSE9PW4pe2lmKGk9PT1uKXJldHVybiB1O1wic3RyaW5nXCI9PXR5cGVvZiBlfHxcInN0cmluZ1wiPT10eXBlb2YgdT8oZT1EdShlKSx1PUR1KHUpKTooZT1UdShlKSx1PVR1KHUpKSxpPXQoZSx1KX1yZXR1cm4gaX19ZnVuY3Rpb24gZGkobil7cmV0dXJuIFNpKGZ1bmN0aW9uKHQpe3JldHVybiB0PUp0KHQsdnIoVGkoKSkpLGt1KGZ1bmN0aW9uKHIpe3ZhciBlPXRoaXM7cmV0dXJuIG4odCxmdW5jdGlvbihuKXtyZXR1cm4gTnQobixlLHIpfSl9KX0pfWZ1bmN0aW9uIGJpKHQscil7dmFyIGU9KHI9cj09PW4/XCIgXCI6RHUocikpLmxlbmd0aDtpZihlPDIpcmV0dXJuIGU/QXUocix0KTpyO3ZhciB1PUF1KHIsTXIodC9ScihyKSkpO3JldHVybiB4cihyKT9KdShFcih1KSwwLHQpLmpvaW4oXCJcIik6dS5zbGljZSgwLHQpfWZ1bmN0aW9uIHdpKHQpe3JldHVybiBmdW5jdGlvbihyLGUsdSl7cmV0dXJuIHUmJlwibnVtYmVyXCIhPXR5cGVvZiB1JiZHaShyLGUsdSkmJihlPXU9bikscj1QZihyKSxlPT09bj8oZT1yLHI9MCk6ZT1QZihlKSxmdW5jdGlvbihuLHQscixlKXtmb3IodmFyIHU9LTEsaT1WcihNcigodC1uKS8ocnx8MSkpLDApLG89WW4oaSk7aS0tOylvW2U/aTorK3VdPW4sbis9cjtyZXR1cm4gb30ocixlLHU9dT09PW4/cjxlPzE6LTE6UGYodSksdCl9fWZ1bmN0aW9uIG1pKG4pe3JldHVybiBmdW5jdGlvbih0LHIpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0JiZcInN0cmluZ1wiPT10eXBlb2Ygcnx8KHQ9S2YodCkscj1LZihyKSksbih0LHIpfX1mdW5jdGlvbiB4aSh0LHIsZSx1LGksbyxmLGEsYyxsKXt2YXIgcz1yJmc7cnw9cz9kOmIsKHImPX4ocz9iOmQpKSZffHwociY9fihwfHYpKTt2YXIgaD1bdCxyLGkscz9vOm4scz9mOm4scz9uOm8scz9uOmYsYSxjLGxdLHk9ZS5hcHBseShuLGgpO3JldHVybiBKaSh0KSYmdW8oeSxoKSx5LnBsYWNlaG9sZGVyPXUsZm8oeSx0LHIpfWZ1bmN0aW9uIGppKG4pe3ZhciB0PXR0W25dO3JldHVybiBmdW5jdGlvbihuLHIpe2lmKG49S2YobiksKHI9bnVsbD09cj8wOkdyKHFmKHIpLDI5MikpJiZxcihuKSl7dmFyIGU9KEdmKG4pK1wiZVwiKS5zcGxpdChcImVcIik7cmV0dXJuKygoZT0oR2YodChlWzBdK1wiZVwiKygrZVsxXStyKSkpK1wiZVwiKS5zcGxpdChcImVcIikpWzBdK1wiZVwiKygrZVsxXS1yKSl9cmV0dXJuIHQobil9fXZhciBBaT1yZSYmMS9PcihuZXcgcmUoWywtMF0pKVsxXT09RT9mdW5jdGlvbihuKXtyZXR1cm4gbmV3IHJlKG4pfTpEYTtmdW5jdGlvbiBraShuKXtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIHI9UGkodCk7cmV0dXJuIHI9PUs/anIodCk6cj09UT9Jcih0KTpmdW5jdGlvbihuLHQpe3JldHVybiBKdCh0LGZ1bmN0aW9uKHQpe3JldHVyblt0LG5bdF1dfSl9KHQsbih0KSl9fWZ1bmN0aW9uIE9pKHQscix1LGksbyxhLGMsbCl7dmFyIHM9ciZ2O2lmKCFzJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0KXRocm93IG5ldyBpdChlKTt2YXIgaD1pP2kubGVuZ3RoOjA7aWYoaHx8KHImPX4oZHxiKSxpPW89biksYz1jPT09bj9jOlZyKHFmKGMpLDApLGw9bD09PW4/bDpxZihsKSxoLT1vP28ubGVuZ3RoOjAsciZiKXt2YXIgeD1pLGo9bztpPW89bn12YXIgQT1zP246Q2kodCksaz1bdCxyLHUsaSxvLHgsaixhLGMsbF07aWYoQSYmZnVuY3Rpb24obix0KXt2YXIgcj1uWzFdLGU9dFsxXSx1PXJ8ZSxpPXU8KHB8dnx3KSxvPWU9PXcmJnI9PWd8fGU9PXcmJnI9PW0mJm5bN10ubGVuZ3RoPD10WzhdfHxlPT0od3xtKSYmdFs3XS5sZW5ndGg8PXRbOF0mJnI9PWc7aWYoIWkmJiFvKXJldHVybiBuO2UmcCYmKG5bMl09dFsyXSx1fD1yJnA/MDpfKTt2YXIgYT10WzNdO2lmKGEpe3ZhciBjPW5bM107blszXT1jP3JpKGMsYSx0WzRdKTphLG5bNF09Yz9rcihuWzNdLGYpOnRbNF19KGE9dFs1XSkmJihjPW5bNV0sbls1XT1jP2VpKGMsYSx0WzZdKTphLG5bNl09Yz9rcihuWzVdLGYpOnRbNl0pLChhPXRbN10pJiYobls3XT1hKSxlJncmJihuWzhdPW51bGw9PW5bOF0/dFs4XTpHcihuWzhdLHRbOF0pKSxudWxsPT1uWzldJiYobls5XT10WzldKSxuWzBdPXRbMF0sblsxXT11fShrLEEpLHQ9a1swXSxyPWtbMV0sdT1rWzJdLGk9a1szXSxvPWtbNF0sIShsPWtbOV09a1s5XT09PW4/cz8wOnQubGVuZ3RoOlZyKGtbOV0taCwwKSkmJnImKGd8eSkmJihyJj1+KGd8eSkpLHImJnIhPXApTz1yPT1nfHxyPT15P2Z1bmN0aW9uKHQscixlKXt2YXIgdT1oaSh0KTtyZXR1cm4gZnVuY3Rpb24gaSgpe2Zvcih2YXIgbz1hcmd1bWVudHMubGVuZ3RoLGY9WW4obyksYT1vLGM9QmkoaSk7YS0tOylmW2FdPWFyZ3VtZW50c1thXTt2YXIgbD1vPDMmJmZbMF0hPT1jJiZmW28tMV0hPT1jP1tdOmtyKGYsYyk7cmV0dXJuKG8tPWwubGVuZ3RoKTxlP3hpKHQscixfaSxpLnBsYWNlaG9sZGVyLG4sZixsLG4sbixlLW8pOk50KHRoaXMmJnRoaXMhPT16dCYmdGhpcyBpbnN0YW5jZW9mIGk/dTp0LHRoaXMsZil9fSh0LHIsbCk6ciE9ZCYmciE9KHB8ZCl8fG8ubGVuZ3RoP19pLmFwcGx5KG4sayk6ZnVuY3Rpb24obix0LHIsZSl7dmFyIHU9dCZwLGk9aGkobik7cmV0dXJuIGZ1bmN0aW9uIHQoKXtmb3IodmFyIG89LTEsZj1hcmd1bWVudHMubGVuZ3RoLGE9LTEsYz1lLmxlbmd0aCxsPVluKGMrZikscz10aGlzJiZ0aGlzIT09enQmJnRoaXMgaW5zdGFuY2VvZiB0P2k6bjsrK2E8YzspbFthXT1lW2FdO2Zvcig7Zi0tOylsW2ErK109YXJndW1lbnRzWysrb107cmV0dXJuIE50KHMsdT9yOnRoaXMsbCl9fSh0LHIsdSxpKTtlbHNlIHZhciBPPWZ1bmN0aW9uKG4sdCxyKXt2YXIgZT10JnAsdT1oaShuKTtyZXR1cm4gZnVuY3Rpb24gdCgpe3JldHVybih0aGlzJiZ0aGlzIT09enQmJnRoaXMgaW5zdGFuY2VvZiB0P3U6bikuYXBwbHkoZT9yOnRoaXMsYXJndW1lbnRzKX19KHQscix1KTtyZXR1cm4gZm8oKEE/RXU6dW8pKE8sayksdCxyKX1mdW5jdGlvbiBJaSh0LHIsZSx1KXtyZXR1cm4gdD09PW58fGdmKHQsYXRbZV0pJiYhc3QuY2FsbCh1LGUpP3I6dH1mdW5jdGlvbiBSaSh0LHIsZSx1LGksbyl7cmV0dXJuIHpmKHQpJiZ6ZihyKSYmKG8uc2V0KHIsdCkseXUodCxyLG4sUmksbyksby5kZWxldGUocikpLHR9ZnVuY3Rpb24gRWkodCl7cmV0dXJuIENmKHQpP246dH1mdW5jdGlvbiB6aSh0LHIsZSx1LGksbyl7dmFyIGY9ZSZzLGE9dC5sZW5ndGgsYz1yLmxlbmd0aDtpZihhIT1jJiYhKGYmJmM+YSkpcmV0dXJuITE7dmFyIGw9by5nZXQodCkscD1vLmdldChyKTtpZihsJiZwKXJldHVybiBsPT1yJiZwPT10O3ZhciB2PS0xLF89ITAsZz1lJmg/bmV3IGplOm47Zm9yKG8uc2V0KHQsciksby5zZXQocix0KTsrK3Y8YTspe3ZhciB5PXRbdl0sZD1yW3ZdO2lmKHUpdmFyIGI9Zj91KGQseSx2LHIsdCxvKTp1KHksZCx2LHQscixvKTtpZihiIT09bil7aWYoYiljb250aW51ZTtfPSExO2JyZWFrfWlmKGcpe2lmKCFucihyLGZ1bmN0aW9uKG4sdCl7aWYoIWdyKGcsdCkmJih5PT09bnx8aSh5LG4sZSx1LG8pKSlyZXR1cm4gZy5wdXNoKHQpfSkpe189ITE7YnJlYWt9fWVsc2UgaWYoeSE9PWQmJiFpKHksZCxlLHUsbykpe189ITE7YnJlYWt9fXJldHVybiBvLmRlbGV0ZSh0KSxvLmRlbGV0ZShyKSxffWZ1bmN0aW9uIFNpKHQpe3JldHVybiBvbyh0byh0LG4sd28pLHQrXCJcIil9ZnVuY3Rpb24gTGkobil7cmV0dXJuIFhlKG4sZmEsRmkpfWZ1bmN0aW9uIFdpKG4pe3JldHVybiBYZShuLGFhLE5pKX12YXIgQ2k9aWU/ZnVuY3Rpb24obil7cmV0dXJuIGllLmdldChuKX06RGE7ZnVuY3Rpb24gVWkobil7Zm9yKHZhciB0PW4ubmFtZStcIlwiLHI9b2VbdF0sZT1zdC5jYWxsKG9lLHQpP3IubGVuZ3RoOjA7ZS0tOyl7dmFyIHU9cltlXSxpPXUuZnVuYztpZihudWxsPT1pfHxpPT1uKXJldHVybiB1Lm5hbWV9cmV0dXJuIHR9ZnVuY3Rpb24gQmkobil7cmV0dXJuKHN0LmNhbGwoX2UsXCJwbGFjZWhvbGRlclwiKT9fZTpuKS5wbGFjZWhvbGRlcn1mdW5jdGlvbiBUaSgpe3ZhciBuPV9lLml0ZXJhdGVlfHxDYTtyZXR1cm4gbj1uPT09Q2E/bHU6bixhcmd1bWVudHMubGVuZ3RoP24oYXJndW1lbnRzWzBdLGFyZ3VtZW50c1sxXSk6bn1mdW5jdGlvbiBEaShuLHQpe3ZhciByLGUsdT1uLl9fZGF0YV9fO3JldHVybihcInN0cmluZ1wiPT0oZT10eXBlb2Yocj10KSl8fFwibnVtYmVyXCI9PWV8fFwic3ltYm9sXCI9PWV8fFwiYm9vbGVhblwiPT1lP1wiX19wcm90b19fXCIhPT1yOm51bGw9PT1yKT91W1wic3RyaW5nXCI9PXR5cGVvZiB0P1wic3RyaW5nXCI6XCJoYXNoXCJdOnUubWFwfWZ1bmN0aW9uICRpKG4pe2Zvcih2YXIgdD1mYShuKSxyPXQubGVuZ3RoO3ItLTspe3ZhciBlPXRbcl0sdT1uW2VdO3Rbcl09W2UsdSxYaSh1KV19cmV0dXJuIHR9ZnVuY3Rpb24gTWkodCxyKXt2YXIgZT1mdW5jdGlvbih0LHIpe3JldHVybiBudWxsPT10P246dFtyXX0odCxyKTtyZXR1cm4gY3UoZSk/ZTpufXZhciBGaT1Ocj9mdW5jdGlvbihuKXtyZXR1cm4gbnVsbD09bj9bXToobj1ydChuKSxWdChOcihuKSxmdW5jdGlvbih0KXtyZXR1cm4gdHIuY2FsbChuLHQpfSkpfTpaYSxOaT1Ocj9mdW5jdGlvbihuKXtmb3IodmFyIHQ9W107bjspWXQodCxGaShuKSksbj1DdChuKTtyZXR1cm4gdH06WmEsUGk9bnU7ZnVuY3Rpb24gcWkobix0LHIpe2Zvcih2YXIgZT0tMSx1PSh0PUd1KHQsbikpLmxlbmd0aCxpPSExOysrZTx1Oyl7dmFyIG89c28odFtlXSk7aWYoIShpPW51bGwhPW4mJnIobixvKSkpYnJlYWs7bj1uW29dfXJldHVybiBpfHwrK2UhPXU/aTohISh1PW51bGw9PW4/MDpuLmxlbmd0aCkmJkVmKHUpJiZWaShvLHUpJiYod2Yobil8fGJmKG4pKX1mdW5jdGlvbiBaaShuKXtyZXR1cm5cImZ1bmN0aW9uXCIhPXR5cGVvZiBuLmNvbnN0cnVjdG9yfHxRaShuKT97fTpnZShDdChuKSl9ZnVuY3Rpb24gS2kobil7cmV0dXJuIHdmKG4pfHxiZihuKXx8ISEoV3ImJm4mJm5bV3JdKX1mdW5jdGlvbiBWaShuLHQpe3ZhciByPXR5cGVvZiBuO3JldHVybiEhKHQ9bnVsbD09dD96OnQpJiYoXCJudW1iZXJcIj09cnx8XCJzeW1ib2xcIiE9ciYmWm4udGVzdChuKSkmJm4+LTEmJm4lMT09MCYmbjx0fWZ1bmN0aW9uIEdpKG4sdCxyKXtpZighemYocikpcmV0dXJuITE7dmFyIGU9dHlwZW9mIHQ7cmV0dXJuISEoXCJudW1iZXJcIj09ZT94ZihyKSYmVmkodCxyLmxlbmd0aCk6XCJzdHJpbmdcIj09ZSYmdCBpbiByKSYmZ2Yoclt0XSxuKX1mdW5jdGlvbiBIaShuLHQpe2lmKHdmKG4pKXJldHVybiExO3ZhciByPXR5cGVvZiBuO3JldHVybiEoXCJudW1iZXJcIiE9ciYmXCJzeW1ib2xcIiE9ciYmXCJib29sZWFuXCIhPXImJm51bGwhPW4mJiFEZihuKSl8fEluLnRlc3Qobil8fCFPbi50ZXN0KG4pfHxudWxsIT10JiZuIGluIHJ0KHQpfWZ1bmN0aW9uIEppKG4pe3ZhciB0PVVpKG4pLHI9X2VbdF07aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygcnx8ISh0IGluIGJlLnByb3RvdHlwZSkpcmV0dXJuITE7aWYobj09PXIpcmV0dXJuITA7dmFyIGU9Q2kocik7cmV0dXJuISFlJiZuPT09ZVswXX0oWHImJlBpKG5ldyBYcihuZXcgQXJyYXlCdWZmZXIoMSkpKSE9b258fG5lJiZQaShuZXcgbmUpIT1LfHx0ZSYmXCJbb2JqZWN0IFByb21pc2VdXCIhPVBpKHRlLnJlc29sdmUoKSl8fHJlJiZQaShuZXcgcmUpIT1RfHxlZSYmUGkobmV3IGVlKSE9cm4pJiYoUGk9ZnVuY3Rpb24odCl7dmFyIHI9bnUodCksZT1yPT1IP3QuY29uc3RydWN0b3I6bix1PWU/aG8oZSk6XCJcIjtpZih1KXN3aXRjaCh1KXtjYXNlIGZlOnJldHVybiBvbjtjYXNlIGFlOnJldHVybiBLO2Nhc2UgY2U6cmV0dXJuXCJbb2JqZWN0IFByb21pc2VdXCI7Y2FzZSBsZTpyZXR1cm4gUTtjYXNlIHNlOnJldHVybiBybn1yZXR1cm4gcn0pO3ZhciBZaT1jdD9JZjpLYTtmdW5jdGlvbiBRaShuKXt2YXIgdD1uJiZuLmNvbnN0cnVjdG9yO3JldHVybiBuPT09KFwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJnQucHJvdG90eXBlfHxhdCl9ZnVuY3Rpb24gWGkobil7cmV0dXJuIG49PW4mJiF6ZihuKX1mdW5jdGlvbiBubyh0LHIpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbnVsbCE9ZSYmZVt0XT09PXImJihyIT09bnx8dCBpbiBydChlKSl9fWZ1bmN0aW9uIHRvKHQscixlKXtyZXR1cm4gcj1WcihyPT09bj90Lmxlbmd0aC0xOnIsMCksZnVuY3Rpb24oKXtmb3IodmFyIG49YXJndW1lbnRzLHU9LTEsaT1WcihuLmxlbmd0aC1yLDApLG89WW4oaSk7Kyt1PGk7KW9bdV09bltyK3VdO3U9LTE7Zm9yKHZhciBmPVluKHIrMSk7Kyt1PHI7KWZbdV09blt1XTtyZXR1cm4gZltyXT1lKG8pLE50KHQsdGhpcyxmKX19ZnVuY3Rpb24gcm8obix0KXtyZXR1cm4gdC5sZW5ndGg8Mj9uOlFlKG4sTHUodCwwLC0xKSl9ZnVuY3Rpb24gZW8obix0KXtpZigoXCJjb25zdHJ1Y3RvclwiIT09dHx8XCJmdW5jdGlvblwiIT10eXBlb2Ygblt0XSkmJlwiX19wcm90b19fXCIhPXQpcmV0dXJuIG5bdF19dmFyIHVvPWFvKEV1KSxpbz0kcnx8ZnVuY3Rpb24obix0KXtyZXR1cm4genQuc2V0VGltZW91dChuLHQpfSxvbz1hbyh6dSk7ZnVuY3Rpb24gZm8obix0LHIpe3ZhciBlPXQrXCJcIjtyZXR1cm4gb28obixmdW5jdGlvbihuLHQpe3ZhciByPXQubGVuZ3RoO2lmKCFyKXJldHVybiBuO3ZhciBlPXItMTtyZXR1cm4gdFtlXT0ocj4xP1wiJiBcIjpcIlwiKSt0W2VdLHQ9dC5qb2luKHI+Mj9cIiwgXCI6XCIgXCIpLG4ucmVwbGFjZShXbixcIntcXG4vKiBbd3JhcHBlZCB3aXRoIFwiK3QrXCJdICovXFxuXCIpfShlLGZ1bmN0aW9uKG4sdCl7cmV0dXJuIHF0KEIsZnVuY3Rpb24ocil7dmFyIGU9XCJfLlwiK3JbMF07dCZyWzFdJiYhR3QobixlKSYmbi5wdXNoKGUpfSksbi5zb3J0KCl9KGZ1bmN0aW9uKG4pe3ZhciB0PW4ubWF0Y2goQ24pO3JldHVybiB0P3RbMV0uc3BsaXQoVW4pOltdfShlKSxyKSkpfWZ1bmN0aW9uIGFvKHQpe3ZhciByPTAsZT0wO3JldHVybiBmdW5jdGlvbigpe3ZhciB1PUhyKCksaT1PLSh1LWUpO2lmKGU9dSxpPjApe2lmKCsrcj49aylyZXR1cm4gYXJndW1lbnRzWzBdfWVsc2Ugcj0wO3JldHVybiB0LmFwcGx5KG4sYXJndW1lbnRzKX19ZnVuY3Rpb24gY28odCxyKXt2YXIgZT0tMSx1PXQubGVuZ3RoLGk9dS0xO2ZvcihyPXI9PT1uP3U6cjsrK2U8cjspe3ZhciBvPWp1KGUsaSksZj10W29dO3Rbb109dFtlXSx0W2VdPWZ9cmV0dXJuIHQubGVuZ3RoPXIsdH12YXIgbG89ZnVuY3Rpb24obil7dmFyIHQ9bGYobixmdW5jdGlvbihuKXtyZXR1cm4gci5zaXplPT09byYmci5jbGVhcigpLG59KSxyPXQuY2FjaGU7cmV0dXJuIHR9KGZ1bmN0aW9uKG4pe3ZhciB0PVtdO3JldHVybiA0Nj09PW4uY2hhckNvZGVBdCgwKSYmdC5wdXNoKFwiXCIpLG4ucmVwbGFjZShSbixmdW5jdGlvbihuLHIsZSx1KXt0LnB1c2goZT91LnJlcGxhY2UoRG4sXCIkMVwiKTpyfHxuKX0pLHR9KTtmdW5jdGlvbiBzbyhuKXtpZihcInN0cmluZ1wiPT10eXBlb2Ygbnx8RGYobikpcmV0dXJuIG47dmFyIHQ9bitcIlwiO3JldHVyblwiMFwiPT10JiYxL249PS1FP1wiLTBcIjp0fWZ1bmN0aW9uIGhvKG4pe2lmKG51bGwhPW4pe3RyeXtyZXR1cm4gbHQuY2FsbChuKX1jYXRjaChuKXt9dHJ5e3JldHVybiBuK1wiXCJ9Y2F0Y2gobil7fX1yZXR1cm5cIlwifWZ1bmN0aW9uIHBvKG4pe2lmKG4gaW5zdGFuY2VvZiBiZSlyZXR1cm4gbi5jbG9uZSgpO3ZhciB0PW5ldyBkZShuLl9fd3JhcHBlZF9fLG4uX19jaGFpbl9fKTtyZXR1cm4gdC5fX2FjdGlvbnNfXz11aShuLl9fYWN0aW9uc19fKSx0Ll9faW5kZXhfXz1uLl9faW5kZXhfXyx0Ll9fdmFsdWVzX189bi5fX3ZhbHVlc19fLHR9dmFyIHZvPWt1KGZ1bmN0aW9uKG4sdCl7cmV0dXJuIGpmKG4pP01lKG4sS2UodCwxLGpmLCEwKSk6W119KSxfbz1rdShmdW5jdGlvbih0LHIpe3ZhciBlPWtvKHIpO3JldHVybiBqZihlKSYmKGU9biksamYodCk/TWUodCxLZShyLDEsamYsITApLFRpKGUsMikpOltdfSksZ289a3UoZnVuY3Rpb24odCxyKXt2YXIgZT1rbyhyKTtyZXR1cm4gamYoZSkmJihlPW4pLGpmKHQpP01lKHQsS2UociwxLGpmLCEwKSxuLGUpOltdfSk7ZnVuY3Rpb24geW8obix0LHIpe3ZhciBlPW51bGw9PW4/MDpuLmxlbmd0aDtpZighZSlyZXR1cm4tMTt2YXIgdT1udWxsPT1yPzA6cWYocik7cmV0dXJuIHU8MCYmKHU9VnIoZSt1LDApKSxlcihuLFRpKHQsMyksdSl9ZnVuY3Rpb24gYm8odCxyLGUpe3ZhciB1PW51bGw9PXQ/MDp0Lmxlbmd0aDtpZighdSlyZXR1cm4tMTt2YXIgaT11LTE7cmV0dXJuIGUhPT1uJiYoaT1xZihlKSxpPWU8MD9Wcih1K2ksMCk6R3IoaSx1LTEpKSxlcih0LFRpKHIsMyksaSwhMCl9ZnVuY3Rpb24gd28obil7cmV0dXJuIG51bGwhPW4mJm4ubGVuZ3RoP0tlKG4sMSk6W119ZnVuY3Rpb24gbW8odCl7cmV0dXJuIHQmJnQubGVuZ3RoP3RbMF06bn12YXIgeG89a3UoZnVuY3Rpb24obil7dmFyIHQ9SnQobixLdSk7cmV0dXJuIHQubGVuZ3RoJiZ0WzBdPT09blswXT91dSh0KTpbXX0pLGpvPWt1KGZ1bmN0aW9uKHQpe3ZhciByPWtvKHQpLGU9SnQodCxLdSk7cmV0dXJuIHI9PT1rbyhlKT9yPW46ZS5wb3AoKSxlLmxlbmd0aCYmZVswXT09PXRbMF0/dXUoZSxUaShyLDIpKTpbXX0pLEFvPWt1KGZ1bmN0aW9uKHQpe3ZhciByPWtvKHQpLGU9SnQodCxLdSk7cmV0dXJuKHI9XCJmdW5jdGlvblwiPT10eXBlb2Ygcj9yOm4pJiZlLnBvcCgpLGUubGVuZ3RoJiZlWzBdPT09dFswXT91dShlLG4scik6W119KTtmdW5jdGlvbiBrbyh0KXt2YXIgcj1udWxsPT10PzA6dC5sZW5ndGg7cmV0dXJuIHI/dFtyLTFdOm59dmFyIE9vPWt1KElvKTtmdW5jdGlvbiBJbyhuLHQpe3JldHVybiBuJiZuLmxlbmd0aCYmdCYmdC5sZW5ndGg/bXUobix0KTpufXZhciBSbz1TaShmdW5jdGlvbihuLHQpe3ZhciByPW51bGw9PW4/MDpuLmxlbmd0aCxlPVVlKG4sdCk7cmV0dXJuIHh1KG4sSnQodCxmdW5jdGlvbihuKXtyZXR1cm4gVmkobixyKT8rbjpufSkuc29ydCh0aSkpLGV9KTtmdW5jdGlvbiBFbyhuKXtyZXR1cm4gbnVsbD09bj9uOlFyLmNhbGwobil9dmFyIHpvPWt1KGZ1bmN0aW9uKG4pe3JldHVybiAkdShLZShuLDEsamYsITApKX0pLFNvPWt1KGZ1bmN0aW9uKHQpe3ZhciByPWtvKHQpO3JldHVybiBqZihyKSYmKHI9biksJHUoS2UodCwxLGpmLCEwKSxUaShyLDIpKX0pLExvPWt1KGZ1bmN0aW9uKHQpe3ZhciByPWtvKHQpO3JldHVybiByPVwiZnVuY3Rpb25cIj09dHlwZW9mIHI/cjpuLCR1KEtlKHQsMSxqZiwhMCksbixyKX0pO2Z1bmN0aW9uIFdvKG4pe2lmKCFufHwhbi5sZW5ndGgpcmV0dXJuW107dmFyIHQ9MDtyZXR1cm4gbj1WdChuLGZ1bmN0aW9uKG4pe2lmKGpmKG4pKXJldHVybiB0PVZyKG4ubGVuZ3RoLHQpLCEwfSksaHIodCxmdW5jdGlvbih0KXtyZXR1cm4gSnQobixhcih0KSl9KX1mdW5jdGlvbiBDbyh0LHIpe2lmKCF0fHwhdC5sZW5ndGgpcmV0dXJuW107dmFyIGU9V28odCk7cmV0dXJuIG51bGw9PXI/ZTpKdChlLGZ1bmN0aW9uKHQpe3JldHVybiBOdChyLG4sdCl9KX12YXIgVW89a3UoZnVuY3Rpb24obix0KXtyZXR1cm4gamYobik/TWUobix0KTpbXX0pLEJvPWt1KGZ1bmN0aW9uKG4pe3JldHVybiBxdShWdChuLGpmKSl9KSxUbz1rdShmdW5jdGlvbih0KXt2YXIgcj1rbyh0KTtyZXR1cm4gamYocikmJihyPW4pLHF1KFZ0KHQsamYpLFRpKHIsMikpfSksRG89a3UoZnVuY3Rpb24odCl7dmFyIHI9a28odCk7cmV0dXJuIHI9XCJmdW5jdGlvblwiPT10eXBlb2Ygcj9yOm4scXUoVnQodCxqZiksbixyKX0pLCRvPWt1KFdvKTt2YXIgTW89a3UoZnVuY3Rpb24odCl7dmFyIHI9dC5sZW5ndGgsZT1yPjE/dFtyLTFdOm47cmV0dXJuIENvKHQsZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBlPyh0LnBvcCgpLGUpOm4pfSk7ZnVuY3Rpb24gRm8obil7dmFyIHQ9X2Uobik7cmV0dXJuIHQuX19jaGFpbl9fPSEwLHR9ZnVuY3Rpb24gTm8obix0KXtyZXR1cm4gdChuKX12YXIgUG89U2koZnVuY3Rpb24odCl7dmFyIHI9dC5sZW5ndGgsZT1yP3RbMF06MCx1PXRoaXMuX193cmFwcGVkX18saT1mdW5jdGlvbihuKXtyZXR1cm4gVWUobix0KX07cmV0dXJuIShyPjF8fHRoaXMuX19hY3Rpb25zX18ubGVuZ3RoKSYmdSBpbnN0YW5jZW9mIGJlJiZWaShlKT8oKHU9dS5zbGljZShlLCtlKyhyPzE6MCkpKS5fX2FjdGlvbnNfXy5wdXNoKHtmdW5jOk5vLGFyZ3M6W2ldLHRoaXNBcmc6bn0pLG5ldyBkZSh1LHRoaXMuX19jaGFpbl9fKS50aHJ1KGZ1bmN0aW9uKHQpe3JldHVybiByJiYhdC5sZW5ndGgmJnQucHVzaChuKSx0fSkpOnRoaXMudGhydShpKX0pO3ZhciBxbz1vaShmdW5jdGlvbihuLHQscil7c3QuY2FsbChuLHIpPysrbltyXTpDZShuLHIsMSl9KTt2YXIgWm89cGkoeW8pLEtvPXBpKGJvKTtmdW5jdGlvbiBWbyhuLHQpe3JldHVybih3ZihuKT9xdDpGZSkobixUaSh0LDMpKX1mdW5jdGlvbiBHbyhuLHQpe3JldHVybih3ZihuKT9adDpOZSkobixUaSh0LDMpKX12YXIgSG89b2koZnVuY3Rpb24obix0LHIpe3N0LmNhbGwobixyKT9uW3JdLnB1c2godCk6Q2UobixyLFt0XSl9KTt2YXIgSm89a3UoZnVuY3Rpb24obix0LHIpe3ZhciBlPS0xLHU9XCJmdW5jdGlvblwiPT10eXBlb2YgdCxpPXhmKG4pP1luKG4ubGVuZ3RoKTpbXTtyZXR1cm4gRmUobixmdW5jdGlvbihuKXtpWysrZV09dT9OdCh0LG4scik6aXUobix0LHIpfSksaX0pLFlvPW9pKGZ1bmN0aW9uKG4sdCxyKXtDZShuLHIsdCl9KTtmdW5jdGlvbiBRbyhuLHQpe3JldHVybih3ZihuKT9KdDp2dSkobixUaSh0LDMpKX12YXIgWG89b2koZnVuY3Rpb24obix0LHIpe25bcj8wOjFdLnB1c2godCl9LGZ1bmN0aW9uKCl7cmV0dXJuW1tdLFtdXX0pO3ZhciBuZj1rdShmdW5jdGlvbihuLHQpe2lmKG51bGw9PW4pcmV0dXJuW107dmFyIHI9dC5sZW5ndGg7cmV0dXJuIHI+MSYmR2kobix0WzBdLHRbMV0pP3Q9W106cj4yJiZHaSh0WzBdLHRbMV0sdFsyXSkmJih0PVt0WzBdXSksYnUobixLZSh0LDEpLFtdKX0pLHRmPURyfHxmdW5jdGlvbigpe3JldHVybiB6dC5EYXRlLm5vdygpfTtmdW5jdGlvbiByZih0LHIsZSl7cmV0dXJuIHI9ZT9uOnIscj10JiZudWxsPT1yP3QubGVuZ3RoOnIsT2kodCx3LG4sbixuLG4scil9ZnVuY3Rpb24gZWYodCxyKXt2YXIgdTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiByKXRocm93IG5ldyBpdChlKTtyZXR1cm4gdD1xZih0KSxmdW5jdGlvbigpe3JldHVybi0tdD4wJiYodT1yLmFwcGx5KHRoaXMsYXJndW1lbnRzKSksdDw9MSYmKHI9biksdX19dmFyIHVmPWt1KGZ1bmN0aW9uKG4sdCxyKXt2YXIgZT1wO2lmKHIubGVuZ3RoKXt2YXIgdT1rcihyLEJpKHVmKSk7ZXw9ZH1yZXR1cm4gT2kobixlLHQscix1KX0pLG9mPWt1KGZ1bmN0aW9uKG4sdCxyKXt2YXIgZT1wfHY7aWYoci5sZW5ndGgpe3ZhciB1PWtyKHIsQmkob2YpKTtlfD1kfXJldHVybiBPaSh0LGUsbixyLHUpfSk7ZnVuY3Rpb24gZmYodCxyLHUpe3ZhciBpLG8sZixhLGMsbCxzPTAsaD0hMSxwPSExLHY9ITA7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl0aHJvdyBuZXcgaXQoZSk7ZnVuY3Rpb24gXyhyKXt2YXIgZT1pLHU9bztyZXR1cm4gaT1vPW4scz1yLGE9dC5hcHBseSh1LGUpfWZ1bmN0aW9uIGcodCl7dmFyIGU9dC1sO3JldHVybiBsPT09bnx8ZT49cnx8ZTwwfHxwJiZ0LXM+PWZ9ZnVuY3Rpb24geSgpe3ZhciBuPXRmKCk7aWYoZyhuKSlyZXR1cm4gZChuKTtjPWlvKHksZnVuY3Rpb24obil7dmFyIHQ9ci0obi1sKTtyZXR1cm4gcD9Hcih0LGYtKG4tcykpOnR9KG4pKX1mdW5jdGlvbiBkKHQpe3JldHVybiBjPW4sdiYmaT9fKHQpOihpPW89bixhKX1mdW5jdGlvbiBiKCl7dmFyIHQ9dGYoKSxlPWcodCk7aWYoaT1hcmd1bWVudHMsbz10aGlzLGw9dCxlKXtpZihjPT09bilyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIHM9bixjPWlvKHksciksaD9fKG4pOmF9KGwpO2lmKHApcmV0dXJuIFl1KGMpLGM9aW8oeSxyKSxfKGwpfXJldHVybiBjPT09biYmKGM9aW8oeSxyKSksYX1yZXR1cm4gcj1LZihyKXx8MCx6Zih1KSYmKGg9ISF1LmxlYWRpbmcsZj0ocD1cIm1heFdhaXRcImluIHUpP1ZyKEtmKHUubWF4V2FpdCl8fDAscik6Zix2PVwidHJhaWxpbmdcImluIHU/ISF1LnRyYWlsaW5nOnYpLGIuY2FuY2VsPWZ1bmN0aW9uKCl7YyE9PW4mJll1KGMpLHM9MCxpPWw9bz1jPW59LGIuZmx1c2g9ZnVuY3Rpb24oKXtyZXR1cm4gYz09PW4/YTpkKHRmKCkpfSxifXZhciBhZj1rdShmdW5jdGlvbihuLHQpe3JldHVybiAkZShuLDEsdCl9KSxjZj1rdShmdW5jdGlvbihuLHQscil7cmV0dXJuICRlKG4sS2YodCl8fDAscil9KTtmdW5jdGlvbiBsZihuLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIG58fG51bGwhPXQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpdGhyb3cgbmV3IGl0KGUpO3ZhciByPWZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLHU9dD90LmFwcGx5KHRoaXMsZSk6ZVswXSxpPXIuY2FjaGU7aWYoaS5oYXModSkpcmV0dXJuIGkuZ2V0KHUpO3ZhciBvPW4uYXBwbHkodGhpcyxlKTtyZXR1cm4gci5jYWNoZT1pLnNldCh1LG8pfHxpLG99O3JldHVybiByLmNhY2hlPW5ldyhsZi5DYWNoZXx8eGUpLHJ9ZnVuY3Rpb24gc2Yobil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygbil0aHJvdyBuZXcgaXQoZSk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzO3N3aXRjaCh0Lmxlbmd0aCl7Y2FzZSAwOnJldHVybiFuLmNhbGwodGhpcyk7Y2FzZSAxOnJldHVybiFuLmNhbGwodGhpcyx0WzBdKTtjYXNlIDI6cmV0dXJuIW4uY2FsbCh0aGlzLHRbMF0sdFsxXSk7Y2FzZSAzOnJldHVybiFuLmNhbGwodGhpcyx0WzBdLHRbMV0sdFsyXSl9cmV0dXJuIW4uYXBwbHkodGhpcyx0KX19bGYuQ2FjaGU9eGU7dmFyIGhmPUh1KGZ1bmN0aW9uKG4sdCl7dmFyIHI9KHQ9MT09dC5sZW5ndGgmJndmKHRbMF0pP0p0KHRbMF0sdnIoVGkoKSkpOkp0KEtlKHQsMSksdnIoVGkoKSkpKS5sZW5ndGg7cmV0dXJuIGt1KGZ1bmN0aW9uKGUpe2Zvcih2YXIgdT0tMSxpPUdyKGUubGVuZ3RoLHIpOysrdTxpOyllW3VdPXRbdV0uY2FsbCh0aGlzLGVbdV0pO3JldHVybiBOdChuLHRoaXMsZSl9KX0pLHBmPWt1KGZ1bmN0aW9uKHQscil7dmFyIGU9a3IocixCaShwZikpO3JldHVybiBPaSh0LGQsbixyLGUpfSksdmY9a3UoZnVuY3Rpb24odCxyKXt2YXIgZT1rcihyLEJpKHZmKSk7cmV0dXJuIE9pKHQsYixuLHIsZSl9KSxfZj1TaShmdW5jdGlvbih0LHIpe3JldHVybiBPaSh0LG0sbixuLG4scil9KTtmdW5jdGlvbiBnZihuLHQpe3JldHVybiBuPT09dHx8biE9biYmdCE9dH12YXIgeWY9bWkodHUpLGRmPW1pKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIG4+PXR9KSxiZj1vdShmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpP291OmZ1bmN0aW9uKG4pe3JldHVybiBTZihuKSYmc3QuY2FsbChuLFwiY2FsbGVlXCIpJiYhdHIuY2FsbChuLFwiY2FsbGVlXCIpfSx3Zj1Zbi5pc0FycmF5LG1mPUJ0P3ZyKEJ0KTpmdW5jdGlvbihuKXtyZXR1cm4gU2YobikmJm51KG4pPT11bn07ZnVuY3Rpb24geGYobil7cmV0dXJuIG51bGwhPW4mJkVmKG4ubGVuZ3RoKSYmIUlmKG4pfWZ1bmN0aW9uIGpmKG4pe3JldHVybiBTZihuKSYmeGYobil9dmFyIEFmPVByfHxLYSxrZj1UdD92cihUdCk6ZnVuY3Rpb24obil7cmV0dXJuIFNmKG4pJiZudShuKT09Rn07ZnVuY3Rpb24gT2Yobil7aWYoIVNmKG4pKXJldHVybiExO3ZhciB0PW51KG4pO3JldHVybiB0PT1QfHx0PT1OfHxcInN0cmluZ1wiPT10eXBlb2Ygbi5tZXNzYWdlJiZcInN0cmluZ1wiPT10eXBlb2Ygbi5uYW1lJiYhQ2Yobil9ZnVuY3Rpb24gSWYobil7aWYoIXpmKG4pKXJldHVybiExO3ZhciB0PW51KG4pO3JldHVybiB0PT1xfHx0PT1afHx0PT0kfHx0PT1KfWZ1bmN0aW9uIFJmKG4pe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBuJiZuPT1xZihuKX1mdW5jdGlvbiBFZihuKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgbiYmbj4tMSYmbiUxPT0wJiZuPD16fWZ1bmN0aW9uIHpmKG4pe3ZhciB0PXR5cGVvZiBuO3JldHVybiBudWxsIT1uJiYoXCJvYmplY3RcIj09dHx8XCJmdW5jdGlvblwiPT10KX1mdW5jdGlvbiBTZihuKXtyZXR1cm4gbnVsbCE9biYmXCJvYmplY3RcIj09dHlwZW9mIG59dmFyIExmPUR0P3ZyKER0KTpmdW5jdGlvbihuKXtyZXR1cm4gU2YobikmJlBpKG4pPT1LfTtmdW5jdGlvbiBXZihuKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2Ygbnx8U2YobikmJm51KG4pPT1WfWZ1bmN0aW9uIENmKG4pe2lmKCFTZihuKXx8bnUobikhPUgpcmV0dXJuITE7dmFyIHQ9Q3Qobik7aWYobnVsbD09PXQpcmV0dXJuITA7dmFyIHI9c3QuY2FsbCh0LFwiY29uc3RydWN0b3JcIikmJnQuY29uc3RydWN0b3I7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgciYmciBpbnN0YW5jZW9mIHImJmx0LmNhbGwocik9PXl0fXZhciBVZj0kdD92cigkdCk6ZnVuY3Rpb24obil7cmV0dXJuIFNmKG4pJiZudShuKT09WX07dmFyIEJmPU10P3ZyKE10KTpmdW5jdGlvbihuKXtyZXR1cm4gU2YobikmJlBpKG4pPT1RfTtmdW5jdGlvbiBUZihuKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2Ygbnx8IXdmKG4pJiZTZihuKSYmbnUobik9PVh9ZnVuY3Rpb24gRGYobil7cmV0dXJuXCJzeW1ib2xcIj09dHlwZW9mIG58fFNmKG4pJiZudShuKT09bm59dmFyICRmPUZ0P3ZyKEZ0KTpmdW5jdGlvbihuKXtyZXR1cm4gU2YobikmJkVmKG4ubGVuZ3RoKSYmISFqdFtudShuKV19O3ZhciBNZj1taShwdSksRmY9bWkoZnVuY3Rpb24obix0KXtyZXR1cm4gbjw9dH0pO2Z1bmN0aW9uIE5mKG4pe2lmKCFuKXJldHVybltdO2lmKHhmKG4pKXJldHVybiBUZihuKT9FcihuKTp1aShuKTtpZihDciYmbltDcl0pcmV0dXJuIGZ1bmN0aW9uKG4pe2Zvcih2YXIgdCxyPVtdOyEodD1uLm5leHQoKSkuZG9uZTspci5wdXNoKHQudmFsdWUpO3JldHVybiByfShuW0NyXSgpKTt2YXIgdD1QaShuKTtyZXR1cm4odD09Sz9qcjp0PT1RP09yOmdhKShuKX1mdW5jdGlvbiBQZihuKXtyZXR1cm4gbj8obj1LZihuKSk9PT1FfHxuPT09LUU/KG48MD8tMToxKSpTOm49PW4/bjowOjA9PT1uP246MH1mdW5jdGlvbiBxZihuKXt2YXIgdD1QZihuKSxyPXQlMTtyZXR1cm4gdD09dD9yP3Qtcjp0OjB9ZnVuY3Rpb24gWmYobil7cmV0dXJuIG4/QmUocWYobiksMCxXKTowfWZ1bmN0aW9uIEtmKG4pe2lmKFwibnVtYmVyXCI9PXR5cGVvZiBuKXJldHVybiBuO2lmKERmKG4pKXJldHVybiBMO2lmKHpmKG4pKXt2YXIgdD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuLnZhbHVlT2Y/bi52YWx1ZU9mKCk6bjtuPXpmKHQpP3QrXCJcIjp0fWlmKFwic3RyaW5nXCIhPXR5cGVvZiBuKXJldHVybiAwPT09bj9uOituO249cHIobik7dmFyIHI9Tm4udGVzdChuKTtyZXR1cm4gcnx8cW4udGVzdChuKT9JdChuLnNsaWNlKDIpLHI/Mjo4KTpGbi50ZXN0KG4pP0w6K259ZnVuY3Rpb24gVmYobil7cmV0dXJuIGlpKG4sYWEobikpfWZ1bmN0aW9uIEdmKG4pe3JldHVybiBudWxsPT1uP1wiXCI6RHUobil9dmFyIEhmPWZpKGZ1bmN0aW9uKG4sdCl7aWYoUWkodCl8fHhmKHQpKWlpKHQsZmEodCksbik7ZWxzZSBmb3IodmFyIHIgaW4gdClzdC5jYWxsKHQscikmJnplKG4scix0W3JdKX0pLEpmPWZpKGZ1bmN0aW9uKG4sdCl7aWkodCxhYSh0KSxuKX0pLFlmPWZpKGZ1bmN0aW9uKG4sdCxyLGUpe2lpKHQsYWEodCksbixlKX0pLFFmPWZpKGZ1bmN0aW9uKG4sdCxyLGUpe2lpKHQsZmEodCksbixlKX0pLFhmPVNpKFVlKTt2YXIgbmE9a3UoZnVuY3Rpb24odCxyKXt0PXJ0KHQpO3ZhciBlPS0xLHU9ci5sZW5ndGgsaT11PjI/clsyXTpuO2ZvcihpJiZHaShyWzBdLHJbMV0saSkmJih1PTEpOysrZTx1Oylmb3IodmFyIG89cltlXSxmPWFhKG8pLGE9LTEsYz1mLmxlbmd0aDsrK2E8Yzspe3ZhciBsPWZbYV0scz10W2xdOyhzPT09bnx8Z2YocyxhdFtsXSkmJiFzdC5jYWxsKHQsbCkpJiYodFtsXT1vW2xdKX1yZXR1cm4gdH0pLHRhPWt1KGZ1bmN0aW9uKHQpe3JldHVybiB0LnB1c2gobixSaSksTnQobGEsbix0KX0pO2Z1bmN0aW9uIHJhKHQscixlKXt2YXIgdT1udWxsPT10P246UWUodCxyKTtyZXR1cm4gdT09PW4/ZTp1fWZ1bmN0aW9uIGVhKG4sdCl7cmV0dXJuIG51bGwhPW4mJnFpKG4sdCxldSl9dmFyIHVhPWdpKGZ1bmN0aW9uKG4sdCxyKXtudWxsIT10JiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0LnRvU3RyaW5nJiYodD12dC5jYWxsKHQpKSxuW3RdPXJ9LHphKFdhKSksaWE9Z2koZnVuY3Rpb24obix0LHIpe251bGwhPXQmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHQudG9TdHJpbmcmJih0PXZ0LmNhbGwodCkpLHN0LmNhbGwobix0KT9uW3RdLnB1c2gocik6blt0XT1bcl19LFRpKSxvYT1rdShpdSk7ZnVuY3Rpb24gZmEobil7cmV0dXJuIHhmKG4pP2tlKG4pOnN1KG4pfWZ1bmN0aW9uIGFhKG4pe3JldHVybiB4ZihuKT9rZShuLCEwKTpodShuKX12YXIgY2E9ZmkoZnVuY3Rpb24obix0LHIpe3l1KG4sdCxyKX0pLGxhPWZpKGZ1bmN0aW9uKG4sdCxyLGUpe3l1KG4sdCxyLGUpfSksc2E9U2koZnVuY3Rpb24obix0KXt2YXIgcj17fTtpZihudWxsPT1uKXJldHVybiByO3ZhciBlPSExO3Q9SnQodCxmdW5jdGlvbih0KXtyZXR1cm4gdD1HdSh0LG4pLGV8fChlPXQubGVuZ3RoPjEpLHR9KSxpaShuLFdpKG4pLHIpLGUmJihyPVRlKHIsYXxjfGwsRWkpKTtmb3IodmFyIHU9dC5sZW5ndGg7dS0tOylNdShyLHRbdV0pO3JldHVybiByfSk7dmFyIGhhPVNpKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIG51bGw9PW4/e306ZnVuY3Rpb24obix0KXtyZXR1cm4gd3Uobix0LGZ1bmN0aW9uKHQscil7cmV0dXJuIGVhKG4scil9KX0obix0KX0pO2Z1bmN0aW9uIHBhKG4sdCl7aWYobnVsbD09bilyZXR1cm57fTt2YXIgcj1KdChXaShuKSxmdW5jdGlvbihuKXtyZXR1cm5bbl19KTtyZXR1cm4gdD1UaSh0KSx3dShuLHIsZnVuY3Rpb24obixyKXtyZXR1cm4gdChuLHJbMF0pfSl9dmFyIHZhPWtpKGZhKSxfYT1raShhYSk7ZnVuY3Rpb24gZ2Eobil7cmV0dXJuIG51bGw9PW4/W106X3IobixmYShuKSl9dmFyIHlhPXNpKGZ1bmN0aW9uKG4sdCxyKXtyZXR1cm4gdD10LnRvTG93ZXJDYXNlKCksbisocj9kYSh0KTp0KX0pO2Z1bmN0aW9uIGRhKG4pe3JldHVybiBPYShHZihuKS50b0xvd2VyQ2FzZSgpKX1mdW5jdGlvbiBiYShuKXtyZXR1cm4obj1HZihuKSkmJm4ucmVwbGFjZShLbixicikucmVwbGFjZShndCxcIlwiKX12YXIgd2E9c2koZnVuY3Rpb24obix0LHIpe3JldHVybiBuKyhyP1wiLVwiOlwiXCIpK3QudG9Mb3dlckNhc2UoKX0pLG1hPXNpKGZ1bmN0aW9uKG4sdCxyKXtyZXR1cm4gbisocj9cIiBcIjpcIlwiKSt0LnRvTG93ZXJDYXNlKCl9KSx4YT1saShcInRvTG93ZXJDYXNlXCIpO3ZhciBqYT1zaShmdW5jdGlvbihuLHQscil7cmV0dXJuIG4rKHI/XCJfXCI6XCJcIikrdC50b0xvd2VyQ2FzZSgpfSk7dmFyIEFhPXNpKGZ1bmN0aW9uKG4sdCxyKXtyZXR1cm4gbisocj9cIiBcIjpcIlwiKStPYSh0KX0pO3ZhciBrYT1zaShmdW5jdGlvbihuLHQscil7cmV0dXJuIG4rKHI/XCIgXCI6XCJcIikrdC50b1VwcGVyQ2FzZSgpfSksT2E9bGkoXCJ0b1VwcGVyQ2FzZVwiKTtmdW5jdGlvbiBJYSh0LHIsZSl7cmV0dXJuIHQ9R2YodCksKHI9ZT9uOnIpPT09bj9mdW5jdGlvbihuKXtyZXR1cm4gd3QudGVzdChuKX0odCk/ZnVuY3Rpb24obil7cmV0dXJuIG4ubWF0Y2goZHQpfHxbXX0odCk6ZnVuY3Rpb24obil7cmV0dXJuIG4ubWF0Y2goQm4pfHxbXX0odCk6dC5tYXRjaChyKXx8W119dmFyIFJhPWt1KGZ1bmN0aW9uKHQscil7dHJ5e3JldHVybiBOdCh0LG4scil9Y2F0Y2gobil7cmV0dXJuIE9mKG4pP246bmV3IFhuKG4pfX0pLEVhPVNpKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIHF0KHQsZnVuY3Rpb24odCl7dD1zbyh0KSxDZShuLHQsdWYoblt0XSxuKSl9KSxufSk7ZnVuY3Rpb24gemEobil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG59fXZhciBTYT12aSgpLExhPXZpKCEwKTtmdW5jdGlvbiBXYShuKXtyZXR1cm4gbn1mdW5jdGlvbiBDYShuKXtyZXR1cm4gbHUoXCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uOlRlKG4sYSkpfXZhciBVYT1rdShmdW5jdGlvbihuLHQpe3JldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gaXUocixuLHQpfX0pLEJhPWt1KGZ1bmN0aW9uKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBpdShuLHIsdCl9fSk7ZnVuY3Rpb24gVGEobix0LHIpe3ZhciBlPWZhKHQpLHU9WWUodCxlKTtudWxsIT1yfHx6Zih0KSYmKHUubGVuZ3RofHwhZS5sZW5ndGgpfHwocj10LHQ9bixuPXRoaXMsdT1ZZSh0LGZhKHQpKSk7dmFyIGk9ISh6ZihyKSYmXCJjaGFpblwiaW4gciYmIXIuY2hhaW4pLG89SWYobik7cmV0dXJuIHF0KHUsZnVuY3Rpb24ocil7dmFyIGU9dFtyXTtuW3JdPWUsbyYmKG4ucHJvdG90eXBlW3JdPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fX2NoYWluX187aWYoaXx8dCl7dmFyIHI9bih0aGlzLl9fd3JhcHBlZF9fKTtyZXR1cm4oci5fX2FjdGlvbnNfXz11aSh0aGlzLl9fYWN0aW9uc19fKSkucHVzaCh7ZnVuYzplLGFyZ3M6YXJndW1lbnRzLHRoaXNBcmc6bn0pLHIuX19jaGFpbl9fPXQscn1yZXR1cm4gZS5hcHBseShuLFl0KFt0aGlzLnZhbHVlKCldLGFyZ3VtZW50cykpfSl9KSxufWZ1bmN0aW9uIERhKCl7fXZhciAkYT1kaShKdCksTWE9ZGkoS3QpLEZhPWRpKG5yKTtmdW5jdGlvbiBOYShuKXtyZXR1cm4gSGkobik/YXIoc28obikpOmZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gUWUodCxuKX19KG4pfXZhciBQYT13aSgpLHFhPXdpKCEwKTtmdW5jdGlvbiBaYSgpe3JldHVybltdfWZ1bmN0aW9uIEthKCl7cmV0dXJuITF9dmFyIFZhPXlpKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIG4rdH0sMCksR2E9amkoXCJjZWlsXCIpLEhhPXlpKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIG4vdH0sMSksSmE9amkoXCJmbG9vclwiKTt2YXIgWWEsUWE9eWkoZnVuY3Rpb24obix0KXtyZXR1cm4gbip0fSwxKSxYYT1qaShcInJvdW5kXCIpLG5jPXlpKGZ1bmN0aW9uKG4sdCl7cmV0dXJuIG4tdH0sMCk7cmV0dXJuIF9lLmFmdGVyPWZ1bmN0aW9uKG4sdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl0aHJvdyBuZXcgaXQoZSk7cmV0dXJuIG49cWYobiksZnVuY3Rpb24oKXtpZigtLW48MSlyZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSxfZS5hcnk9cmYsX2UuYXNzaWduPUhmLF9lLmFzc2lnbkluPUpmLF9lLmFzc2lnbkluV2l0aD1ZZixfZS5hc3NpZ25XaXRoPVFmLF9lLmF0PVhmLF9lLmJlZm9yZT1lZixfZS5iaW5kPXVmLF9lLmJpbmRBbGw9RWEsX2UuYmluZEtleT1vZixfZS5jYXN0QXJyYXk9ZnVuY3Rpb24oKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm5bXTt2YXIgbj1hcmd1bWVudHNbMF07cmV0dXJuIHdmKG4pP246W25dfSxfZS5jaGFpbj1GbyxfZS5jaHVuaz1mdW5jdGlvbih0LHIsZSl7cj0oZT9HaSh0LHIsZSk6cj09PW4pPzE6VnIocWYociksMCk7dmFyIHU9bnVsbD09dD8wOnQubGVuZ3RoO2lmKCF1fHxyPDEpcmV0dXJuW107Zm9yKHZhciBpPTAsbz0wLGY9WW4oTXIodS9yKSk7aTx1OylmW28rK109THUodCxpLGkrPXIpO3JldHVybiBmfSxfZS5jb21wYWN0PWZ1bmN0aW9uKG4pe2Zvcih2YXIgdD0tMSxyPW51bGw9PW4/MDpuLmxlbmd0aCxlPTAsdT1bXTsrK3Q8cjspe3ZhciBpPW5bdF07aSYmKHVbZSsrXT1pKX1yZXR1cm4gdX0sX2UuY29uY2F0PWZ1bmN0aW9uKCl7dmFyIG49YXJndW1lbnRzLmxlbmd0aDtpZighbilyZXR1cm5bXTtmb3IodmFyIHQ9WW4obi0xKSxyPWFyZ3VtZW50c1swXSxlPW47ZS0tOyl0W2UtMV09YXJndW1lbnRzW2VdO3JldHVybiBZdCh3ZihyKT91aShyKTpbcl0sS2UodCwxKSl9LF9lLmNvbmQ9ZnVuY3Rpb24obil7dmFyIHQ9bnVsbD09bj8wOm4ubGVuZ3RoLHI9VGkoKTtyZXR1cm4gbj10P0p0KG4sZnVuY3Rpb24obil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgblsxXSl0aHJvdyBuZXcgaXQoZSk7cmV0dXJuW3IoblswXSksblsxXV19KTpbXSxrdShmdW5jdGlvbihyKXtmb3IodmFyIGU9LTE7KytlPHQ7KXt2YXIgdT1uW2VdO2lmKE50KHVbMF0sdGhpcyxyKSlyZXR1cm4gTnQodVsxXSx0aGlzLHIpfX0pfSxfZS5jb25mb3Jtcz1mdW5jdGlvbihuKXtyZXR1cm4gZnVuY3Rpb24obil7dmFyIHQ9ZmEobik7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBEZShyLG4sdCl9fShUZShuLGEpKX0sX2UuY29uc3RhbnQ9emEsX2UuY291bnRCeT1xbyxfZS5jcmVhdGU9ZnVuY3Rpb24obix0KXt2YXIgcj1nZShuKTtyZXR1cm4gbnVsbD09dD9yOldlKHIsdCl9LF9lLmN1cnJ5PWZ1bmN0aW9uIHQocixlLHUpe3ZhciBpPU9pKHIsZyxuLG4sbixuLG4sZT11P246ZSk7cmV0dXJuIGkucGxhY2Vob2xkZXI9dC5wbGFjZWhvbGRlcixpfSxfZS5jdXJyeVJpZ2h0PWZ1bmN0aW9uIHQocixlLHUpe3ZhciBpPU9pKHIseSxuLG4sbixuLG4sZT11P246ZSk7cmV0dXJuIGkucGxhY2Vob2xkZXI9dC5wbGFjZWhvbGRlcixpfSxfZS5kZWJvdW5jZT1mZixfZS5kZWZhdWx0cz1uYSxfZS5kZWZhdWx0c0RlZXA9dGEsX2UuZGVmZXI9YWYsX2UuZGVsYXk9Y2YsX2UuZGlmZmVyZW5jZT12byxfZS5kaWZmZXJlbmNlQnk9X28sX2UuZGlmZmVyZW5jZVdpdGg9Z28sX2UuZHJvcD1mdW5jdGlvbih0LHIsZSl7dmFyIHU9bnVsbD09dD8wOnQubGVuZ3RoO3JldHVybiB1P0x1KHQsKHI9ZXx8cj09PW4/MTpxZihyKSk8MD8wOnIsdSk6W119LF9lLmRyb3BSaWdodD1mdW5jdGlvbih0LHIsZSl7dmFyIHU9bnVsbD09dD8wOnQubGVuZ3RoO3JldHVybiB1P0x1KHQsMCwocj11LShyPWV8fHI9PT1uPzE6cWYocikpKTwwPzA6cik6W119LF9lLmRyb3BSaWdodFdoaWxlPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIG4mJm4ubGVuZ3RoP051KG4sVGkodCwzKSwhMCwhMCk6W119LF9lLmRyb3BXaGlsZT1mdW5jdGlvbihuLHQpe3JldHVybiBuJiZuLmxlbmd0aD9OdShuLFRpKHQsMyksITApOltdfSxfZS5maWxsPWZ1bmN0aW9uKHQscixlLHUpe3ZhciBpPW51bGw9PXQ/MDp0Lmxlbmd0aDtyZXR1cm4gaT8oZSYmXCJudW1iZXJcIiE9dHlwZW9mIGUmJkdpKHQscixlKSYmKGU9MCx1PWkpLGZ1bmN0aW9uKHQscixlLHUpe3ZhciBpPXQubGVuZ3RoO2ZvcigoZT1xZihlKSk8MCYmKGU9LWU+aT8wOmkrZSksKHU9dT09PW58fHU+aT9pOnFmKHUpKTwwJiYodSs9aSksdT1lPnU/MDpaZih1KTtlPHU7KXRbZSsrXT1yO3JldHVybiB0fSh0LHIsZSx1KSk6W119LF9lLmZpbHRlcj1mdW5jdGlvbihuLHQpe3JldHVybih3ZihuKT9WdDpaZSkobixUaSh0LDMpKX0sX2UuZmxhdE1hcD1mdW5jdGlvbihuLHQpe3JldHVybiBLZShRbyhuLHQpLDEpfSxfZS5mbGF0TWFwRGVlcD1mdW5jdGlvbihuLHQpe3JldHVybiBLZShRbyhuLHQpLEUpfSxfZS5mbGF0TWFwRGVwdGg9ZnVuY3Rpb24odCxyLGUpe3JldHVybiBlPWU9PT1uPzE6cWYoZSksS2UoUW8odCxyKSxlKX0sX2UuZmxhdHRlbj13byxfZS5mbGF0dGVuRGVlcD1mdW5jdGlvbihuKXtyZXR1cm4gbnVsbCE9biYmbi5sZW5ndGg/S2UobixFKTpbXX0sX2UuZmxhdHRlbkRlcHRoPWZ1bmN0aW9uKHQscil7cmV0dXJuIG51bGwhPXQmJnQubGVuZ3RoP0tlKHQscj1yPT09bj8xOnFmKHIpKTpbXX0sX2UuZmxpcD1mdW5jdGlvbihuKXtyZXR1cm4gT2kobix4KX0sX2UuZmxvdz1TYSxfZS5mbG93UmlnaHQ9TGEsX2UuZnJvbVBhaXJzPWZ1bmN0aW9uKG4pe2Zvcih2YXIgdD0tMSxyPW51bGw9PW4/MDpuLmxlbmd0aCxlPXt9OysrdDxyOyl7dmFyIHU9blt0XTtlW3VbMF1dPXVbMV19cmV0dXJuIGV9LF9lLmZ1bmN0aW9ucz1mdW5jdGlvbihuKXtyZXR1cm4gbnVsbD09bj9bXTpZZShuLGZhKG4pKX0sX2UuZnVuY3Rpb25zSW49ZnVuY3Rpb24obil7cmV0dXJuIG51bGw9PW4/W106WWUobixhYShuKSl9LF9lLmdyb3VwQnk9SG8sX2UuaW5pdGlhbD1mdW5jdGlvbihuKXtyZXR1cm4gbnVsbCE9biYmbi5sZW5ndGg/THUobiwwLC0xKTpbXX0sX2UuaW50ZXJzZWN0aW9uPXhvLF9lLmludGVyc2VjdGlvbkJ5PWpvLF9lLmludGVyc2VjdGlvbldpdGg9QW8sX2UuaW52ZXJ0PXVhLF9lLmludmVydEJ5PWlhLF9lLmludm9rZU1hcD1KbyxfZS5pdGVyYXRlZT1DYSxfZS5rZXlCeT1ZbyxfZS5rZXlzPWZhLF9lLmtleXNJbj1hYSxfZS5tYXA9UW8sX2UubWFwS2V5cz1mdW5jdGlvbihuLHQpe3ZhciByPXt9O3JldHVybiB0PVRpKHQsMyksSGUobixmdW5jdGlvbihuLGUsdSl7Q2Uocix0KG4sZSx1KSxuKX0pLHJ9LF9lLm1hcFZhbHVlcz1mdW5jdGlvbihuLHQpe3ZhciByPXt9O3JldHVybiB0PVRpKHQsMyksSGUobixmdW5jdGlvbihuLGUsdSl7Q2UocixlLHQobixlLHUpKX0pLHJ9LF9lLm1hdGNoZXM9ZnVuY3Rpb24obil7cmV0dXJuIF91KFRlKG4sYSkpfSxfZS5tYXRjaGVzUHJvcGVydHk9ZnVuY3Rpb24obix0KXtyZXR1cm4gZ3UobixUZSh0LGEpKX0sX2UubWVtb2l6ZT1sZixfZS5tZXJnZT1jYSxfZS5tZXJnZVdpdGg9bGEsX2UubWV0aG9kPVVhLF9lLm1ldGhvZE9mPUJhLF9lLm1peGluPVRhLF9lLm5lZ2F0ZT1zZixfZS5udGhBcmc9ZnVuY3Rpb24obil7cmV0dXJuIG49cWYobiksa3UoZnVuY3Rpb24odCl7cmV0dXJuIGR1KHQsbil9KX0sX2Uub21pdD1zYSxfZS5vbWl0Qnk9ZnVuY3Rpb24obix0KXtyZXR1cm4gcGEobixzZihUaSh0KSkpfSxfZS5vbmNlPWZ1bmN0aW9uKG4pe3JldHVybiBlZigyLG4pfSxfZS5vcmRlckJ5PWZ1bmN0aW9uKHQscixlLHUpe3JldHVybiBudWxsPT10P1tdOih3ZihyKXx8KHI9bnVsbD09cj9bXTpbcl0pLHdmKGU9dT9uOmUpfHwoZT1udWxsPT1lP1tdOltlXSksYnUodCxyLGUpKX0sX2Uub3Zlcj0kYSxfZS5vdmVyQXJncz1oZixfZS5vdmVyRXZlcnk9TWEsX2Uub3ZlclNvbWU9RmEsX2UucGFydGlhbD1wZixfZS5wYXJ0aWFsUmlnaHQ9dmYsX2UucGFydGl0aW9uPVhvLF9lLnBpY2s9aGEsX2UucGlja0J5PXBhLF9lLnByb3BlcnR5PU5hLF9lLnByb3BlcnR5T2Y9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBudWxsPT10P246UWUodCxyKX19LF9lLnB1bGw9T28sX2UucHVsbEFsbD1JbyxfZS5wdWxsQWxsQnk9ZnVuY3Rpb24obix0LHIpe3JldHVybiBuJiZuLmxlbmd0aCYmdCYmdC5sZW5ndGg/bXUobix0LFRpKHIsMikpOm59LF9lLnB1bGxBbGxXaXRoPWZ1bmN0aW9uKHQscixlKXtyZXR1cm4gdCYmdC5sZW5ndGgmJnImJnIubGVuZ3RoP211KHQscixuLGUpOnR9LF9lLnB1bGxBdD1SbyxfZS5yYW5nZT1QYSxfZS5yYW5nZVJpZ2h0PXFhLF9lLnJlYXJnPV9mLF9lLnJlamVjdD1mdW5jdGlvbihuLHQpe3JldHVybih3ZihuKT9WdDpaZSkobixzZihUaSh0LDMpKSl9LF9lLnJlbW92ZT1mdW5jdGlvbihuLHQpe3ZhciByPVtdO2lmKCFufHwhbi5sZW5ndGgpcmV0dXJuIHI7dmFyIGU9LTEsdT1bXSxpPW4ubGVuZ3RoO2Zvcih0PVRpKHQsMyk7KytlPGk7KXt2YXIgbz1uW2VdO3QobyxlLG4pJiYoci5wdXNoKG8pLHUucHVzaChlKSl9cmV0dXJuIHh1KG4sdSkscn0sX2UucmVzdD1mdW5jdGlvbih0LHIpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpdGhyb3cgbmV3IGl0KGUpO3JldHVybiBrdSh0LHI9cj09PW4/cjpxZihyKSl9LF9lLnJldmVyc2U9RW8sX2Uuc2FtcGxlU2l6ZT1mdW5jdGlvbih0LHIsZSl7cmV0dXJuIHI9KGU/R2kodCxyLGUpOnI9PT1uKT8xOnFmKHIpLCh3Zih0KT9JZTpJdSkodCxyKX0sX2Uuc2V0PWZ1bmN0aW9uKG4sdCxyKXtyZXR1cm4gbnVsbD09bj9uOlJ1KG4sdCxyKX0sX2Uuc2V0V2l0aD1mdW5jdGlvbih0LHIsZSx1KXtyZXR1cm4gdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB1P3U6bixudWxsPT10P3Q6UnUodCxyLGUsdSl9LF9lLnNodWZmbGU9ZnVuY3Rpb24obil7cmV0dXJuKHdmKG4pP1JlOlN1KShuKX0sX2Uuc2xpY2U9ZnVuY3Rpb24odCxyLGUpe3ZhciB1PW51bGw9PXQ/MDp0Lmxlbmd0aDtyZXR1cm4gdT8oZSYmXCJudW1iZXJcIiE9dHlwZW9mIGUmJkdpKHQscixlKT8ocj0wLGU9dSk6KHI9bnVsbD09cj8wOnFmKHIpLGU9ZT09PW4/dTpxZihlKSksTHUodCxyLGUpKTpbXX0sX2Uuc29ydEJ5PW5mLF9lLnNvcnRlZFVuaXE9ZnVuY3Rpb24obil7cmV0dXJuIG4mJm4ubGVuZ3RoP0J1KG4pOltdfSxfZS5zb3J0ZWRVbmlxQnk9ZnVuY3Rpb24obix0KXtyZXR1cm4gbiYmbi5sZW5ndGg/QnUobixUaSh0LDIpKTpbXX0sX2Uuc3BsaXQ9ZnVuY3Rpb24odCxyLGUpe3JldHVybiBlJiZcIm51bWJlclwiIT10eXBlb2YgZSYmR2kodCxyLGUpJiYocj1lPW4pLChlPWU9PT1uP1c6ZT4+PjApPyh0PUdmKHQpKSYmKFwic3RyaW5nXCI9PXR5cGVvZiByfHxudWxsIT1yJiYhVWYocikpJiYhKHI9RHUocikpJiZ4cih0KT9KdShFcih0KSwwLGUpOnQuc3BsaXQocixlKTpbXX0sX2Uuc3ByZWFkPWZ1bmN0aW9uKG4sdCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygbil0aHJvdyBuZXcgaXQoZSk7cmV0dXJuIHQ9bnVsbD09dD8wOlZyKHFmKHQpLDApLGt1KGZ1bmN0aW9uKHIpe3ZhciBlPXJbdF0sdT1KdShyLDAsdCk7cmV0dXJuIGUmJll0KHUsZSksTnQobix0aGlzLHUpfSl9LF9lLnRhaWw9ZnVuY3Rpb24obil7dmFyIHQ9bnVsbD09bj8wOm4ubGVuZ3RoO3JldHVybiB0P0x1KG4sMSx0KTpbXX0sX2UudGFrZT1mdW5jdGlvbih0LHIsZSl7cmV0dXJuIHQmJnQubGVuZ3RoP0x1KHQsMCwocj1lfHxyPT09bj8xOnFmKHIpKTwwPzA6cik6W119LF9lLnRha2VSaWdodD1mdW5jdGlvbih0LHIsZSl7dmFyIHU9bnVsbD09dD8wOnQubGVuZ3RoO3JldHVybiB1P0x1KHQsKHI9dS0ocj1lfHxyPT09bj8xOnFmKHIpKSk8MD8wOnIsdSk6W119LF9lLnRha2VSaWdodFdoaWxlPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIG4mJm4ubGVuZ3RoP051KG4sVGkodCwzKSwhMSwhMCk6W119LF9lLnRha2VXaGlsZT1mdW5jdGlvbihuLHQpe3JldHVybiBuJiZuLmxlbmd0aD9OdShuLFRpKHQsMykpOltdfSxfZS50YXA9ZnVuY3Rpb24obix0KXtyZXR1cm4gdChuKSxufSxfZS50aHJvdHRsZT1mdW5jdGlvbihuLHQscil7dmFyIHU9ITAsaT0hMDtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBuKXRocm93IG5ldyBpdChlKTtyZXR1cm4gemYocikmJih1PVwibGVhZGluZ1wiaW4gcj8hIXIubGVhZGluZzp1LGk9XCJ0cmFpbGluZ1wiaW4gcj8hIXIudHJhaWxpbmc6aSksZmYobix0LHtsZWFkaW5nOnUsbWF4V2FpdDp0LHRyYWlsaW5nOml9KX0sX2UudGhydT1ObyxfZS50b0FycmF5PU5mLF9lLnRvUGFpcnM9dmEsX2UudG9QYWlyc0luPV9hLF9lLnRvUGF0aD1mdW5jdGlvbihuKXtyZXR1cm4gd2Yobik/SnQobixzbyk6RGYobik/W25dOnVpKGxvKEdmKG4pKSl9LF9lLnRvUGxhaW5PYmplY3Q9VmYsX2UudHJhbnNmb3JtPWZ1bmN0aW9uKG4sdCxyKXt2YXIgZT13ZihuKSx1PWV8fEFmKG4pfHwkZihuKTtpZih0PVRpKHQsNCksbnVsbD09cil7dmFyIGk9biYmbi5jb25zdHJ1Y3RvcjtyPXU/ZT9uZXcgaTpbXTp6ZihuKSYmSWYoaSk/Z2UoQ3QobikpOnt9fXJldHVybih1P3F0OkhlKShuLGZ1bmN0aW9uKG4sZSx1KXtyZXR1cm4gdChyLG4sZSx1KX0pLHJ9LF9lLnVuYXJ5PWZ1bmN0aW9uKG4pe3JldHVybiByZihuLDEpfSxfZS51bmlvbj16byxfZS51bmlvbkJ5PVNvLF9lLnVuaW9uV2l0aD1MbyxfZS51bmlxPWZ1bmN0aW9uKG4pe3JldHVybiBuJiZuLmxlbmd0aD8kdShuKTpbXX0sX2UudW5pcUJ5PWZ1bmN0aW9uKG4sdCl7cmV0dXJuIG4mJm4ubGVuZ3RoPyR1KG4sVGkodCwyKSk6W119LF9lLnVuaXFXaXRoPWZ1bmN0aW9uKHQscil7cmV0dXJuIHI9XCJmdW5jdGlvblwiPT10eXBlb2Ygcj9yOm4sdCYmdC5sZW5ndGg/JHUodCxuLHIpOltdfSxfZS51bnNldD1mdW5jdGlvbihuLHQpe3JldHVybiBudWxsPT1ufHxNdShuLHQpfSxfZS51bnppcD1XbyxfZS51bnppcFdpdGg9Q28sX2UudXBkYXRlPWZ1bmN0aW9uKG4sdCxyKXtyZXR1cm4gbnVsbD09bj9uOkZ1KG4sdCxWdShyKSl9LF9lLnVwZGF0ZVdpdGg9ZnVuY3Rpb24odCxyLGUsdSl7cmV0dXJuIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgdT91Om4sbnVsbD09dD90OkZ1KHQscixWdShlKSx1KX0sX2UudmFsdWVzPWdhLF9lLnZhbHVlc0luPWZ1bmN0aW9uKG4pe3JldHVybiBudWxsPT1uP1tdOl9yKG4sYWEobikpfSxfZS53aXRob3V0PVVvLF9lLndvcmRzPUlhLF9lLndyYXA9ZnVuY3Rpb24obix0KXtyZXR1cm4gcGYoVnUodCksbil9LF9lLnhvcj1CbyxfZS54b3JCeT1UbyxfZS54b3JXaXRoPURvLF9lLnppcD0kbyxfZS56aXBPYmplY3Q9ZnVuY3Rpb24obix0KXtyZXR1cm4gWnUobnx8W10sdHx8W10semUpfSxfZS56aXBPYmplY3REZWVwPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIFp1KG58fFtdLHR8fFtdLFJ1KX0sX2UuemlwV2l0aD1NbyxfZS5lbnRyaWVzPXZhLF9lLmVudHJpZXNJbj1fYSxfZS5leHRlbmQ9SmYsX2UuZXh0ZW5kV2l0aD1ZZixUYShfZSxfZSksX2UuYWRkPVZhLF9lLmF0dGVtcHQ9UmEsX2UuY2FtZWxDYXNlPXlhLF9lLmNhcGl0YWxpemU9ZGEsX2UuY2VpbD1HYSxfZS5jbGFtcD1mdW5jdGlvbih0LHIsZSl7cmV0dXJuIGU9PT1uJiYoZT1yLHI9biksZSE9PW4mJihlPShlPUtmKGUpKT09ZT9lOjApLHIhPT1uJiYocj0ocj1LZihyKSk9PXI/cjowKSxCZShLZih0KSxyLGUpfSxfZS5jbG9uZT1mdW5jdGlvbihuKXtyZXR1cm4gVGUobixsKX0sX2UuY2xvbmVEZWVwPWZ1bmN0aW9uKG4pe3JldHVybiBUZShuLGF8bCl9LF9lLmNsb25lRGVlcFdpdGg9ZnVuY3Rpb24odCxyKXtyZXR1cm4gVGUodCxhfGwscj1cImZ1bmN0aW9uXCI9PXR5cGVvZiByP3I6bil9LF9lLmNsb25lV2l0aD1mdW5jdGlvbih0LHIpe3JldHVybiBUZSh0LGwscj1cImZ1bmN0aW9uXCI9PXR5cGVvZiByP3I6bil9LF9lLmNvbmZvcm1zVG89ZnVuY3Rpb24obix0KXtyZXR1cm4gbnVsbD09dHx8RGUobix0LGZhKHQpKX0sX2UuZGVidXJyPWJhLF9lLmRlZmF1bHRUbz1mdW5jdGlvbihuLHQpe3JldHVybiBudWxsPT1ufHxuIT1uP3Q6bn0sX2UuZGl2aWRlPUhhLF9lLmVuZHNXaXRoPWZ1bmN0aW9uKHQscixlKXt0PUdmKHQpLHI9RHUocik7dmFyIHU9dC5sZW5ndGgsaT1lPWU9PT1uP3U6QmUocWYoZSksMCx1KTtyZXR1cm4oZS09ci5sZW5ndGgpPj0wJiZ0LnNsaWNlKGUsaSk9PXJ9LF9lLmVxPWdmLF9lLmVzY2FwZT1mdW5jdGlvbihuKXtyZXR1cm4obj1HZihuKSkmJnhuLnRlc3Qobik/bi5yZXBsYWNlKHduLHdyKTpufSxfZS5lc2NhcGVSZWdFeHA9ZnVuY3Rpb24obil7cmV0dXJuKG49R2YobikpJiZ6bi50ZXN0KG4pP24ucmVwbGFjZShFbixcIlxcXFwkJlwiKTpufSxfZS5ldmVyeT1mdW5jdGlvbih0LHIsZSl7dmFyIHU9d2YodCk/S3Q6UGU7cmV0dXJuIGUmJkdpKHQscixlKSYmKHI9biksdSh0LFRpKHIsMykpfSxfZS5maW5kPVpvLF9lLmZpbmRJbmRleD15byxfZS5maW5kS2V5PWZ1bmN0aW9uKG4sdCl7cmV0dXJuIHJyKG4sVGkodCwzKSxIZSl9LF9lLmZpbmRMYXN0PUtvLF9lLmZpbmRMYXN0SW5kZXg9Ym8sX2UuZmluZExhc3RLZXk9ZnVuY3Rpb24obix0KXtyZXR1cm4gcnIobixUaSh0LDMpLEplKX0sX2UuZmxvb3I9SmEsX2UuZm9yRWFjaD1WbyxfZS5mb3JFYWNoUmlnaHQ9R28sX2UuZm9ySW49ZnVuY3Rpb24obix0KXtyZXR1cm4gbnVsbD09bj9uOlZlKG4sVGkodCwzKSxhYSl9LF9lLmZvckluUmlnaHQ9ZnVuY3Rpb24obix0KXtyZXR1cm4gbnVsbD09bj9uOkdlKG4sVGkodCwzKSxhYSl9LF9lLmZvck93bj1mdW5jdGlvbihuLHQpe3JldHVybiBuJiZIZShuLFRpKHQsMykpfSxfZS5mb3JPd25SaWdodD1mdW5jdGlvbihuLHQpe3JldHVybiBuJiZKZShuLFRpKHQsMykpfSxfZS5nZXQ9cmEsX2UuZ3Q9eWYsX2UuZ3RlPWRmLF9lLmhhcz1mdW5jdGlvbihuLHQpe3JldHVybiBudWxsIT1uJiZxaShuLHQscnUpfSxfZS5oYXNJbj1lYSxfZS5oZWFkPW1vLF9lLmlkZW50aXR5PVdhLF9lLmluY2x1ZGVzPWZ1bmN0aW9uKG4sdCxyLGUpe249eGYobik/bjpnYShuKSxyPXImJiFlP3FmKHIpOjA7dmFyIHU9bi5sZW5ndGg7cmV0dXJuIHI8MCYmKHI9VnIodStyLDApKSxUZihuKT9yPD11JiZuLmluZGV4T2YodCxyKT4tMTohIXUmJnVyKG4sdCxyKT4tMX0sX2UuaW5kZXhPZj1mdW5jdGlvbihuLHQscil7dmFyIGU9bnVsbD09bj8wOm4ubGVuZ3RoO2lmKCFlKXJldHVybi0xO3ZhciB1PW51bGw9PXI/MDpxZihyKTtyZXR1cm4gdTwwJiYodT1WcihlK3UsMCkpLHVyKG4sdCx1KX0sX2UuaW5SYW5nZT1mdW5jdGlvbih0LHIsZSl7cmV0dXJuIHI9UGYociksZT09PW4/KGU9cixyPTApOmU9UGYoZSksZnVuY3Rpb24obix0LHIpe3JldHVybiBuPj1Hcih0LHIpJiZuPFZyKHQscil9KHQ9S2YodCkscixlKX0sX2UuaW52b2tlPW9hLF9lLmlzQXJndW1lbnRzPWJmLF9lLmlzQXJyYXk9d2YsX2UuaXNBcnJheUJ1ZmZlcj1tZixfZS5pc0FycmF5TGlrZT14ZixfZS5pc0FycmF5TGlrZU9iamVjdD1qZixfZS5pc0Jvb2xlYW49ZnVuY3Rpb24obil7cmV0dXJuITA9PT1ufHwhMT09PW58fFNmKG4pJiZudShuKT09TX0sX2UuaXNCdWZmZXI9QWYsX2UuaXNEYXRlPWtmLF9lLmlzRWxlbWVudD1mdW5jdGlvbihuKXtyZXR1cm4gU2YobikmJjE9PT1uLm5vZGVUeXBlJiYhQ2Yobil9LF9lLmlzRW1wdHk9ZnVuY3Rpb24obil7aWYobnVsbD09bilyZXR1cm4hMDtpZih4ZihuKSYmKHdmKG4pfHxcInN0cmluZ1wiPT10eXBlb2Ygbnx8XCJmdW5jdGlvblwiPT10eXBlb2Ygbi5zcGxpY2V8fEFmKG4pfHwkZihuKXx8YmYobikpKXJldHVybiFuLmxlbmd0aDt2YXIgdD1QaShuKTtpZih0PT1LfHx0PT1RKXJldHVybiFuLnNpemU7aWYoUWkobikpcmV0dXJuIXN1KG4pLmxlbmd0aDtmb3IodmFyIHIgaW4gbilpZihzdC5jYWxsKG4scikpcmV0dXJuITE7cmV0dXJuITB9LF9lLmlzRXF1YWw9ZnVuY3Rpb24obix0KXtyZXR1cm4gZnUobix0KX0sX2UuaXNFcXVhbFdpdGg9ZnVuY3Rpb24odCxyLGUpe3ZhciB1PShlPVwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZTpuKT9lKHQscik6bjtyZXR1cm4gdT09PW4/ZnUodCxyLG4sZSk6ISF1fSxfZS5pc0Vycm9yPU9mLF9lLmlzRmluaXRlPWZ1bmN0aW9uKG4pe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBuJiZxcihuKX0sX2UuaXNGdW5jdGlvbj1JZixfZS5pc0ludGVnZXI9UmYsX2UuaXNMZW5ndGg9RWYsX2UuaXNNYXA9TGYsX2UuaXNNYXRjaD1mdW5jdGlvbihuLHQpe3JldHVybiBuPT09dHx8YXUobix0LCRpKHQpKX0sX2UuaXNNYXRjaFdpdGg9ZnVuY3Rpb24odCxyLGUpe3JldHVybiBlPVwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZTpuLGF1KHQsciwkaShyKSxlKX0sX2UuaXNOYU49ZnVuY3Rpb24obil7cmV0dXJuIFdmKG4pJiZuIT0rbn0sX2UuaXNOYXRpdmU9ZnVuY3Rpb24obil7aWYoWWkobikpdGhyb3cgbmV3IFhuKHIpO3JldHVybiBjdShuKX0sX2UuaXNOaWw9ZnVuY3Rpb24obil7cmV0dXJuIG51bGw9PW59LF9lLmlzTnVsbD1mdW5jdGlvbihuKXtyZXR1cm4gbnVsbD09PW59LF9lLmlzTnVtYmVyPVdmLF9lLmlzT2JqZWN0PXpmLF9lLmlzT2JqZWN0TGlrZT1TZixfZS5pc1BsYWluT2JqZWN0PUNmLF9lLmlzUmVnRXhwPVVmLF9lLmlzU2FmZUludGVnZXI9ZnVuY3Rpb24obil7cmV0dXJuIFJmKG4pJiZuPj0teiYmbjw9en0sX2UuaXNTZXQ9QmYsX2UuaXNTdHJpbmc9VGYsX2UuaXNTeW1ib2w9RGYsX2UuaXNUeXBlZEFycmF5PSRmLF9lLmlzVW5kZWZpbmVkPWZ1bmN0aW9uKHQpe3JldHVybiB0PT09bn0sX2UuaXNXZWFrTWFwPWZ1bmN0aW9uKG4pe3JldHVybiBTZihuKSYmUGkobik9PXJufSxfZS5pc1dlYWtTZXQ9ZnVuY3Rpb24obil7cmV0dXJuIFNmKG4pJiZudShuKT09ZW59LF9lLmpvaW49ZnVuY3Rpb24obix0KXtyZXR1cm4gbnVsbD09bj9cIlwiOlpyLmNhbGwobix0KX0sX2Uua2ViYWJDYXNlPXdhLF9lLmxhc3Q9a28sX2UubGFzdEluZGV4T2Y9ZnVuY3Rpb24odCxyLGUpe3ZhciB1PW51bGw9PXQ/MDp0Lmxlbmd0aDtpZighdSlyZXR1cm4tMTt2YXIgaT11O3JldHVybiBlIT09biYmKGk9KGk9cWYoZSkpPDA/VnIodStpLDApOkdyKGksdS0xKSkscj09cj9mdW5jdGlvbihuLHQscil7Zm9yKHZhciBlPXIrMTtlLS07KWlmKG5bZV09PT10KXJldHVybiBlO3JldHVybiBlfSh0LHIsaSk6ZXIodCxvcixpLCEwKX0sX2UubG93ZXJDYXNlPW1hLF9lLmxvd2VyRmlyc3Q9eGEsX2UubHQ9TWYsX2UubHRlPUZmLF9lLm1heD1mdW5jdGlvbih0KXtyZXR1cm4gdCYmdC5sZW5ndGg/cWUodCxXYSx0dSk6bn0sX2UubWF4Qnk9ZnVuY3Rpb24odCxyKXtyZXR1cm4gdCYmdC5sZW5ndGg/cWUodCxUaShyLDIpLHR1KTpufSxfZS5tZWFuPWZ1bmN0aW9uKG4pe3JldHVybiBmcihuLFdhKX0sX2UubWVhbkJ5PWZ1bmN0aW9uKG4sdCl7cmV0dXJuIGZyKG4sVGkodCwyKSl9LF9lLm1pbj1mdW5jdGlvbih0KXtyZXR1cm4gdCYmdC5sZW5ndGg/cWUodCxXYSxwdSk6bn0sX2UubWluQnk9ZnVuY3Rpb24odCxyKXtyZXR1cm4gdCYmdC5sZW5ndGg/cWUodCxUaShyLDIpLHB1KTpufSxfZS5zdHViQXJyYXk9WmEsX2Uuc3R1YkZhbHNlPUthLF9lLnN0dWJPYmplY3Q9ZnVuY3Rpb24oKXtyZXR1cm57fX0sX2Uuc3R1YlN0cmluZz1mdW5jdGlvbigpe3JldHVyblwiXCJ9LF9lLnN0dWJUcnVlPWZ1bmN0aW9uKCl7cmV0dXJuITB9LF9lLm11bHRpcGx5PVFhLF9lLm50aD1mdW5jdGlvbih0LHIpe3JldHVybiB0JiZ0Lmxlbmd0aD9kdSh0LHFmKHIpKTpufSxfZS5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHp0Ll89PT10aGlzJiYoenQuXz1idCksdGhpc30sX2Uubm9vcD1EYSxfZS5ub3c9dGYsX2UucGFkPWZ1bmN0aW9uKG4sdCxyKXtuPUdmKG4pO3ZhciBlPSh0PXFmKHQpKT9ScihuKTowO2lmKCF0fHxlPj10KXJldHVybiBuO3ZhciB1PSh0LWUpLzI7cmV0dXJuIGJpKEZyKHUpLHIpK24rYmkoTXIodSkscil9LF9lLnBhZEVuZD1mdW5jdGlvbihuLHQscil7bj1HZihuKTt2YXIgZT0odD1xZih0KSk/UnIobik6MDtyZXR1cm4gdCYmZTx0P24rYmkodC1lLHIpOm59LF9lLnBhZFN0YXJ0PWZ1bmN0aW9uKG4sdCxyKXtuPUdmKG4pO3ZhciBlPSh0PXFmKHQpKT9ScihuKTowO3JldHVybiB0JiZlPHQ/YmkodC1lLHIpK246bn0sX2UucGFyc2VJbnQ9ZnVuY3Rpb24obix0LHIpe3JldHVybiByfHxudWxsPT10P3Q9MDp0JiYodD0rdCksSnIoR2YobikucmVwbGFjZShTbixcIlwiKSx0fHwwKX0sX2UucmFuZG9tPWZ1bmN0aW9uKHQscixlKXtpZihlJiZcImJvb2xlYW5cIiE9dHlwZW9mIGUmJkdpKHQscixlKSYmKHI9ZT1uKSxlPT09biYmKFwiYm9vbGVhblwiPT10eXBlb2Ygcj8oZT1yLHI9bik6XCJib29sZWFuXCI9PXR5cGVvZiB0JiYoZT10LHQ9bikpLHQ9PT1uJiZyPT09bj8odD0wLHI9MSk6KHQ9UGYodCkscj09PW4/KHI9dCx0PTApOnI9UGYocikpLHQ+cil7dmFyIHU9dDt0PXIscj11fWlmKGV8fHQlMXx8ciUxKXt2YXIgaT1ZcigpO3JldHVybiBHcih0K2kqKHItdCtPdChcIjFlLVwiKygoaStcIlwiKS5sZW5ndGgtMSkpKSxyKX1yZXR1cm4ganUodCxyKX0sX2UucmVkdWNlPWZ1bmN0aW9uKG4sdCxyKXt2YXIgZT13ZihuKT9RdDpscix1PWFyZ3VtZW50cy5sZW5ndGg8MztyZXR1cm4gZShuLFRpKHQsNCkscix1LEZlKX0sX2UucmVkdWNlUmlnaHQ9ZnVuY3Rpb24obix0LHIpe3ZhciBlPXdmKG4pP1h0OmxyLHU9YXJndW1lbnRzLmxlbmd0aDwzO3JldHVybiBlKG4sVGkodCw0KSxyLHUsTmUpfSxfZS5yZXBlYXQ9ZnVuY3Rpb24odCxyLGUpe3JldHVybiByPShlP0dpKHQscixlKTpyPT09bik/MTpxZihyKSxBdShHZih0KSxyKX0sX2UucmVwbGFjZT1mdW5jdGlvbigpe3ZhciBuPWFyZ3VtZW50cyx0PUdmKG5bMF0pO3JldHVybiBuLmxlbmd0aDwzP3Q6dC5yZXBsYWNlKG5bMV0sblsyXSl9LF9lLnJlc3VsdD1mdW5jdGlvbih0LHIsZSl7dmFyIHU9LTEsaT0ocj1HdShyLHQpKS5sZW5ndGg7Zm9yKGl8fChpPTEsdD1uKTsrK3U8aTspe3ZhciBvPW51bGw9PXQ/bjp0W3NvKHJbdV0pXTtvPT09biYmKHU9aSxvPWUpLHQ9SWYobyk/by5jYWxsKHQpOm99cmV0dXJuIHR9LF9lLnJvdW5kPVhhLF9lLnJ1bkluQ29udGV4dD1MbixfZS5zYW1wbGU9ZnVuY3Rpb24obil7cmV0dXJuKHdmKG4pP09lOk91KShuKX0sX2Uuc2l6ZT1mdW5jdGlvbihuKXtpZihudWxsPT1uKXJldHVybiAwO2lmKHhmKG4pKXJldHVybiBUZihuKT9ScihuKTpuLmxlbmd0aDt2YXIgdD1QaShuKTtyZXR1cm4gdD09S3x8dD09UT9uLnNpemU6c3UobikubGVuZ3RofSxfZS5zbmFrZUNhc2U9amEsX2Uuc29tZT1mdW5jdGlvbih0LHIsZSl7dmFyIHU9d2YodCk/bnI6V3U7cmV0dXJuIGUmJkdpKHQscixlKSYmKHI9biksdSh0LFRpKHIsMykpfSxfZS5zb3J0ZWRJbmRleD1mdW5jdGlvbihuLHQpe3JldHVybiBDdShuLHQpfSxfZS5zb3J0ZWRJbmRleEJ5PWZ1bmN0aW9uKG4sdCxyKXtyZXR1cm4gVXUobix0LFRpKHIsMikpfSxfZS5zb3J0ZWRJbmRleE9mPWZ1bmN0aW9uKG4sdCl7dmFyIHI9bnVsbD09bj8wOm4ubGVuZ3RoO2lmKHIpe3ZhciBlPUN1KG4sdCk7aWYoZTxyJiZnZihuW2VdLHQpKXJldHVybiBlfXJldHVybi0xfSxfZS5zb3J0ZWRMYXN0SW5kZXg9ZnVuY3Rpb24obix0KXtyZXR1cm4gQ3Uobix0LCEwKX0sX2Uuc29ydGVkTGFzdEluZGV4Qnk9ZnVuY3Rpb24obix0LHIpe3JldHVybiBVdShuLHQsVGkociwyKSwhMCl9LF9lLnNvcnRlZExhc3RJbmRleE9mPWZ1bmN0aW9uKG4sdCl7aWYobnVsbCE9biYmbi5sZW5ndGgpe3ZhciByPUN1KG4sdCwhMCktMTtpZihnZihuW3JdLHQpKXJldHVybiByfXJldHVybi0xfSxfZS5zdGFydENhc2U9QWEsX2Uuc3RhcnRzV2l0aD1mdW5jdGlvbihuLHQscil7cmV0dXJuIG49R2Yobikscj1udWxsPT1yPzA6QmUocWYociksMCxuLmxlbmd0aCksdD1EdSh0KSxuLnNsaWNlKHIscit0Lmxlbmd0aCk9PXR9LF9lLnN1YnRyYWN0PW5jLF9lLnN1bT1mdW5jdGlvbihuKXtyZXR1cm4gbiYmbi5sZW5ndGg/c3IobixXYSk6MH0sX2Uuc3VtQnk9ZnVuY3Rpb24obix0KXtyZXR1cm4gbiYmbi5sZW5ndGg/c3IobixUaSh0LDIpKTowfSxfZS50ZW1wbGF0ZT1mdW5jdGlvbih0LHIsZSl7dmFyIGk9X2UudGVtcGxhdGVTZXR0aW5ncztlJiZHaSh0LHIsZSkmJihyPW4pLHQ9R2YodCkscj1ZZih7fSxyLGksSWkpO3ZhciBvLGYsYT1ZZih7fSxyLmltcG9ydHMsaS5pbXBvcnRzLElpKSxjPWZhKGEpLGw9X3IoYSxjKSxzPTAsaD1yLmludGVycG9sYXRlfHxWbixwPVwiX19wICs9ICdcIix2PWV0KChyLmVzY2FwZXx8Vm4pLnNvdXJjZStcInxcIitoLnNvdXJjZStcInxcIisoaD09PWtuPyRuOlZuKS5zb3VyY2UrXCJ8XCIrKHIuZXZhbHVhdGV8fFZuKS5zb3VyY2UrXCJ8JFwiLFwiZ1wiKSxfPVwiLy8jIHNvdXJjZVVSTD1cIisoc3QuY2FsbChyLFwic291cmNlVVJMXCIpPyhyLnNvdXJjZVVSTCtcIlwiKS5yZXBsYWNlKC9cXHMvZyxcIiBcIik6XCJsb2Rhc2gudGVtcGxhdGVTb3VyY2VzW1wiKyArK3h0K1wiXVwiKStcIlxcblwiO3QucmVwbGFjZSh2LGZ1bmN0aW9uKG4scixlLHUsaSxhKXtyZXR1cm4gZXx8KGU9dSkscCs9dC5zbGljZShzLGEpLnJlcGxhY2UoR24sbXIpLHImJihvPSEwLHArPVwiJyArXFxuX19lKFwiK3IrXCIpICtcXG4nXCIpLGkmJihmPSEwLHArPVwiJztcXG5cIitpK1wiO1xcbl9fcCArPSAnXCIpLGUmJihwKz1cIicgK1xcbigoX190ID0gKFwiK2UrXCIpKSA9PSBudWxsID8gJycgOiBfX3QpICtcXG4nXCIpLHM9YStuLmxlbmd0aCxufSkscCs9XCInO1xcblwiO3ZhciBnPXN0LmNhbGwocixcInZhcmlhYmxlXCIpJiZyLnZhcmlhYmxlO2lmKGcpe2lmKFRuLnRlc3QoZykpdGhyb3cgbmV3IFhuKHUpfWVsc2UgcD1cIndpdGggKG9iaikge1xcblwiK3ArXCJcXG59XFxuXCI7cD0oZj9wLnJlcGxhY2UoZ24sXCJcIik6cCkucmVwbGFjZSh5bixcIiQxXCIpLnJlcGxhY2UoZG4sXCIkMTtcIikscD1cImZ1bmN0aW9uKFwiKyhnfHxcIm9ialwiKStcIikge1xcblwiKyhnP1wiXCI6XCJvYmogfHwgKG9iaiA9IHt9KTtcXG5cIikrXCJ2YXIgX190LCBfX3AgPSAnJ1wiKyhvP1wiLCBfX2UgPSBfLmVzY2FwZVwiOlwiXCIpKyhmP1wiLCBfX2ogPSBBcnJheS5wcm90b3R5cGUuam9pbjtcXG5mdW5jdGlvbiBwcmludCgpIHsgX19wICs9IF9fai5jYWxsKGFyZ3VtZW50cywgJycpIH1cXG5cIjpcIjtcXG5cIikrcCtcInJldHVybiBfX3BcXG59XCI7dmFyIHk9UmEoZnVuY3Rpb24oKXtyZXR1cm4gbnQoYyxfK1wicmV0dXJuIFwiK3ApLmFwcGx5KG4sbCl9KTtpZih5LnNvdXJjZT1wLE9mKHkpKXRocm93IHk7cmV0dXJuIHl9LF9lLnRpbWVzPWZ1bmN0aW9uKG4sdCl7aWYoKG49cWYobikpPDF8fG4+eilyZXR1cm5bXTt2YXIgcj1XLGU9R3IobixXKTt0PVRpKHQpLG4tPVc7Zm9yKHZhciB1PWhyKGUsdCk7KytyPG47KXQocik7cmV0dXJuIHV9LF9lLnRvRmluaXRlPVBmLF9lLnRvSW50ZWdlcj1xZixfZS50b0xlbmd0aD1aZixfZS50b0xvd2VyPWZ1bmN0aW9uKG4pe3JldHVybiBHZihuKS50b0xvd2VyQ2FzZSgpfSxfZS50b051bWJlcj1LZixfZS50b1NhZmVJbnRlZ2VyPWZ1bmN0aW9uKG4pe3JldHVybiBuP0JlKHFmKG4pLC16LHopOjA9PT1uP246MH0sX2UudG9TdHJpbmc9R2YsX2UudG9VcHBlcj1mdW5jdGlvbihuKXtyZXR1cm4gR2YobikudG9VcHBlckNhc2UoKX0sX2UudHJpbT1mdW5jdGlvbih0LHIsZSl7aWYoKHQ9R2YodCkpJiYoZXx8cj09PW4pKXJldHVybiBwcih0KTtpZighdHx8IShyPUR1KHIpKSlyZXR1cm4gdDt2YXIgdT1Fcih0KSxpPUVyKHIpO3JldHVybiBKdSh1LHlyKHUsaSksZHIodSxpKSsxKS5qb2luKFwiXCIpfSxfZS50cmltRW5kPWZ1bmN0aW9uKHQscixlKXtpZigodD1HZih0KSkmJihlfHxyPT09bikpcmV0dXJuIHQuc2xpY2UoMCx6cih0KSsxKTtpZighdHx8IShyPUR1KHIpKSlyZXR1cm4gdDt2YXIgdT1Fcih0KTtyZXR1cm4gSnUodSwwLGRyKHUsRXIocikpKzEpLmpvaW4oXCJcIil9LF9lLnRyaW1TdGFydD1mdW5jdGlvbih0LHIsZSl7aWYoKHQ9R2YodCkpJiYoZXx8cj09PW4pKXJldHVybiB0LnJlcGxhY2UoU24sXCJcIik7aWYoIXR8fCEocj1EdShyKSkpcmV0dXJuIHQ7dmFyIHU9RXIodCk7cmV0dXJuIEp1KHUseXIodSxFcihyKSkpLmpvaW4oXCJcIil9LF9lLnRydW5jYXRlPWZ1bmN0aW9uKHQscil7dmFyIGU9aix1PUE7aWYoemYocikpe3ZhciBpPVwic2VwYXJhdG9yXCJpbiByP3Iuc2VwYXJhdG9yOmk7ZT1cImxlbmd0aFwiaW4gcj9xZihyLmxlbmd0aCk6ZSx1PVwib21pc3Npb25cImluIHI/RHUoci5vbWlzc2lvbik6dX12YXIgbz0odD1HZih0KSkubGVuZ3RoO2lmKHhyKHQpKXt2YXIgZj1Fcih0KTtvPWYubGVuZ3RofWlmKGU+PW8pcmV0dXJuIHQ7dmFyIGE9ZS1Scih1KTtpZihhPDEpcmV0dXJuIHU7dmFyIGM9Zj9KdShmLDAsYSkuam9pbihcIlwiKTp0LnNsaWNlKDAsYSk7aWYoaT09PW4pcmV0dXJuIGMrdTtpZihmJiYoYSs9Yy5sZW5ndGgtYSksVWYoaSkpe2lmKHQuc2xpY2UoYSkuc2VhcmNoKGkpKXt2YXIgbCxzPWM7Zm9yKGkuZ2xvYmFsfHwoaT1ldChpLnNvdXJjZSxHZihNbi5leGVjKGkpKStcImdcIikpLGkubGFzdEluZGV4PTA7bD1pLmV4ZWMocyk7KXZhciBoPWwuaW5kZXg7Yz1jLnNsaWNlKDAsaD09PW4/YTpoKX19ZWxzZSBpZih0LmluZGV4T2YoRHUoaSksYSkhPWEpe3ZhciBwPWMubGFzdEluZGV4T2YoaSk7cD4tMSYmKGM9Yy5zbGljZSgwLHApKX1yZXR1cm4gYyt1fSxfZS51bmVzY2FwZT1mdW5jdGlvbihuKXtyZXR1cm4obj1HZihuKSkmJm1uLnRlc3Qobik/bi5yZXBsYWNlKGJuLFNyKTpufSxfZS51bmlxdWVJZD1mdW5jdGlvbihuKXt2YXIgdD0rK2h0O3JldHVybiBHZihuKSt0fSxfZS51cHBlckNhc2U9a2EsX2UudXBwZXJGaXJzdD1PYSxfZS5lYWNoPVZvLF9lLmVhY2hSaWdodD1HbyxfZS5maXJzdD1tbyxUYShfZSwoWWE9e30sSGUoX2UsZnVuY3Rpb24obix0KXtzdC5jYWxsKF9lLnByb3RvdHlwZSx0KXx8KFlhW3RdPW4pfSksWWEpLHtjaGFpbjohMX0pLF9lLlZFUlNJT049XCI0LjE3LjIxXCIscXQoW1wiYmluZFwiLFwiYmluZEtleVwiLFwiY3VycnlcIixcImN1cnJ5UmlnaHRcIixcInBhcnRpYWxcIixcInBhcnRpYWxSaWdodFwiXSxmdW5jdGlvbihuKXtfZVtuXS5wbGFjZWhvbGRlcj1fZX0pLHF0KFtcImRyb3BcIixcInRha2VcIl0sZnVuY3Rpb24odCxyKXtiZS5wcm90b3R5cGVbdF09ZnVuY3Rpb24oZSl7ZT1lPT09bj8xOlZyKHFmKGUpLDApO3ZhciB1PXRoaXMuX19maWx0ZXJlZF9fJiYhcj9uZXcgYmUodGhpcyk6dGhpcy5jbG9uZSgpO3JldHVybiB1Ll9fZmlsdGVyZWRfXz91Ll9fdGFrZUNvdW50X189R3IoZSx1Ll9fdGFrZUNvdW50X18pOnUuX192aWV3c19fLnB1c2goe3NpemU6R3IoZSxXKSx0eXBlOnQrKHUuX19kaXJfXzwwP1wiUmlnaHRcIjpcIlwiKX0pLHV9LGJlLnByb3RvdHlwZVt0K1wiUmlnaHRcIl09ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMucmV2ZXJzZSgpW3RdKG4pLnJldmVyc2UoKX19KSxxdChbXCJmaWx0ZXJcIixcIm1hcFwiLFwidGFrZVdoaWxlXCJdLGZ1bmN0aW9uKG4sdCl7dmFyIHI9dCsxLGU9cj09SXx8Mz09cjtiZS5wcm90b3R5cGVbbl09ZnVuY3Rpb24obil7dmFyIHQ9dGhpcy5jbG9uZSgpO3JldHVybiB0Ll9faXRlcmF0ZWVzX18ucHVzaCh7aXRlcmF0ZWU6VGkobiwzKSx0eXBlOnJ9KSx0Ll9fZmlsdGVyZWRfXz10Ll9fZmlsdGVyZWRfX3x8ZSx0fX0pLHF0KFtcImhlYWRcIixcImxhc3RcIl0sZnVuY3Rpb24obix0KXt2YXIgcj1cInRha2VcIisodD9cIlJpZ2h0XCI6XCJcIik7YmUucHJvdG90eXBlW25dPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbcl0oMSkudmFsdWUoKVswXX19KSxxdChbXCJpbml0aWFsXCIsXCJ0YWlsXCJdLGZ1bmN0aW9uKG4sdCl7dmFyIHI9XCJkcm9wXCIrKHQ/XCJcIjpcIlJpZ2h0XCIpO2JlLnByb3RvdHlwZVtuXT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9fZmlsdGVyZWRfXz9uZXcgYmUodGhpcyk6dGhpc1tyXSgxKX19KSxiZS5wcm90b3R5cGUuY29tcGFjdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmZpbHRlcihXYSl9LGJlLnByb3RvdHlwZS5maW5kPWZ1bmN0aW9uKG4pe3JldHVybiB0aGlzLmZpbHRlcihuKS5oZWFkKCl9LGJlLnByb3RvdHlwZS5maW5kTGFzdD1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5yZXZlcnNlKCkuZmluZChuKX0sYmUucHJvdG90eXBlLmludm9rZU1hcD1rdShmdW5jdGlvbihuLHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIG4/bmV3IGJlKHRoaXMpOnRoaXMubWFwKGZ1bmN0aW9uKHIpe3JldHVybiBpdShyLG4sdCl9KX0pLGJlLnByb3RvdHlwZS5yZWplY3Q9ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMuZmlsdGVyKHNmKFRpKG4pKSl9LGJlLnByb3RvdHlwZS5zbGljZT1mdW5jdGlvbih0LHIpe3Q9cWYodCk7dmFyIGU9dGhpcztyZXR1cm4gZS5fX2ZpbHRlcmVkX18mJih0PjB8fHI8MCk/bmV3IGJlKGUpOih0PDA/ZT1lLnRha2VSaWdodCgtdCk6dCYmKGU9ZS5kcm9wKHQpKSxyIT09biYmKGU9KHI9cWYocikpPDA/ZS5kcm9wUmlnaHQoLXIpOmUudGFrZShyLXQpKSxlKX0sYmUucHJvdG90eXBlLnRha2VSaWdodFdoaWxlPWZ1bmN0aW9uKG4pe3JldHVybiB0aGlzLnJldmVyc2UoKS50YWtlV2hpbGUobikucmV2ZXJzZSgpfSxiZS5wcm90b3R5cGUudG9BcnJheT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRha2UoVyl9LEhlKGJlLnByb3RvdHlwZSxmdW5jdGlvbih0LHIpe3ZhciBlPS9eKD86ZmlsdGVyfGZpbmR8bWFwfHJlamVjdCl8V2hpbGUkLy50ZXN0KHIpLHU9L14oPzpoZWFkfGxhc3QpJC8udGVzdChyKSxpPV9lW3U/XCJ0YWtlXCIrKFwibGFzdFwiPT1yP1wiUmlnaHRcIjpcIlwiKTpyXSxvPXV8fC9eZmluZC8udGVzdChyKTtpJiYoX2UucHJvdG90eXBlW3JdPWZ1bmN0aW9uKCl7dmFyIHI9dGhpcy5fX3dyYXBwZWRfXyxmPXU/WzFdOmFyZ3VtZW50cyxhPXIgaW5zdGFuY2VvZiBiZSxjPWZbMF0sbD1hfHx3ZihyKSxzPWZ1bmN0aW9uKG4pe3ZhciB0PWkuYXBwbHkoX2UsWXQoW25dLGYpKTtyZXR1cm4gdSYmaD90WzBdOnR9O2wmJmUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGMmJjEhPWMubGVuZ3RoJiYoYT1sPSExKTt2YXIgaD10aGlzLl9fY2hhaW5fXyxwPSEhdGhpcy5fX2FjdGlvbnNfXy5sZW5ndGgsdj1vJiYhaCxfPWEmJiFwO2lmKCFvJiZsKXtyPV8/cjpuZXcgYmUodGhpcyk7dmFyIGc9dC5hcHBseShyLGYpO3JldHVybiBnLl9fYWN0aW9uc19fLnB1c2goe2Z1bmM6Tm8sYXJnczpbc10sdGhpc0FyZzpufSksbmV3IGRlKGcsaCl9cmV0dXJuIHYmJl8/dC5hcHBseSh0aGlzLGYpOihnPXRoaXMudGhydShzKSx2P3U/Zy52YWx1ZSgpWzBdOmcudmFsdWUoKTpnKX0pfSkscXQoW1wicG9wXCIsXCJwdXNoXCIsXCJzaGlmdFwiLFwic29ydFwiLFwic3BsaWNlXCIsXCJ1bnNoaWZ0XCJdLGZ1bmN0aW9uKG4pe3ZhciB0PW90W25dLHI9L14oPzpwdXNofHNvcnR8dW5zaGlmdCkkLy50ZXN0KG4pP1widGFwXCI6XCJ0aHJ1XCIsZT0vXig/OnBvcHxzaGlmdCkkLy50ZXN0KG4pO19lLnByb3RvdHlwZVtuXT1mdW5jdGlvbigpe3ZhciBuPWFyZ3VtZW50cztpZihlJiYhdGhpcy5fX2NoYWluX18pe3ZhciB1PXRoaXMudmFsdWUoKTtyZXR1cm4gdC5hcHBseSh3Zih1KT91OltdLG4pfXJldHVybiB0aGlzW3JdKGZ1bmN0aW9uKHIpe3JldHVybiB0LmFwcGx5KHdmKHIpP3I6W10sbil9KX19KSxIZShiZS5wcm90b3R5cGUsZnVuY3Rpb24obix0KXt2YXIgcj1fZVt0XTtpZihyKXt2YXIgZT1yLm5hbWUrXCJcIjtzdC5jYWxsKG9lLGUpfHwob2VbZV09W10pLG9lW2VdLnB1c2goe25hbWU6dCxmdW5jOnJ9KX19KSxvZVtfaShuLHYpLm5hbWVdPVt7bmFtZTpcIndyYXBwZXJcIixmdW5jOm59XSxiZS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgbj1uZXcgYmUodGhpcy5fX3dyYXBwZWRfXyk7cmV0dXJuIG4uX19hY3Rpb25zX189dWkodGhpcy5fX2FjdGlvbnNfXyksbi5fX2Rpcl9fPXRoaXMuX19kaXJfXyxuLl9fZmlsdGVyZWRfXz10aGlzLl9fZmlsdGVyZWRfXyxuLl9faXRlcmF0ZWVzX189dWkodGhpcy5fX2l0ZXJhdGVlc19fKSxuLl9fdGFrZUNvdW50X189dGhpcy5fX3Rha2VDb3VudF9fLG4uX192aWV3c19fPXVpKHRoaXMuX192aWV3c19fKSxufSxiZS5wcm90b3R5cGUucmV2ZXJzZT1mdW5jdGlvbigpe2lmKHRoaXMuX19maWx0ZXJlZF9fKXt2YXIgbj1uZXcgYmUodGhpcyk7bi5fX2Rpcl9fPS0xLG4uX19maWx0ZXJlZF9fPSEwfWVsc2Uobj10aGlzLmNsb25lKCkpLl9fZGlyX18qPS0xO3JldHVybiBufSxiZS5wcm90b3R5cGUudmFsdWU9ZnVuY3Rpb24oKXt2YXIgbj10aGlzLl9fd3JhcHBlZF9fLnZhbHVlKCksdD10aGlzLl9fZGlyX18scj13ZihuKSxlPXQ8MCx1PXI/bi5sZW5ndGg6MCxpPWZ1bmN0aW9uKG4sdCxyKXtmb3IodmFyIGU9LTEsdT1yLmxlbmd0aDsrK2U8dTspe3ZhciBpPXJbZV0sbz1pLnNpemU7c3dpdGNoKGkudHlwZSl7Y2FzZVwiZHJvcFwiOm4rPW87YnJlYWs7Y2FzZVwiZHJvcFJpZ2h0XCI6dC09bzticmVhaztjYXNlXCJ0YWtlXCI6dD1Hcih0LG4rbyk7YnJlYWs7Y2FzZVwidGFrZVJpZ2h0XCI6bj1WcihuLHQtbyl9fXJldHVybntzdGFydDpuLGVuZDp0fX0oMCx1LHRoaXMuX192aWV3c19fKSxvPWkuc3RhcnQsZj1pLmVuZCxhPWYtbyxjPWU/ZjpvLTEsbD10aGlzLl9faXRlcmF0ZWVzX18scz1sLmxlbmd0aCxoPTAscD1HcihhLHRoaXMuX190YWtlQ291bnRfXyk7aWYoIXJ8fCFlJiZ1PT1hJiZwPT1hKXJldHVybiBQdShuLHRoaXMuX19hY3Rpb25zX18pO3ZhciB2PVtdO246Zm9yKDthLS0mJmg8cDspe2Zvcih2YXIgXz0tMSxnPW5bYys9dF07KytfPHM7KXt2YXIgeT1sW19dLGQ9eS5pdGVyYXRlZSxiPXkudHlwZSx3PWQoZyk7aWYoYj09UilnPXc7ZWxzZSBpZighdyl7aWYoYj09SSljb250aW51ZSBuO2JyZWFrIG59fXZbaCsrXT1nfXJldHVybiB2fSxfZS5wcm90b3R5cGUuYXQ9UG8sX2UucHJvdG90eXBlLmNoYWluPWZ1bmN0aW9uKCl7cmV0dXJuIEZvKHRoaXMpfSxfZS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBkZSh0aGlzLnZhbHVlKCksdGhpcy5fX2NoYWluX18pfSxfZS5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3RoaXMuX192YWx1ZXNfXz09PW4mJih0aGlzLl9fdmFsdWVzX189TmYodGhpcy52YWx1ZSgpKSk7dmFyIHQ9dGhpcy5fX2luZGV4X18+PXRoaXMuX192YWx1ZXNfXy5sZW5ndGg7cmV0dXJue2RvbmU6dCx2YWx1ZTp0P246dGhpcy5fX3ZhbHVlc19fW3RoaXMuX19pbmRleF9fKytdfX0sX2UucHJvdG90eXBlLnBsYW50PWZ1bmN0aW9uKHQpe2Zvcih2YXIgcixlPXRoaXM7ZSBpbnN0YW5jZW9mIHllOyl7dmFyIHU9cG8oZSk7dS5fX2luZGV4X189MCx1Ll9fdmFsdWVzX189bixyP2kuX193cmFwcGVkX189dTpyPXU7dmFyIGk9dTtlPWUuX193cmFwcGVkX199cmV0dXJuIGkuX193cmFwcGVkX189dCxyfSxfZS5wcm90b3R5cGUucmV2ZXJzZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX193cmFwcGVkX187aWYodCBpbnN0YW5jZW9mIGJlKXt2YXIgcj10O3JldHVybiB0aGlzLl9fYWN0aW9uc19fLmxlbmd0aCYmKHI9bmV3IGJlKHRoaXMpKSwocj1yLnJldmVyc2UoKSkuX19hY3Rpb25zX18ucHVzaCh7ZnVuYzpObyxhcmdzOltFb10sdGhpc0FyZzpufSksbmV3IGRlKHIsdGhpcy5fX2NoYWluX18pfXJldHVybiB0aGlzLnRocnUoRW8pfSxfZS5wcm90b3R5cGUudG9KU09OPV9lLnByb3RvdHlwZS52YWx1ZU9mPV9lLnByb3RvdHlwZS52YWx1ZT1mdW5jdGlvbigpe3JldHVybiBQdSh0aGlzLl9fd3JhcHBlZF9fLHRoaXMuX19hY3Rpb25zX18pfSxfZS5wcm90b3R5cGUuZmlyc3Q9X2UucHJvdG90eXBlLmhlYWQsQ3ImJihfZS5wcm90b3R5cGVbQ3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxfZX0oKTtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJlwib2JqZWN0XCI9PXR5cGVvZiBkZWZpbmUuYW1kJiZkZWZpbmUuYW1kPyh6dC5fPUxyLGRlZmluZShmdW5jdGlvbigpe3JldHVybiBMcn0pKTpMdD8oKEx0LmV4cG9ydHM9THIpLl89THIsU3QuXz1Mcik6enQuXz1Mcn0pLmNhbGwodGhpcyk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbXh2WkdGemFDNXFjeUpkTENKdVlXMWxjeUk2V3lKMWJtUmxabWx1WldRaUxDSk1RVkpIUlY5QlVsSkJXVjlUU1ZwRklpd2lRMDlTUlY5RlVsSlBVbDlVUlZoVUlpd2lSbFZPUTE5RlVsSlBVbDlVUlZoVUlpd2lTVTVXUVV4SlJGOVVSVTFRVEY5V1FWSmZSVkpTVDFKZlZFVllWQ0lzSWtoQlUwaGZWVTVFUlVaSlRrVkVJaXdpVFVGWVgwMUZUVTlKV2tWZlUwbGFSU0lzSWxCTVFVTkZTRTlNUkVWU0lpd2lRMHhQVGtWZlJFVkZVRjlHVEVGSElpd2lRMHhQVGtWZlJreEJWRjlHVEVGSElpd2lRMHhQVGtWZlUxbE5RazlNVTE5R1RFRkhJaXdpUTA5TlVFRlNSVjlRUVZKVVNVRk1YMFpNUVVjaUxDSkRUMDFRUVZKRlgxVk9UMUpFUlZKRlJGOUdURUZISWl3aVYxSkJVRjlDU1U1RVgwWk1RVWNpTENKWFVrRlFYMEpKVGtSZlMwVlpYMFpNUVVjaUxDSlhVa0ZRWDBOVlVsSlpYMEpQVlU1RVgwWk1RVWNpTENKWFVrRlFYME5WVWxKWlgwWk1RVWNpTENKWFVrRlFYME5WVWxKWlgxSkpSMGhVWDBaTVFVY2lMQ0pYVWtGUVgxQkJVbFJKUVV4ZlJreEJSeUlzSWxkU1FWQmZVRUZTVkVsQlRGOVNTVWRJVkY5R1RFRkhJaXdpVjFKQlVGOUJVbGxmUmt4QlJ5SXNJbGRTUVZCZlVrVkJVa2RmUmt4QlJ5SXNJbGRTUVZCZlJreEpVRjlHVEVGSElpd2lSRVZHUVZWTVZGOVVVbFZPUTE5TVJVNUhWRWdpTENKRVJVWkJWVXhVWDFSU1ZVNURYMDlOU1ZOVFNVOU9JaXdpU0U5VVgwTlBWVTVVSWl3aVNFOVVYMU5RUVU0aUxDSk1RVnBaWDBaSlRGUkZVbDlHVEVGSElpd2lURUZhV1Y5TlFWQmZSa3hCUnlJc0lrbE9Sa2xPU1ZSWklpd2lUVUZZWDFOQlJrVmZTVTVVUlVkRlVpSXNJazFCV0Y5SlRsUkZSMFZTSWl3aVRrRk9JaXdpVFVGWVgwRlNVa0ZaWDB4RlRrZFVTQ0lzSWsxQldGOUJVbEpCV1Y5SlRrUkZXQ0lzSWtoQlRFWmZUVUZZWDBGU1VrRlpYMHhGVGtkVVNDSXNJbmR5WVhCR2JHRm5jeUlzSW1GeVozTlVZV2NpTENKaGNuSmhlVlJoWnlJc0ltRnplVzVqVkdGbklpd2lZbTl2YkZSaFp5SXNJbVJoZEdWVVlXY2lMQ0prYjIxRmVHTlVZV2NpTENKbGNuSnZjbFJoWnlJc0ltWjFibU5VWVdjaUxDSm5aVzVVWVdjaUxDSnRZWEJVWVdjaUxDSnVkVzFpWlhKVVlXY2lMQ0p1ZFd4c1ZHRm5JaXdpYjJKcVpXTjBWR0ZuSWl3aWNISnZlSGxVWVdjaUxDSnlaV2RsZUhCVVlXY2lMQ0p6WlhSVVlXY2lMQ0p6ZEhKcGJtZFVZV2NpTENKemVXMWliMnhVWVdjaUxDSjFibVJsWm1sdVpXUlVZV2NpTENKM1pXRnJUV0Z3VkdGbklpd2lkMlZoYTFObGRGUmhaeUlzSW1GeWNtRjVRblZtWm1WeVZHRm5JaXdpWkdGMFlWWnBaWGRVWVdjaUxDSm1iRzloZERNeVZHRm5JaXdpWm14dllYUTJORlJoWnlJc0ltbHVkRGhVWVdjaUxDSnBiblF4TmxSaFp5SXNJbWx1ZERNeVZHRm5JaXdpZFdsdWREaFVZV2NpTENKMWFXNTBPRU5zWVcxd1pXUlVZV2NpTENKMWFXNTBNVFpVWVdjaUxDSjFhVzUwTXpKVVlXY2lMQ0p5WlVWdGNIUjVVM1J5YVc1blRHVmhaR2x1WnlJc0luSmxSVzF3ZEhsVGRISnBibWROYVdSa2JHVWlMQ0p5WlVWdGNIUjVVM1J5YVc1blZISmhhV3hwYm1jaUxDSnlaVVZ6WTJGd1pXUklkRzFzSWl3aWNtVlZibVZ6WTJGd1pXUklkRzFzSWl3aWNtVklZWE5GYzJOaGNHVmtTSFJ0YkNJc0lsSmxaMFY0Y0NJc0luTnZkWEpqWlNJc0luSmxTR0Z6Vlc1bGMyTmhjR1ZrU0hSdGJDSXNJbkpsUlhOallYQmxJaXdpY21WRmRtRnNkV0YwWlNJc0luSmxTVzUwWlhKd2IyeGhkR1VpTENKeVpVbHpSR1ZsY0ZCeWIzQWlMQ0p5WlVselVHeGhhVzVRY205d0lpd2ljbVZRY205d1RtRnRaU0lzSW5KbFVtVm5SWGh3UTJoaGNpSXNJbkpsU0dGelVtVm5SWGh3UTJoaGNpSXNJbkpsVkhKcGJWTjBZWEowSWl3aWNtVlhhR2wwWlhOd1lXTmxJaXdpY21WWGNtRndRMjl0YldWdWRDSXNJbkpsVjNKaGNFUmxkR0ZwYkhNaUxDSnlaVk53YkdsMFJHVjBZV2xzY3lJc0luSmxRWE5qYVdsWGIzSmtJaXdpY21WR2IzSmlhV1JrWlc1SlpHVnVkR2xtYVdWeVEyaGhjbk1pTENKeVpVVnpZMkZ3WlVOb1lYSWlMQ0p5WlVWelZHVnRjR3hoZEdVaUxDSnlaVVpzWVdkeklpd2ljbVZKYzBKaFpFaGxlQ0lzSW5KbFNYTkNhVzVoY25raUxDSnlaVWx6U0c5emRFTjBiM0lpTENKeVpVbHpUMk4wWVd3aUxDSnlaVWx6VldsdWRDSXNJbkpsVEdGMGFXNGlMQ0p5WlU1dlRXRjBZMmdpTENKeVpWVnVaWE5qWVhCbFpGTjBjbWx1WnlJc0luSnpRMjl0WW05U1lXNW5aU0lzSW5KelEyOXRZbTlOWVhKcmMxSmhibWRsSWl3aWNuTkNjbVZoYTFKaGJtZGxJaXdpY25OTllYUm9UM0JTWVc1blpTSXNJbkp6UVhOMGNtRnNJaXdpY25OQ2NtVmhheUlzSW5KelEyOXRZbThpTENKeWMwUnBaMmwwY3lJc0luSnpSR2x1WjJKaGRDSXNJbkp6VEc5M1pYSWlMQ0p5YzAxcGMyTWlMQ0p5YzBacGRIb2lMQ0p5YzA1dmJrRnpkSEpoYkNJc0luSnpVbVZuYVc5dVlXd2lMQ0p5YzFOMWNuSlFZV2x5SWl3aWNuTlZjSEJsY2lJc0luSnpUV2x6WTB4dmQyVnlJaXdpY25OTmFYTmpWWEJ3WlhJaUxDSnlaVTl3ZEUxdlpDSXNJbkp6VTJWeElpd2lhbTlwYmlJc0luSnpSVzF2YW1raUxDSnljMU41YldKdmJDSXNJbkpsUVhCdmN5SXNJbkpsUTI5dFltOU5ZWEpySWl3aWNtVlZibWxqYjJSbElpd2ljbVZWYm1samIyUmxWMjl5WkNJc0luSmxTR0Z6Vlc1cFkyOWtaU0lzSW5KbFNHRnpWVzVwWTI5a1pWZHZjbVFpTENKamIyNTBaWGgwVUhKdmNITWlMQ0owWlcxd2JHRjBaVU52ZFc1MFpYSWlMQ0owZVhCbFpFRnljbUY1VkdGbmN5SXNJbU5zYjI1bFlXSnNaVlJoWjNNaUxDSnpkSEpwYm1kRmMyTmhjR1Z6SWl3aVhGd2lMQ0luSWl3aVhHNGlMQ0pjY2lJc0l1S0FxQ0lzSXVLQXFTSXNJbVp5WldWUVlYSnpaVVpzYjJGMElpd2ljR0Z5YzJWR2JHOWhkQ0lzSW1aeVpXVlFZWEp6WlVsdWRDSXNJbkJoY25ObFNXNTBJaXdpWm5KbFpVZHNiMkpoYkNJc0ltZHNiMkpoYkNJc0lrOWlhbVZqZENJc0ltWnlaV1ZUWld4bUlpd2ljMlZzWmlJc0luSnZiM1FpTENKR2RXNWpkR2x2YmlJc0ltWnlaV1ZGZUhCdmNuUnpJaXdpWlhod2IzSjBjeUlzSW01dlpHVlVlWEJsSWl3aVpuSmxaVTF2WkhWc1pTSXNJbTF2WkhWc1pTSXNJbTF2WkhWc1pVVjRjRzl5ZEhNaUxDSm1jbVZsVUhKdlkyVnpjeUlzSW5CeWIyTmxjM01pTENKdWIyUmxWWFJwYkNJc0luUjVjR1Z6SWl3aWNtVnhkV2x5WlNJc0ltSnBibVJwYm1jaUxDSmxJaXdpYm05a1pVbHpRWEp5WVhsQ2RXWm1aWElpTENKcGMwRnljbUY1UW5WbVptVnlJaXdpYm05a1pVbHpSR0YwWlNJc0ltbHpSR0YwWlNJc0ltNXZaR1ZKYzAxaGNDSXNJbWx6VFdGd0lpd2libTlrWlVselVtVm5SWGh3SWl3aWFYTlNaV2RGZUhBaUxDSnViMlJsU1hOVFpYUWlMQ0pwYzFObGRDSXNJbTV2WkdWSmMxUjVjR1ZrUVhKeVlYa2lMQ0pwYzFSNWNHVmtRWEp5WVhraUxDSmhjSEJzZVNJc0ltWjFibU1pTENKMGFHbHpRWEpuSWl3aVlYSm5jeUlzSW14bGJtZDBhQ0lzSW1OaGJHd2lMQ0poY25KaGVVRm5aM0psWjJGMGIzSWlMQ0poY25KaGVTSXNJbk5sZEhSbGNpSXNJbWwwWlhKaGRHVmxJaXdpWVdOamRXMTFiR0YwYjNJaUxDSnBibVJsZUNJc0luWmhiSFZsSWl3aVlYSnlZWGxGWVdOb0lpd2lZWEp5WVhsRllXTm9VbWxuYUhRaUxDSmhjbkpoZVVWMlpYSjVJaXdpY0hKbFpHbGpZWFJsSWl3aVlYSnlZWGxHYVd4MFpYSWlMQ0p5WlhOSmJtUmxlQ0lzSW5KbGMzVnNkQ0lzSW1GeWNtRjVTVzVqYkhWa1pYTWlMQ0ppWVhObFNXNWtaWGhQWmlJc0ltRnljbUY1U1c1amJIVmtaWE5YYVhSb0lpd2lZMjl0Y0dGeVlYUnZjaUlzSW1GeWNtRjVUV0Z3SWl3aVFYSnlZWGtpTENKaGNuSmhlVkIxYzJnaUxDSjJZV3gxWlhNaUxDSnZabVp6WlhRaUxDSmhjbkpoZVZKbFpIVmpaU0lzSW1sdWFYUkJZMk4xYlNJc0ltRnljbUY1VW1Wa2RXTmxVbWxuYUhRaUxDSmhjbkpoZVZOdmJXVWlMQ0poYzJOcGFWTnBlbVVpTENKaVlYTmxVSEp2Y0dWeWRIa2lMQ0ppWVhObFJtbHVaRXRsZVNJc0ltTnZiR3hsWTNScGIyNGlMQ0psWVdOb1JuVnVZeUlzSW10bGVTSXNJbUpoYzJWR2FXNWtTVzVrWlhnaUxDSm1jbTl0U1c1a1pYZ2lMQ0ptY205dFVtbG5hSFFpTENKemRISnBZM1JKYm1SbGVFOW1JaXdpWW1GelpVbHpUbUZPSWl3aVltRnpaVWx1WkdWNFQyWlhhWFJvSWl3aVltRnpaVTFsWVc0aUxDSmlZWE5sVTNWdElpd2liMkpxWldOMElpd2lZbUZ6WlZCeWIzQmxjblI1VDJZaUxDSmlZWE5sVW1Wa2RXTmxJaXdpWTNWeWNtVnVkQ0lzSW1KaGMyVlVhVzFsY3lJc0ltNGlMQ0ppWVhObFZISnBiU0lzSW5OMGNtbHVaeUlzSW5Oc2FXTmxJaXdpZEhKcGJXMWxaRVZ1WkVsdVpHVjRJaXdpY21Wd2JHRmpaU0lzSW1KaGMyVlZibUZ5ZVNJc0ltSmhjMlZXWVd4MVpYTWlMQ0p3Y205d2N5SXNJbU5oWTJobFNHRnpJaXdpWTJGamFHVWlMQ0pvWVhNaUxDSmphR0Z5YzFOMFlYSjBTVzVrWlhnaUxDSnpkSEpUZVcxaWIyeHpJaXdpWTJoeVUzbHRZbTlzY3lJc0ltTm9ZWEp6Ulc1a1NXNWtaWGdpTENKa1pXSjFjbkpNWlhSMFpYSWlMQ0xEZ0NJc0lzT0JJaXdpdzRJaUxDTERneUlzSXNPRUlpd2l3NFVpTENMRG9DSXNJc09oSWl3aXc2SWlMQ0xEb3lJc0lzT2tJaXdpdzZVaUxDTERoeUlzSXNPbklpd2l3NUFpTENMRHNDSXNJc09JSWl3aXc0a2lMQ0xEaWlJc0lzT0xJaXdpdzZnaUxDTERxU0lzSXNPcUlpd2l3NnNpTENMRGpDSXNJc09OSWl3aXc0NGlMQ0xEanlJc0lzT3NJaXdpdzYwaUxDTERyaUlzSXNPdklpd2l3NUVpTENMRHNTSXNJc09TSWl3aXc1TWlMQ0xEbENJc0lzT1ZJaXdpdzVZaUxDTERtQ0lzSXNPeUlpd2l3N01pTENMRHRDSXNJc08xSWl3aXc3WWlMQ0xEdUNJc0lzT1pJaXdpdzVvaUxDTERteUlzSXNPY0lpd2l3N2tpTENMRHVpSXNJc083SWl3aXc3d2lMQ0xEblNJc0lzTzlJaXdpdzc4aUxDTERoaUlzSXNPbUlpd2l3NTRpTENMRHZpSXNJc09mSWl3aXhJQWlMQ0xFZ2lJc0lzU0VJaXdpeElFaUxDTEVneUlzSXNTRklpd2l4SVlpTENMRWlDSXNJc1NLSWl3aXhJd2lMQ0xFaHlJc0lzU0pJaXdpeElzaUxDTEVqU0lzSXNTT0lpd2l4SkFpTENMRWp5SXNJc1NSSWl3aXhKSWlMQ0xFbENJc0lzU1dJaXdpeEpnaUxDTEVtaUlzSXNTVElpd2l4SlVpTENMRWx5SXNJc1NaSWl3aXhKc2lMQ0xFbkNJc0lzU2VJaXdpeEtBaUxDTEVvaUlzSXNTZElpd2l4SjhpTENMRW9TSXNJc1NqSWl3aXhLUWlMQ0xFcGlJc0lzU2xJaXdpeEtjaUxDTEVxQ0lzSXNTcUlpd2l4S3dpTENMRXJpSXNJc1N3SWl3aXhLa2lMQ0xFcXlJc0lzU3RJaXdpeEs4aUxDTEVzU0lzSXNTMElpd2l4TFVpTENMRXRpSXNJc1MzSWl3aXhMZ2lMQ0xFdVNJc0lzUzdJaXdpeEwwaUxDTEV2eUlzSXNXQklpd2l4TG9pTENMRXZDSXNJc1MrSWl3aXhZQWlMQ0xGZ2lJc0lzV0RJaXdpeFlVaUxDTEZoeUlzSXNXS0lpd2l4WVFpTENMRmhpSXNJc1dJSWl3aXhZc2lMQ0xGakNJc0lzV09JaXdpeFpBaUxDTEZqU0lzSXNXUElpd2l4WkVpTENMRmxDSXNJc1dXSWl3aXhaZ2lMQ0xGbFNJc0lzV1hJaXdpeFpraUxDTEZtaUlzSXNXY0lpd2l4WjRpTENMRm9DSXNJc1diSWl3aXhaMGlMQ0xGbnlJc0lzV2hJaXdpeGFJaUxDTEZwQ0lzSXNXbUlpd2l4YU1pTENMRnBTSXNJc1duSWl3aXhhZ2lMQ0xGcWlJc0lzV3NJaXdpeGE0aUxDTEZzQ0lzSXNXeUlpd2l4YWtpTENMRnF5SXNJc1d0SWl3aXhhOGlMQ0xGc1NJc0lzV3pJaXdpeGJRaUxDTEZ0U0lzSXNXMklpd2l4YmNpTENMRnVDSXNJc1c1SWl3aXhic2lMQ0xGdlNJc0lzVzZJaXdpeGJ3aUxDTEZ2aUlzSXNTeUlpd2l4TE1pTENMRmtpSXNJc1dUSWl3aXhZa2lMQ0xGdnlJc0ltVnpZMkZ3WlVoMGJXeERhR0Z5SWl3aUppSXNJandpTENJK0lpd2lYQ0lpTENKbGMyTmhjR1ZUZEhKcGJtZERhR0Z5SWl3aVkyaHlJaXdpYUdGelZXNXBZMjlrWlNJc0luUmxjM1FpTENKdFlYQlViMEZ5Y21GNUlpd2liV0Z3SWl3aWMybDZaU0lzSW1admNrVmhZMmdpTENKdmRtVnlRWEpuSWl3aWRISmhibk5tYjNKdElpd2lZWEpuSWl3aWNtVndiR0ZqWlVodmJHUmxjbk1pTENKd2JHRmpaV2h2YkdSbGNpSXNJbk5sZEZSdlFYSnlZWGtpTENKelpYUWlMQ0p6WlhSVWIxQmhhWEp6SWl3aWMzUnlhVzVuVTJsNlpTSXNJbXhoYzNSSmJtUmxlQ0lzSW5WdWFXTnZaR1ZUYVhwbElpd2ljM1J5YVc1blZHOUJjbkpoZVNJc0ltMWhkR05vSWl3aWRXNXBZMjlrWlZSdlFYSnlZWGtpTENKemNHeHBkQ0lzSW1GelkybHBWRzlCY25KaGVTSXNJbU5vWVhKQmRDSXNJblZ1WlhOallYQmxTSFJ0YkVOb1lYSWlMQ0ltWVcxd095SXNJaVpzZERzaUxDSW1aM1E3SWl3aUpuRjFiM1E3SWl3aUppTXpPVHNpTENKZklpd2ljblZ1U1c1RGIyNTBaWGgwSWl3aVkyOXVkR1Y0ZENJc0luVnBaQ0lzSW1SbFptRjFiSFJ6SWl3aWNHbGpheUlzSWtSaGRHVWlMQ0pGY25KdmNpSXNJazFoZEdnaUxDSlRkSEpwYm1jaUxDSlVlWEJsUlhKeWIzSWlMQ0poY25KaGVWQnliM1J2SWl3aWNISnZkRzkwZVhCbElpd2lablZ1WTFCeWIzUnZJaXdpYjJKcVpXTjBVSEp2ZEc4aUxDSmpiM0psU25ORVlYUmhJaXdpWm5WdVkxUnZVM1J5YVc1bklpd2lkRzlUZEhKcGJtY2lMQ0pvWVhOUGQyNVFjbTl3WlhKMGVTSXNJbWxrUTI5MWJuUmxjaUlzSW0xaGMydFRjbU5MWlhraUxDSmxlR1ZqSWl3aWEyVjVjeUlzSWtsRlgxQlNUMVJQSWl3aWJtRjBhWFpsVDJKcVpXTjBWRzlUZEhKcGJtY2lMQ0p2WW1wbFkzUkRkRzl5VTNSeWFXNW5JaXdpYjJ4a1JHRnphQ0lzSW5KbFNYTk9ZWFJwZG1VaUxDSkNkV1ptWlhJaUxDSlRlVzFpYjJ3aUxDSlZhVzUwT0VGeWNtRjVJaXdpWVd4c2IyTlZibk5oWm1VaUxDSm5aWFJRY205MGIzUjVjR1VpTENKblpYUlFjbTkwYjNSNWNHVlBaaUlzSW05aWFtVmpkRU55WldGMFpTSXNJbU55WldGMFpTSXNJbkJ5YjNCbGNuUjVTWE5GYm5WdFpYSmhZbXhsSWl3aWMzQnNhV05sSWl3aWMzQnlaV0ZrWVdKc1pWTjViV0p2YkNJc0ltbHpRMjl1WTJGMFUzQnlaV0ZrWVdKc1pTSXNJbk41YlVsMFpYSmhkRzl5SWl3aWFYUmxjbUYwYjNJaUxDSnplVzFVYjFOMGNtbHVaMVJoWnlJc0luUnZVM1J5YVc1blZHRm5JaXdpWkdWbWFXNWxVSEp2Y0dWeWRIa2lMQ0puWlhST1lYUnBkbVVpTENKamRIaERiR1ZoY2xScGJXVnZkWFFpTENKamJHVmhjbFJwYldWdmRYUWlMQ0pqZEhoT2IzY2lMQ0p1YjNjaUxDSmpkSGhUWlhSVWFXMWxiM1YwSWl3aWMyVjBWR2x0Wlc5MWRDSXNJbTVoZEdsMlpVTmxhV3dpTENKalpXbHNJaXdpYm1GMGFYWmxSbXh2YjNJaUxDSm1iRzl2Y2lJc0ltNWhkR2wyWlVkbGRGTjViV0p2YkhNaUxDSm5aWFJQZDI1UWNtOXdaWEowZVZONWJXSnZiSE1pTENKdVlYUnBkbVZKYzBKMVptWmxjaUlzSW1selFuVm1abVZ5SWl3aWJtRjBhWFpsU1hOR2FXNXBkR1VpTENKcGMwWnBibWwwWlNJc0ltNWhkR2wyWlVwdmFXNGlMQ0p1WVhScGRtVkxaWGx6SWl3aWJtRjBhWFpsVFdGNElpd2liV0Y0SWl3aWJtRjBhWFpsVFdsdUlpd2liV2x1SWl3aWJtRjBhWFpsVG05M0lpd2libUYwYVhabFVHRnljMlZKYm5RaUxDSnVZWFJwZG1WU1lXNWtiMjBpTENKeVlXNWtiMjBpTENKdVlYUnBkbVZTWlhabGNuTmxJaXdpY21WMlpYSnpaU0lzSWtSaGRHRldhV1YzSWl3aVRXRndJaXdpVUhKdmJXbHpaU0lzSWxObGRDSXNJbGRsWVd0TllYQWlMQ0p1WVhScGRtVkRjbVZoZEdVaUxDSnRaWFJoVFdGd0lpd2ljbVZoYkU1aGJXVnpJaXdpWkdGMFlWWnBaWGREZEc5eVUzUnlhVzVuSWl3aWRHOVRiM1Z5WTJVaUxDSnRZWEJEZEc5eVUzUnlhVzVuSWl3aWNISnZiV2x6WlVOMGIzSlRkSEpwYm1jaUxDSnpaWFJEZEc5eVUzUnlhVzVuSWl3aWQyVmhhMDFoY0VOMGIzSlRkSEpwYm1jaUxDSnplVzFpYjJ4UWNtOTBieUlzSW5ONWJXSnZiRlpoYkhWbFQyWWlMQ0oyWVd4MVpVOW1JaXdpYzNsdFltOXNWRzlUZEhKcGJtY2lMQ0pzYjJSaGMyZ2lMQ0pwYzA5aWFtVmpkRXhwYTJVaUxDSnBjMEZ5Y21GNUlpd2lUR0Y2ZVZkeVlYQndaWElpTENKTWIyUmhjMmhYY21Gd2NHVnlJaXdpZDNKaGNIQmxja05zYjI1bElpd2lZbUZ6WlVOeVpXRjBaU0lzSW5CeWIzUnZJaXdpYVhOUFltcGxZM1FpTENKaVlYTmxURzlrWVhOb0lpd2lZMmhoYVc1QmJHd2lMQ0owYUdseklpd2lYMTkzY21Gd2NHVmtYMThpTENKZlgyRmpkR2x2Ym5OZlh5SXNJbDlmWTJoaGFXNWZYeUlzSWw5ZmFXNWtaWGhmWHlJc0lsOWZkbUZzZFdWelgxOGlMQ0pmWDJScGNsOWZJaXdpWDE5bWFXeDBaWEpsWkY5Zklpd2lYMTlwZEdWeVlYUmxaWE5mWHlJc0lsOWZkR0ZyWlVOdmRXNTBYMThpTENKZlgzWnBaWGR6WDE4aUxDSklZWE5vSWl3aVpXNTBjbWxsY3lJc0ltTnNaV0Z5SWl3aVpXNTBjbmtpTENKTWFYTjBRMkZqYUdVaUxDSk5ZWEJEWVdOb1pTSXNJbE5sZEVOaFkyaGxJaXdpWDE5a1lYUmhYMThpTENKaFpHUWlMQ0pUZEdGamF5SXNJbVJoZEdFaUxDSmhjbkpoZVV4cGEyVkxaWGx6SWl3aWFXNW9aWEpwZEdWa0lpd2lhWE5CY25JaUxDSnBjMEZ5WnlJc0ltbHpRWEpuZFcxbGJuUnpJaXdpYVhOQ2RXWm1JaXdpYVhOVWVYQmxJaXdpYzJ0cGNFbHVaR1Y0WlhNaUxDSnBjMGx1WkdWNElpd2ljSFZ6YUNJc0ltRnljbUY1VTJGdGNHeGxJaXdpWW1GelpWSmhibVJ2YlNJc0ltRnljbUY1VTJGdGNHeGxVMmw2WlNJc0luTm9kV1ptYkdWVFpXeG1JaXdpWTI5d2VVRnljbUY1SWl3aVltRnpaVU5zWVcxd0lpd2lZWEp5WVhsVGFIVm1abXhsSWl3aVlYTnphV2R1VFdWeVoyVldZV3gxWlNJc0ltVnhJaXdpWW1GelpVRnpjMmxuYmxaaGJIVmxJaXdpWVhOemFXZHVWbUZzZFdVaUxDSnZZbXBXWVd4MVpTSXNJbUZ6YzI5alNXNWtaWGhQWmlJc0ltSmhjMlZCWjJkeVpXZGhkRzl5SWl3aVltRnpaVVZoWTJnaUxDSmlZWE5sUVhOemFXZHVJaXdpWTI5d2VVOWlhbVZqZENJc0ltTnZibVpwWjNWeVlXSnNaU0lzSW1WdWRXMWxjbUZpYkdVaUxDSjNjbWwwWVdKc1pTSXNJbUpoYzJWQmRDSXNJbkJoZEdoeklpd2ljMnRwY0NJc0ltZGxkQ0lzSW01MWJXSmxjaUlzSW14dmQyVnlJaXdpZFhCd1pYSWlMQ0ppWVhObFEyeHZibVVpTENKaWFYUnRZWE5ySWl3aVkzVnpkRzl0YVhwbGNpSXNJbk4wWVdOcklpd2lhWE5FWldWd0lpd2lhWE5HYkdGMElpd2lhWE5HZFd4c0lpd2lZMjl1YzNSeWRXTjBiM0lpTENKcGJuQjFkQ0lzSW1sdWFYUkRiRzl1WlVGeWNtRjVJaXdpZEdGbklpd2laMlYwVkdGbklpd2lhWE5HZFc1aklpd2lZMnh2Ym1WQ2RXWm1aWElpTENKcGJtbDBRMnh2Ym1WUFltcGxZM1FpTENKblpYUlRlVzFpYjJ4elNXNGlMQ0pqYjNCNVUzbHRZbTlzYzBsdUlpd2lhMlY1YzBsdUlpd2lZbUZ6WlVGemMybG5ia2x1SWl3aVoyVjBVM2x0WW05c2N5SXNJbU52Y0hsVGVXMWliMnh6SWl3aWMzbHRZbTlzSWl3aWNtVm5aWGh3SWl3aVEzUnZjaUlzSW1Oc2IyNWxRWEp5WVhsQ2RXWm1aWElpTENKa1lYUmhWbWxsZHlJc0ltSjFabVpsY2lJc0ltSjVkR1ZQWm1aelpYUWlMQ0ppZVhSbFRHVnVaM1JvSWl3aVkyeHZibVZFWVhSaFZtbGxkeUlzSW1Oc2IyNWxWSGx3WldSQmNuSmhlU0lzSW1sdWFYUkRiRzl1WlVKNVZHRm5JaXdpYzNSaFkydGxaQ0lzSW5OMVlsWmhiSFZsSWl3aVoyVjBRV3hzUzJWNWMwbHVJaXdpWjJWMFFXeHNTMlY1Y3lJc0ltSmhjMlZEYjI1bWIzSnRjMVJ2SWl3aVltRnpaVVJsYkdGNUlpd2lkMkZwZENJc0ltSmhjMlZFYVdabVpYSmxibU5sSWl3aWFXNWpiSFZrWlhNaUxDSnBjME52YlcxdmJpSXNJblpoYkhWbGMweGxibWQwYUNJc0ltOTFkR1Z5SWl3aVkyOXRjSFYwWldRaUxDSjJZV3gxWlhOSmJtUmxlQ0lzSW5SbGJYQnNZWFJsVTJWMGRHbHVaM01pTENKbGMyTmhjR1VpTENKbGRtRnNkV0YwWlNJc0ltbHVkR1Z5Y0c5c1lYUmxJaXdpZG1GeWFXRmliR1VpTENKcGJYQnZjblJ6SWl3aWNHOXdJaXdpYUdGemFDSXNJbWRsZEUxaGNFUmhkR0VpTENKd1lXbHljeUlzSW1OeVpXRjBaVUpoYzJWRllXTm9JaXdpWW1GelpVWnZjazkzYmlJc0ltSmhjMlZGWVdOb1VtbG5hSFFpTENKaVlYTmxSbTl5VDNkdVVtbG5hSFFpTENKaVlYTmxSWFpsY25raUxDSmlZWE5sUlhoMGNtVnRkVzBpTENKcGMxTjViV0p2YkNJc0ltSmhjMlZHYVd4MFpYSWlMQ0ppWVhObFJteGhkSFJsYmlJc0ltUmxjSFJvSWl3aWFYTlRkSEpwWTNRaUxDSnBjMFpzWVhSMFpXNWhZbXhsSWl3aVltRnpaVVp2Y2lJc0ltTnlaV0YwWlVKaGMyVkdiM0lpTENKaVlYTmxSbTl5VW1sbmFIUWlMQ0ppWVhObFJuVnVZM1JwYjI1eklpd2lhWE5HZFc1amRHbHZiaUlzSW1KaGMyVkhaWFFpTENKd1lYUm9JaXdpWTJGemRGQmhkR2dpTENKMGIwdGxlU0lzSW1KaGMyVkhaWFJCYkd4TFpYbHpJaXdpYTJWNWMwWjFibU1pTENKemVXMWliMnh6Um5WdVl5SXNJbUpoYzJWSFpYUlVZV2NpTENKcGMwOTNiaUlzSW5WdWJXRnphMlZrSWl3aVoyVjBVbUYzVkdGbklpd2liMkpxWldOMFZHOVRkSEpwYm1jaUxDSmlZWE5sUjNRaUxDSnZkR2hsY2lJc0ltSmhjMlZJWVhNaUxDSmlZWE5sU0dGelNXNGlMQ0ppWVhObFNXNTBaWEp6WldOMGFXOXVJaXdpWVhKeVlYbHpJaXdpYjNSb1RHVnVaM1JvSWl3aWIzUm9TVzVrWlhnaUxDSmpZV05vWlhNaUxDSnRZWGhNWlc1bmRHZ2lMQ0pKYm1acGJtbDBlU0lzSW5ObFpXNGlMQ0ppWVhObFNXNTJiMnRsSWl3aWNHRnlaVzUwSWl3aWJHRnpkQ0lzSW1KaGMyVkpjMEZ5WjNWdFpXNTBjeUlzSW1KaGMyVkpjMFZ4ZFdGc0lpd2laWEYxWVd4R2RXNWpJaXdpYjJKcVNYTkJjbklpTENKdmRHaEpjMEZ5Y2lJc0ltOWlhbFJoWnlJc0ltOTBhRlJoWnlJc0ltOWlha2x6VDJKcUlpd2liM1JvU1hOUFltb2lMQ0pwYzFOaGJXVlVZV2NpTENKbGNYVmhiRUZ5Y21GNWN5SXNJbTVoYldVaUxDSnRaWE56WVdkbElpd2lZMjl1ZG1WeWRDSXNJbWx6VUdGeWRHbGhiQ0lzSW1WeGRXRnNRbmxVWVdjaUxDSnZZbXBKYzFkeVlYQndaV1FpTENKdmRHaEpjMWR5WVhCd1pXUWlMQ0p2WW1wVmJuZHlZWEJ3WldRaUxDSnZkR2hWYm5keVlYQndaV1FpTENKdlltcFFjbTl3Y3lJc0ltOWlha3hsYm1kMGFDSXNJbTlpYWxOMFlXTnJaV1FpTENKdmRHaFRkR0ZqYTJWa0lpd2ljMnRwY0VOMGIzSWlMQ0p2ZEdoV1lXeDFaU0lzSW1OdmJYQmhjbVZrSWl3aWIySnFRM1J2Y2lJc0ltOTBhRU4wYjNJaUxDSmxjWFZoYkU5aWFtVmpkSE1pTENKaVlYTmxTWE5GY1hWaGJFUmxaWEFpTENKaVlYTmxTWE5OWVhSamFDSXNJbTFoZEdOb1JHRjBZU0lzSW01dlEzVnpkRzl0YVhwbGNpSXNJbk55WTFaaGJIVmxJaXdpWW1GelpVbHpUbUYwYVhabElpd2lZbUZ6WlVsMFpYSmhkR1ZsSWl3aWFXUmxiblJwZEhraUxDSmlZWE5sVFdGMFkyaGxjMUJ5YjNCbGNuUjVJaXdpWW1GelpVMWhkR05vWlhNaUxDSndjbTl3WlhKMGVTSXNJbUpoYzJWTFpYbHpJaXdpYVhOUWNtOTBiM1I1Y0dVaUxDSmlZWE5sUzJWNWMwbHVJaXdpYm1GMGFYWmxTMlY1YzBsdUlpd2lhWE5RY205MGJ5SXNJbUpoYzJWTWRDSXNJbUpoYzJWTllYQWlMQ0pwYzBGeWNtRjVUR2xyWlNJc0ltZGxkRTFoZEdOb1JHRjBZU0lzSW0xaGRHTm9aWE5UZEhKcFkzUkRiMjF3WVhKaFlteGxJaXdpYVhOTFpYa2lMQ0pwYzFOMGNtbGpkRU52YlhCaGNtRmliR1VpTENKb1lYTkpiaUlzSW1KaGMyVk5aWEpuWlNJc0luTnlZMGx1WkdWNElpd2liV1Z5WjJWR2RXNWpJaXdpYzJGbVpVZGxkQ0lzSW01bGQxWmhiSFZsSWl3aWFYTlVlWEJsWkNJc0ltbHpRWEp5WVhsTWFXdGxUMkpxWldOMElpd2lhWE5RYkdGcGJrOWlhbVZqZENJc0luUnZVR3hoYVc1UFltcGxZM1FpTENKaVlYTmxUV1Z5WjJWRVpXVndJaXdpWW1GelpVNTBhQ0lzSW1KaGMyVlBjbVJsY2tKNUlpd2lhWFJsY21GMFpXVnpJaXdpYjNKa1pYSnpJaXdpWjJWMFNYUmxjbUYwWldVaUxDSmpiMjF3WVhKbGNpSXNJbk52Y25RaUxDSmlZWE5sVTI5eWRFSjVJaXdpWTNKcGRHVnlhV0VpTENKdlltcERjbWwwWlhKcFlTSXNJbTkwYUVOeWFYUmxjbWxoSWl3aWIzSmtaWEp6VEdWdVozUm9JaXdpWTI5dGNHRnlaVUZ6WTJWdVpHbHVaeUlzSW05eVpHVnlJaXdpWTI5dGNHRnlaVTExYkhScGNHeGxJaXdpWW1GelpWQnBZMnRDZVNJc0ltSmhjMlZUWlhRaUxDSmlZWE5sVUhWc2JFRnNiQ0lzSW1sdVpHVjRUMllpTENKaVlYTmxVSFZzYkVGMElpd2lhVzVrWlhobGN5SXNJbkJ5WlhacGIzVnpJaXdpWW1GelpWVnVjMlYwSWl3aVltRnpaVkpsY0dWaGRDSXNJbUpoYzJWU1pYTjBJaXdpYzNSaGNuUWlMQ0p6WlhSVWIxTjBjbWx1WnlJc0ltOTJaWEpTWlhOMElpd2lZbUZ6WlZOaGJYQnNaU0lzSW1KaGMyVlRZVzF3YkdWVGFYcGxJaXdpYm1WemRHVmtJaXdpWW1GelpWTmxkRVJoZEdFaUxDSmlZWE5sVTJWMFZHOVRkSEpwYm1jaUxDSmpiMjV6ZEdGdWRDSXNJbUpoYzJWVGFIVm1abXhsSWl3aVltRnpaVk5zYVdObElpd2laVzVrSWl3aVltRnpaVk52YldVaUxDSmlZWE5sVTI5eWRHVmtTVzVrWlhnaUxDSnlaWFJJYVdkb1pYTjBJaXdpYkc5M0lpd2lhR2xuYUNJc0ltMXBaQ0lzSW1KaGMyVlRiM0owWldSSmJtUmxlRUo1SWl3aWRtRnNTWE5PWVU0aUxDSjJZV3hKYzA1MWJHd2lMQ0oyWVd4SmMxTjViV0p2YkNJc0luWmhiRWx6Vlc1a1pXWnBibVZrSWl3aWIzUm9TWE5FWldacGJtVmtJaXdpYjNSb1NYTk9kV3hzSWl3aWIzUm9TWE5TWldac1pYaHBkbVVpTENKdmRHaEpjMU41YldKdmJDSXNJbk5sZEV4dmR5SXNJbUpoYzJWVGIzSjBaV1JWYm1seElpd2lZbUZ6WlZSdlRuVnRZbVZ5SWl3aVltRnpaVlJ2VTNSeWFXNW5JaXdpWW1GelpWVnVhWEVpTENKamNtVmhkR1ZUWlhRaUxDSnpaV1Z1U1c1a1pYZ2lMQ0ppWVhObFZYQmtZWFJsSWl3aWRYQmtZWFJsY2lJc0ltSmhjMlZYYUdsc1pTSXNJbWx6UkhKdmNDSXNJbUpoYzJWWGNtRndjR1Z5Vm1Gc2RXVWlMQ0poWTNScGIyNXpJaXdpWVdOMGFXOXVJaXdpWW1GelpWaHZjaUlzSW1KaGMyVmFhWEJQWW1wbFkzUWlMQ0poYzNOcFoyNUdkVzVqSWl3aWRtRnNjMHhsYm1kMGFDSXNJbU5oYzNSQmNuSmhlVXhwYTJWUFltcGxZM1FpTENKallYTjBSblZ1WTNScGIyNGlMQ0p6ZEhKcGJtZFViMUJoZEdnaUxDSmpZWE4wVW1WemRDSXNJbU5oYzNSVGJHbGpaU0lzSW1sa0lpd2lZMjl3ZVNJc0ltRnljbUY1UW5WbVptVnlJaXdpZEhsd1pXUkJjbkpoZVNJc0luWmhiRWx6UkdWbWFXNWxaQ0lzSW5aaGJFbHpVbVZtYkdWNGFYWmxJaXdpWTI5dGNHOXpaVUZ5WjNNaUxDSndZWEowYVdGc2N5SXNJbWh2YkdSbGNuTWlMQ0pwYzBOMWNuSnBaV1FpTENKaGNtZHpTVzVrWlhnaUxDSmhjbWR6VEdWdVozUm9JaXdpYUc5c1pHVnljMHhsYm1kMGFDSXNJbXhsWm5SSmJtUmxlQ0lzSW14bFpuUk1aVzVuZEdnaUxDSnlZVzVuWlV4bGJtZDBhQ0lzSW1selZXNWpkWEp5YVdWa0lpd2lZMjl0Y0c5elpVRnlaM05TYVdkb2RDSXNJbWh2YkdSbGNuTkpibVJsZUNJc0luSnBaMmgwU1c1a1pYZ2lMQ0p5YVdkb2RFeGxibWQwYUNJc0ltbHpUbVYzSWl3aVkzSmxZWFJsUVdkbmNtVm5ZWFJ2Y2lJc0ltbHVhWFJwWVd4cGVtVnlJaXdpWTNKbFlYUmxRWE56YVdkdVpYSWlMQ0poYzNOcFoyNWxjaUlzSW5OdmRYSmpaWE1pTENKbmRXRnlaQ0lzSW1selNYUmxjbUYwWldWRFlXeHNJaXdpYVhSbGNtRmliR1VpTENKamNtVmhkR1ZEWVhObFJtbHljM1FpTENKdFpYUm9iMlJPWVcxbElpd2lkSEpoYVd4cGJtY2lMQ0pqY21WaGRHVkRiMjF3YjNWdVpHVnlJaXdpWTJGc2JHSmhZMnNpTENKM2IzSmtjeUlzSW1SbFluVnljaUlzSW1OeVpXRjBaVU4wYjNJaUxDSmhjbWQxYldWdWRITWlMQ0owYUdselFtbHVaR2x1WnlJc0ltTnlaV0YwWlVacGJtUWlMQ0ptYVc1a1NXNWtaWGhHZFc1aklpd2lZM0psWVhSbFJteHZkeUlzSW1ac1lYUlNaWE4wSWl3aVpuVnVZM01pTENKd2NtVnlaWEVpTENKMGFISjFJaXdpZDNKaGNIQmxjaUlzSW1kbGRFWjFibU5PWVcxbElpd2lablZ1WTA1aGJXVWlMQ0puWlhSRVlYUmhJaXdpYVhOTVlYcHBZV0pzWlNJc0luQnNZVzUwSWl3aVkzSmxZWFJsU0hsaWNtbGtJaXdpY0dGeWRHbGhiSE5TYVdkb2RDSXNJbWh2YkdSbGNuTlNhV2RvZENJc0ltRnlaMUJ2Y3lJc0ltRnllU0lzSW1GeWFYUjVJaXdpYVhOQmNua2lMQ0pwYzBKcGJtUWlMQ0pwYzBKcGJtUkxaWGtpTENKcGMwWnNhWEFpTENKblpYUkliMnhrWlhJaUxDSm9iMnhrWlhKelEyOTFiblFpTENKamIzVnVkRWh2YkdSbGNuTWlMQ0p1WlhkSWIyeGtaWEp6SWl3aVkzSmxZWFJsVW1WamRYSnllU0lzSW1adUlpd2lZWEp5VEdWdVozUm9JaXdpYjJ4a1FYSnlZWGtpTENKeVpXOXlaR1Z5SWl3aVkzSmxZWFJsU1c1MlpYSjBaWElpTENKMGIwbDBaWEpoZEdWbElpd2lZbUZ6WlVsdWRtVnlkR1Z5SWl3aVkzSmxZWFJsVFdGMGFFOXdaWEpoZEdsdmJpSXNJbTl3WlhKaGRHOXlJaXdpWkdWbVlYVnNkRlpoYkhWbElpd2lZM0psWVhSbFQzWmxjaUlzSW1GeWNtRjVSblZ1WXlJc0ltTnlaV0YwWlZCaFpHUnBibWNpTENKamFHRnljeUlzSW1Ob1lYSnpUR1Z1WjNSb0lpd2lZM0psWVhSbFVtRnVaMlVpTENKemRHVndJaXdpZEc5R2FXNXBkR1VpTENKaVlYTmxVbUZ1WjJVaUxDSmpjbVZoZEdWU1pXeGhkR2x2Ym1Gc1QzQmxjbUYwYVc5dUlpd2lkRzlPZFcxaVpYSWlMQ0ozY21Gd1JuVnVZeUlzSW1selEzVnljbmtpTENKdVpYZEVZWFJoSWl3aWMyVjBSR0YwWVNJc0luTmxkRmR5WVhCVWIxTjBjbWx1WnlJc0ltTnlaV0YwWlZKdmRXNWtJaXdpY0hKbFkybHphVzl1SWl3aWRHOUpiblJsWjJWeUlpd2ljR0ZwY2lJc0ltNXZiM0FpTENKamNtVmhkR1ZVYjFCaGFYSnpJaXdpWW1GelpWUnZVR0ZwY25NaUxDSmpjbVZoZEdWWGNtRndJaXdpYzNKalFtbDBiV0Z6YXlJc0ltNWxkMEpwZEcxaGMyc2lMQ0pwYzBOdmJXSnZJaXdpYldWeVoyVkVZWFJoSWl3aVkzSmxZWFJsUTNWeWNua2lMQ0pqY21WaGRHVlFZWEowYVdGc0lpd2lZM0psWVhSbFFtbHVaQ0lzSW1OMWMzUnZiVVJsWm1GMWJIUnpRWE56YVdkdVNXNGlMQ0pqZFhOMGIyMUVaV1poZFd4MGMwMWxjbWRsSWl3aVkzVnpkRzl0VDIxcGRFTnNiMjVsSWl3aVlYSnlVM1JoWTJ0bFpDSXNJbUZ5Y2xaaGJIVmxJaXdpWm14aGRIUmxiaUlzSW05MGFHVnlSblZ1WXlJc0luUjVjR1VpTENKblpYUldZV3gxWlNJc0luTjBkV0pCY25KaGVTSXNJbWhoYzFCaGRHZ2lMQ0pvWVhOR2RXNWpJaXdpYVhOTVpXNW5kR2dpTENKQmNuSmhlVUoxWm1abGNpSXNJbkpsYzI5c2RtVWlMQ0pqZEc5eVUzUnlhVzVuSWl3aWFYTk5ZWE5yWVdKc1pTSXNJbk4wZFdKR1lXeHpaU0lzSW05MGFHVnlRWEpuY3lJc0luTm9iM0owVDNWMElpd2ljbVZtWlhKbGJtTmxJaXdpWkdWMFlXbHNjeUlzSW1sdWMyVnlkRmR5WVhCRVpYUmhhV3h6SWl3aWRYQmtZWFJsVjNKaGNFUmxkR0ZwYkhNaUxDSm5aWFJYY21Gd1JHVjBZV2xzY3lJc0ltTnZkVzUwSWl3aWJHRnpkRU5oYkd4bFpDSXNJbk4wWVcxd0lpd2ljbVZ0WVdsdWFXNW5JaXdpY21GdVpDSXNJbTFsYlc5cGVtVWlMQ0p0WlcxdmFYcGxRMkZ3Y0dWa0lpd2lZMmhoY2tOdlpHVkJkQ0lzSW5GMWIzUmxJaXdpYzNWaVUzUnlhVzVuSWl3aVkyeHZibVVpTENKa2FXWm1aWEpsYm1ObElpd2laR2xtWm1WeVpXNWpaVUo1SWl3aVpHbG1abVZ5Wlc1alpWZHBkR2dpTENKbWFXNWtTVzVrWlhnaUxDSm1hVzVrVEdGemRFbHVaR1Y0SWl3aWFHVmhaQ0lzSW1sdWRHVnljMlZqZEdsdmJpSXNJbTFoY0hCbFpDSXNJbWx1ZEdWeWMyVmpkR2x2YmtKNUlpd2lhVzUwWlhKelpXTjBhVzl1VjJsMGFDSXNJbkIxYkd3aUxDSndkV3hzUVd4c0lpd2ljSFZzYkVGMElpd2lkVzVwYjI0aUxDSjFibWx2YmtKNUlpd2lkVzVwYjI1WGFYUm9JaXdpZFc1NmFYQWlMQ0puY205MWNDSXNJblZ1ZW1sd1YybDBhQ0lzSW5kcGRHaHZkWFFpTENKNGIzSWlMQ0o0YjNKQ2VTSXNJbmh2Y2xkcGRHZ2lMQ0o2YVhBaUxDSjZhWEJYYVhSb0lpd2lZMmhoYVc0aUxDSnBiblJsY21ObGNIUnZjaUlzSW5keVlYQndaWEpCZENJc0ltTnZkVzUwUW5raUxDSm1hVzVrSWl3aVptbHVaRXhoYzNRaUxDSm1iM0pGWVdOb1VtbG5hSFFpTENKbmNtOTFjRUo1SWl3aWFXNTJiMnRsVFdGd0lpd2lhMlY1UW5raUxDSndZWEowYVhScGIyNGlMQ0p6YjNKMFFua2lMQ0ppWldadmNtVWlMQ0ppYVc1a0lpd2lZbWx1WkV0bGVTSXNJbVJsWW05MWJtTmxJaXdpYjNCMGFXOXVjeUlzSW14aGMzUkJjbWR6SWl3aWJHRnpkRlJvYVhNaUxDSnRZWGhYWVdsMElpd2lkR2x0WlhKSlpDSXNJbXhoYzNSRFlXeHNWR2x0WlNJc0lteGhjM1JKYm5admEyVlVhVzFsSWl3aWJHVmhaR2x1WnlJc0ltMWhlR2x1WnlJc0ltbHVkbTlyWlVaMWJtTWlMQ0owYVcxbElpd2ljMmh2ZFd4a1NXNTJiMnRsSWl3aWRHbHRaVk5wYm1ObFRHRnpkRU5oYkd3aUxDSjBhVzFsY2tWNGNHbHlaV1FpTENKMGNtRnBiR2x1WjBWa1oyVWlMQ0owYVcxbFYyRnBkR2x1WnlJc0luSmxiV0ZwYm1sdVoxZGhhWFFpTENKa1pXSnZkVzVqWldRaUxDSnBjMGx1ZG05cmFXNW5JaXdpYkdWaFpHbHVaMFZrWjJVaUxDSmpZVzVqWld3aUxDSm1iSFZ6YUNJc0ltUmxabVZ5SWl3aVpHVnNZWGtpTENKeVpYTnZiSFpsY2lJc0ltMWxiVzlwZW1Wa0lpd2lRMkZqYUdVaUxDSnVaV2RoZEdVaUxDSnZkbVZ5UVhKbmN5SXNJblJ5WVc1elptOXliWE1pTENKbWRXNWpjMHhsYm1kMGFDSXNJbkJoY25ScFlXd2lMQ0p3WVhKMGFXRnNVbWxuYUhRaUxDSnlaV0Z5WnlJc0ltZDBJaXdpWjNSbElpd2lhWE5GY25KdmNpSXNJbWx6U1c1MFpXZGxjaUlzSW1selRuVnRZbVZ5SWl3aWFYTlRkSEpwYm1jaUxDSnNkQ0lzSW14MFpTSXNJblJ2UVhKeVlYa2lMQ0p1WlhoMElpd2laRzl1WlNJc0ltbDBaWEpoZEc5eVZHOUJjbkpoZVNJc0luSmxiV0ZwYm1SbGNpSXNJblJ2VEdWdVozUm9JaXdpYVhOQ2FXNWhjbmtpTENKaGMzTnBaMjRpTENKaGMzTnBaMjVKYmlJc0ltRnpjMmxuYmtsdVYybDBhQ0lzSW1GemMybG5ibGRwZEdnaUxDSmhkQ0lzSW5CeWIzQnpTVzVrWlhnaUxDSndjbTl3YzB4bGJtZDBhQ0lzSW1SbFptRjFiSFJ6UkdWbGNDSXNJbTFsY21kbFYybDBhQ0lzSW1sdWRtVnlkQ0lzSW1sdWRtVnlkRUo1SWl3aWFXNTJiMnRsSWl3aWJXVnlaMlVpTENKdmJXbDBJaXdpWW1GelpWQnBZMnNpTENKd2FXTnJRbmtpTENKd2NtOXdJaXdpZEc5UVlXbHljeUlzSW5SdlVHRnBjbk5KYmlJc0ltTmhiV1ZzUTJGelpTSXNJbmR2Y21RaUxDSjBiMHh2ZDJWeVEyRnpaU0lzSW1OaGNHbDBZV3hwZW1VaUxDSjFjSEJsY2tacGNuTjBJaXdpYTJWaVlXSkRZWE5sSWl3aWJHOTNaWEpEWVhObElpd2liRzkzWlhKR2FYSnpkQ0lzSW5OdVlXdGxRMkZ6WlNJc0luTjBZWEowUTJGelpTSXNJblZ3Y0dWeVEyRnpaU0lzSW5SdlZYQndaWEpEWVhObElpd2ljR0YwZEdWeWJpSXNJbWhoYzFWdWFXTnZaR1ZYYjNKa0lpd2lkVzVwWTI5a1pWZHZjbVJ6SWl3aVlYTmphV2xYYjNKa2N5SXNJbUYwZEdWdGNIUWlMQ0ppYVc1a1FXeHNJaXdpYldWMGFHOWtUbUZ0WlhNaUxDSm1iRzkzSWl3aVpteHZkMUpwWjJoMElpd2liV1YwYUc5a0lpd2liV1YwYUc5a1QyWWlMQ0p0YVhocGJpSXNJbTkyWlhJaUxDSnZkbVZ5UlhabGNua2lMQ0p2ZG1WeVUyOXRaU0lzSW1KaGMyVlFjbTl3WlhKMGVVUmxaWEFpTENKeVlXNW5aU0lzSW5KaGJtZGxVbWxuYUhRaUxDSmhkV2RsYm1RaUxDSmhaR1JsYm1RaUxDSmthWFpwWkdVaUxDSmthWFpwWkdWdVpDSXNJbVJwZG1semIzSWlMQ0p0ZFd4MGFYQnNlU0lzSW0xMWJIUnBjR3hwWlhJaUxDSnRkV3gwYVhCc2FXTmhibVFpTENKeWIzVnVaQ0lzSW5OMVluUnlZV04wSWl3aWJXbHVkV1Z1WkNJc0luTjFZblJ5WVdobGJtUWlMQ0poWm5SbGNpSXNJbU5oYzNSQmNuSmhlU0lzSW1Ob2RXNXJJaXdpWTI5dGNHRmpkQ0lzSW1OdmJtTmhkQ0lzSW1OdmJtUWlMQ0pqYjI1bWIzSnRjeUlzSW1KaGMyVkRiMjVtYjNKdGN5SXNJbkJ5YjNCbGNuUnBaWE1pTENKamRYSnllU0lzSW1OMWNuSjVVbWxuYUhRaUxDSmtjbTl3SWl3aVpISnZjRkpwWjJoMElpd2laSEp2Y0ZKcFoyaDBWMmhwYkdVaUxDSmtjbTl3VjJocGJHVWlMQ0ptYVd4c0lpd2lZbUZ6WlVacGJHd2lMQ0ptYVd4MFpYSWlMQ0ptYkdGMFRXRndJaXdpWm14aGRFMWhjRVJsWlhBaUxDSm1iR0YwVFdGd1JHVndkR2dpTENKbWJHRjBkR1Z1UkdWbGNDSXNJbVpzWVhSMFpXNUVaWEIwYUNJc0ltWnNhWEFpTENKbWNtOXRVR0ZwY25NaUxDSm1kVzVqZEdsdmJuTWlMQ0ptZFc1amRHbHZibk5KYmlJc0ltbHVhWFJwWVd3aUxDSnRZWEJMWlhseklpd2liV0Z3Vm1Gc2RXVnpJaXdpYldGMFkyaGxjeUlzSW0xaGRHTm9aWE5RY205d1pYSjBlU0lzSW01MGFFRnlaeUlzSW05dGFYUkNlU0lzSW05dVkyVWlMQ0p2Y21SbGNrSjVJaXdpY0hKdmNHVnlkSGxQWmlJc0luQjFiR3hCYkd4Q2VTSXNJbkIxYkd4QmJHeFhhWFJvSWl3aWNtVnFaV04wSWl3aWNtVnRiM1psSWl3aWNtVnpkQ0lzSW5OaGJYQnNaVk5wZW1VaUxDSnpaWFJYYVhSb0lpd2ljMmgxWm1ac1pTSXNJbk52Y25SbFpGVnVhWEVpTENKemIzSjBaV1JWYm1seFFua2lMQ0p6WlhCaGNtRjBiM0lpTENKc2FXMXBkQ0lzSW5Od2NtVmhaQ0lzSW5SaGFXd2lMQ0owWVd0bElpd2lkR0ZyWlZKcFoyaDBJaXdpZEdGclpWSnBaMmgwVjJocGJHVWlMQ0owWVd0bFYyaHBiR1VpTENKMFlYQWlMQ0owYUhKdmRIUnNaU0lzSW5SdlVHRjBhQ0lzSW1selFYSnlUR2xyWlNJc0luVnVZWEo1SWl3aWRXNXBjU0lzSW5WdWFYRkNlU0lzSW5WdWFYRlhhWFJvSWl3aWRXNXpaWFFpTENKMWNHUmhkR1VpTENKMWNHUmhkR1ZYYVhSb0lpd2lkbUZzZFdWelNXNGlMQ0ozY21Gd0lpd2llbWx3VDJKcVpXTjBJaXdpZW1sd1QySnFaV04wUkdWbGNDSXNJbVZ1ZEhKcFpYTkpiaUlzSW1WNGRHVnVaQ0lzSW1WNGRHVnVaRmRwZEdnaUxDSmpiR0Z0Y0NJc0ltTnNiMjVsUkdWbGNDSXNJbU5zYjI1bFJHVmxjRmRwZEdnaUxDSmpiRzl1WlZkcGRHZ2lMQ0pqYjI1bWIzSnRjMVJ2SWl3aVpHVm1ZWFZzZEZSdklpd2laVzVrYzFkcGRHZ2lMQ0owWVhKblpYUWlMQ0p3YjNOcGRHbHZiaUlzSW1WelkyRndaVkpsWjBWNGNDSXNJbVYyWlhKNUlpd2labWx1WkV0bGVTSXNJbVpwYm1STVlYTjBTMlY1SWl3aVptOXlTVzRpTENKbWIzSkpibEpwWjJoMElpd2labTl5VDNkdUlpd2labTl5VDNkdVVtbG5hSFFpTENKcGJsSmhibWRsSWl3aVltRnpaVWx1VW1GdVoyVWlMQ0pwYzBKdmIyeGxZVzRpTENKcGMwVnNaVzFsYm5RaUxDSnBjMFZ0Y0hSNUlpd2lhWE5GY1hWaGJDSXNJbWx6UlhGMVlXeFhhWFJvSWl3aWFYTk5ZWFJqYUNJc0ltbHpUV0YwWTJoWGFYUm9JaXdpYVhOT1lVNGlMQ0pwYzA1aGRHbDJaU0lzSW1selRtbHNJaXdpYVhOT2RXeHNJaXdpYVhOVFlXWmxTVzUwWldkbGNpSXNJbWx6Vlc1a1pXWnBibVZrSWl3aWFYTlhaV0ZyVFdGd0lpd2lhWE5YWldGclUyVjBJaXdpYkdGemRFbHVaR1Y0VDJZaUxDSnpkSEpwWTNSTVlYTjBTVzVrWlhoUFppSXNJbTFoZUVKNUlpd2liV1ZoYmlJc0ltMWxZVzVDZVNJc0ltMXBia0o1SWl3aWMzUjFZazlpYW1WamRDSXNJbk4wZFdKVGRISnBibWNpTENKemRIVmlWSEoxWlNJc0ltNTBhQ0lzSW01dlEyOXVabXhwWTNRaUxDSndZV1FpTENKemRISk1aVzVuZEdnaUxDSndZV1JGYm1RaUxDSndZV1JUZEdGeWRDSXNJbkpoWkdsNElpd2labXh2WVhScGJtY2lMQ0owWlcxd0lpd2ljbVZrZFdObElpd2ljbVZrZFdObFVtbG5hSFFpTENKeVpYQmxZWFFpTENKellXMXdiR1VpTENKemIyMWxJaXdpYzI5eWRHVmtTVzVrWlhnaUxDSnpiM0owWldSSmJtUmxlRUo1SWl3aWMyOXlkR1ZrU1c1a1pYaFBaaUlzSW5OdmNuUmxaRXhoYzNSSmJtUmxlQ0lzSW5OdmNuUmxaRXhoYzNSSmJtUmxlRUo1SWl3aWMyOXlkR1ZrVEdGemRFbHVaR1Y0VDJZaUxDSnpkR0Z5ZEhOWGFYUm9JaXdpYzNWdElpd2ljM1Z0UW5raUxDSjBaVzF3YkdGMFpTSXNJbk5sZEhScGJtZHpJaXdpYVhORmMyTmhjR2x1WnlJc0ltbHpSWFpoYkhWaGRHbHVaeUlzSW1sdGNHOXlkSE5MWlhseklpd2lhVzF3YjNKMGMxWmhiSFZsY3lJc0luSmxSR1ZzYVcxcGRHVnljeUlzSW5OdmRYSmpaVlZTVENJc0ltVnpZMkZ3WlZaaGJIVmxJaXdpYVc1MFpYSndiMnhoZEdWV1lXeDFaU0lzSW1WelZHVnRjR3hoZEdWV1lXeDFaU0lzSW1WMllXeDFZWFJsVm1Gc2RXVWlMQ0owYVcxbGN5SXNJblJ2VEc5M1pYSWlMQ0owYjFOaFptVkpiblJsWjJWeUlpd2lkRzlWY0hCbGNpSXNJblJ5YVcwaUxDSjBjbWx0Ulc1a0lpd2lkSEpwYlZOMFlYSjBJaXdpZEhKMWJtTmhkR1VpTENKdmJXbHpjMmx2YmlJc0luTmxZWEpqYUNJc0luTjFZbk4wY21sdVp5SXNJbTVsZDBWdVpDSXNJblZ1WlhOallYQmxJaXdpZFc1cGNYVmxTV1FpTENKd2NtVm1hWGdpTENKbFlXTm9JaXdpWldGamFGSnBaMmgwSWl3aVptbHljM1FpTENKV1JWSlRTVTlPSWl3aWFYTkdhV3gwWlhJaUxDSjBZV3RsVG1GdFpTSXNJbVJ5YjNCT1lXMWxJaXdpWTJobFkydEpkR1Z5WVhSbFpTSXNJbWx6VkdGclpYSWlMQ0pzYjJSaGMyaEdkVzVqSWl3aWNtVjBWVzUzY21Gd2NHVmtJaXdpYVhOTVlYcDVJaXdpZFhObFRHRjZlU0lzSW1selNIbGljbWxrSWl3aWFYTlZibmR5WVhCd1pXUWlMQ0p2Ym14NVRHRjZlU0lzSW1Ob1lXbHVUbUZ0WlNJc0ltUnBjaUlzSW1selVtbG5hSFFpTENKMmFXVjNJaXdpWjJWMFZtbGxkeUlzSW1sMFpYSk1aVzVuZEdnaUxDSjBZV3RsUTI5MWJuUWlMQ0pwZEdWeVNXNWtaWGdpTENKamIyMXRhWFFpTENKM2NtRndjR1ZrSWl3aWRHOUtVMDlPSWl3aVpHVm1hVzVsSWl3aVlXMWtJbDBzSW0xaGNIQnBibWR6SWpvaVEwRlJSU3hYUVVkQkxFbEJRVWxCTEVWQlRVRkRMRVZCUVcxQ0xFbEJSMjVDUXl4RlFVRnJRaXhyUlVGRGJFSkRMRVZCUVd0Q0xITkNRVU5zUWtNc1JVRkJLMElzY1VSQlJ5OUNReXhGUVVGcFFpdzBRa0ZIYWtKRExFVkJRVzFDTEVsQlIyNUNReXhGUVVGakxIbENRVWRrUXl4RlFVRnJRaXhGUVVOc1FrTXNSVUZCYTBJc1JVRkRiRUpETEVWQlFYRkNMRVZCUjNKQ1F5eEZRVUYxUWl4RlFVTjJRa01zUlVGQmVVSXNSVUZIZWtKRExFVkJRV2xDTEVWQlEycENReXhGUVVGeFFpeEZRVU55UWtNc1JVRkJkMElzUlVGRGVFSkRMRVZCUVd0Q0xFVkJRMnhDUXl4RlFVRjNRaXhIUVVONFFrTXNSVUZCYjBJc1IwRkRjRUpETEVWQlFUQkNMRWRCUXpGQ1F5eEZRVUZuUWl4SlFVTm9Ra01zUlVGQmEwSXNTVUZEYkVKRExFVkJRV2xDTEVsQlIycENReXhGUVVGMVFpeEhRVU4yUWtNc1JVRkJlVUlzVFVGSGVrSkRMRVZCUVZrc1NVRkRXa01zUlVGQlZ5eEhRVWRZUXl4RlFVRnRRaXhGUVVOdVFrTXNSVUZCWjBJc1JVRkphRUpETEVWQlFWY3NSVUZCUVN4RlFVTllReXhGUVVGdFFpeHBRa0ZEYmtKRExFVkJRV01zZFVKQlEyUkRMRVZCUVUwc1NVRkhUa01zUlVGQmJVSXNWMEZEYmtKRExFVkJRV3RDUkN4RlFVRnRRaXhGUVVOeVEwVXNSVUZCZDBKR0xFbEJRWEZDTEVWQlJ6ZERSeXhKUVVORUxFMUJRVTlvUWl4SlFVTlFMRTlCUVZGUUxFbEJRMUlzVlVGQlYwTXNTVUZEV0N4UlFVRlRSU3hKUVVOVUxHRkJRV05ETEVsQlEyUXNUMEZCVVVzc1NVRkRVaXhWUVVGWFNpeEpRVU5ZTEdWQlFXZENReXhKUVVOb1FpeFJRVUZUUlN4SlFVbFNaMElzUlVGQlZTeHhRa0ZEVmtNc1JVRkJWeXhwUWtGRFdFTXNSVUZCVnl4NVFrRkRXRU1zUlVGQlZTeHRRa0ZEVmtNc1JVRkJWU3huUWtGRFZrTXNSVUZCV1N4M1FrRkRXa01zUlVGQlZ5eHBRa0ZEV0VNc1JVRkJWU3h2UWtGRFZrTXNSVUZCVXl3MlFrRkRWRU1zUlVGQlV5eGxRVU5VUXl4RlFVRlpMR3RDUVVOYVF5eEZRVUZWTEdkQ1FVTldReXhGUVVGWkxHdENRVVZhUXl4RlFVRlhMR2xDUVVOWVF5eEZRVUZaTEd0Q1FVTmFReXhGUVVGVExHVkJRMVJETEVWQlFWa3NhMEpCUTFwRExFZEJRVmtzYTBKQlExcERMRWRCUVdVc2NVSkJRMlpETEVkQlFXRXNiVUpCUTJKRExFZEJRV0VzYlVKQlJXSkRMRWRCUVdsQ0xIVkNRVU5xUWtNc1IwRkJZeXh2UWtGRFpFTXNSMEZCWVN4M1FrRkRZa01zUjBGQllTeDNRa0ZEWWtNc1IwRkJWU3h4UWtGRFZrTXNSMEZCVnl4elFrRkRXRU1zUjBGQlZ5eHpRa0ZEV0VNc1IwRkJWeXh6UWtGRFdFTXNSMEZCYTBJc05rSkJRMnhDUXl4SFFVRlpMSFZDUVVOYVF5eEhRVUZaTEhWQ1FVZGFReXhIUVVGMVFpeHBRa0ZEZGtKRExFZEJRWE5DTEhGQ1FVTjBRa01zUjBGQmQwSXNaME5CUjNoQ1F5eEhRVUZuUWl3MFFrRkRhRUpETEVkQlFXdENMRmRCUTJ4Q1F5eEhRVUZ0UWtNc1QwRkJUMGdzUjBGQlkwa3NVVUZEZUVORExFZEJRWEZDUml4UFFVRlBSaXhIUVVGblFrY3NVVUZITlVORkxFZEJRVmNzYlVKQlExaERMRWRCUVdFc2EwSkJRMkpETEVkQlFXZENMRzFDUVVkb1FrTXNSMEZCWlN4dFJFRkRaa01zUjBGQlowSXNVVUZEYUVKRExFZEJRV0VzYlVkQlRXSkRMRWRCUVdVc2MwSkJRMlpETEVkQlFXdENWaXhQUVVGUFV5eEhRVUZoVWl4UlFVZDBRMVVzUjBGQll5eFBRVWRrUXl4SFFVRmxMRXRCUjJaRExFZEJRV2RDTERSRFFVTm9Ra01zUjBGQlowSXNiME5CUTJoQ1F5eEhRVUZwUWl4UlFVZHFRa01zUjBGQll5dzBRMEZaWkVNc1IwRkJOa0lzYlVKQlJ6ZENReXhIUVVGbExGZEJUV1pETEVkQlFXVXNhME5CUjJaRExFZEJRVlVzVDBGSFZrTXNSMEZCWVN4eFFrRkhZa01zUjBGQllTeGhRVWRpUXl4SFFVRmxMRGhDUVVkbVF5eEhRVUZaTEdOQlIxcERMRWRCUVZjc2JVSkJSMWhETEVkQlFWVXNPRU5CUjFaRExFZEJRVmtzVDBGSFdrTXNSMEZCYjBJc2VVSkJUM0JDUXl4SFFVRmxReXhuUkVGVFprTXNSMEZCWlVNc09FOUJTV1pETEVkQlFWY3NiMEpCUTFoRExFZEJRVlVzU1VGQlRVZ3NSMEZCWlN4SlFVTXZRa2tzUjBGQlZTeEpRVUZOVGl4SFFVRmxMRWxCUXk5Q1R5eEhRVUZYTEU5QlExaERMRWRCUVZrc2IwSkJRMXBETEVkQlFWVXNPRUpCUTFaRExFZEJRVk1zYjBKQlFYVkNVaXhIUVVGbFN5eEhRV3hDT1VJc2NVVkJiVUpxUWtrc1IwRkJVeXd5UWtGRlZFTXNSMEZCWXl4eFFrRkRaRU1zUjBGQllTeHJRMEZEWWtNc1IwRkJZU3h4UTBGRFlrTXNSMEZCVlN3NFFrRkpWa01zUjBGQll5eE5RVUZSVUN4SFFVRlZMRWxCUVUxRExFZEJRVk1zU1VGREwwTlBMRWRCUVdNc1RVRkJVVVlzUjBGQlZTeEpRVUZOVEN4SFFVRlRMRWxCUnk5RFVTeEhRVnBoTEUxQlFWRmFMRWRCUVZVc1NVRkJUVXNzUjBGQlV5eEpRVmwwUWl4SlFVdDRRbEVzUjBGS1Z5eHZRa0ZKVVVRc1NVRklVQ3hwUWtGQmVVSk9MRWRCUVdGRExFZEJRVmxETEVsQlFWbE5MRXRCUVVzc1MwRkJUeXh4UWtGQmFVSkdMRWRCUVZjc1RVRkpiRWhITEVkQlFWVXNUMEZCVTJJc1IwRkJWMHNzUjBGQldVTXNTVUZCV1Uwc1MwRkJTeXhMUVVGUExFbEJRVTFFTEVkQlEzaEZSeXhIUVVGWExFOUJRVk5XTEVkQlFXTk9MRWRCUVZVc1NVRkJTMEVzUjBGQlUwOHNSMEZCV1VNc1IwRkJXVllzU1VGQlZXZENMRXRCUVVzc1MwRkJUeXhKUVVkNFIwY3NSMEZCVTNCRUxFOUJMMEpCTEU5QkswSmxMRXRCVFhoQ2NVUXNSMEZCWTNKRUxFOUJRVTl0UXl4SFFVRlRMRXRCUnpsQ2JVSXNSMEZCV1hSRUxFOUJRVTkzUXl4SFFVRlRMRTFCUVZGQkxFZEJRVk1zUzBGQlQxY3NSMEZCVjBnc1IwRkJUeXhMUVVkMFJVOHNSMEZCWjBKMlJDeFJRVU5zUWpSRExFZEJRVlVzU1VGQlRVNHNSMEZCVlN4eFEwRkJhVU5LTEVkQlFWTlZMRWRCUVZNc1MwRkJTMHNzUzBGQlN5eExRVUZQTEVsQlF6bEdTQ3hIUVVGakxIRkRRVUZwUTFvc1IwRkJVMVVzUjBGQlZVTXNSMEZCWVN4TFFVRkxTU3hMUVVGTExFdEJRVThzU1VGRGFFZE1MRWRCUVZVc1NVRkJUVU1zUjBGQll5eHBRMEZET1VKRUxFZEJRVlVzYVVOQmRFSkxMRzFFUVVSQkxHMUVRVEJDWmxJc1IwRkRRV01zU1VGRFFVUXNTMEZCU3l4TFFVRk5MRXRCUjFSUExFZEJRV1Y0UkN4UFFVRlBMREJDUVVFclFqWkNMRWRCTTBSNFF5eHRRa0U0UkdJMFFpeEhRVUZ0UWl4eFJVRkhia0pETEVsQlEwWXNVVUZCVXl4VFFVRlZMRmRCUVZrc1QwRkJVU3hSUVVGVExHVkJRV2RDTEdWQlEyaEZMRmRCUVZrc1dVRkJZU3hoUVVGakxHRkJRV01zVFVGQlR5eFBRVUZSTEZOQlEzQkZMRlZCUVZjc1UwRkJWU3hOUVVGUExGTkJRVlVzVTBGQlZTeFpRVUZoTEdGQlF6ZEVMRzlDUVVGeFFpeGpRVUZsTEdOQlFXVXNWVUZEYmtRc1NVRkJTeXhsUVVGblFpeFhRVUZaTEZkQlFWa3NZMEZKTTBORExFbEJRVzFDTEVWQlIyNUNReXhOUVVOS1FTeEhRVUZsTTBVc1NVRkJZekpGTEVkQlFXVXhSU3hKUVVNMVF6QkZMRWRCUVdWNlJTeEpRVUZYZVVVc1IwRkJaWGhGTEVsQlEzcERkMFVzUjBGQlpYWkZMRWxCUVZsMVJTeEhRVUZsZEVVc1NVRkRNVU56UlN4SFFVRmxja1VzU1VGQmJVSnhSU3hIUVVGbGNFVXNTVUZEYWtSdlJTeEhRVUZsYmtVc1MwRkJZU3hGUVVNMVFtMUZMRWRCUVdWc1J5eEhRVUZYYTBjc1IwRkJaV3BITEVkQlEzcERhVWNzUjBGQlpUZEZMRWxCUVd0Q05rVXNSMEZCWlM5R0xFZEJRMmhFSzBZc1IwRkJaVFZGTEVsQlFXVTBSU3hIUVVGbE9VWXNSMEZETjBNNFJpeEhRVUZsTlVZc1IwRkJXVFJHTEVkQlFXVXpSaXhIUVVNeFF6SkdMRWRCUVdWNlJpeEhRVUZWZVVZc1IwRkJaWGhHTEVkQlEzaERkMFlzUjBGQlpYUkdMRWRCUVdGelJpeEhRVUZsY0VZc1IwRkRNME52Uml4SFFVRmxia1lzUjBGQlZXMUdMRWRCUVdWc1JpeEhRVU40UTJ0R0xFZEJRV1V2UlN4TFFVRmpMRVZCUnpkQ0xFbEJRVWxuUml4TlFVTktRU3hIUVVGamJrY3NSMEZCVjIxSExFZEJRV05zUnl4SFFVTjJRMnRITEVkQlFXTTVSU3hKUVVGclFqaEZMRWRCUVdNM1JTeEpRVU01UXpaRkxFZEJRV05vUnl4SFFVRlhaMGNzUjBGQll5OUdMRWRCUTNaREswWXNSMEZCWXpWRkxFbEJRV00wUlN4SFFVRmpNMFVzU1VGRE1VTXlSU3hIUVVGak1VVXNTVUZCVnpCRkxFZEJRV042UlN4SlFVTjJRM2xGTEVkQlFXTjRSU3hKUVVGWmQwVXNSMEZCWXpGR0xFZEJRM2hETUVZc1IwRkJZM3BHTEVkQlFXRjVSaXhIUVVGamRrWXNSMEZEZWtOMVJpeEhRVUZqY2tZc1IwRkJZWEZHTEVkQlFXTndSaXhIUVVONlEyOUdMRWRCUVdOdVJpeEhRVUZoYlVZc1IwRkJZMnhHTEVsQlEzcERhMFlzUjBGQlkzWkZMRWxCUVZsMVJTeEhRVUZqZEVVc1NVRkRlRU56UlN4SFFVRmpja1VzU1VGQllYRkZMRWRCUVdOd1JTeExRVUZoTEVWQlEzUkViMFVzUjBGQll6ZEdMRWRCUVZrMlJpeEhRVUZqTlVZc1IwRkRlRU0wUml4SFFVRmphRVlzUzBGQll5eEZRVWMxUWl4SlFUUkZTV2xHTEVsQlEwWkRMRXRCUVUwc1MwRkRUa01zU1VGQlN5eEpRVU5NUXl4TFFVRk5MRWxCUTA1RExFdEJRVTBzU1VGRFRrTXNVMEZCVlN4UlFVTldReXhUUVVGVkxGTkJTVkpETEVkQlFXbENReXhYUVVOcVFrTXNSMEZCWlVNc1UwRkhaa01zUjBGQk9FSXNhVUpCUVZaRExGRkJRWE5DUVN4UlFVRlZRU3hQUVVGUFF5eFRRVUZYUVN4UlFVRlZSQ3hQUVVkb1JrVXNSMEZCTUVJc2FVSkJRVkpETEUxQlFXOUNRU3hOUVVGUlFTeExRVUZMUml4VFFVRlhRU3hSUVVGVlJTeExRVWQ0UlVNc1IwRkJUMHdzU1VGQlkwY3NTVUZCV1Vjc1UwRkJVeXhqUVVGVVFTeEhRVWRxUTBNc1IwRkJaME1zYVVKQlFWaERMRk5CUVhWQ1FTeFZRVUZaUVN4UlFVRlJReXhWUVVGWlJDeFJRVWMxUlVVc1IwRkJZVWdzU1VGQlowTXNhVUpCUVZaSkxGRkJRWE5DUVN4VFFVRlhRU3hQUVVGUFJpeFZRVUZaUlN4UFFVZDJSa01zUjBGQlowSkdMRWxCUVdOQkxFZEJRVmRHTEZWQlFWbEVMRWRCUjNKRVRTeEhRVUZqUkN4SlFVRnBRbG9zUjBGQlYyTXNVVUZITVVORExFZEJRVmtzVjBGRFpDeEpRVVZGTEVsQlFVbERMRVZCUVZGT0xFbEJRV05CTEVkQlFWZFBMRk5CUVZkUUxFZEJRVmRQTEZGQlFWRXNVVUZCVVVRc1RVRkZNMFVzVDBGQlNVRXNSMEZMUjBnc1NVRkJaVUVzUjBGQldVc3NVMEZCVjB3c1IwRkJXVXNzVVVGQlVTeFJRVU5xUlN4TlFVRlBReXhMUVZoSkxFZEJaVmhETEVkQlFXOUNUQ3hKUVVGWlFTeEhRVUZUVFN4alFVTjZRME1zUjBGQllWQXNTVUZCV1VFc1IwRkJVMUVzVDBGRGJFTkRMRWRCUVZsVUxFbEJRVmxCTEVkQlFWTlZMRTFCUTJwRFF5eEhRVUZsV0N4SlFVRlpRU3hIUVVGVFdTeFRRVU53UTBNc1IwRkJXV0lzU1VGQldVRXNSMEZCVTJNc1RVRkRha05ETEVkQlFXMUNaaXhKUVVGWlFTeEhRVUZUWjBJc1lVRmpOVU1zVTBGQlUwTXNSMEZCVFVNc1JVRkJUVU1zUlVGQlUwTXNSMEZETlVJc1QwRkJVVUVzUlVGQlMwTXNVVUZEV0N4TFFVRkxMRVZCUVVjc1QwRkJUMGdzUlVGQlMwa3NTMEZCUzBnc1IwRkRla0lzUzBGQlN5eEZRVUZITEU5QlFVOUVMRVZCUVV0SkxFdEJRVXRJTEVWQlFWTkRMRVZCUVVzc1NVRkRka01zUzBGQlN5eEZRVUZITEU5QlFVOUdMRVZCUVV0SkxFdEJRVXRJTEVWQlFWTkRMRVZCUVVzc1IwRkJTVUVzUlVGQlN5eEpRVU5vUkN4TFFVRkxMRVZCUVVjc1QwRkJUMFlzUlVGQlMwa3NTMEZCUzBnc1JVRkJVME1zUlVGQlN5eEhRVUZKUVN4RlFVRkxMRWRCUVVsQkxFVkJRVXNzU1VGRk0wUXNUMEZCVDBZc1JVRkJTMFFzVFVGQlRVVXNSVUZCVTBNc1IwRmhOMElzVTBGQlUwY3NSMEZCWjBKRExFVkJRVTlETEVWQlFWRkRMRVZCUVZWRExFZEJTV2hFTEVsQlNFRXNTVUZCU1VNc1IwRkJVeXhGUVVOVVVDeEZRVUZyUWl4TlFVRlVSeXhGUVVGblFpeEZRVUZKUVN4RlFVRk5TQ3hUUVVVNVFrOHNSVUZCVVZBc1IwRkJVU3hEUVVOMlFpeEpRVUZKVVN4RlFVRlJUQ3hGUVVGTlNTeEhRVU5zUWtnc1JVRkJUMFVzUlVGQllVVXNSVUZCVDBnc1JVRkJVMGNzUjBGQlVVd3NSMEZGT1VNc1QwRkJUMGNzUlVGWlZDeFRRVUZUUnl4SFFVRlZUaXhGUVVGUFJTeEhRVWw0UWl4SlFVaEJMRWxCUVVsRkxFZEJRVk1zUlVGRFZGQXNSVUZCYTBJc1RVRkJWRWNzUlVGQlowSXNSVUZCU1VFc1JVRkJUVWdzVTBGRk9VSlBMRVZCUVZGUUxFbEJRemhDTEVsQlFYcERTeXhGUVVGVFJpeEZRVUZOU1N4SFFVRlJRU3hGUVVGUFNpeExRVWx3UXl4UFFVRlBRU3hGUVZsVUxGTkJRVk5QTEVkQlFXVlFMRVZCUVU5RkxFZEJSemRDTEVsQlJrRXNTVUZCU1V3c1JVRkJhMElzVFVGQlZFY3NSVUZCWjBJc1JVRkJTVUVzUlVGQlRVZ3NUMEZGYUVOQkxFMUJRekJETEVsQlFUTkRTeXhGUVVGVFJpeEZRVUZOU0N4SFFVRlRRU3hGUVVGUlJ5eExRVWwwUXl4UFFVRlBRU3hGUVdGVUxGTkJRVk5STEVkQlFWZFNMRVZCUVU5VExFZEJTWHBDTEVsQlNFRXNTVUZCU1V3c1IwRkJVeXhGUVVOVVVDeEZRVUZyUWl4TlFVRlVSeXhGUVVGblFpeEZRVUZKUVN4RlFVRk5TQ3hUUVVVNVFrOHNSVUZCVVZBc1IwRkRaaXhKUVVGTFdTeEZRVUZWVkN4RlFVRk5TU3hIUVVGUlFTeEZRVUZQU2l4SFFVTnNReXhQUVVGUExFVkJSMWdzVDBGQlR5eEZRVmxVTEZOQlFWTlZMRWRCUVZsV0xFVkJRVTlUTEVkQlRURkNMRWxCVEVFc1NVRkJTVXdzUjBGQlV5eEZRVU5VVUN4RlFVRnJRaXhOUVVGVVJ5eEZRVUZuUWl4RlFVRkpRU3hGUVVGTlNDeFBRVU51UTJNc1JVRkJWeXhGUVVOWVF5eFBRVVZMVWl4RlFVRlJVQ3hIUVVGUkxFTkJRM1pDTEVsQlFVbFJMRVZCUVZGTUxFVkJRVTFKTEVkQlEyUkxMRVZCUVZWS0xFVkJRVTlFTEVWQlFVOUtMRXRCUXpGQ1dTeEZRVUZQUkN4TFFVRmpUaXhIUVVkNlFpeFBRVUZQVHl4RlFWbFVMRk5CUVZORExFZEJRV05pTEVWQlFVOUxMRWRCUlRWQ0xGTkJSSE5DTEUxQlFWUk1MRVZCUVdkQ0xFVkJRVWxCTEVWQlFVMUlMRk5CUTNCQ2FVSXNSMEZCV1dRc1JVRkJUMHNzUlVGQlR5eEpRVUZOTEVWQldYSkVMRk5CUVZOVkxFZEJRV3RDWml4RlFVRlBTeXhGUVVGUFZ5eEhRVWwyUXl4SlFVaEJMRWxCUVVsYUxFZEJRVk1zUlVGRFZGQXNSVUZCYTBJc1RVRkJWRWNzUlVGQlowSXNSVUZCU1VFc1JVRkJUVWdzVTBGRk9VSlBMRVZCUVZGUUxFZEJRMllzUjBGQlNXMUNMRVZCUVZkWUxFVkJRVTlNTEVWQlFVMUpMRWxCUXpGQ0xFOUJRVThzUlVGSFdDeFBRVUZQTEVWQldWUXNVMEZCVTJFc1IwRkJVMnBDTEVWQlFVOUZMRWRCUzNaQ0xFbEJTa0VzU1VGQlNVVXNSMEZCVXl4RlFVTlVVQ3hGUVVGclFpeE5RVUZVUnl4RlFVRm5RaXhGUVVGSlFTeEZRVUZOU0N4UFFVTnVRMlVzUlVGQlUwMHNUVUZCVFhKQ0xFdEJSVlpQTEVWQlFWRlFMRWRCUTJabExFVkJRVTlTTEVkQlFWTkdMRVZCUVZOR0xFVkJRVTFKTEVkQlFWRkJMRVZCUVU5S0xFZEJSV2hFTEU5QlFVOVpMRVZCVjFRc1UwRkJVMDhzUjBGQlZXNUNMRVZCUVU5dlFpeEhRVXQ0UWl4SlFVcEJMRWxCUVVsb1FpeEhRVUZUTEVWQlExUlFMRVZCUVZOMVFpeEZRVUZQZGtJc1QwRkRhRUozUWl4RlFVRlRja0lzUlVGQlRVZ3NVMEZGVms4c1JVRkJVVkFzUjBGRFprY3NSVUZCVFhGQ0xFVkJRVk5xUWl4SFFVRlRaMElzUlVGQlQyaENMRWRCUldwRExFOUJRVTlLTEVWQlpWUXNVMEZCVTNOQ0xFZEJRVmwwUWl4RlFVRlBSU3hGUVVGVlF5eEZRVUZoYjBJc1IwRkRha1FzU1VGQlNXNUNMRWRCUVZNc1JVRkRWRkFzUlVGQmEwSXNUVUZCVkVjc1JVRkJaMElzUlVGQlNVRXNSVUZCVFVnc1QwRkxka01zU1VGSVNUQkNMRWRCUVdFeFFpeEpRVU5tVFN4RlFVRmpTQ3hKUVVGUlNTeE5RVVZtUVN4RlFVRlJVQ3hIUVVObVRTeEZRVUZqUkN4RlFVRlRReXhGUVVGaFNDeEZRVUZOU1N4SFFVRlJRU3hGUVVGUFNpeEhRVVV6UkN4UFFVRlBSeXhGUVdWVUxGTkJRVk54UWl4SFFVRnBRbmhDTEVWQlFVOUZMRVZCUVZWRExFVkJRV0Z2UWl4SFFVTjBSQ3hKUVVGSk1VSXNSVUZCYTBJc1RVRkJWRWNzUlVGQlowSXNSVUZCU1VFc1JVRkJUVWdzVDBGSmRrTXNTVUZJU1RCQ0xFZEJRV0V4UWl4SlFVTm1UU3hGUVVGalNDeEpRVUZSU0N4SlFVVnFRa0VzUzBGRFRFMHNSVUZCWTBRc1JVRkJVME1zUlVGQllVZ3NSVUZCVFVnc1IwRkJVMEVzUlVGQlVVY3NSMEZGTjBRc1QwRkJUMGNzUlVGaFZDeFRRVUZUYzBJc1IwRkJWWHBDTEVWQlFVOVRMRWRCU1hoQ0xFbEJTRUVzU1VGQlNVd3NSMEZCVXl4RlFVTlVVQ3hGUVVGclFpeE5RVUZVUnl4RlFVRm5RaXhGUVVGSlFTeEZRVUZOU0N4VFFVVTVRazhzUlVGQlVWQXNSMEZEWml4SFFVRkpXU3hGUVVGVlZDeEZRVUZOU1N4SFFVRlJRU3hGUVVGUFNpeEhRVU5xUXl4UFFVRlBMRVZCUjFnc1QwRkJUeXhGUVZWVUxFbEJRVWt3UWl4SFFVRlpReXhIUVVGaExGVkJiVU0zUWl4VFFVRlRReXhIUVVGWlF5eEZRVUZaY0VJc1JVRkJWM0ZDTEVkQlF6RkRMRWxCUVVsc1FpeEZRVTlLTEU5QlRrRnJRaXhGUVVGVFJDeEZRVUZaTEZOQlFWTjRRaXhGUVVGUE1FSXNSVUZCUzBZc1IwRkRlRU1zUjBGQlNYQkNMRVZCUVZWS0xFVkJRVTh3UWl4RlFVRkxSaXhIUVVWNFFpeFBRVVJCYWtJc1JVRkJVMjFDTEVkQlEwWXNTVUZIU201Q0xFVkJZMVFzVTBGQlUyOUNMRWRCUVdOb1F5eEZRVUZQVXl4RlFVRlhkMElzUlVGQlYwTXNSMEZKYkVRc1NVRklRU3hKUVVGSmNrTXNSVUZCVTBjc1JVRkJUVWdzVDBGRFprOHNSVUZCVVRaQ0xFZEJRV0ZETEVWQlFWa3NSMEZCU3l4SFFVVnNRMEVzUlVGQldUbENMRTFCUVZsQkxFVkJRVkZRTEVkQlEzUkRMRWRCUVVsWkxFVkJRVlZVTEVWQlFVMUpMRWRCUVZGQkxFVkJRVTlLTEVkQlEycERMRTlCUVU5SkxFVkJSMWdzVDBGQlVTeEZRVmxXTEZOQlFWTlZMRWRCUVZsa0xFVkJRVTlMTEVWQlFVODBRaXhIUVVOcVF5eFBRVUZQTlVJc1IwRkJWVUVzUlVGcFpHNUNMRk5CUVhWQ1RDeEZRVUZQU3l4RlFVRlBORUlzUjBGRGJrTXNTVUZCU1RkQ0xFVkJRVkUyUWl4RlFVRlpMRVZCUTNCQ2NFTXNSVUZCVTBjc1JVRkJUVWdzVDBGRmJrSXNUMEZCVTA4c1JVRkJVVkFzUjBGRFppeEhRVUZKUnl4RlFVRk5TU3hMUVVGWFF5eEZRVU51UWl4UFFVRlBSQ3hGUVVkWUxFOUJRVkVzUlVGNlpFb3JRaXhEUVVGamJrTXNSVUZCVDBzc1JVRkJUelJDTEVkQlF6VkNSQ3hIUVVGamFFTXNSVUZCVDI5RExFZEJRVmRJTEVkQllYUkRMRk5CUVZOSkxFZEJRV2RDY2tNc1JVRkJUMHNzUlVGQlR6UkNMRVZCUVZkcVFpeEhRVWxvUkN4SlFVaEJMRWxCUVVsYUxFVkJRVkUyUWl4RlFVRlpMRVZCUTNCQ2NFTXNSVUZCVTBjc1JVRkJUVWdzVTBGRlZrOHNSVUZCVVZBc1IwRkRaaXhIUVVGSmJVSXNSVUZCVjJoQ0xFVkJRVTFKTEVkQlFWRkRMRWRCUXpOQ0xFOUJRVTlFTEVWQlIxZ3NUMEZCVVN4RlFWVldMRk5CUVZOblF5eEhRVUZWTDBJc1IwRkRha0lzVDBGQlQwRXNSMEZCVlVFc1JVRlpia0lzVTBGQlUybERMRWRCUVZOMFF5eEZRVUZQUlN4SFFVTjJRaXhKUVVGSlRDeEZRVUZyUWl4TlFVRlVSeXhGUVVGblFpeEZRVUZKUVN4RlFVRk5TQ3hQUVVOMlF5eFBRVUZQUVN4RlFVRlZNRU1zUjBGQlVYWkRMRVZCUVU5RkxFZEJRVmxNTEVWQlFWVjRTaXhGUVZWNFJDeFRRVUZUYzB3c1IwRkJZVWtzUjBGRGNFSXNUMEZCVHl4VFFVRlRVeXhIUVVOa0xFOUJRV2xDTEUxQlFWWkJMRVZCUVdsQ2JrOHNSVUZCV1cxUExFVkJRVTlVTEVsQlZ5OURMRk5CUVZOVkxFZEJRV1ZFTEVkQlEzUkNMRTlCUVU4c1UwRkJVMVFzUjBGRFpDeFBRVUZwUWl4TlFVRldVeXhGUVVGcFFtNVBMRVZCUVZsdFR5eEZRVUZQVkN4SlFXbENMME1zVTBGQlUxY3NSMEZCVjJJc1JVRkJXVE5DTEVWQlFWVkRMRVZCUVdGdlFpeEZRVUZYVHl4SFFVMW9SU3hQUVV4QlFTeEZRVUZUUkN4RlFVRlpMRk5CUVZONFFpeEZRVUZQUkN4RlFVRlBlVUlzUjBGRE1VTXhRaXhGUVVGamIwSXNSMEZEVkVFc1IwRkJXU3hGUVVGUGJFSXNSMEZEY0VKSUxFVkJRVk5ETEVWQlFXRkZMRVZCUVU5RUxFVkJRVTk1UWl4TFFVVnVRekZDTEVWQlowTlVMRk5CUVZOdlF5eEhRVUZSZGtNc1JVRkJUMFVzUjBGTGRFSXNTVUZLUVN4SlFVRkpWU3hGUVVOQlVpeEhRVUZUTEVWQlExUlFMRVZCUVZOSExFVkJRVTFJTEZOQlJWWlBMRVZCUVZGUUxFZEJRVkVzUTBGRGRrSXNTVUZCU1RoRExFVkJRVlY2UXl4RlFVRlRSaXhGUVVGTlNTeEpRVU42UW5WRExFbEJRVmwwVHl4SlFVTmtkVTBzUlVGQlUwRXNTVUZCVjNaTkxFVkJRVmx6VHl4RlFVRlhMMElzUlVGQlV5dENMRWRCUjNoRUxFOUJRVTh2UWl4RlFWbFVMRk5CUVZOblF5eEhRVUZWUXl4RlFVRkhNME1zUjBGSmNFSXNTVUZJUVN4SlFVRkpSU3hIUVVGVExFVkJRMVJSTEVWQlFWTk5MRTFCUVUweVFpeExRVVZXZWtNc1JVRkJVWGxETEVkQlEyWnFReXhGUVVGUFVpeEhRVUZUUml4RlFVRlRSU3hIUVVVelFpeFBRVUZQVVN4RlFYbENWQ3hUUVVGVGEwTXNSMEZCVTBNc1IwRkRhRUlzVDBGQlQwRXNSVUZEU0VFc1JVRkJUME1zVFVGQlRTeEZRVUZIUXl4SFFVRm5Ra1lzUjBGQlZTeEhRVUZIUnl4UlFVRlJka29zUjBGQllTeEpRVU5zUlc5S0xFVkJWVTRzVTBGQlUwa3NSMEZCVlhwRUxFZEJRMnBDTEU5QlFVOHNVMEZCVTFjc1IwRkRaQ3hQUVVGUFdDeEZRVUZMVnl4SlFXTm9RaXhUUVVGVEswTXNSMEZCVjFvc1JVRkJVV0VzUjBGRE1VSXNUMEZCVDNCRExFZEJRVk52UXl4RlFVRlBMRk5CUVZOMFFpeEhRVU01UWl4UFFVRlBVeXhGUVVGUFZDeExRVmxzUWl4VFFVRlRkVUlzUjBGQlUwTXNSVUZCVDNoQ0xFZEJRM1pDTEU5QlFVOTNRaXhGUVVGTlF5eEpRVUZKZWtJc1IwRlpia0lzVTBGQlV6QkNMRWRCUVdkQ1F5eEZRVUZaUXl4SFFVbHVReXhKUVVoQkxFbEJRVWwyUkN4SFFVRlRMRVZCUTFSUUxFVkJRVk0yUkN4RlFVRlhOMFFzVTBGRlprOHNSVUZCVVZBc1IwRkJWV2xDTEVkQlFWazJReXhGUVVGWlJDeEZRVUZYZEVRc1IwRkJVU3hKUVVGTkxFbEJRelZGTEU5QlFVOUJMRVZCV1ZRc1UwRkJVM2RFTEVkQlFXTkdMRVZCUVZsRExFZEJSMnBETEVsQlJrRXNTVUZCU1haRUxFVkJRVkZ6UkN4RlFVRlhOMFFzVDBGRmFFSlBMRXRCUVZkVkxFZEJRVmsyUXl4RlFVRlpSQ3hGUVVGWGRFUXNSMEZCVVN4SlFVRk5MRWxCUTI1RkxFOUJRVTlCTEVWQkswSlVMRWxCUVVsNVJDeEhRVUZsY0VJc1NVRXZkMEpxUW5GQ0xFbEJRVkVzU1VGQlRVTXNTVUZCVVN4SlFVRkxReXhKUVVGUkxFbEJRVXRETEVsQlFWRXNTVUZCUzBNc1NVRkJVU3hKUVVGTFF5eEpRVUZSTEVsQlF6RkZReXhKUVVGUkxFbEJRVTFETEVsQlFWRXNTVUZCUzBNc1NVRkJVU3hKUVVGTFF5eEpRVUZSTEVsQlFVdERMRWxCUVZFc1NVRkJTME1zU1VGQlVTeEpRVU14UlVNc1NVRkJVU3hKUVVGTlF5eEpRVUZSTEVsQlEzUkNReXhKUVVGUkxFbEJRVTFETEVsQlFWRXNTVUZEZEVKRExFbEJRVkVzU1VGQlRVTXNTVUZCVVN4SlFVRkxReXhKUVVGUkxFbEJRVXRETEVsQlFWRXNTVUZEYUVSRExFbEJRVkVzU1VGQlRVTXNTVUZCVVN4SlFVRkxReXhKUVVGUkxFbEJRVXRETEVsQlFWRXNTVUZEYUVSRExFbEJRVkVzU1VGQlRVTXNTVUZCVVN4SlFVRkxReXhKUVVGUkxFbEJRVXRETEVsQlFWRXNTVUZEYUVSRExFbEJRVkVzU1VGQlRVTXNTVUZCVVN4SlFVRkxReXhKUVVGUkxFbEJRVXRETEVsQlFWRXNTVUZEYUVSRExFbEJRVkVzU1VGQlRVTXNTVUZCVVN4SlFVTjBRa01zU1VGQlVTeEpRVUZOUXl4SlFVRlJMRWxCUVV0RExFbEJRVkVzU1VGQlMwTXNTVUZCVVN4SlFVRkxReXhKUVVGUkxFbEJRVXRETEVsQlFWRXNTVUZETVVWRExFbEJRVkVzU1VGQlRVTXNTVUZCVVN4SlFVRkxReXhKUVVGUkxFbEJRVXRETEVsQlFWRXNTVUZCUzBNc1NVRkJVU3hKUVVGTFF5eEpRVUZSTEVsQlF6RkZReXhKUVVGUkxFbEJRVTFETEVsQlFWRXNTVUZCUzBNc1NVRkJVU3hKUVVGTFF5eEpRVUZSTEVsQlEyaEVReXhKUVVGUkxFbEJRVTFETEVsQlFWRXNTVUZCUzBNc1NVRkJVU3hKUVVGTFF5eEpRVUZSTEVsQlEyaEVReXhKUVVGUkxFbEJRVTFETEVsQlFWRXNTVUZCUzBNc1NVRkJVU3hKUVVOdVEwTXNTVUZCVVN4TFFVRk5ReXhKUVVGUkxFdEJRM1JDUXl4SlFVRlJMRXRCUVUxRExFbEJRVkVzUzBGRGRFSkRMRWxCUVZFc1MwRkZVa01zU1VGQlZTeEpRVUZOUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGRGVrTkRMRWxCUVZVc1NVRkJUVU1zU1VGQlZTeEpRVUZMUXl4SlFVRlZMRWxCUTNwRFF5eEpRVUZWTEVsQlFVMURMRWxCUVZVc1NVRkJTME1zU1VGQlZTeEpRVUZMUXl4SlFVRlZMRWxCUTNoRVF5eEpRVUZWTEVsQlFVMURMRWxCUVZVc1NVRkJTME1zU1VGQlZTeEpRVUZMUXl4SlFVRlZMRWxCUTNoRVF5eEpRVUZWTEVsQlFVMURMRWxCUVZVc1NVRkJTME1zU1VGQlZTeEpRVUZMUXl4SlFVRlZMRWxCUTNoRVF5eEpRVUZWTEVsQlFVMURMRWxCUVZVc1NVRkJTME1zU1VGQlZTeEpRVUZMUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGRGRrVkRMRWxCUVZVc1NVRkJUVU1zU1VGQlZTeEpRVUZMUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGQlMwTXNTVUZCVlN4SlFVTjJSVU1zU1VGQlZTeEpRVUZOUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGQlMwTXNTVUZCVlN4SlFVTjRSRU1zU1VGQlZTeEpRVUZOUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGQlMwTXNTVUZCVlN4SlFVTjRSRU1zU1VGQlZTeEpRVUZOUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGQlMwTXNTVUZCVlN4SlFVTjRSRU1zU1VGQlZTeEpRVUZOUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGQlMwTXNTVUZCVlN4SlFVRkxReXhKUVVGVkxFbEJRM1pGUXl4SlFVRlZMRWxCUVUxRExFbEJRVlVzU1VGQlMwTXNTVUZCVlN4SlFVRkxReXhKUVVGVkxFbEJRVXRETEVsQlFWVXNTVUZEZGtWRExFbEJRVlVzU1VGQlRVTXNTVUZCVlN4SlFVTXhRa01zU1VGQlZTeEpRVUZOUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGRGVrTkRMRWxCUVZVc1NVRkJUVU1zU1VGQlZTeEpRVUZMUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGQlMwTXNTVUZCVlN4SlFVTjJSVU1zU1VGQlZTeEpRVUZOUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGQlMwTXNTVUZCVlN4SlFVRkxReXhKUVVGVkxFbEJRM1pGUXl4SlFVRlZMRWxCUVUxRExFbEJRVlVzU1VGQlMwTXNTVUZCVlN4SlFVRkxReXhKUVVGVkxFbEJRM2hFUXl4SlFVRlZMRWxCUVUxRExFbEJRVlVzU1VGQlMwTXNTVUZCVlN4SlFVRkxReXhKUVVGVkxFbEJRM2hFUXl4SlFVRlZMRWxCUVUxRExFbEJRVlVzU1VGQlMwTXNTVUZCVlN4SlFVTjZRME1zU1VGQlZTeEpRVUZOUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGRGVrTkRMRWxCUVZVc1NVRkJUVU1zU1VGQlZTeEpRVUZMUXl4SlFVRlZMRWxCUTNwRFF5eEpRVUZWTEVsQlFVMURMRWxCUVZVc1NVRkJTME1zU1VGQlZTeEpRVU42UTBNc1NVRkJWU3hKUVVGTlF5eEpRVUZWTEVsQlFVdERMRWxCUVZVc1NVRkJTME1zU1VGQlZTeEpRVU40UkVNc1NVRkJWU3hKUVVGTlF5eEpRVUZWTEVsQlFVdERMRWxCUVZVc1NVRkJTME1zU1VGQlZTeEpRVU40UkVNc1NVRkJWU3hKUVVGTlF5eEpRVUZWTEVsQlFVdERMRWxCUVZVc1NVRkRla05ETEVsQlFWVXNTVUZCVFVNc1NVRkJWU3hKUVVGTFF5eEpRVUZWTEVsQlEzcERReXhKUVVGVkxFbEJRVTFETEVsQlFWVXNTVUZCUzBNc1NVRkJWU3hKUVVGTFF5eEpRVUZWTEVsQlFVdERMRWxCUVZVc1NVRkJTME1zU1VGQlZTeEpRVU4wUmtNc1NVRkJWU3hKUVVGTlF5eEpRVUZWTEVsQlFVdERMRWxCUVZVc1NVRkJTME1zU1VGQlZTeEpRVUZMUXl4SlFVRlZMRWxCUVV0RExFbEJRVlVzU1VGRGRFWkRMRWxCUVZVc1NVRkJUVU1zU1VGQlZTeEpRVU14UWtNc1NVRkJWU3hKUVVGTlF5eEpRVUZWTEVsQlFVdERMRWxCUVZVc1NVRkRla05ETEVsQlFWVXNTVUZCVFVNc1NVRkJWU3hKUVVGTFF5eEpRVUZWTEVsQlEzcERReXhKUVVGVkxFbEJRVTFETEVsQlFWVXNTVUZCUzBNc1NVRkJWU3hKUVVONlEwTXNTVUZCVlN4TFFVRk5ReXhKUVVGVkxFdEJRekZDUXl4SlFVRlZMRXRCUVUxRExFbEJRVlVzUzBGRE1VSkRMRWxCUVZVc1MwRkJUVU1zU1VGQlZTeE5RVzkxUW5oQ1F5eEhRVUZwUW01T0xFbEJMM1JDYmtKdlRpeEpRVUZMTEZGQlEweERMRWxCUVVzc1QwRkRURU1zU1VGQlN5eFBRVU5NUXl4SlFVRkxMRk5CUTB4b1ZDeEpRVUZMTEZWQmIzVkNVQ3hUUVVGVGFWUXNSMEZCYVVKRExFZEJRM2hDTEUxQlFVOHNTMEZCVDNCVUxFZEJRV052VkN4SFFYTkNPVUlzVTBGQlUwTXNSMEZCVjNCT0xFZEJRMnhDTEU5QlFVOTJSeXhIUVVGaE5GUXNTMEZCUzNKT0xFZEJjME16UWl4VFFVRlRjMDRzUjBGQlYwTXNSMEZEYkVJc1NVRkJTV3hSTEVkQlFWTXNSVUZEVkZFc1JVRkJVMDBzVFVGQlRXOVFMRVZCUVVsRExFMUJTM1pDTEU5QlNFRkVMRVZCUVVsRkxGRkJRVkVzVTBGQlUyNVJMRVZCUVU4d1FpeEhRVU14UW01Q0xFbEJRVk5TTEVsQlFWVXlRaXhGUVVGTE1VSXNTMEZGYmtKUExFVkJWMVFzVTBGQlV6WlFMRWRCUVZFdlVTeEZRVUZOWjFJc1IwRkRja0lzVDBGQlR5eFRRVUZUUXl4SFFVTmtMRTlCUVU5cVVpeEZRVUZMWjFJc1JVRkJWVU1zUzBGaE1VSXNVMEZCVTBNc1IwRkJaVFZSTEVWQlFVODJVU3hIUVUwM1FpeEpRVXhCTEVsQlFVbDZVU3hIUVVGVExFVkJRMVJRTEVWQlFWTkhMRVZCUVUxSUxFOUJRMlpqTEVWQlFWY3NSVUZEV0VNc1QwRkZTMUlzUlVGQlVWQXNSMEZCVVN4RFFVTjJRaXhKUVVGSlVTeEZRVUZSVEN4RlFVRk5TU3hIUVVOa1F5eEpRVUZWZDFFc1IwRkJaWGhSTEVsQlFWVjZUQ3hKUVVOeVEyOU1MRVZCUVUxSkxFZEJRVk40VEN4RlFVTm1aMDBzUlVGQlQwUXNTMEZCWTFBc1IwRkhla0lzVDBGQlQxRXNSVUZWVkN4VFFVRlRhMUVzUjBGQlYwTXNSMEZEYkVJc1NVRkJTVE5STEVkQlFWTXNSVUZEVkZFc1JVRkJVMDBzVFVGQlRUWlFMRVZCUVVsU0xFMUJTM1pDTEU5QlNFRlJMRVZCUVVsUUxGRkJRVkVzVTBGQlUyNVJMRWRCUTI1Q1R5eEpRVUZUVWl4SFFVRlRReXhKUVVWaVR5eEZRVlZVTEZOQlFWTnZVU3hIUVVGWFJDeEhRVU5zUWl4SlFVRkpNMUVzUjBGQlV5eEZRVU5VVVN4RlFVRlRUU3hOUVVGTk5sQXNSVUZCU1ZJc1RVRkxka0lzVDBGSVFWRXNSVUZCU1ZBc1VVRkJVU3hUUVVGVGJsRXNSMEZEYmtKUExFbEJRVk5TTEVsQlFWVkRMRVZCUVU5QkxFdEJSWEpDVHl4RlFXOUVWQ3hUUVVGVGNWRXNSMEZCVjJ4UExFZEJRMnhDTEU5QlFVOXZUaXhIUVVGWGNFNHNSMEZwUkhCQ0xGTkJRWEZDUVN4SFFVTnVRaXhKUVVGSmJrTXNSVUZCVTNSRkxFZEJRVlUwVlN4VlFVRlpMRVZCUTI1RExFdEJRVTgxVlN4SFFVRlZPRlFzUzBGQlMzSk9MRTFCUTJ4Q2JrTXNSVUZGU2l4UFFVRlBRU3hGUVhKRVNIVlJMRU5CUVZsd1R5eEhRVU5hY2tJc1IwRkJWWEZDTEVkQlZXaENMRk5CUVZOeFR5eEhRVUZqY2s4c1IwRkRja0lzVDBGQlQyOU9MRWRCUVZkd1RpeEhRVzFFY0VJc1UwRkJkMEpCTEVkQlEzUkNMRTlCUVU5QkxFVkJRVTl6VHl4TlFVRk5MMVVzVVVGdVJHaENaMVlzUTBGQlpYWlBMRWRCTjJ0Q2NrSXNVMEZCYzBKQkxFZEJRM0JDTEU5QlFVOUJMRVZCUVU5M1R5eE5RVUZOTEVsQk5tdENhRUpETEVOQlFXRjZUeXhIUVZkdVFpeFRRVUZUUlN4SFFVRm5Ra1lzUjBGSGRrSXNTVUZHUVN4SlFVRkpNME1zUlVGQlVUSkRMRVZCUVU5c1JDeFBRVVZhVHl4TFFVRlhlRWNzUjBGQllYZFhMRXRCUVV0eVRpeEZRVUZQTUU4c1QwRkJUM0pTTEUxQlEyeEVMRTlCUVU5QkxFVkJWVlFzU1VGQlNYTlNMRWRCUVcxQ2FsQXNTVUV4T0VKeVFtdFFMRkZCUVZNc1NVRkRWRU1zVDBGQlVTeEpRVU5TUXl4UFFVRlJMRWxCUTFKRExGTkJRVlVzU1VGRFZrTXNVVUZCVXl4TlFUUm5RMWdzU1VGek0yVkpReXhIUVhRelpXVXNVMEZCVlVNc1IwRkJZVU1zU1VGSmVFTXNTVUUyUWsxRExFZEJOMEpHYWxJc1NVRklTbWRTTEVkQlFYRkNMRTFCUVZoQkxFZEJRV3RDY0ZVc1IwRkJUMnRWTEVkQlFVVkpMRk5CUVZOMFZTeEhRVUZMU0N4VFFVRlZkVlVzUjBGQlUwWXNSMEZCUlVzc1MwRkJTM1pWTEVkQlFVMXdRaXhOUVVjdlJIZEZMRTFCUTJoQ2IxSXNSMEZCVDBvc1IwRkJVVWtzUzBGRFprTXNSMEZCVVV3c1IwRkJVVXNzVFVGRGFFSjRWU3hIUVVGWGJWVXNSMEZCVVc1VkxGTkJRMjVDZVZVc1IwRkJUMDRzUjBGQlVVMHNTMEZEWmpkVkxFZEJRVk4xVlN4SFFVRlJkbFVzVDBGRGFrSXpSU3hIUVVGVGExb3NSMEZCVVd4YUxFOUJRMnBDZVZvc1IwRkJVMUFzUjBGQlVVOHNUMEZEYWtKRExFZEJRVmxTTEVkQlFWRlJMRlZCUjNCQ1F5eEhRVUZoZWxJc1IwRkJUVEJTTEZWQlEyNUNReXhIUVVGWk9WVXNSMEZCVXpaVkxGVkJRM0pDUlN4SFFVRmpibFlzUjBGQlQybFdMRlZCUjNKQ1J5eEhRVUZoWWl4SFFVRlJMSE5DUVVkeVFtTXNSMEZCWlVnc1IwRkJWVWtzVTBGSGVrSkRMRWRCUVdsQ1NpeEhRVUZaU1N4bFFVYzNRa01zUjBGQldTeEZRVWRhUXl4SlFVTkZha0lzUjBGQlRTeFRRVUZUYTBJc1MwRkJTMDRzU1VGQlkwRXNSMEZCVjA4c1RVRkJVVkFzUjBGQlYwOHNTMEZCUzBNc1ZVRkJXU3hMUVVOMlJTeHBRa0ZCYlVKd1FpeEhRVUZQTEVkQlVYUkRjVUlzUjBGQmRVSldMRWRCUVZsSExGTkJSMjVEVVN4SFFVRnRRbFFzUjBGQllXeFVMRXRCUVV0dVF5eEpRVWR5UXl0V0xFZEJRVlUxVml4SFFVRkxhMVVzUlVGSFpqSkNMRWRCUVdFellTeEhRVUZQTEVsQlEzUkNaMkVzUjBGQllXeFVMRXRCUVV0dlZDeEpRVUZuUW1oUkxGRkJRVkY2U2l4SFFVRmpMRkZCUTNaRWVVb3NVVUZCVVN4NVJFRkJNRVFzVTBGQlZ5eExRVWsxUlRCUkxFZEJRVk4yVml4SFFVRm5RalpVTEVkQlFWRXdRaXhQUVVGVGRtWXNSVUZETVVOM1ppeEhRVUZUTTBJc1IwRkJVVEpDTEU5QlEycENReXhIUVVGaE5VSXNSMEZCVVRSQ0xGZEJRM0pDUXl4SFFVRmpTQ3hIUVVGVFFTeEhRVUZQUnl4WlFVRmpNV1lzUlVGRE5VTXlaaXhIUVVGbGRrUXNSMEZCVVRsVExFZEJRVTl6Vnl4bFFVRm5RblJYTEVsQlF6bERkVmNzUjBGQlpYWlhMRWRCUVU5M1Z5eFBRVU4wUWtNc1IwRkJkVUowUWl4SFFVRlpjMElzY1VKQlEyNURReXhIUVVGVE1VSXNSMEZCVnpCQ0xFOUJRM0JDUXl4SFFVRnRRbFFzUjBGQlUwRXNSMEZCVDFVc2JVSkJRWEZDYkdkQ0xFVkJRM2hFYldkQ0xFZEJRV05ZTEVkQlFWTkJMRWRCUVU5WkxGTkJRVmR3WjBJc1JVRkRla054WjBJc1IwRkJhVUppTEVkQlFWTkJMRWRCUVU5akxGbEJRV04wWjBJc1JVRkZMME4xWjBJc1IwRkJhMElzVjBGRGNFSXNTVUZEUlN4SlFVRkpiRllzUlVGQlQyMVdMRWRCUVZWc1dDeEhRVUZSTEd0Q1FVVTNRaXhQUVVSQkswSXNTMEZCVXl4UFFVTkdRU3hGUVVOUUxFMUJRVTlrTEV0QlRGVXNSMEZUYWtKclZ5eEhRVUZyUWpWRExFZEJRVkUyUXl4bFFVRnBRbXBZTEVkQlFVdHBXQ3hqUVVGblFqZERMRWRCUVZFMlF5eGhRVU40UlVNc1IwRkJVekZETEVsQlFWRkJMRWRCUVVzeVF5eE5RVUZSYmxnc1IwRkJTM2RWTEV0QlFVc3lReXhMUVVGUE0wTXNSMEZCU3pKRExFbEJRM0JFUXl4SFFVRm5RbWhFTEVkQlFWRnBSQ3hoUVVGbGNsZ3NSMEZCUzNGWUxGbEJRV05xUkN4SFFVRlJhVVFzVjBGSGJFVkRMRWRCUVdFMVF5eEhRVUZMTmtNc1MwRkRiRUpETEVkQlFXTTVReXhIUVVGTEswTXNUVUZEYmtKRExFZEJRVzFDTjFnc1IwRkJUemhZTEhOQ1FVTXhRa01zUjBGQmFVSTVRaXhIUVVGVFFTeEhRVUZQSzBJc1UwRkJWM1JvUWl4RlFVTTFRM1ZvUWl4SFFVRnBRakZFTEVkQlFWRXlSQ3hUUVVONlFrTXNSMEZCWVc1RUxFZEJRVmN4Vnl4TFFVTjRRamhhTEVkQlFXRjBSaXhIUVVGUk9WTXNSMEZCVHpKV0xFdEJRVTB6Vml4SlFVTnNRM0ZaTEVkQlFWbDRSQ3hIUVVGTGVVUXNTVUZEYWtKRExFZEJRVmt4UkN4SFFVRkxNa1FzU1VGRGFrSkRMRWRCUVZrNVJDeEhRVUZMTWtNc1NVRkRha0p2UWl4SFFVRnBRbTVGTEVkQlFWRXhWU3hUUVVONlFqaFpMRWRCUVdVNVJDeEhRVUZMSzBRc1QwRkRjRUpETEVkQlFXZENOMFFzUjBGQlZ6aEVMRkZCUnpOQ1F5eEhRVUZYTjBJc1IwRkJWVE5ETEVkQlFWTXNXVUZET1VKNVJTeEhRVUZOT1VJc1IwRkJWVE5ETEVkQlFWTXNUMEZEZWtJd1JTeEhRVUZWTDBJc1IwRkJWVE5ETEVkQlFWTXNWMEZETjBJeVJTeEhRVUZOYUVNc1IwRkJWVE5ETEVkQlFWTXNUMEZEZWtJMFJTeEhRVUZWYWtNc1IwRkJWVE5ETEVkQlFWTXNWMEZETjBJMlJTeEhRVUZsYkVNc1IwRkJWV3hZTEVkQlFWRXNWVUZIYWtOeFdpeEhRVUZWUml4SlFVRlhMRWxCUVVsQkxFZEJSM3BDUnl4TlFVZEJReXhIUVVGeFFrTXNSMEZCVTFRc1NVRkRPVUpWTEVkQlFXZENSQ3hIUVVGVFVpeEpRVU42UWxVc1IwRkJiMEpHTEVkQlFWTlFMRWxCUXpkQ1ZTeEhRVUZuUWtnc1IwRkJVMDRzU1VGRGVrSlZMRWRCUVc5Q1NpeEhRVUZUVEN4SlFVYzNRbFVzUjBGQll6TkVMRWRCUVZOQkxFZEJRVTlxUWl4VlFVRlpkbVVzUlVGRE1VTnZha0lzUjBGQlowSkVMRWRCUVdOQkxFZEJRVmxGTEZGQlFWVnlha0lzUlVGRGNFUnpha0lzUjBGQmFVSklMRWRCUVdOQkxFZEJRVmwyUlN4VFFVRlhOV1VzUlVGNVNERkVMRk5CUVZOMWFrSXNSMEZCVDNaWUxFZEJRMlFzUjBGQlNYZFlMRWRCUVdGNFdDeExRVUZYZVZnc1IwRkJVWHBZTEUxQlFWbEJMR0ZCUVdsQ01GZ3NTVUZCWXl4RFFVTTNSU3hIUVVGSk1WZ3NZVUZCYVVJeVdDeEhRVU51UWl4UFFVRlBNMWdzUlVGRlZDeEhRVUZKTmxNc1IwRkJaWEJVTEV0QlFVdFBMRVZCUVU4c1pVRkROMElzVDBGQlR6UllMRWRCUVdFMVdDeEhRVWQ0UWl4UFFVRlBMRWxCUVVreVdDeEhRVUZqTTFnc1IwRlhNMElzU1VGQlNUWllMRWRCUVdNc1YwRkRhRUlzVTBGQlV6RldMRXRCUTFRc1QwRkJUeXhUUVVGVE1sWXNSMEZEWkN4SlFVRkxReXhIUVVGVFJDeEhRVU5hTEZOQlJVWXNSMEZCU1dwRkxFZEJRMFlzVDBGQlQwRXNSMEZCWVdsRkxFZEJSWFJDTTFZc1JVRkJUMjlSTEZWQlFWbDFSaXhGUVVOdVFpeEpRVUZKZGxnc1JVRkJVeXhKUVVGSk5FSXNSVUZGYWtJc1QwRkVRVUVzUlVGQlQyOVJMRlZCUVZsMlpTeEZRVU5hZFUwc1IwRmFUU3hIUVhGQ2FrSXNVMEZCVTNsWUxFMUJWMVFzVTBGQlUwd3NSMEZCWXpOWUxFVkJRVTlwV1N4SFFVTTFRa01zUzBGQlMwTXNXVUZCWTI1WkxFVkJRMjVDYTFrc1MwRkJTMFVzWlVGRFRFWXNTMEZCUzBjc1dVRkJZMG9zUlVGRGJrSkRMRXRCUVV0SkxGVkJRVmtzUlVGRGFrSktMRXRCUVV0TExGZEJRV0YyYTBJc1JVRm5SbkJDTEZOQlFWTXdha0lzUjBGQldURllMRWRCUTI1Q2Exa3NTMEZCUzBNc1dVRkJZMjVaTEVWQlEyNUNhMWtzUzBGQlMwVXNaVUZEVEVZc1MwRkJTMDBzVVVGQlZTeEZRVU5tVGl4TFFVRkxUeXhqUVVGbExFVkJRM0JDVUN4TFFVRkxVU3hwUWtGRFRGSXNTMEZCUzFNc1kwRkJaMEl4YVVJc1JVRkRja0pwYVVJc1MwRkJTMVVzWVVGblNGQXNVMEZCVTBNc1IwRkJTME1zUjBGRFdpeEpRVUZKTDFrc1IwRkJVeXhGUVVOVVVDeEZRVUZ2UWl4TlFVRlljMW9zUlVGQmEwSXNSVUZCU1VFc1JVRkJVWFJhTEU5QlJ6TkRMRWxCUkVFd1dTeExRVUZMWVN4VlFVTkphRm9zUlVGQlVWQXNSMEZCVVN4RFFVTjJRaXhKUVVGSmQxb3NSVUZCVVVZc1JVRkJVUzlaTEVkQlEzQkNiVmtzUzBGQlMzaElMRWxCUVVselNTeEZRVUZOTEVkQlFVbEJMRVZCUVUwc1MwRnBSemRDTEZOQlFWTkRMRWRCUVZWSUxFZEJRMnBDTEVsQlFVa3ZXU3hIUVVGVExFVkJRMVJRTEVWQlFXOUNMRTFCUVZoeldpeEZRVUZyUWl4RlFVRkpRU3hGUVVGUmRGb3NUMEZITTBNc1NVRkVRVEJaTEV0QlFVdGhMRlZCUTBsb1dpeEZRVUZSVUN4SFFVRlJMRU5CUTNaQ0xFbEJRVWwzV2l4RlFVRlJSaXhGUVVGUkwxa3NSMEZEY0VKdFdTeExRVUZMZUVnc1NVRkJTWE5KTEVWQlFVMHNSMEZCU1VFc1JVRkJUU3hMUVRoSE4wSXNVMEZCVTBVc1IwRkJVMG9zUjBGRGFFSXNTVUZCU1M5WkxFZEJRVk1zUlVGRFZGQXNSVUZCYjBJc1RVRkJXSE5hTEVWQlFXdENMRVZCUVVsQkxFVkJRVkYwV2l4UFFVY3pReXhKUVVSQk1Ga3NTMEZCUzJFc1ZVRkRTV2hhTEVWQlFWRlFMRWRCUVZFc1EwRkRka0lzU1VGQlNYZGFMRVZCUVZGR0xFVkJRVkV2V1N4SFFVTndRbTFaTEV0QlFVdDRTQ3hKUVVGSmMwa3NSVUZCVFN4SFFVRkpRU3hGUVVGTkxFdEJhVWMzUWl4VFFVRlRSeXhIUVVGVGNGa3NSMEZEYUVJc1NVRkJTV2hDTEVkQlFWTXNSVUZEVkZBc1JVRkJiVUlzVFVGQlZuVkNMRVZCUVdsQ0xFVkJRVWxCTEVWQlFVOTJRaXhQUVVkNlF5eEpRVVJCTUZrc1MwRkJTMnRDTEZOQlFWY3NTVUZCU1VZc1MwRkRXRzVhTEVWQlFWRlFMRWRCUTJZd1dTeExRVUZMYlVJc1NVRkJTWFJaTEVWQlFVOW9RaXhKUVRaRGNFSXNVMEZCVTNWYUxFZEJRVTFTTEVkQlEySXNTVUZCU1ZNc1JVRkJUM0pDTEV0QlFVdHJRaXhUUVVGWExFbEJRVWxJTEVkQlFWVklMRWRCUTNwRFdpeExRVUZMYUVrc1MwRkJUM0ZLTEVWQlFVdHlTaXhMUVhGSGJrSXNVMEZCVTNOS0xFZEJRV040V2l4RlFVRlBlVm9zUjBGRE5VSXNTVUZCU1VNc1JVRkJVV3BETEVkQlFWRjZXQ3hIUVVOb1FqSmFMRWRCUVZORUxFZEJRVk5GTEVkQlFWazFXaXhIUVVNNVFqWmFMRWRCUVZWSUxFbEJRVlZETEVkQlFWTnlSU3hIUVVGVGRGWXNSMEZEZEVNNFdpeEhRVUZWU2l4SlFVRlZReXhKUVVGVlJTeEhRVUZWTVdFc1IwRkJZV0VzUjBGRGNrUXJXaXhGUVVGalRDeEhRVUZUUXl4SFFVRlRSU3hIUVVGVlF5eEZRVU14UTNaYUxFVkJRVk4zV2l4RlFVRmplRmdzUjBGQlZYWkRMRVZCUVUxU0xFOUJRVkUwVXl4UFFVTXZRelZUTEVWQlFWTmxMRVZCUVU5bUxFOUJSWEJDTEVsQlFVc3NTVUZCU1d0RExFdEJRVTh4UWl4SFFVTlVlVm9zU1VGQllUVkhMRWRCUVdWd1ZDeExRVUZMVHl4RlFVRlBNRUlzU1VGRGRrTnhXU3hKUVVWUkxGVkJRVkJ5V1N4SFFVVkRiVmtzU1VGQmEwSXNWVUZCVUc1WkxFZEJRVEJDTEZWQlFWQkJMRWxCUlRsQ2Ixa3NTVUZCYTBJc1ZVRkJVSEJaTEVkQlFUQkNMR05CUVZCQkxFZEJRVGhDTEdOQlFWQkJMRWxCUlhSRWMxa3NSMEZCVVhSWkxFVkJRVXRzUXl4TFFVVnNRbVVzUlVGQlR6QmFMRXRCUVV0MldTeEhRVWRvUWl4UFFVRlBia0lzUlVGVlZDeFRRVUZUTWxvc1IwRkJXWFpoTEVkQlEyNUNMRWxCUVVsSUxFVkJRVk5ITEVWQlFVMUlMRTlCUTI1Q0xFOUJRVTlCTEVWQlFWTkhMRVZCUVUxM1lTeEhRVUZYTEVWQlFVY3pZU3hGUVVGVExFbEJRVTE0VEN4RlFWZHlSQ3hUUVVGVGIyMUNMRWRCUVdkQ2VtRXNSVUZCVHpaRExFZEJRemxDTEU5QlFVODJXQ3hIUVVGWlF5eEhRVUZWTTJFc1IwRkJVVFJoTEVkQlFWVXZXQ3hGUVVGSExFVkJRVWMzUXl4RlFVRk5TQ3hUUVZVM1JDeFRRVUZUWjJJc1IwRkJZVGRoTEVkQlEzQkNMRTlCUVU4d1lTeEhRVUZaUXl4SFFVRlZNMkVzU1VGWkwwSXNVMEZCVXpoaExFZEJRV2xDZEZrc1JVRkJVVlFzUlVGQlN6RkNMRWxCUTJoRFFTeEpRVUZWYUUwc1IwRkJZekJ0UWl4SFFVRkhkbGtzUlVGQlQxUXNSMEZCVFRGQ0xFMUJRM2hEUVN4SlFVRlZhRTBzUjBGQlpUQk9MRXRCUVU5VExFbEJRMjVEZDFrc1IwRkJaMEo0V1N4RlFVRlJWQ3hGUVVGTE1VSXNSMEZqYWtNc1UwRkJVelJoTEVkQlFWbDZXU3hGUVVGUlZDeEZRVUZMTVVJc1IwRkRhRU1zU1VGQlNUWmhMRVZCUVZjeFdTeEZRVUZQVkN4SFFVTm9RbTFTTEVkQlFXVndWQ3hMUVVGTE1FTXNSVUZCVVZRc1NVRkJVV2RhTEVkQlFVZEhMRVZCUVZVM1lTeExRVU5zUkVFc1NVRkJWV2hOTEVkQlFXVXdUaXhMUVVGUFV5eEpRVU51UTNkWkxFZEJRV2RDZUZrc1JVRkJVVlFzUlVGQlN6RkNMRWRCV1dwRExGTkJRVk00WVN4SFFVRmhibUlzUlVGQlR5dENMRWRCUlROQ0xFbEJSRUVzU1VGQlNXeERMRVZCUVZOSExFVkJRVTFJTEU5QlExcEJMRXRCUTB3c1IwRkJTV3RpTEVkQlFVY3ZZU3hGUVVGTlNDeEhRVUZSTEVkQlFVbHJReXhIUVVOMlFpeFBRVUZQYkVNc1JVRkhXQ3hQUVVGUkxFVkJZMVlzVTBGQlUzVmlMRWRCUVdWMldpeEZRVUZaTlVJc1JVRkJVVU1zUlVGQlZVTXNSMEZKY0VRc1QwRklRV3RpTEVkQlFWTjRXaXhGUVVGWkxGTkJRVk40UWl4RlFVRlBNRUlzUlVGQlMwWXNSMEZEZUVNMVFpeEZRVUZQUlN4RlFVRmhSU3hGUVVGUFNDeEZRVUZUUnl4SFFVRlJkMElzUzBGRmRrTXhRaXhGUVZsVUxGTkJRVk50WWl4SFFVRlhPVmtzUlVGQlVYWktMRWRCUXpGQ0xFOUJRVTkxU2l4SFFVRlZLMWtzUjBGQlYzUnBRaXhGUVVGUmNXRXNSMEZCUzNKaExFZEJRVk4xU2l4SFFYbENjRVFzVTBGQlUzZFpMRWRCUVdkQ2VGa3NSVUZCVVZRc1JVRkJTekZDTEVkQlEzcENMR0ZCUVZBd1FpeEhRVUZ6UWpaVExFZEJRM2hDUVN4SFFVRmxjRk1zUlVGQlVWUXNSMEZEY2tKNVdpeGpRVUZuUWl4RlFVTm9Ra01zV1VGQll5eEZRVU5rY0dJc1RVRkJVMEVzUlVGRFZIRmlMRlZCUVZrc1NVRkhaR3hhTEVWQlFVOVVMRWRCUVU4eFFpeEZRVmxzUWl4VFFVRlRjMklzUjBGQlQyNWFMRVZCUVZGdldpeEhRVTEwUWl4SlFVeEJMRWxCUVVsNFlpeEhRVUZUTEVWQlExUlFMRVZCUVZNcllpeEZRVUZOTDJJc1QwRkRabVVzUlVGQlUwMHNSMEZCVFhKQ0xFZEJRMlpuWXl4RlFVRnBRaXhOUVVGV2Nsb3NTVUZGUm5CRExFVkJRVkZRTEVkQlEyWmxMRVZCUVU5U0xFZEJRVk41WWl4RlFVRlBlRzVDTEVWQlFWbDVia0lzUjBGQlNYUmFMRVZCUVZGdldpeEZRVUZOZUdJc1NVRkZka1FzVDBGQlQxRXNSVUZaVkN4VFFVRlRaMkVzUjBGQlZXMUNMRVZCUVZGRExFVkJRVTlETEVkQlUyaERMRTlCVWtsR0xFZEJRVmRCTEVsQlExUkZMRWxCUVZVMWJrSXNTVUZEV2pCdVFpeEZRVUZUUVN4SFFVRlZSU3hGUVVGUlJpeEZRVUZUUlN4SFFVVnNRMFFzU1VGQlZUTnVRaXhKUVVOYU1HNUNMRVZCUVZOQkxFZEJRVlZETEVWQlFWRkVMRVZCUVZORExFbEJSMnBEUkN4RlFXMUNWQ3hUUVVGVFJ5eEhRVUZWTjJJc1JVRkJUemhpTEVWQlFWTkRMRVZCUVZseVlTeEZRVUZMVXl4RlFVRlJObG9zUjBGRE1VUXNTVUZCU1hwaUxFVkJRMEV3WWl4RlFVRlRTQ3hGUVVGVmRHNUNMRVZCUTI1Q01HNUNMRVZCUVZOS0xFVkJRVlZ5YmtJc1JVRkRia0l3YmtJc1JVRkJVMHdzUlVGQlZYQnVRaXhGUVV0MlFpeEhRVWhKY1c1Q0xFbEJRMFo0WWl4RlFVRlRORUlzUlVGQlV6UmFMRVZCUVZjdllpeEZRVUZQTUVJc1JVRkJTMU1zUlVGQlVUWmFMRWRCUVZORUxFVkJRVmN2WWl4SlFVVnVSVThzU1VGQlYzWk5MRVZCUTJJc1QwRkJUM1ZOTEVWQlJWUXNTVUZCUzNkWUxFZEJRVk12V0N4SFFVTmFMRTlCUVU5QkxFVkJSVlFzU1VGQlNUQmFMRVZCUVZGcVF5eEhRVUZSZWxnc1IwRkRjRUlzUjBGQlNUQmFMRWRCUlVZc1IwRkVRVzVhTEVWQk5qaEhTaXhUUVVGM1Fsb3NSMEZEZEVJc1NVRkJTVWdzUlVGQlUwY3NSVUZCVFVnc1QwRkRabVVzUlVGQlV5eEpRVUZKV2l4RlFVRk5lV01zV1VGQldUVmpMRWRCVDI1RExFOUJTa2xCTEVkQlFUWkNMR2xDUVVGYVJ5eEZRVUZOTEVsQlFXdENhMVFzUjBGQlpYQlVMRXRCUVV0RkxFVkJRVThzVjBGRGRFVlpMRVZCUVU5U0xFMUJRVkZLTEVWQlFVMUpMRTFCUTNKQ1VTeEZRVUZQT0dJc1RVRkJVVEZqTEVWQlFVMHdZeXhQUVVWb1FqbGlMRVZCZERsSFNTdGlMRU5CUVdWMFl5eEpRVU51UW1sakxFVkJRMGdzVDBGQlR6TkNMRWRCUVZWMFlTeEZRVUZQVHl4UFFVVnlRaXhEUVVOTUxFbEJRVWxuWXl4RlFVRk5ReXhIUVVGUGVHTXNSMEZEWW5sakxFVkJRVk5HTEVkQlFVOHpiRUlzUjBGQlZ6SnNRaXhIUVVGUE1XeENMRVZCUlhSRExFZEJRVWw1WlN4SFFVRlRkRllzUjBGRFdDeFBRVUZQTUdNc1IwRkJXVEZqTEVWQlFVOXBZeXhIUVVVMVFpeEhRVUZKVFN4SFFVRlBkR3hDTEVkQlFXRnpiRUlzUjBGQlQyeHRRaXhIUVVGWmIyMUNMRWxCUVZkMFlTeEhRVVZ3UkN4SFFVUkJOVUlzUlVGQlZUSmlMRWRCUVZWUExFdEJRV1ZGTEVkQlFXZENNMk1zU1VGRE9VTnBZeXhGUVVOSUxFOUJRVTlETEVWQksyNUZaaXhUUVVGMVFuUnFRaXhGUVVGUmRVb3NSMEZETjBJc1QwRkJUeXRaTEVkQlFWZDBhVUlzUlVGQlVXZHJRaXhIUVVGaGFHdENMRWRCUVZOMVNpeEhRUzl1UlhSRE1HRXNRMEZCWXpkakxFVkJia2d4UWl4VFFVRnpRbTFETEVWQlFWRjJTaXhIUVVNMVFpeFBRVUZQZFVvc1IwRkJWU3RaTEVkQlFWZDBhVUlzUlVGQlVXdHJRaXhIUVVGUGJHdENMRWRCUVZOMVNpeEhRV3RJY2tJMFlTeERRVUZoZUdNc1JVRkJVVkFzU1VGcmJrVjBSQ3hUUVVGeFFuQklMRVZCUVZGMVNpeEhRVU16UWl4UFFVRlBLMWtzUjBGQlYzUnBRaXhGUVVGUmIydENMRWRCUVZkd2EwSXNSMEZCVTNWS0xFZEJiRzVGY0VNNFlTeERRVUZaYW1Rc1JVRkJUMmxpTEVkQlFWY3hZU3hGUVVGUlVDeFJRVVYyUXl4RFFVTk1MRWxCUVV0NFJDeEhRVUZqSzJZc1IwRkRha0lzVDBGQlQzQmhMRVZCUVZOdVF5eExRVVZzUWs4c1JVRTBPVWRPTEZOQlFYZENORUlzUlVGQlVXOWhMRVZCUVV0T0xFZEJRMjVETEVsQmVteEViVUpwUWl4RlFXSkJReXhGUVVObU5XTXNSVUZ4YlVSQk5tTXNSVUZCVDJwaUxFVkJRVTlwWVN4WlFVTnNRaXhQUVVGUlJ5eEhRVU5PTEV0QlFVczNhMElzUjBGRFNDeFBRVUZQTW14Q0xFZEJRV2xDYkdJc1IwRkZNVUlzUzBGQlN6Tk1MRVZCUTB3c1MwRkJTME1zUlVGRFNDeFBRVUZQTEVsQlFVa3liVUlzUjBGQlRXcGlMRWRCUlc1Q0xFdEJRVXQ0U3l4SFFVTklMRTlCTlc1RVRpeFRRVUYxUWpKc1FpeEZRVUZWY2tJc1IwRkRMMElzU1VGQlNYTkNMRVZCUVZOMFFpeEZRVUZUYjBJc1IwRkJhVUpETEVWQlFWTkRMRkZCUVZWRUxFVkJRVk5ETEU5QlEyNUZMRTlCUVU4c1NVRkJTVVFzUlVGQlUyeENMRmxCUVZsdFFpeEZRVUZSUkN4RlFVRlRSU3hYUVVGWlJpeEZRVUZUUnl4WlFUQnVSRE5FUXl4RFFVRmpkbUlzUlVGQlVUaGFMRWRCUlM5Q0xFdEJRVXR5YTBJc1IwRkJXU3hMUVVGTFF5eEhRVU4wUWl4TFFVRkxReXhIUVVGVExFdEJRVXRETEVkQlFWVXNTMEZCUzBNc1IwRkRiRU1zUzBGQlMwTXNSMEZCVlN4TFFVRkxReXhIUVVGcFFpeExRVUZMUXl4SFFVRlhMRXRCUVV0RExFZEJRM2hFTEU5QlFVOTFiRUlzUjBGQlowSjRZaXhGUVVGUk9Gb3NSMEZGYWtNc1MwRkJTMjVzUWl4RlFVTklMRTlCUVU4c1NVRkJTWE50UWl4RlFVVmlMRXRCUVV0eWJVSXNSVUZEVEN4TFFVRkxUU3hGUVVOSUxFOUJRVThzU1VGQlNTdHNRaXhGUVVGTGFtSXNSMEZGYkVJc1MwRkJTMmhNTEVWQlEwZ3NUMEU1YmtSQmIwb3NSVUZCVXl4SlFVUk5OR01zUlVFcmJrUkphR0lzUjBFNWJrUkRhV0VzV1VGQldXVXNSVUZCVDNaclFpeFBRVUZSYlVJc1IwRkJVV2xhTEV0QlFVdHRTeXhMUVVONlJIUk5MRlZCUVZselRTeEZRVUZQZEUwc1ZVRkRia0owVVN4RlFUaHVSRXdzUzBGQlMyNUtMRVZCUTBnc1QwRkJUeXhKUVVGSloyMUNMRVZCUldJc1MwRkJTemxzUWl4SFFVTklMRTlCZUc1RVpUUnNRaXhGUVhkdVJFa3ZZU3hGUVhadVJHaENhVllzUjBGQlowSTVXaXhIUVVGUE9Gb3NSMEZCWXpOWUxFdEJRVXQ1WkN4UlFYSTBSSEJEVlN4RFFVRmxOV1FzUlVGQlQzVmpMRVZCUVV0T0xFbEJTWGhEUkN4SlFVRlZRU3hGUVVGUkxFbEJRVWt4UXl4SlFVTjBRaXhKUVVGSmRVVXNSVUZCVlRkQ0xFVkJRVTFRTEVsQlFVbDZZaXhIUVVONFFpeEhRVUZKTm1Rc1JVRkRSaXhQUVVGUFFTeEZRVVZVTjBJc1JVRkJUWFJNTEVsQlFVa3hVU3hGUVVGUFR5eEhRVVZpZEVJc1IwRkJUV1VzUjBGRFVrRXNSVUZCVFcxUkxGRkJRVkVzVTBGQlV6Sk9MRWRCUTNKQ2RtUXNSVUZCVHpoWkxFbEJRVWwzUXl4SFFVRlZhVU1zUlVGQlZXaERMRVZCUVZORExFVkJRVmtyUWl4RlFVRlZPV1FzUlVGQlQyZGpMRTFCUlRsRWJtUXNSMEZCVFcxQ0xFbEJRMlpCTEVWQlFVMXRVU3hSUVVGUkxGTkJRVk15VGl4RlFVRlZjR01zUjBGREwwSnVRaXhGUVVGUGJWRXNTVUZCU1doUUxFVkJRVXR0WVN4SFFVRlZhVU1zUlVGQlZXaERMRVZCUVZORExFVkJRVmx5WVN4RlFVRkxNVUlzUlVGQlQyZGpMRTFCU1hwRkxFbEJTVWxvV2l4RlFVRlJNRmNzUlVGQlVURnNRaXhIUVVwTWJXOUNMRVZCUTFaRUxFVkJRVk0yUWl4SFFVRmxReXhIUVVONFFqbENMRVZCUVZOWkxFZEJRVk0zU2l4SlFVVnJRbXBVTEVkQlUzcERMRTlCVWtGRExFZEJRVlVyUXl4SFFVRlRhRVFzUlVGQlR5eFRRVUZUT0dRc1JVRkJWWEJqTEVkQlEzWkRjMElzU1VGRlJqaGhMRVZCUVZjNVpDeEZRVVJZTUVJc1JVRkJUVzlqTEVsQlNWSnNSQ3hIUVVGWmNtRXNSVUZCVVcxQ0xFVkJRVXR0WVN4SFFVRlZhVU1zUlVGQlZXaERMRVZCUVZORExFVkJRVmx5WVN4RlFVRkxNVUlzUlVGQlQyZGpMRTFCUlhwRmVtSXNSVUY1UWxRc1UwRkJVekJrTEVkQlFXVTVZaXhGUVVGUmRrb3NSVUZCVVc5TExFZEJRM1JETEVsQlFVbDRSQ3hGUVVGVGQwUXNSVUZCVFhoRUxFOUJRMjVDTEVkQlFXTXNUVUZCVmpKRExFVkJRMFlzVDBGQlVUTkRMRVZCUjFZc1NVRkVRVEpETEVWQlFWTTNSU3hIUVVGUE5rVXNSMEZEVkRORExFdEJRVlVzUTBGRFppeEpRVUZKYTBNc1JVRkJUWE5DTEVWQlFVMTRSQ3hIUVVOYVdTeEZRVUZaZUVnc1JVRkJUemhKTEVkQlEyNUNNVUlzUlVGQlVXMURMRVZCUVU5VUxFZEJSVzVDTEVkQlFVc3hRaXhKUVVGVmFFMHNTMEZCWlRCT0xFdEJRVTlUTEV0QlFXRXZRaXhGUVVGVlNpeEhRVU14UkN4UFFVRlBMRVZCUjFnc1QwRkJUeXhGUVdGVUxGTkJRVk5yWlN4SFFVRlZOMlVzUlVGQlRUaGxMRVZCUVUwMVpTeEhRVU0zUWl4SFFVRnRRaXh0UWtGQlVrWXNSVUZEVkN4TlFVRk5MRWxCUVVsblZDeEhRVUZWYkdVc1IwRkZkRUlzVDBGQlR6Sm5RaXhIUVVGWExGZEJRV0Y2Vml4RlFVRkxSQ3hOUVVGTmNFd3NSVUZCVjNWTUxFbEJRVlUwWlN4SFFXTnFSU3hUUVVGVFF5eEhRVUZsZW1Vc1JVRkJUMjlDTEVWQlFWRnNRaXhGUVVGVll5eEhRVU12UXl4SlFVRkpXaXhIUVVGVExFVkJRMVJ6WlN4RlFVRlhOMlFzUjBGRFdEaGtMRWRCUVZjc1JVRkRXRGxsTEVWQlFWTkhMRVZCUVUxSUxFOUJRMlpsTEV0QlEwRm5aU3hGUVVGbGVHUXNSVUZCVDNaQ0xFOUJSVEZDTEVsQlFVdEJMRVZCUTBnc1QwRkJUMlVzUlVGRlRGWXNTVUZEUm10Q0xFVkJRVk5JTEVkQlFWTkhMRVZCUVZFclFpeEhRVUZWYWtRc1MwRkZiRU5qTEVkQlEwWXdaQ3hGUVVGWE0yUXNSMEZEV0RSa0xFZEJRVmNzUjBGRlNuWmtMRVZCUVU5MlFpeFJRVUZWZGt3c1NVRkRlRUp2Y1VJc1JVRkJWM0JpTEVkQlExaHhZaXhIUVVGWExFVkJRMWgyWkN4RlFVRlRMRWxCUVVsdldTeEhRVUZUY0Zrc1NVRkZlRUo1WkN4RlFVTkJMRTlCUVZONlpTeEZRVUZSVUN4SFFVRlJMRU5CUTNaQ0xFbEJRVWxSTEVWQlFWRk1MRVZCUVUxSkxFZEJRMlF3WlN4RlFVRjFRaXhOUVVGYU5XVXNSVUZCYlVKSExFVkJRVkZJTEVWQlFWTkhMRWRCUjI1RUxFZEJSRUZCTEVWQlFWTlhMRWRCUVhkQ0xFbEJRVlpZTEVWQlFXVkJMRVZCUVZFc1JVRkRNVU56WlN4SFFVRlpSeXhIUVVGaFFTeEZRVUZWTEVOQlJYSkRMRWxCUkVFc1NVRkJTVU1zUlVGQlkwZ3NSVUZEV0Vjc1MwRkRUQ3hIUVVGSk0yUXNSVUZCVHpKa0xFdEJRV2xDUkN4RlFVTXhRaXhUUVVGVFJDeEZRVWRpYW1Vc1JVRkJUekJhTEV0QlFVdHFZU3hSUVVWS2NXVXNSVUZCVTNSa0xFVkJRVkV3WkN4RlFVRlZPV1FzU1VGRGJrTktMRVZCUVU4d1dpeExRVUZMYW1Fc1IwRkhhRUlzVDBGQlQwOHNSVUZxYTBOVVoxZ3NSMEZCVDI5SUxHdENRVkZNUXl4UFFVRlZPV3hDTEVkQlVWWXJiRUlzVTBGQldUbHNRaXhIUVZGYUsyeENMRmxCUVdVNWJFSXNSMEZSWml0c1FpeFRRVUZaTEVkQlVWcERMRk5CVVVWeVRpeEZRVUZMTkVZc1MwRkxWRUVzUjBGQlQyaEdMRlZCUVZsNVJpeEhRVUZYZWtZc1ZVRkRPVUpuUml4SFFVRlBhRVlzVlVGQlZUWktMRmxCUVdNM1JTeEhRVVV2UWtrc1IwRkJZM0JHTEZWQlFWbHpSaXhIUVVGWFJ5eEhRVUZYZWtZc1YwRkRhRVJ2Uml4SFFVRmpjRVlzVlVGQlZUWktMRmxCUVdONlJTeEhRWE5JZEVORUxFZEJRVmx1Uml4VlFVRlpjMFlzUjBGQlYwY3NSMEZCVjNwR0xGZEJRemxEYlVZc1IwRkJXVzVHTEZWQlFWVTJTaXhaUVVGak1VVXNSMEZ2UjNCRGJVSXNSMEZCUzNSSExGVkJRVlYzUnl4TlFYWkZaaXhYUVVORllpeExRVUZMYTBJc1UwRkJWekZETEVkQlFXVkJMRWRCUVdFc1UwRkROVU4zUWl4TFFVRkxhRWtzUzBGQlR5eEhRWE5GWkRKSkxFZEJRVXQwUnl4VlFVRnJRaXhQUVhwRWRrSXNVMEZCYjBJM1VTeEhRVU5zUWl4SlFVRkpia0lzUlVGQlV6SllMRXRCUVVzdlZTeEpRVUZKZWtJc1YwRkJaWGRYTEV0QlFVdHJRaXhUUVVGVE1WZ3NSMEZGYmtRc1QwRkVRWGRYTEV0QlFVdG9TU3hOUVVGUk0xQXNSVUZCVXl4RlFVRkpMRVZCUTI1Q1FTeEhRWFZFVkhOWkxFZEJRVXQwUnl4VlFVRlZhMG9zU1VFelEyWXNVMEZCYVVJdldpeEhRVU5tTEVsQlFVazJXQ3hGUVVGUGNrSXNTMEZCUzJ0Q0xGTkJRMmhDTEVkQlFVa3hReXhIUVVGakxFTkJRMmhDTEVsQlFVbHVWeXhGUVVGVFoxb3NSVUZCU3pkWUxFZEJRMnhDTEU5QlFVOXVRaXhKUVVGWGJFMHNSVUZCYVVKTUxFVkJRVmwxVFN4RlFVVnFSQ3hQUVVGUGMxTXNSMEZCWlhCVUxFdEJRVXM0V2l4RlFVRk5OMWdzUjBGQlR6WllMRVZCUVVzM1dDeEhRVUZQTVU0c1IwRnpRM1JFTm10Q0xFZEJRVXQwUnl4VlFVRlZjRkFzU1VFeFFtWXNVMEZCYVVKNlFpeEhRVU5tTEVsQlFVazJXQ3hGUVVGUGNrSXNTMEZCUzJ0Q0xGTkJRMmhDTEU5QlFVOHhReXhIUVVGblFqWkRMRVZCUVVzM1dDeExRVUZUTVU0c1JVRkJZVFpsTEVkQlFXVndWQ3hMUVVGTE9Gb3NSVUZCVFRkWUxFbEJlVUk1UlcxWUxFZEJRVXQwUnl4VlFVRlZOMElzU1VGYVppeFRRVUZwUW1oUUxFVkJRVXN4UWl4SFFVTndRaXhKUVVGSmRWb3NSVUZCVDNKQ0xFdEJRVXRyUWl4VFFVZG9RaXhQUVVaQmJFSXNTMEZCUzJoSkxFMUJRVkZuU1N4TFFVRkxMMVVzU1VGQlNYcENMRWRCUVU4c1JVRkJTU3hGUVVOcVF6WllMRVZCUVVzM1dDeEhRVUZSWjFZc1NVRkJaMEl4Vnl4SlFVRlZhRTBzUlVGQllVc3NSVUZCYVVJeVRDeEZRVU01Ukd0WkxFMUJlVWhVWlN4SFFVRlZNVWNzVlVGQlZYZEhMRTFCY0Vad1FpeFhRVU5GWWl4TFFVRkxhMElzV1VGRFRHeENMRXRCUVV0b1NTeExRVUZQTEVkQmJVWmtLMGtzUjBGQlZURkhMRlZCUVd0Q0xFOUJka1UxUWl4VFFVRjVRamRSTEVkQlEzWkNMRWxCUVVrMldDeEZRVUZQY2tJc1MwRkJTMnRDTEZOQlExcHlXaXhGUVVGUksyRXNSMEZCWVhaQ0xFVkJRVTAzV0N4SFFVVXZRaXhSUVVGSk0wSXNSVUZCVVN4SlFVbFNRU3hIUVVSWmQxb3NSVUZCU3k5YUxFOUJRVk1zUlVGRk5VSXJXaXhGUVVGTE1FWXNUVUZGVEdwTUxFZEJRVTkyVlN4TFFVRkxPRm9zUlVGQlRYaGFMRVZCUVU4c1MwRkZla0p0V1N4TFFVRkxhRWtzUzBGRFFTeExRVEJFVkN0SkxFZEJRVlV4Unl4VlFVRlZhMG9zU1VFNVEzQkNMRk5CUVhOQ0wxb3NSMEZEY0VJc1NVRkJTVFpZTEVWQlFVOXlRaXhMUVVGTGEwSXNVMEZEV25KYUxFVkJRVkVyWVN4SFFVRmhka0lzUlVGQlRUZFlMRWRCUlM5Q0xFOUJRVTh6UWl4RlFVRlJMRVZCUVVrdlRDeEZRVUZaZFd4Q0xFVkJRVXQ0V2l4SFFVRlBMRWxCTWtNM1EydGFMRWRCUVZVeFJ5eFZRVUZWY0ZBc1NVRXZRbkJDTEZOQlFYTkNla0lzUjBGRGNFSXNUMEZCVDI5YUxFZEJRV0UxUXl4TFFVRkxhMElzVTBGQlZURllMRWxCUVZFc1IwRXJRamREZFZnc1IwRkJWVEZITEZWQlFWVTNRaXhKUVd4Q2NFSXNVMEZCYzBKb1VDeEZRVUZMTVVJc1IwRkRla0lzU1VGQlNYVmFMRVZCUVU5eVFpeExRVUZMYTBJc1UwRkRXbkphTEVWQlFWRXJZU3hIUVVGaGRrSXNSVUZCVFRkWUxFZEJVUzlDTEU5QlRra3pRaXhGUVVGUkxFdEJRMUp0V1N4TFFVRkxhRWtzUzBGRFVIRktMRVZCUVV0VkxFMUJRVTEyV1N4RlFVRkxNVUlzUzBGRmFFSjFXaXhGUVVGTGVGb3NSMEZCVHl4SFFVRkxReXhGUVVWYWExa3NUVUV5UjFSblFpeEhRVUZUTTBjc1ZVRkJWWGRITEUxQmRFVnVRaXhYUVVORllpeExRVUZMYUVrc1MwRkJUeXhGUVVOYVowa3NTMEZCUzJ0Q0xGVkJRMGc0Uml4TFFVRlJMRWxCUVVseVJ5eEhRVU5hTlVrc1NVRkJUeXhKUVVGTGNVY3NTVUZCVHpKRExFbEJRMjVDZGxjc1QwRkJWU3hKUVVGSmJWY3NTMEZyUld4Q1N5eEhRVUZUTTBjc1ZVRkJhMElzVDBGeVJETkNMRk5CUVhkQ04xRXNSMEZEZEVJc1NVRkJTVzVDTEVWQlFWTTBaU3hIUVVGWGFrZ3NTMEZCVFhoWExFZEJRV0VzVDBGQlJVRXNSMEZGTjBNc1QwRkVRWGRYTEV0QlFVdG9TU3hOUVVGUk0xQXNSVUZCVXl4RlFVRkpMRVZCUTI1Q1FTeEhRVzFFVkRKWkxFZEJRVk16Unl4VlFVRlZhMG9zU1VGMlEyNUNMRk5CUVhGQ0wxb3NSMEZEYmtJc1QwRkJUM2xrTEVkQlFWZHFTQ3hMUVVGTmVGY3NSMEZCU3l0YUxFbEJRVWt2V2l4SlFYVkRia04zV0N4SFFVRlRNMGNzVlVGQlZYQlFMRWxCTTBKdVFpeFRRVUZ4UW5wQ0xFZEJRMjVDTEU5QlFVOTVaQ3hIUVVGWGFrZ3NTMEZCVFhoWExFZEJRVXQ1UWl4SlFVRkpla0lzU1VFeVFtNURkMWdzUjBGQlV6TkhMRlZCUVZVM1FpeEpRV1J1UWl4VFFVRnhRbWhRTEVWQlFVc3hRaXhIUVVONFFpeEpRVUZKZFZvc1JVRkJUelJHTEVkQlFWZHFTQ3hMUVVGTmVGY3NSMEZEZUVKM1R5eEZRVUZQY1Vvc1JVRkJTM0pLTEV0QlNXaENMRTlCUmtGeFNpeEZRVUZMTjBrc1NVRkJTV2hRTEVWQlFVc3hRaXhIUVVOa2Exa3NTMEZCUzJoSkxFMUJRVkZ4U2l4RlFVRkxja29zVFVGQlVVRXNSVUZCVHl4RlFVRkpMRVZCUXpsQ1owa3NUVUV5UkZScFFpeEhRVUZUTlVjc1ZVRkJWVGhITEVsQlFVMUdMRWRCUVZNMVJ5eFZRVUZWTUVnc1MwRnVRalZETEZOQlFYRkNhbUVzUjBGRmJrSXNUMEZFUVd0WkxFdEJRVXRyUWl4VFFVRlRNVWtzU1VGQlNURlJMRVZCUVU4elRDeEhRVU5zUWpacVFpeE5RV3RDVkdsQ0xFZEJRVk0xUnl4VlFVRlZjRkFzU1VGT2JrSXNVMEZCY1VKdVJDeEhRVU51UWl4UFFVRlBhMWtzUzBGQlMydENMRk5CUVZOcVZ5eEpRVUZKYmtRc1NVRjFSek5DYzFvc1IwRkJUUzlITEZWQlFWVjNSeXhOUVRORmFFSXNWMEZEUldJc1MwRkJTMnRDTEZOQlFWY3NTVUZCU1Vnc1IwRkRjRUptTEV0QlFVdG9TU3hMUVVGUExFZEJNRVZrYjBvc1IwRkJUUzlITEZWQlFXdENMRTlCT1VSNFFpeFRRVUZ4UWpkUkxFZEJRMjVDTEVsQlFVazJXQ3hGUVVGUGNrSXNTMEZCUzJ0Q0xGTkJRMW8zV1N4RlFVRlRaMW9zUlVGQllTeFBRVUZGTjFnc1IwRkhOVUlzVDBGRVFYZFhMRXRCUVV0b1NTeExRVUZQY1Vvc1JVRkJTM0pLTEV0QlExWXpVQ3hIUVRCRVZDdFpMRWRCUVUwdlJ5eFZRVUZWYTBvc1NVRTVRMmhDTEZOQlFXdENMMW9zUjBGRGFFSXNUMEZCVDNkWExFdEJRVXRyUWl4VFFVRlRjVU1zU1VGQlNTOWFMRWxCT0VNelFqUllMRWRCUVUwdlJ5eFZRVUZWY0ZBc1NVRnNRMmhDTEZOQlFXdENla0lzUjBGRGFFSXNUMEZCVDNkWExFdEJRVXRyUWl4VFFVRlRhbGNzU1VGQlNYcENMRWxCYTBNelFqUllMRWRCUVUwdlJ5eFZRVUZWTjBJc1NVRnlRbWhDTEZOQlFXdENhRkFzUlVGQlN6RkNMRWRCUTNKQ0xFbEJRVWwxV2l4RlFVRlBja0lzUzBGQlMydENMRk5CUTJoQ0xFZEJRVWxITEdGQlFXZENUaXhIUVVGWExFTkJRemRDTEVsQlFVbHRSeXhGUVVGUk4wWXNSVUZCUzBnc1UwRkRha0lzU1VGQlN6bERMRWxCUVZFNFNTeEZRVUZOTldZc1QwRkJVM1pNTEVWQlFXMUNMRVZCUnpkRExFOUJSa0Z0Y2tJc1JVRkJUVzVHTEUxQlFVMTJXU3hGUVVGTE1VSXNTVUZEYWtKcldTeExRVUZMYUVrc1QwRkJVM0ZLTEVWQlFVdHlTaXhMUVVOYVowa3NTMEZGVkhGQ0xFVkJRVTl5UWl4TFFVRkxhMElzVTBGQlZ5eEpRVUZKUml4SFFVRlRhMGNzUjBGSmRFTXNUMEZHUVRkR0xFVkJRVXMzU1N4SlFVRkphRkFzUlVGQlN6RkNMRWRCUTJScldTeExRVUZMYUVrc1MwRkJUM0ZLTEVWQlFVdHlTaXhMUVVOV1owa3NUVUZ6WTFRc1NVRkJTVGhETEVkQlFWZHhSU3hIUVVGbFF5eEpRVlV4UWtNc1IwRkJaMEpHTEVkQlFXVkhMRWxCUVdsQ0xFZEJWM0JFTEZOQlFWTkRMRWRCUVZWcVpTeEZRVUZaY0VJc1IwRkROMElzU1VGQlNVY3NSMEZCVXl4RlFVdGlMRTlCU2tGNVlTeEhRVUZUZUZvc1JVRkJXU3hUUVVGVGVFSXNSVUZCVDBRc1JVRkJUM2xDTEVkQlJURkRMRTlCUkVGcVFpeEpRVUZYU0N4RlFVRlZTaXhGUVVGUFJDeEZRVUZQZVVJc1MwRkhPVUpxUWl4RlFXRlVMRk5CUVZOdFppeEhRVUZoTDJZc1JVRkJUMFVzUlVGQlZXTXNSMEZKY2tNc1NVRklRU3hKUVVGSldpeEhRVUZUTEVWQlExUlFMRVZCUVZOSExFVkJRVTFJTEZOQlJWWlBMRVZCUVZGUUxFZEJRVkVzUTBGRGRrSXNTVUZCU1ZFc1JVRkJVVXdzUlVGQlRVa3NSMEZEWkhWRExFVkJRVlY2UXl4RlFVRlRSeXhIUVVWMlFpeEhRVUZsTEUxQlFWaHpReXhKUVVGdlFtMWpMRWxCUVdGNmNVSXNSVUZETlVKelR5eEhRVUZaUVN4SlFVRlpjV1FzUjBGQlUzSmtMRWRCUTJ4RE0wSXNSVUZCVnpKQ0xFVkJRVk50WXl4SlFVVXhRaXhKUVVGSlFTeEZRVUZYYm1Nc1JVRkRXQzlDTEVWQlFWTlFMRVZCUjJwQ0xFOUJRVTlQTEVWQmRVTlVMRk5CUVZOeFppeEhRVUZYY0dVc1JVRkJXWEJDTEVkQlF6bENMRWxCUVVsSExFdEJUVW9zVDBGTVFYbGhMRWRCUVZONFdpeEZRVUZaTEZOQlFWTjRRaXhGUVVGUFJDeEZRVUZQZVVJc1IwRkRkRU53UWl4RlFVRlZTaXhGUVVGUFJDeEZRVUZQZVVJc1NVRkRNVUpxUWl4RlFVRlBNRm9zUzBGQlMycGhMRXRCUjFSUExFVkJZMVFzVTBGQlUzTm1MRWRCUVZsc1owSXNSVUZCVDIxblFpeEZRVUZQTVdZc1JVRkJWekptTEVWQlFWVjRaaXhIUVVOMFJDeEpRVUZKVWl4SFFVRlRMRVZCUTFSUUxFVkJRVk5ITEVWQlFVMUlMRTlCUzI1Q0xFbEJTRUZaTEVsQlFXTkJMRVZCUVZrMFppeEpRVU14UW5wbUxFbEJRVmRCTEZGQlJVWlNMRVZCUVZGUUxFZEJRVkVzUTBGRGRrSXNTVUZCU1ZFc1JVRkJVVXdzUlVGQlRVa3NSMEZEWkN0bUxFVkJRVkVzUjBGQlN6Rm1MRVZCUVZWS0xFZEJRM0pDT0dZc1JVRkJVU3hGUVVWV1JDeEhRVUZaTjJZc1JVRkJUemhtTEVWQlFWRXNSVUZCUnpGbUxFVkJRVmN5Wml4RlFVRlZlR1lzUjBGRmJrUlBMRWRCUVZWUUxFVkJRVkZRTEVkQlJWWXJaaXhKUVVOV2VHWXNSVUZCVDBFc1JVRkJUMllzVVVGQlZWRXNSMEZITlVJc1QwRkJUMDhzUlVGalZDeEpRVUZKTUdZc1IwRkJWVU1zUzBGWlZrTXNSMEZCWlVRc1NVRkJZeXhIUVZWcVF5eFRRVUZUV2l4SFFVRlhibVFzUlVGQlVYUkRMRWRCUXpGQ0xFOUJRVTl6UXl4SFFVRlZPR1FzUjBGQlVUbGtMRVZCUVZGMFF5eEZRVUZWYjFRc1NVRlhOME1zVTBGQlUzVk5MRWRCUVdkQ2NtUXNSVUZCVVhSRExFZEJReTlDTEU5QlFVOXpReXhIUVVGVloyVXNSMEZCWVdobExFVkJRVkYwUXl4RlFVRlZiMVFzU1VGWmJFUXNVMEZCVTIxT0xFZEJRV05xWlN4RlFVRlJZU3hIUVVNM1FpeFBRVUZQTTBNc1IwRkJXVEpETEVWQlFVOHNVMEZCVTNSQ0xFZEJRMnBETEU5QlFVOHlaU3hIUVVGWGJHVXNSVUZCVDFRc1RVRlpOMElzVTBGQlV6UmxMRWRCUVZGdVpTeEZRVUZSYjJVc1IwRk5ka0lzU1VGSVFTeEpRVUZKZUdkQ0xFVkJRVkVzUlVGRFVsQXNSMEZJU2l0blFpeEZRVUZQUXl4SFFVRlRSQ3hGUVVGTmNHVXNTVUZIU2pORExFOUJSVVFzVFVGQlZqSkRMRWRCUVd0Q2NFTXNSVUZCVVZBc1IwRkRMMEl5UXl4RlFVRlRRU3hGUVVGUGMyVXNSMEZCVFVZc1JVRkJTM2huUWl4UFFVVTNRaXhQUVVGUlFTeEhRVUZUUVN4SFFVRlRVQ3hGUVVGVk1rTXNSVUZCVTI1UExFVkJZeTlETEZOQlFWTXdjMElzUjBGQlpYWmxMRVZCUVZGM1pTeEZRVUZWUXl4SFFVTjRReXhKUVVGSmNtZENMRVZCUVZOdlowSXNSVUZCVTNobExFZEJRM1JDTEU5QlFVOXpWaXhIUVVGUmRGWXNSMEZCVlRWQ0xFVkJRVk5QTEVkQlFWVlFMRVZCUVZGeFowSXNSVUZCV1hwbExFbEJWV3hGTEZOQlFWTXdaU3hIUVVGWE4yZENMRWRCUTJ4Q0xFOUJRV0VzVFVGQlZFRXNSVUZEUzBFc1NVRkJWV2hOTEVWQlFWbDFSQ3hIUVVGbFVDeEZRVVYwUTNGa0xFbEJRV3RDUVN4TlFVRnJRaTlYTEVkQlFVOHdReXhIUVRJelJuSkVMRk5CUVcxQ1FTeEhRVU5xUWl4SlFVRkpPR2RDTEVWQlFWRnFUeXhIUVVGbGNGUXNTMEZCUzA4c1JVRkJUM0ZWTEVsQlEyNURhMGtzUlVGQlRYWmpMRVZCUVUxeFZTeEpRVVZvUWl4SlFVTkZjbFVzUlVGQlRYRlZMRWxCUVd0Q2NtZENMRVZCUTNoQ0xFbEJRVWtyYzBJc1IwRkJWeXhGUVVObUxFMUJRVTk0YVVJc1NVRkZWQ3hKUVVGSlowTXNSVUZCVXpSVExFZEJRWEZDTVZRc1MwRkJTMDhzUjBGUmRrTXNUMEZRU1N0blFpeEpRVU5GUkN4RlFVTkdPV2RDTEVWQlFVMXhWU3hKUVVGclFtdEpMRk5CUldwQ2RtTXNSVUZCVFhGVkxFdEJSMVk1VkN4RlFUTTBSa2g1WjBJc1EwRkJWV2hvUWl4SFFTczFSMmhDTEZOQlFYZENRU3hIUVVOMFFpeFBRVUZQYlZRc1IwRkJjVUl4VkN4TFFVRkxUeXhIUVM4MVJ6ZENhV2hDTEVOQlFXVnFhRUlzUjBGWmNrSXNVMEZCVTJ0b1FpeEhRVUZQYkdoQ0xFVkJRVTl0YUVJc1IwRkRja0lzVDBGQlQyNW9RaXhGUVVGUmJXaENMRVZCVjJwQ0xGTkJRVk5ETEVkQlFWRnFaaXhGUVVGUlZDeEhRVU4yUWl4UFFVRnBRaXhOUVVGV1V5eEhRVUZyUWpCUkxFZEJRV1Z3VkN4TFFVRkxNRU1zUlVGQlVWUXNSMEZYZGtRc1UwRkJVekptTEVkQlFWVnNaaXhGUVVGUlZDeEhRVU42UWl4UFFVRnBRaXhOUVVGV1V5eEhRVUZyUWxRc1MwRkJUM0JGTEVkQlFVODJSU3hIUVRCQ2VrTXNVMEZCVTIxbUxFZEJRV2xDUXl4RlFVRlJNV2hDTEVWQlFWVmpMRWRCVXpGRExFbEJVa0VzU1VGQlNUQmtMRVZCUVZjeFpDeEZRVUZoUkN4SFFVRnZRa1lzUjBGRE5VTm9RaXhGUVVGVEsyaENMRVZCUVU4c1IwRkJSeTlvUWl4UFFVTnVRbWRwUWl4RlFVRlpSQ3hGUVVGUEwyaENMRTlCUTI1Q2FXbENMRVZCUVZkRUxFVkJRMWhGTEVWQlFWTTNaMElzUjBGQlRUSm5RaXhIUVVObVJ5eEZRVUZaUXl4RlFVRkJRU3hGUVVOYWNtaENMRXRCUlVkcmFFSXNTMEZCV1N4RFFVTnFRaXhKUVVGSk9XaENMRVZCUVZFMGFFSXNSVUZCVDBVc1IwRkRaa0VzUjBGQldUVm9RaXhKUVVOa1JpeEZRVUZSYVVJc1IwRkJVMnBDTEVWQlFVOXRSQ3hIUVVGVmFrUXNTMEZGY0VNNGFFSXNSVUZCV1RsTUxFZEJRVlZzVnl4RlFVRk5TQ3hQUVVGUmJXbENMRWRCUTNCRFJDeEZRVUZQUkN4SlFVRmhPV2RDTEVsQlFXVmtMRWRCUVdGTUxFZEJRVlVzUzBGQlQwY3NSVUZCVFVnc1VVRkJWU3hMUVVNM1JTeEpRVUZKTWxvc1IwRkJVM05KTEVkQlFWazVhRUlzUjBGRGVrSXpUQ3hGUVVWT01rd3NSVUZCVVRSb1FpeEZRVUZQTEVkQlJXWXNTVUZCU1hob1FpeEhRVUZUTEVWQlExUTRhRUlzUlVGQlQwZ3NSVUZCVHl4SFFVVnNRbXhFTEVWQlEwRXNUMEZCVTNwbExFVkJRVkZRTEVkQlFWVmxMRVZCUVU5bUxFOUJRVk50YVVJc1IwRkJWeXhEUVVOd1JDeEpRVUZKTTJoQ0xFVkJRVkZNTEVWQlFVMUpMRWRCUTJRd1pTeEZRVUZYTldVc1JVRkJWMEVzUlVGQlUwY3NSMEZCVTBFc1JVRkhOVU1zUjBGRVFVRXNSVUZCVTFjc1IwRkJkMElzU1VGQlZsZ3NSVUZCWlVFc1JVRkJVU3hKUVVONFF6Wm9RaXhGUVVORk5XVXNSMEZCVXpSbExFVkJRVTF3UkN4SFFVTm1TaXhGUVVGVE9XUXNSVUZCVVd0bExFVkJRVlU1WkN4SlFVTTFRaXhEUVVWTUxFbEJSRUU0WjBJc1JVRkJWMFFzU1VGRFJrTXNSMEZCVlN4RFFVTnFRaXhKUVVGSmRtVXNSVUZCVVhkbExFVkJRVTlFTEVkQlEyNUNMRXRCUVUxMlpTeEZRVU5GUkN4SFFVRlRReXhGUVVGUGRXSXNSMEZEYUVKS0xFVkJRVk5yUkN4RlFVRlBSU3hIUVVGWGFFUXNSVUZCVlRsa0xFbEJSVE5ETEZOQlFWTTJaQ3hGUVVkVWNVUXNSMEZEUmtFc1JVRkJTelZJTEV0QlFVdDNSU3hIUVVWYWJHVXNSVUZCVHpCYUxFdEJRVXRxWVN4SlFVZG9RaXhQUVVGUFR5eEZRU3RDVkN4VFFVRlRkV2hDTEVkQlFWY3paaXhGUVVGUmIyVXNSVUZCVFdob1FpeEhRVWRvUXl4SlFVRkpSaXhGUVVGcFFpeFBRVVJ5UWpoRExFVkJRVk0wWml4SFFVRlBOV1lzUlVGRWFFSnZaU3hGUVVGUFF5eEhRVUZUUkN4RlFVRk5jR1VzUzBGRlRVRXNSVUZCVTBFc1JVRkJUM05sTEVkQlFVMTFRaXhIUVVGTGVrSXNTMEZEZGtRc1QwRkJaU3hOUVVGU2JHaENMRVZCUVdWeVRDeEZRVUZaYjB3c1IwRkJUVU1zUlVGQlRUaERMRVZCUVZFMVF5eEhRVlY0UkN4VFFVRlRNR2xDTEVkQlFXZENhbWxDTEVkQlEzWkNMRTlCUVU5M1dDeEhRVUZoZUZnc1NVRkJWVFpuUWl4SFFVRlhOMmRDTEVsQlFWVXpTaXhGUVhWRGNrUXNVMEZCVXpaeVFpeEhRVUZaYkdsQ0xFVkJRVTl0YUVJc1JVRkJUM0pHTEVWQlFWTkRMRVZCUVZsRExFZEJRM1JFTEU5QlFVbG9ZeXhKUVVGVmJXaENMRWxCUjBRc1RVRkJWRzVvUWl4SFFVRXdRaXhOUVVGVWJXaENMRWxCUVcxQ00wb3NSMEZCWVhoWUxFdEJRVmQzV0N4SFFVRmhNa29zUjBGRGNFVnVhRUlzUjBGQlZVRXNSMEZCVTIxb1FpeEhRVUZWUVN4RlFXMUNlRU1zVTBGQmVVSm9aaXhGUVVGUloyWXNSVUZCVDNKR0xFVkJRVk5ETEVWQlFWbHZSeXhGUVVGWGJrY3NSMEZEZEVVc1NVRkJTVzlITEVWQlFWY3pTeXhIUVVGUmRGWXNSMEZEYmtKclowSXNSVUZCVnpWTExFZEJRVkV3U2l4SFFVTnVRbTFDTEVWQlFWTkdMRVZCUVZjNWNrSXNSVUZCVjJ0dFFpeEhRVUZQY21Fc1IwRkRkRU52WjBJc1JVRkJVMFlzUlVGQlZ5OXlRaXhGUVVGWGEyMUNMRWRCUVU4eVJTeEhRVXQwUTNGQ0xFZEJTRXBHTEVWQlFWTkJMRWRCUVZWcWMwSXNSVUZCVlZrc1JVRkJXWEZ5UWl4SlFVZG9Rbkp5UWl4RlFVTnlRbmR5UWl4SFFVaEtSaXhGUVVGVFFTeEhRVUZWYkhOQ0xFVkJRVlZaTEVWQlFWbHpja0lzU1VGSGFFSjBja0lzUlVGRGNrSjVja0lzUlVGQldVb3NSMEZCVlVNc1JVRkZNVUlzUjBGQlNVY3NSMEZCWVhCT0xFZEJRVk51VkN4SFFVRlRMRU5CUTJwRExFbEJRVXR0VkN4SFFVRlROa3dzUjBGRFdpeFBRVUZQTEVWQlJWUnBRaXhIUVVGWExFVkJRMWhKTEVkQlFWY3NSVUZGWWl4SFFVRkpSU3hKUVVGalJpeEZRVVZvUWl4UFFVUkJlRWNzU1VGQlZVRXNSVUZCVVN4SlFVRkpNVU1zU1VGRFpEaEpMRWRCUVZscWFrSXNSMEZCWVdkRUxFZEJRemRDZDJkQ0xFZEJRVmw0WjBJc1JVRkJVV2RtTEVWQlFVOXlSaXhGUVVGVFF5eEZRVUZaYjBjc1JVRkJWMjVITEVkQk9ERkZia1VzVTBGQmIwSTNXaXhGUVVGUloyWXNSVUZCVHpWRkxFVkJRVXRVTEVWQlFWTkRMRVZCUVZsdlJ5eEZRVUZYYmtjc1IwRkRkRVVzVDBGQlVVOHNSMEZEVGl4TFFVRkxOV3RDTEVkQlEwZ3NSMEZCUzNkTExFVkJRVTl6WWl4WlFVRmpNRVFzUlVGQlRURkVMRmxCUXpOQ2RHSXNSVUZCVDNGaUxGbEJRV015UkN4RlFVRk5NMFFzVjBGRE9VSXNUMEZCVHl4RlFVVlVjbUlzUlVGQlUwRXNSVUZCVDI5aUxFOUJRMmhDTkVRc1JVRkJVVUVzUlVGQlRUVkVMRTlCUldoQ0xFdEJRVXMzYkVJc1IwRkRTQ3hSUVVGTGVVc3NSVUZCVDNOaUxGbEJRV013UkN4RlFVRk5NVVFzWVVGRE0wSXdSU3hGUVVGVkxFbEJRVWt4VHl4SFFVRlhkRklzUjBGQlV5eEpRVUZKYzFJc1IwRkJWekJPTEV0QlMzaEVMRXRCUVVzemNVSXNSVUZEVEN4TFFVRkxReXhGUVVOTUxFdEJRVXROTEVWQlIwZ3NUMEZCVHpKcVFpeEpRVUZKZGxrc1IwRkJVMmRtTEVkQlJYUkNMRXRCUVV0NGNVSXNSVUZEU0N4UFFVRlBkMHdzUlVGQlQzbG5RaXhOUVVGUmVrSXNSVUZCVFhsQ0xFMUJRVkY2WjBJc1JVRkJUekJuUWl4VFFVRlhNVUlzUlVGQlRUQkNMRkZCUlRsRUxFdEJRVXN4Y2tJc1JVRkRUQ3hMUVVGTFJTeEZRVWxJTEU5QlFVODRTeXhIUVVGWFoyWXNSVUZCVVN4SFFVVTFRaXhMUVVGTGNuRkNMRVZCUTBnc1NVRkJTV2R6UWl4RlFVRlZPVk1zUjBGRmFFSXNTMEZCU3pWWkxFVkJRMGdzU1VGQlNUSnlRaXhGUVVGWmFrZ3NSVUZCVlc1dVFpeEZRVWN4UWl4SFFVWkJiWFZDTEVsQlFWbEJMRVZCUVZWeVV5eEpRVVZzUW5SUExFVkJRVThyVGl4TlFVRlJhVklzUlVGQlRXcFNMRTlCUVZNMlV5eEZRVU5vUXl4UFFVRlBMRVZCUjFRc1NVRkJTV3hHTEVWQlFWVTNRaXhGUVVGTlVDeEpRVUZKZEZvc1IwRkRlRUlzUjBGQlNUQmlMRVZCUTBZc1QwRkJUMEVzUjBGQlYzTkVMRVZCUlhCQ2NrWXNSMEZCVjJ4dVFpeEZRVWRZYjI1Q0xFVkJRVTEwVEN4SlFVRkpkazhzUlVGQlVXZG1MRWRCUTJ4Q0xFbEJRVWsxWjBJc1JVRkJVMjlwUWl4SFFVRlpSeXhGUVVGUk0yZENMRWRCUVZNeVowSXNSVUZCVVROQ0xFZEJRVkZ5Uml4RlFVRlRReXhGUVVGWmIwY3NSVUZCVjI1SExFZEJSVEZHTEU5QlJFRkJMRVZCUVdNc1QwRkJSVGRhTEVkQlExUTFRaXhGUVVWVUxFdEJRVXRxU2l4SFFVTklMRWRCUVVrNFppeEhRVU5HTEU5QlFVOUJMRWRCUVdNeldDeExRVUZMTUVNc1NVRkJWMmxXTEVkQlFXTXpXQ3hMUVVGTE1HaENMRWRCUnpsRUxFOUJRVThzUlVFek5VVkVOa0lzUTBGQlZ6ZG5RaXhGUVVGUloyWXNSVUZCVDIxQ0xFVkJRVkY0Unl4RlFVRlRReXhGUVVGWmIwY3NSVUZCVjI1SExFZEJSWGhGTEV0QlFVMUdMRVZCUVZWdWJrSXNSMEZCZFVJc1EwRkRja01zU1VGQlNYTjFRaXhGUVVGbFZDeEhRVUZaTTFBc1IwRkJaWEJVTEV0QlFVc3dReXhGUVVGUkxHVkJRM1pFSzJkQ0xFVkJRV1ZVTEVkQlFWazFVQ3hIUVVGbGNGUXNTMEZCU3pCb1FpeEZRVUZQTEdWQlJURkVMRWRCUVVrNFFpeEhRVUZuUWtNc1JVRkJZeXhEUVVOb1F5eEpRVUZKUXl4RlFVRmxSaXhGUVVGbE9XZENMRVZCUVU5dVF5eFJRVUZWYlVNc1JVRkRMME5wYUVJc1JVRkJaVVlzUlVGQlpTOUNMRVZCUVUxdWFFSXNVVUZCVlcxb1FpeEZRVWRzUkN4UFFVUkJia1lzU1VGQlZVRXNSVUZCVVN4SlFVRkpNVU1zU1VGRFpqWkpMRVZCUVZWblFpeEZRVUZqUXl4RlFVRmpkRWdzUlVGQlUwTXNSVUZCV1VNc1NVRkhkRVVzVVVGQlN6QkhMRWxCUjB3eFJ5eEpRVUZWUVN4RlFVRlJMRWxCUVVreFF5eEpRVEExUlhoQ0xGTkJRWE5DYmxnc1JVRkJVV2RtTEVWQlFVOXlSaXhGUVVGVFF5eEZRVUZaYjBjc1JVRkJWMjVITEVkQlEyNUZMRWxCUVVrclJ5eEZRVUZaYWtnc1JVRkJWVzV1UWl4RlFVTjBRakIxUWl4RlFVRlhja1lzUjBGQlZ6ZGlMRWRCUTNSQ2JXaENMRVZCUVZsRUxFVkJRVk0zYWtJc1QwRkZja0puYVVJc1JVRkVWM2hFTEVkQlFWZHRSQ3hIUVVORU0yaENMRTlCUlhwQ0xFZEJRVWs0YWtJc1IwRkJZVGxDTEVsQlFXTjFRaXhGUVVNM1FpeFBRVUZQTEVWQlIxUXNTVUZFUVN4SlFVRkphR3BDTEVWQlFWRjFha0lzUlVGRFRIWnFRaXhMUVVGVExFTkJRMlFzU1VGQlNUSkNMRVZCUVUweWFFSXNSVUZCVTNScVFpeEhRVU51UWl4TFFVRk5aMnBDTEVWQlFWbHlhRUlzUzBGQlQzbG1MRVZCUVZGMFR5eEhRVUZsY0ZRc1MwRkJTekJvUWl4RlFVRlBlbVlzU1VGRE1VUXNUMEZCVHl4RlFVbFlMRWxCUVVrMmFFSXNSVUZCWVhaSUxFVkJRVTFRTEVsQlFVbDBXaXhIUVVOMlFuRm9RaXhGUVVGaGVFZ3NSVUZCVFZBc1NVRkJTVEJHTEVkQlF6TkNMRWRCUVVsdlF5eEhRVUZqUXl4RlFVTm9RaXhQUVVGUFJDeEhRVUZqY0VNc1IwRkJVM0ZETEVkQlFXTnlhRUlzUlVGRk9VTXNTVUZCU1RWQ0xFZEJRVk1zUlVGRFlubGlMRVZCUVUxMFRDeEpRVUZKZGs4c1JVRkJVV2RtTEVkQlEyeENia1lzUlVGQlRYUk1MRWxCUVVsNVVTeEZRVUZQYUdZc1IwRkhha0lzU1VGRVFTeEpRVUZKYzJoQ0xFVkJRVmRXTEVsQlEwNW9ha0lzUlVGQlVYVnFRaXhIUVVGWExFTkJRekZDTldoQ0xFVkJRVTB5YUVJc1JVRkJVM1JxUWl4SFFVTm1MRWxCUVVrNFlTeEZRVUZYTVZrc1JVRkJUMVFzUjBGRGJFSm5hVUlzUlVGQlYzWkRMRVZCUVUxNlppeEhRVVZ5UWl4SFFVRkpjV0VzUlVGRFJpeEpRVUZKTkVnc1JVRkJWMW9zUlVGRFdHaElMRVZCUVZjeVNDeEZRVUZWTjBrc1JVRkJWVzVhTEVWQlFVdDVaaXhGUVVGUGFHWXNSVUZCVVRaYUxFZEJRMjVFUkN4RlFVRlhiRUlzUlVGQlZUWkpMRVZCUVZWb2FVSXNSVUZCUzFNc1JVRkJVV2RtTEVWQlFVOXVSaXhIUVVkNlJDeExRVUZOTWtnc1NVRkJZVE4yUWl4RlFVTldObTFDTEVsQlFXRTJTU3hIUVVGWmRrSXNSVUZCVlhSSUxFVkJRVlUyU1N4RlFVRlZOVWdzUlVGQlUwTXNSVUZCV1VNc1IwRkROMFV5U0N4SFFVTkVMRU5CUTB4d2FrSXNSMEZCVXl4RlFVTlVMRTFCUlVacmFrSXNTVUZCWVVFc1JVRkJhMElzWlVGQlVDOW9RaXhIUVVVeFFpeEhRVUZKYmtJc1NVRkJWMnRxUWl4RlFVRlZMRU5CUTNaQ0xFbEJRVWxITEVWQlFWVjZhRUlzUlVGQlQybGhMRmxCUTJwQ2VVZ3NSVUZCVlRGRExFVkJRVTB2UlN4WlFVZG9RbmRJTEVkQlFWZERMRWRCUTFZc1owSkJRV2xDTVdoQ0xFZEJRVlVzWjBKQlFXbENaMllzUzBGRGVrSXNiVUpCUVZoNVF5eEhRVUY1UWtFc1lVRkJiVUpCTEVkQlEycERMRzFDUVVGWVF5eEhRVUY1UWtFc1lVRkJiVUpCTEV0QlEzWkVkR3BDTEVkQlFWTXNSMEZMWWl4UFFVWkJlV0lzUlVGQll5eFBRVUZGTjFvc1IwRkRhRUkyV2l4RlFVRmpMRTlCUVVWdFJpeEhRVU5VTldkQ0xFVkJkamxGUVhWcVFpeERRVUZoTTJoQ0xFVkJRVkZuWml4RlFVRlBja1lzUlVGQlUwTXNSVUZCV1c5SExFVkJRVmR1Unl4SlFUTkVOVVFyU0N4RFFVRm5RaTlxUWl4RlFVRlBiV2hDTEVWQlFVOXlSaXhGUVVGVFF5eEZRVUZaYlVjc1IwRkJZV3hITEVsQmJVWjZSU3hUUVVGVFowa3NSMEZCV1Rkb1FpeEZRVUZSZGtvc1JVRkJVWEZ5UWl4RlFVRlhiRWtzUjBGRE9VTXNTVUZCU1doakxFVkJRVkZyYTBJc1JVRkJWWHByUWl4UFFVTnNRa0VzUlVGQlUwOHNSVUZEVkcxclFpeEhRVUZuUW01SkxFVkJSWEJDTEVkQlFXTXNUVUZCVmpWYUxFVkJRMFlzVDBGQlVUTkRMRVZCUjFZc1NVRkVRVEpETEVWQlFWTTNSU3hIUVVGUE5rVXNSMEZEVkhCRExFdEJRVk1zUTBGRFpDeEpRVUZKZDFvc1JVRkJUekJMTEVWQlFWVnNhMElzUjBGRGNrSXNSMEZCUzIxclFpeEhRVUZuUWpOTExFVkJRVXNzUjBGRGJFSkJMRVZCUVVzc1MwRkJUM0JZTEVWQlFVOXZXQ3hGUVVGTExFMUJRM1JDUVN4RlFVRkxMRXRCUVUxd1dDeEhRVVZ1UWl4UFFVRlBMRVZCUjFnc1QwRkJVM0JETEVWQlFWRlFMRWRCUVZFc1EwRkZka0lzU1VGQlNXdERMRWRCUkVvMldDeEZRVUZQTUVzc1JVRkJWV3hyUWl4SlFVTkdMRWRCUTFnNFlTeEZRVUZYTVZrc1JVRkJUMVFzUjBGRGJFSjVhVUlzUlVGQlZ6VkxMRVZCUVVzc1IwRkZjRUlzUjBGQlNUSkxMRWRCUVdkQ00wc3NSVUZCU3l4SlFVTjJRaXhIUVVGSmMwSXNTVUZCWVRkdFFpeExRVUZsTUU0c1MwRkJUMU1zUjBGRGNrTXNUMEZCVHl4TlFVVktMRU5CUTB3c1NVRkJTVFphTEVWQlFWRXNTVUZCU1RGRExFZEJRMmhDTEVkQlFVbDVReXhGUVVOR0xFbEJRVWw0WWl4RlFVRlRkMklzUlVGQlYyeENMRVZCUVZWelNpeEZRVUZWZW1sQ0xFVkJRVXRUTEVWQlFWRjJTaXhGUVVGUmIycENMRWRCUlc1RkxFdEJRVTE2WWl4SlFVRlhkazBzUlVGRFZHdDFRaXhIUVVGWmFVTXNSVUZCVlhSS0xFVkJRVlZzYlVJc1JVRkJkVUpETEVWQlFYZENiVzVDTEVWQlFWbERMRWRCUXpOR2VtSXNSMEZGVGl4UFFVRlBMRWRCU1dJc1QwRkJUeXhGUVZkVUxGTkJRVk0yYWtJc1IwRkJZWEJyUWl4SFFVTndRaXhUUVVGTEsxZ3NSMEZCVXk5WUxFbEJNalZHVEN0VExFbEJRV1ZCTEUxQk16VkdVeTlUTEV0QlIyNUNjV2RDTEVkQlFWZHlaMElzUjBGQlUzTlVMRWRCUVdGd1dpeEpRVU5vUXpaV0xFdEJRVXNyUnl4SFFVRlRPVmNzU1VFMFF5OUNMRk5CUVZOeGEwSXNSMEZCWVhKclFpeEhRVWR3UWl4TlFVRnZRaXh0UWtGQlZFRXNSVUZEUmtFc1JVRkZTU3hOUVVGVVFTeEZRVU5MYzJ0Q0xFZEJSVmNzYVVKQlFWUjBhMElzUlVGRFJubFlMRWRCUVZGNldDeEhRVU5ZZFd0Q0xFZEJRVzlDZG10Q0xFVkJRVTBzUjBGQlNVRXNSVUZCVFN4SlFVTndRM2RyUWl4SFFVRlplR3RDTEVkQlJWaDVhMElzUjBGQlUzcHJRaXhIUVZWc1FpeFRRVUZUTUd0Q0xFZEJRVk4yYVVJc1IwRkRhRUlzU1VGQlMzZHBRaXhIUVVGWmVHbENMRWRCUTJZc1QwRkJUM1ZVTEVkQlFWZDJWQ3hIUVVWd1FpeEpRVUZKTlVJc1MwRkRTaXhKUVVGTExFbEJRVWx0UWl4TFFVRlBjRVVzUjBGQlR6WkZMRWRCUTJwQ01GRXNSMEZCWlhCVUxFdEJRVXN3UXl4RlFVRlJWQ3hKUVVGbExHVkJRVkJCTEVkQlEzUkRia0lzUlVGQlR6QmFMRXRCUVV0MldTeEhRVWRvUWl4UFFVRlBia0lzUlVGVlZDeFRRVUZUY1d0Q0xFZEJRVmQ2YVVJc1IwRkRiRUlzU1VGQlN6UldMRWRCUVZNMVZpeEhRVU5hTEU5Qk1EbEdTaXhUUVVGelFrRXNSMEZEY0VJc1NVRkJTVFZDTEV0QlEwb3NSMEZCWXl4TlFVRldORUlzUlVGRFJpeEpRVUZMTEVsQlFVbFVMRXRCUVU5d1JTeEhRVUZQTmtVc1IwRkRja0kxUWl4RlFVRlBNRm9zUzBGQlMzWlpMRWRCUjJoQ0xFOUJRVTl1UWl4RlFXb3JSa1Z6YTBJc1EwRkJZVEZwUWl4SFFVVjBRaXhKUVVGSk1tbENMRVZCUVZWSUxFZEJRVmw0YVVJc1IwRkRkRUkxUWl4TFFVVktMRWxCUVVzc1NVRkJTVzFDTEV0QlFVOVRMRWRCUTBRc1pVRkJVRlFzU1VGQmVVSnZha0lzUjBGQldXcFRMRWRCUVdWd1ZDeExRVUZMTUVNc1JVRkJVVlFzUzBGRGNrVnVRaXhGUVVGUE1Gb3NTMEZCUzNaWkxFZEJSMmhDTEU5QlFVOXVRaXhGUVZsVUxGTkJRVk4zYTBJc1IwRkJUeTlyUWl4RlFVRlBiV2hDTEVkQlEzSkNMRTlCUVU5dWFFSXNSVUZCVVcxb1FpeEZRVmRxUWl4VFFVRlROa1FzUjBGQlVYaHFRaXhGUVVGWk0wSXNSMEZETTBJc1NVRkJTVVVzUjBGQlV5eEZRVU5VVVN4RlFVRlRNR3RDTEVkQlFWbDZha0lzUjBGQlkxZ3NSMEZCVFZjc1JVRkJWMmhETEZkQlMzaEVMRTlCU0VGM1lpeEhRVUZUZUZvc1JVRkJXU3hUUVVGVGVFSXNSVUZCVHpCQ0xFVkJRVXRHTEVkQlEzaERha0lzU1VGQlUxSXNSMEZCVTBZc1JVRkJVMGNzUlVGQlR6QkNMRVZCUVV0R0xFdEJSV3hEYWtJc1JVRlZWQ3hUUVVGVGFXdENMRWRCUVZrMWNrSXNSMEZEYmtJc1NVRkJTWEZ5UWl4RlFVRlphVUlzUjBGQllYUnpRaXhIUVVNM1FpeFBRVUYzUWl4SFFVRndRbkZ5UWl4RlFVRlZlbXRDTEZGQlFXVjVhMElzUlVGQlZTeEhRVUZITEVkQlEycERhMElzUjBGQmQwSnNRaXhGUVVGVkxFZEJRVWNzUjBGQlNVRXNSVUZCVlN4SFFVRkhMRWxCUlhoRUxGTkJRVk01YUVJc1IwRkRaQ3hQUVVGUFFTeEpRVUZYZGtvc1IwRkJWVzl5UWl4SFFVRlpOMmhDTEVWQlFWRjJTaXhGUVVGUmNYSkNMRWxCV1RWRUxGTkJRVk5OTEVkQlFXOUNhRVVzUlVGQlRUUkVMRWRCUTJwRExFOUJRVWxwUWl4SFFVRk5OMFVzU1VGQlV6aEZMRWRCUVcxQ2JFSXNSMEZETjBKblFpeEhRVUYzUWpGRkxFZEJRVTFHTEVkQlFVODBSQ3hIUVVWMlF5eFRRVUZUYUdsQ0xFZEJRMlFzU1VGQlNUQlpMRVZCUVZkWkxFZEJRVWwwV2l4RlFVRlJiMlVzUjBGRE0wSXNUMEZCVVRGR0xFbEJRV0UzYlVJc1IwRkJZVFp0UWl4SlFVRmhjMG9zUlVGRE0wTnRRaXhIUVVGTmJtcENMRVZCUVZGdlpTeEhRVU5rTWtJc1IwRkJXV2xETEVWQlFWVjBTaXhGUVVGVmJHMUNMRVZCUVhWQ1F5eEpRV1V2UkN4VFFVRlRNbmRDTEVkQlFWVndha0lzUlVGQlVYWktMRVZCUVZFMGMwSXNSVUZCVlhwS0xFVkJRVmxETEVkQlEyNUVOMW9zU1VGQlYzWktMRWRCUjJaeGJrSXNSMEZCVVhKdVFpeEZRVUZSTEZOQlFWTjFja0lzUlVGQlZYcHBRaXhIUVVWcVF5eEhRVVJCYzJFc1NVRkJWVUVzUlVGQlVTeEpRVUZKTVVNc1NVRkRiRUoyUWl4SFFVRlRiMDBzU1VFclFtcENMRk5CUVhWQ2FHbENMRVZCUVZGMlNpeEZRVUZST0Vrc1JVRkJTemhxUWl4RlFVRlZReXhGUVVGWE1Vb3NSVUZCV1VNc1IwRkRNMFVzU1VGQlNXNUNMRVZCUVZjMlN5eEhRVUZSZG1wQ0xFVkJRVkZVTEVkQlF6TkNlV2xDTEVWQlFWZDFRaXhIUVVGUk9YTkNMRVZCUVZFNFNTeEhRVU16UW0xakxFVkJRVlUzUWl4RlFVRk5VQ3hKUVVGSk1Fa3NSMEZGZUVJc1IwRkJTWFJITEVWQlEwWndSQ3hIUVVGcFFuUlpMRVZCUVZGVUxFVkJRVXR0WXl4UFFVUm9ReXhEUVVsQkxFbEJRVWs0U0N4RlFVRlhOVW9zUlVGRFdFRXNSVUZCVjJ4Q0xFVkJRVlZ6U2l4RlFVRlhlbWxDTEVWQlFVMHNSMEZCUzFNc1JVRkJVWFpLTEVWQlFWRnZha0lzUjBGRE0wUm9iMElzUlVGRlFYTnhRaXhGUVVGWGNVZ3NTVUZCWVRONFFpeEZRVVUxUWl4SFFVRkpjM0ZDTEVWQlFWVXNRMEZEV2l4SlFVRkpOVVVzUlVGQlVXcERMRWRCUVZFd1RTeEhRVU5vUW5STExFZEJRVlZJTEVkQlFWTndSU3hIUVVGVE5rOHNSMEZETlVKNVFpeEhRVUZYYkUwc1NVRkJWVWNzUjBGQlZURmhMRWRCUVdGbmJFSXNSMEZGYUVSM1FpeEZRVUZYZUVJc1JVRkRVSHBMTEVkQlFWTkhMRWRCUVZVclRDeEZRVU5xUW01UExFZEJRVkZ2UkN4SFFVTldPRXNzUlVGQlZ6bExMRVZCUlVwblRDeEhRVUZyUW1oTUxFZEJRM3BDT0Vzc1JVRkJWM0pNTEVkQlFWVlBMRWRCUldSb1FpeEhRVU5RZVVVc1IwRkJWeXhGUVVOWWNVZ3NSVUZCVjJwS0xFZEJRVmw1U0N4SFFVRlZMRWxCUlRGQ2VVSXNSMEZEVUhSSUxFZEJRVmNzUlVGRFdIRklMRVZCUVZkb1NTeEhRVUZuUW5kSExFZEJRVlVzU1VGSGNrTjNRaXhMUVVkTFJ5eEhRVUZqTTBJc1NVRkJZWFpMTEVkQlFWbDFTeXhKUVVNNVEzZENMRVZCUVZjNVN5eEZRVU5RYWtJc1IwRkJXV2xDTEVkQlEyUTRTeXhGUVVGWFNTeEhRVUZqYkV3c1IwRkZha0k1UXl4SFFVRlRPRU1zUzBGQllYZEdMRWRCUVZkNFJpeExRVU42UXpoTExFVkJRVmRvU2l4SFFVRm5RbmRJTEV0QlNUZENOMFlzUjBGQlZ5eEZRVWRZUVN4SlFVVkdkRU1zUlVGQlRYUk1MRWxCUVVsNVZDeEZRVUZWZDBJc1IwRkRjRUpHTEVWQlFWVkZMRVZCUVZWNFFpeEZRVUZWY1VJc1JVRkJWWHBLTEVWQlFWbERMRWRCUTNCRVFTeEZRVUZqTEU5QlFVVnRTU3hKUVVWc1FqRktMRWRCUVdsQ2RGa3NSVUZCVVZRc1JVRkJTMmxyUWl4SlFYcEdNVUpMTEVOQlFXTTNha0lzUlVGQlVYWktMRVZCUVZFNFNTeEZRVUZMT0dwQ0xFVkJRVlZFTEVkQlFWZDRTaXhGUVVGWlF5eFBRVVZxUlN4RFFVTklMRWxCUVVreVNpeEZRVUZYTlVvc1JVRkRXRUVzUlVGQlZ6SktMRWRCUVZGMmFrSXNSVUZCVVZRc1IwRkJUWGxwUWl4RlFVRlhlbWxDTEVWQlFVMHNSMEZCUzFNc1JVRkJVWFpLTEVWQlFWRnZha0lzUjBGRGRrVm9iMElzUlVGRlFUSjRRaXhKUVVGaE0zaENMRWxCUTJZeWVFSXNSVUZCVjNoQ0xFZEJSV0l4U2l4SFFVRnBRblJaTEVWQlFWRlVMRVZCUVV0cGEwSXNTMEZGTDBJM1NTeEpRWGRHVEN4VFFVRlRiVW9zUjBGQlVYUnRRaXhGUVVGUE5rTXNSMEZEZEVJc1NVRkJTV2hFTEVWQlFWTkhMRVZCUVUxSUxFOUJRMjVDTEVkQlFVdEJMRVZCU1V3c1QwRkJUM2RoTEVkQlJGQjRXQ3hIUVVGTFFTeEZRVUZKTEVWQlFVbG9SQ3hGUVVGVExFVkJRMHBCTEVkQlFWVkhMRVZCUVUwMlF5eEhRVUZMZUU4c1JVRlpla01zVTBGQlUydDVRaXhIUVVGWk1XdENMRVZCUVZreWEwSXNSVUZCVjBNc1IwRmpNVU1zU1VGQlNYSnRRaXhIUVVGVExFVkJWV0lzVDBGVVFXOXRRaXhGUVVGWmRteENMRWRCWWxaMWJFSXNSVUZFUlVFc1JVRkJWVE50UWl4UFFVTkJiMElzUjBGQlUzVnNRaXhGUVVGWExGTkJRVk4wYlVJc1IwRkRka01zVDBGQlNUUllMRWRCUVZFMVdDeEhRVU5JTEZOQlFWTkhMRWRCUTJRc1QwRkJUM05uUWl4SFFVRlJkR2RDTEVWQlFUSkNMRWxCUVhCQ1NDeEZRVUZUVEN4UFFVRmxTeXhGUVVGVExFZEJRVXRCTEVsQlIzcEVRU3hMUVVkSmVXdENMRWxCU1dsQ2VHaENMRWRCUVZWMWFrSXNUMEZ1ZUVZNVF5eFRRVUZ2UWpGdFFpeEZRVUZQTW0xQ0xFZEJRM3BDTEVsQlFVazViVUlzUlVGQlUwY3NSVUZCVFVnc1QwRkhia0lzU1VGRVFVY3NSVUZCVFRSdFFpeExRVUZMUkN4SFFVTktPVzFDTEV0QlEweEhMRVZCUVUxSUxFZEJRVlZITEVWQlFVMUlMRWRCUVZGUkxFMUJSV2hETEU5QlFVOU1MRVZCY1hoR1JUWnRRaXhEUVZCTmVFSXNSMEZCVVhocVFpeEZRVUZaTEZOQlFWTjRRaXhGUVVGUE1FSXNSVUZCUzBZc1IwRkpjRVFzVDBGQlUybHNRaXhUUVVoTk4yeENMRWRCUVZOMWJFSXNSVUZCVnl4VFFVRlRkRzFDTEVkQlF6RkRMRTlCUVU5QkxFVkJRVk5ITEV0QlJXRkVMRkZCUVZkQkxFVkJRVTlETEUxQlFWTkJMRXRCUjJ4RExGTkJRVk50UXl4RlFVRlJaMllzUjBGRGVrTXNUMEV3TkVKS0xGTkJRWGxDYUdZc1JVRkJVV2RtTEVWQlFVOXBSaXhIUVU5MFF5eEpRVTVCTEVsQlFVbHliVUlzUjBGQlV5eEZRVU5VTW0xQ0xFVkJRV04yYTBJc1JVRkJUM05yUWl4VFFVTnlRa1VzUlVGQlkzaEdMRVZCUVUxelJpeFRRVU53UW1wdVFpeEZRVUZUYTI1Q0xFVkJRVmxzYmtJc1QwRkRja0p2YmtJc1JVRkJaVklzUlVGQlR6VnRRaXhUUVVWcVFrOHNSVUZCVVZBc1IwRkJVU3hEUVVOMlFpeEpRVUZKWlN4RlFVRlRjMjFDTEVkQlFXbENTQ3hGUVVGWk0yMUNMRWRCUVZFMGJVSXNSVUZCV1RWdFFpeEpRVU01UkN4SFFVRkpVU3hGUVVGUkxFTkJRMVlzUjBGQlNWSXNSMEZCVXpadFFpeEZRVU5ZTEU5QlFVOXliVUlzUlVGRlZDeEpRVUZKZFcxQ0xFVkJRVkZXTEVWQlFVOXliVUlzUjBGRGJrSXNUMEZCVDFFc1IwRkJiVUlzVVVGQlZIVnRRaXhIUVVGdFFpeEZRVUZKTEVsQlZUVkRMRTlCUVU4emEwSXNSVUZCVDNCRExFMUJRVkZ2YUVJc1JVRkJUWEJvUWl4TlFXdzJRbTVDWjI1Q0xFTkJRV2RDTld0Q0xFVkJRVkZuWml4RlFVRlBhVVlzUzBFMFFqRkRMRk5CUVZOWkxFZEJRVmMzYTBJc1JVRkJVVzlhTEVWQlFVOXVZaXhIUVV0cVF5eEpRVXBCTEVsQlFVbE1MRWRCUVZNc1JVRkRWRkFzUlVGQlV5dGlMRVZCUVUwdllpeFBRVU5tWlN4UFFVVkxVaXhGUVVGUlVDeEhRVUZSTEVOQlEzWkNMRWxCUVVrclowSXNSVUZCVDJoR0xFVkJRVTE0WWl4SFFVTmlReXhGUVVGUmMyZENMRWRCUVZGdVpTeEZRVUZSYjJVc1IwRkZlRUp1WjBJc1JVRkJWVW9zUlVGQlQzVm5RaXhKUVVOdVFqQkhMRWRCUVZFeGJVSXNSVUZCVVdsblFpeEhRVUZUUkN4RlFVRk5jR1VzUjBGQlUyNURMRWRCUnpWRExFOUJRVTlQTEVWQk1rSlVMRk5CUVZNeWJVSXNSMEZCV1hadVFpeEZRVUZQYjBJc1JVRkJVV3hDTEVWQlFWVmpMRWRCUXpWRExFbEJRVWwzYlVJc1JVRkJWWGh0UWl4RlFVRmhjVUlzUjBGQmEwSjJRaXhIUVVONlExWXNSMEZCVXl4RlFVTlVVQ3hGUVVGVGRVSXNSVUZCVDNaQ0xFOUJRMmhDY1dsQ0xFVkJRVTlzYVVJc1JVRlJXQ3hKUVU1SlFTeEpRVUZWYjBJc1NVRkRXa0VzUlVGQlUzVmFMRWRCUVZWMldpeEpRVVZxUW14Q0xFbEJRMFpuYVVJc1JVRkJUMnBvUWl4SFFVRlRha0lzUlVGQlQyMUVMRWRCUVZWcVJDeFBRVVV4UWtVc1JVRkJVVkFzUjBGTFppeEpRVXBCTEVsQlFVbHZReXhGUVVGWkxFVkJRMW8xUWl4RlFVRlJaU3hGUVVGUGFFSXNSMEZEWmpCbExFVkJRVmMxWlN4RlFVRlhRU3hGUVVGVFJ5eEhRVUZUUVN4SFFVVndRelJDTEVWQlFWbDFiRUlzUlVGQlVYUkdMRVZCUVUxd1JDeEZRVUZWTjJNc1JVRkJWMnBDTEV0QlFXZENMRWRCUTJwRmEyaENMRWxCUVZOc2FVSXNSMEZEV0hGVkxFZEJRVTkyVlN4TFFVRkxiMmxDTEVWQlFVMXFaMElzUlVGQlZ5eEhRVVV2UW05VExFZEJRVTkyVlN4TFFVRkxSU3hGUVVGUGFVTXNSVUZCVnl4SFFVZHNReXhQUVVGUGFrTXNSVUZaVkN4VFFVRlRlVzVDTEVkQlFWZDZia0lzUlVGQlR6QnVRaXhIUVVsNlFpeEpRVWhCTEVsQlFVazNia0lzUlVGQlUwY3NSVUZCVVRCdVFpeEZRVUZSTjI1Q0xFOUJRVk1zUlVGRGJFTnhVaXhGUVVGWmNsSXNSVUZCVXl4RlFVVnNRa0VzUzBGQlZTeERRVU5tTEVsQlFVbFBMRVZCUVZGemJrSXNSVUZCVVRkdVFpeEhRVU53UWl4SFFVRkpRU3hIUVVGVmNWSXNSMEZCWVRsUkxFbEJRVlYxYmtJc1JVRkJWU3hEUVVNM1F5eEpRVUZKUVN4RlFVRlhkbTVDTEVWQlExaHBZU3hIUVVGUmFtRXNSMEZEVm1sVkxFZEJRVTkyVlN4TFFVRkxSU3hGUVVGUFNTeEZRVUZQTEVkQlJURkNkMjVDTEVkQlFWVTFia0lzUlVGQlQwa3NTVUZKZGtJc1QwRkJUMG9zUlVGWlZDeFRRVUZUZDJFc1IwRkJWM2RDTEVWQlFVOURMRWRCUTNwQ0xFOUJRVTlFTEVWQlFWRXhSeXhIUVVGWlowSXNUVUZCYTBJeVJpeEZRVUZSUkN4RlFVRlJMRWxCYTBNdlJDeFRRVUZUTmt3c1IwRkJWemxyUWl4RlFVRlJSaXhIUVVNeFFpeEpRVUZKYWtNc1JVRkJVeXhIUVVOaUxFbEJRVXR0UXl4SFFVRlZSaXhGUVVGSkxFZEJRVXRCTEVWQlFVa3hUU3hGUVVNeFFpeFBRVUZQZVVzc1JVRkpWQ3hIUVVOTmFVTXNSVUZCU1N4SlFVTk9ha01zUjBGQlZXMURMRWxCUlZwR0xFVkJRVWw1VXl4SFFVRlplbE1zUlVGQlNTeE5RVVZzUWtVc1IwRkJWVUVzVTBGRlRFWXNSMEZGVkN4UFFVRlBha01zUlVGWFZDeFRRVUZUYTI1Q0xFZEJRVk53YjBJc1JVRkJUWEZ2UWl4SFFVTjBRaXhQUVVGUFF5eEhRVUZaUXl4SFFVRlRkbTlDTEVWQlFVMXhiMElzUlVGQlQzQkVMRWxCUVZkcWJFSXNSVUZCVHl4SlFWVTNSQ3hUUVVGVGQyOUNMRWRCUVZkeWJVSXNSMEZEYkVJc1QwRkJUekJaTEVkQlFWbHVXaXhIUVVGUFV5eEpRVmMxUWl4VFFVRlRjMjFDTEVkQlFXVjBiVUlzUlVGQldXZENMRWRCUTJ4RExFbEJRVWszUXl4RlFVRlJiMElzUjBGQlQxTXNSMEZEYmtJc1QwRkJUelpaTEVkQlFWa3hZU3hGUVVGUE5HRXNSMEZCVlM5WUxFVkJRVWNzUlVGQlJ6ZERMRVZCUVUxSUxGTkJZV3hFTEZOQlFWTjVia0lzUjBGQlVUbHJRaXhGUVVGUmIyVXNSVUZCVFhablFpeEZRVUZQSzJJc1IwRkRjRU1zU1VGQlMyaEZMRWRCUVZNMVZpeEhRVU5hTEU5QlFVOUJMRVZCVTFRc1NVRk1RU3hKUVVGSmNFTXNSMEZCVXl4RlFVTlVVQ3hIUVVoS0syZENMRVZCUVU5RExFZEJRVk5FTEVWQlFVMXdaU3hKUVVkS00wTXNUMEZEWkhGU0xFVkJRVmx5VWl4RlFVRlRMRVZCUTNKQ2RXOUNMRVZCUVZNMWJFSXNSVUZGU1N4TlFVRldOR3hDTEV0QlFXOUNhRzlDTEVWQlFWRlFMRWRCUVZFc1EwRkRla01zU1VGQlNXdERMRVZCUVUwclpTeEhRVUZOUml4RlFVRkxlR2RDTEVsQlEycENOR3hDTEVWQlFWY3piRUlzUlVGRlppeEhRVUZaTEdOQlFWSXdRaXhIUVVFclFpeG5Ra0ZCVWtFc1IwRkJhVU1zWTBGQlVrRXNSVUZEYkVRc1QwRkJUMU1zUlVGSFZDeEhRVUZKY0VNc1IwRkJVemhSTEVWQlFWY3NRMEZEZEVJc1NVRkJTV2RMTEVWQlFWZHJUaXhGUVVGUGNtMUNMRWxCUTNSQ2FXdENMRVZCUVZjMVNpeEZRVUZoUVN4RlFVRlhiRUlzUlVGQlZXNWFMRVZCUVV0eGJVSXNSMEZCVlM5NlFpeExRVU16UTBFc1NVRkRaako0UWl4RlFVRlhOVTRzUjBGQlV6aERMRWRCUTJoQ1FTeEZRVU5EWWl4SFFVRlJkVWNzUlVGQlMzaG5RaXhGUVVGUkxGZEJSemxDTm1Fc1IwRkJXVzFPTEVWQlFWRnliVUlzUlVGQlMybHJRaXhIUVVONlFtOURMRVZCUVZOQkxFVkJRVTl5YlVJc1IwRkZiRUlzVDBGQlQxTXNSVUZYVkN4SlFVRkpObXhDTEVkQlFXVnlVaXhIUVVGeFFpeFRRVUZUZEZnc1JVRkJUV3RoTEVkQlJYSkVMRTlCUkVFMVF5eEhRVUZSYWtjc1NVRkJTWEpTTEVWQlFVMXJZU3hIUVVOWWJHRXNSMEZHYjBKcGJFSXNSMEZoZWtJeVJDeEhRVUZ0UWpGVUxFZEJRVFJDTEZOQlFWTnNWaXhGUVVGTmNVUXNSMEZEYUVVc1QwRkJUelpTTEVkQlFXVnNWaXhGUVVGTkxGbEJRekZDT0dJc1kwRkJaMElzUlVGRGFFSkRMRmxCUVdNc1JVRkRaSEJpTEUxQlFWTnJiMElzUjBGQlUzaHNRaXhIUVVOc1FqSlpMRlZCUVZrc1MwRk1kMEpwU2l4SFFXZENlRU1zVTBGQlV6WkVMRWRCUVZremJVSXNSMEZEYmtJc1QwRkJUelpaTEVkQlFWbDBXaXhIUVVGUFV5eEpRVmsxUWl4VFFVRlRORzFDTEVkQlFWVjZiMElzUlVGQlR5dHVRaXhGUVVGUFZ5eEhRVU12UWl4SlFVRkpkRzlDTEVkQlFWTXNSVUZEVkZBc1JVRkJVMGNzUlVGQlRVZ3NUMEZGWm10dlFpeEZRVUZSTEVsQlExWkJMRWRCUVZOQkxFVkJRVkZzYjBJc1JVRkJVeXhGUVVGTFFTeEZRVUZUYTI5Q0xFbEJSVEZEVnl4RlFVRk5RU3hGUVVGTk4yOUNMRVZCUVZOQkxFVkJRVk0yYjBJc1IwRkRjRUlzU1VGRFVrRXNSMEZCVHpkdlFpeEhRVVZVUVN4RlFVRlRhMjlDTEVWQlFWRlhMRVZCUVUwc1JVRkJUVUVzUlVGQlRWZ3NTVUZCVnl4RlFVTTVRMEVzUzBGQlZ5eEZRVWRZTEVsQlJFRXNTVUZCU1c1dVFpeEZRVUZUVFN4SFFVRk5ja0lzUzBGRFZrOHNSVUZCVVZBc1IwRkRabVVzUlVGQlQxSXNSMEZCVTBvc1JVRkJUVWtzUlVGQlVUSnVRaXhIUVVWb1F5eFBRVUZQYm01Q0xFVkJXVlFzVTBGQlV5dHVRaXhIUVVGVE9XMUNMRVZCUVZsd1FpeEhRVU0xUWl4SlFVRkpSeXhGUVUxS0xFOUJTa0Y1WVN4SFFVRlRlRm9zUlVGQldTeFRRVUZUZUVJc1JVRkJUMFFzUlVGQlQzbENMRWRCUlRGRExGRkJSRUZxUWl4RlFVRlRTQ3hGUVVGVlNpeEZRVUZQUkN4RlFVRlBlVUlzVVVGSE1VSnFRaXhGUVdWWUxGTkJRVk5uYjBJc1IwRkJaMEkxYjBJc1JVRkJUMHNzUlVGQlQzZHZRaXhIUVVOeVF5eEpRVUZKUXl4RlFVRk5MRVZCUTA1RExFVkJRV2RDTEUxQlFWUXZiMElzUlVGQlowSTRiMElzUlVGQlRUbHZRaXhGUVVGTlNDeFBRVVYyUXl4SFFVRnZRaXhwUWtGQlZGRXNSMEZCY1VKQkxFZEJRVlZCTEVkQlFWTXdiMElzUjBGQlVYWjVRaXhGUVVGMVFpeERRVU5vUml4TFFVRlBjM2xDTEVWQlFVMURMRWRCUVUwc1EwRkRha0lzU1VGQlNVTXNSVUZCVDBZc1JVRkJUVU1zU1VGQlZTeEZRVU4yUW1wTExFVkJRVmM1WlN4RlFVRk5aM0JDTEVkQlJVb3NUMEZCWW14TExFbEJRWE5DYTBJc1IwRkJVMnhDTEV0QlF6bENLMG9zUlVGQll5OUtMRWRCUVZsNlpTeEZRVUZWZVdVc1JVRkJWM3BsTEVkQlEyeEVlVzlDTEVWQlFVMUZMRVZCUVUwc1JVRkZXa1FzUlVGQlQwTXNSVUZIV0N4UFFVRlBSQ3hGUVVWVUxFOUJRVTlGTEVkQlFXdENhbkJDTEVWQlFVOUxMRVZCUVU5emEwSXNSMEZCVld0RkxFZEJaMEp1UkN4VFFVRlRTU3hIUVVGclFtcHdRaXhGUVVGUFN5eEZRVUZQU0N4RlFVRlZNbTlDTEVkQlEycEVMRWxCUVVsRExFVkJRVTBzUlVGRFRrTXNSVUZCWjBJc1RVRkJWQzl2UWl4RlFVRm5RaXhGUVVGSlFTeEZRVUZOU0N4UFFVTnlReXhIUVVGaExFbEJRVlJyY0VJc1JVRkRSaXhQUVVGUExFVkJVMVFzU1VGTVFTeEpRVUZKUnl4SFFVUktOMjlDTEVWQlFWRklMRVZCUVZOSExFdEJRMUZCTEVWQlEzSkNPRzlDTEVWQlFYTkNMRTlCUVZZNWIwSXNSVUZEV2l0dlFpeEZRVUZqY0Vvc1IwRkJVek5tTEVkQlEzWkNaM0JDTEVWQlFXbENhSEJDTEVsQlFWVm9UU3hGUVVWNFFua3dRaXhGUVVGTlF5eEhRVUZOTEVOQlEycENMRWxCUVVsRExFVkJRVTB4VkN4SlFVRmhkMVFzUlVGQlRVTXNSMEZCVVN4SFFVTnFRMnBMTEVWQlFWYzFaU3hGUVVGVFJpeEZRVUZOWjNCQ0xFbEJRekZDVFN4RlFVRmxlRXNzU1VGQllYcHhRaXhGUVVNMVFtc3hRaXhGUVVGNVFpeFBRVUZpZWtzc1JVRkRXakJMTEVWQlFXbENNVXNzUjBGQllVRXNSVUZET1VJeVN5eEZRVUZqZWtvc1IwRkJVMnhDTEVkQlJUTkNMRWRCUVVsdlN5eEZRVU5HTEVsQlFVbFJMRVZCUVZOaUxFZEJRV05YTEU5QlJUTkNSU3hGUVVSVFRDeEZRVU5CUnl4SlFVRnRRbGdzUjBGQlkxTXNSMEZEYWtOSUxFVkJRMEZMTEVkQlFXdENSaXhKUVVGcFFsUXNTVUZCWlZVc1IwRkRiRVJJTEVWQlEwRkpMRWRCUVd0Q1JpeEpRVUZwUWtNc1NVRkJZMVlzU1VGQlpWa3NTVUZEYUVWR0xFbEJRV0ZGTEVsQlIySmFMRVZCUVdNdlNpeEhRVUZaZW1Vc1JVRkJWWGxsTEVWQlFWZDZaU3hIUVVWMFJIRndRaXhGUVVOR1dpeEZRVUZOUlN4RlFVRk5MRVZCUlZwRUxFVkJRVTlETEVWQlIxZ3NUMEZCVHpsVExFZEJRVlUyVXl4RlFVRk5lSGxDTEVkQldYcENMRk5CUVZOdmVrSXNSMEZCWlROd1FpeEZRVUZQUlN4SFFVMDNRaXhKUVV4QkxFbEJRVWxGTEVkQlFWTXNSVUZEVkZBc1JVRkJVMGNzUlVGQlRVZ3NUMEZEWm1Nc1JVRkJWeXhGUVVOWVF5eFBRVVZMVWl4RlFVRlJVQ3hIUVVGUkxFTkJRM1pDTEVsQlFVbFJMRVZCUVZGTUxFVkJRVTFKTEVkQlEyUXdaU3hGUVVGWE5XVXNSVUZCVjBFc1JVRkJVMGNzUjBGQlUwRXNSVUZGTlVNc1NVRkJTMFFzU1VGQlZUSmhMRWRCUVVjclJDeEZRVUZWYjBRc1IwRkJUeXhEUVVOcVF5eEpRVUZKUVN4RlFVRlBjRVFzUlVGRFdHeGxMRVZCUVU5RUxFdEJRWGRDTEVsQlFWWk9MRVZCUVdNc1JVRkJTVUVzUjBGSE0wTXNUMEZCVDA4c1JVRlhWQ3hUUVVGVFozQkNMRWRCUVdGMmNFSXNSMEZEY0VJc1RVRkJiMElzYVVKQlFWUkJMRVZCUTBaQkxFVkJSVXd5Wml4SFFVRlRNMllzUjBGRFNtaExMRWRCUlVSblN5eEZRVmRXTEZOQlFWTjNjRUlzUjBGQllYaHdRaXhIUVVWd1FpeEhRVUZ2UWl4cFFrRkJWRUVzUlVGRFZDeFBRVUZQUVN4RlFVVlVMRWRCUVVsNVdDeEhRVUZSZWxnc1IwRkZWaXhQUVVGUFdTeEhRVUZUV2l4RlFVRlBkM0JDTEVsQlFXZENMRWRCUlhwRExFZEJRVWszU2l4SFFVRlRNMllzUjBGRFdDeFBRVUZQYzFnc1IwRkJhVUpCTEVkQlFXVTNXQ3hMUVVGTFR5eEhRVUZUTEVkQlJYWkVMRWxCUVVsUExFVkJRVlZRTEVWQlFWRXNSMEZEZEVJc1RVRkJhMElzUzBGQlZrOHNSMEZCYTBJc1JVRkJTVkFzU1VGQlYyNUxMRVZCUVZrc1MwRkJUekJMTEVWQldUbEVMRk5CUVZOcmNFSXNSMEZCVXpsd1FpeEZRVUZQUlN4RlFVRlZZeXhIUVVOcVF5eEpRVUZKV2l4SFFVRlRMRVZCUTFSelpTeEZRVUZYTjJRc1IwRkRXR2hDTEVWQlFWTkhMRVZCUVUxSUxFOUJRMlk0WlN4SFFVRlhMRVZCUTFndlpDeExRVU5CYzJoQ0xFVkJRVTkwYUVJc1JVRkZXQ3hIUVVGSlNTeEZRVU5HTW1Rc1IwRkJWeXhGUVVOWVJDeEZRVUZYTTJRc1VVRkZVaXhIUVVGSmJFSXNSMEZCVlhaTUxFVkJRV3RDTEVOQlEyNURMRWxCUVVsNVl5eEZRVUZOTjFFc1JVRkJWeXhMUVVGUE5uQkNMRWRCUVZVdmNFSXNSMEZEZEVNc1IwRkJTU3RSTEVWQlEwWXNUMEZCVDBRc1IwRkJWME1zUjBGRmNFSTBUaXhIUVVGWExFVkJRMWhFTEVWQlFWZHdZaXhIUVVOWU5HVXNSVUZCVHl4SlFVRkpNVWtzVVVGSFdEQkpMRVZCUVU5b2FVSXNTMEZCWjBKVkxFVkJSWHBDYVdVc1JVRkRRU3hQUVVGVGVtVXNSVUZCVVZBc1IwRkJVU3hEUVVOMlFpeEpRVUZKVVN4RlFVRlJUQ3hGUVVGTlNTeEhRVU5rTUdVc1JVRkJWelZsTEVWQlFWZEJMRVZCUVZOSExFZEJRVk5CTEVWQlJ6VkRMRWRCUkVGQkxFVkJRVk5YTEVkQlFYZENMRWxCUVZaWUxFVkJRV1ZCTEVWQlFWRXNSVUZETVVOelpTeEhRVUZaUnl4SFFVRmhRU3hGUVVGVkxFTkJSWEpETEVsQlJFRXNTVUZCU1d0TUxFVkJRVms1U0N4RlFVRkxjbWxDTEU5QlEyUnRjVUlzUzBGRFRDeEhRVUZKT1Vnc1JVRkJTemhJTEV0QlFXVnNUQ3hGUVVOMFFpeFRRVUZUUkN4RlFVZFVNMlVzUjBGRFJtZHBRaXhGUVVGTE5VZ3NTMEZCUzNkRkxFZEJSVnBzWlN4RlFVRlBNRm9zUzBGQlMycGhMRkZCUlVweFpTeEZRVUZUZDBRc1JVRkJUWEJFTEVWQlFWVTVaQ3hMUVVNM1FtdG9RaXhKUVVGVGRHaENMRWRCUTFoemFFSXNSVUZCU3pWSUxFdEJRVXQzUlN4SFFVVmFiR1VzUlVGQlR6QmFMRXRCUVV0cVlTeEpRVWRvUWl4UFFVRlBUeXhGUVZkVUxGTkJRVk5uYmtJc1IwRkJWWEJzUWl4RlFVRlJiMlVzUjBGSGVrSXNUMEZCYVVJc1QwRkVha0p3WlN4RlFVRlROR1lzUjBGQlR6Vm1MRVZCUkdoQ2IyVXNSVUZCVDBNc1IwRkJVMFFzUlVGQlRYQmxMR0ZCUlZWQkxFVkJRVTl6WlN4SFFVRk5kVUlzUjBGQlMzcENMRXRCWVhCRUxGTkJRVk54U2l4SFFVRlhlbTVDTEVWQlFWRnZaU3hGUVVGTmMwb3NSVUZCVXpsT0xFZEJRM3BETEU5QlFVOXJUQ3hIUVVGUk9XdENMRVZCUVZGdlpTeEZRVUZOYzBvc1JVRkJVWFpLTEVkQlFWRnVaU3hGUVVGUmIyVXNTVUZCVVhoRkxFZEJZeTlFTEZOQlFWTXJUaXhIUVVGVmJuRkNMRVZCUVU5VExFVkJRVmN5Y0VJc1JVRkJVV3h2UWl4SFFVa3pReXhKUVVoQkxFbEJRVWx5UXl4RlFVRlRSeXhGUVVGTlNDeFBRVU5tVHl4RlFVRlJPRUlzUlVGQldYSkRMRWRCUVZVc1IwRkZNVUp4UXl4RlFVRlpPVUlzVFVGQldVRXNSVUZCVVZBc1NVRkRkRU5aTEVWQlFWVlVMRVZCUVUxSkxFZEJRVkZCTEVWQlFVOUtMRXRCUldwRExFOUJRVTl2Y1VJc1JVRkRTRE5DTEVkQlFWVjZiMElzUlVGQlVXdERMRVZCUVZrc1JVRkJTVGxDTEVWQlFWTTRRaXhGUVVGWk9VSXNSVUZCVVN4RlFVRkpVQ3hIUVVOdVJUUnZRaXhIUVVGVmVtOUNMRVZCUVZGclF5eEZRVUZaT1VJc1JVRkJVU3hGUVVGSkxFVkJRVXM0UWl4RlFVRlpja01zUlVGQlUwOHNSMEZoTVVVc1UwRkJVMmx4UWl4SFFVRnBRbWh4UWl4RlFVRlBhWEZDTEVkQlF5OUNMRWxCUVVreGNFSXNSVUZCVTFBc1JVRkpZaXhQUVVoSlR5eGhRVUZyUW0xWUxFdEJRM0JDYmxnc1JVRkJVMEVzUlVGQlQxQXNVMEZGV0dsQ0xFZEJRVmxuY0VJc1JVRkJVeXhUUVVGVE1YQkNMRVZCUVZFeWNFSXNSMEZETTBNc1QwRkJUMEVzUlVGQlR6ZHhRaXhMUVVGTFJDeE5RVUZOT0hGQ0xFVkJRVTgxY1VJc1VVRkJVM2RDTEVsQlFWZFFMRWRCUVZNeWNFSXNSVUZCVHpOeFFpeFJRVU51UldkQ0xFZEJZVXdzVTBGQlV6UndRaXhIUVVGUk5Va3NSVUZCVVRGb1FpeEZRVUZWWXl4SFFVTnFReXhKUVVGSmJrSXNSVUZCVXl0b1FpeEZRVUZQTDJoQ0xFOUJRM0JDTEVkQlFVbEJMRVZCUVZNc1JVRkRXQ3hQUVVGUFFTeEZRVUZUYVhGQ0xFZEJRVk5zU1N4RlFVRlBMRTlCUzJ4RExFbEJTRUVzU1VGQlNYaG9RaXhIUVVGVExFVkJRMVJSTEVWQlFWTk5MRWRCUVUxeVFpeExRVVZXVHl4RlFVRlJVQ3hIUVVsbUxFbEJTRUVzU1VGQlNVY3NSVUZCVVRSb1FpeEZRVUZQZUdoQ0xFZEJRMll3YUVJc1IwRkJXU3hKUVVWUVFTeEZRVUZYYW1sQ0xFZEJRMlJwYVVJc1IwRkJXVEZvUWl4SlFVTmtVU3hGUVVGUFVpeEhRVUZUY1dVc1IwRkJaVGRrTEVWQlFVOVNMRWxCUVZWS0xFVkJRVTgwYUVJc1JVRkJUMFVzUjBGQlZ6Vm9RaXhGUVVGVll5eEpRVWw2Uml4UFFVRlBPRzlDTEVkQlFWTTFTaXhIUVVGWmRHWXNSVUZCVVN4SFFVRkpWaXhGUVVGVll5eEhRVmx3UkN4VFFVRlRlWEJDTEVkQlFXTndia0lzUlVGQlQycERMRVZCUVZGemNFSXNSMEZOY0VNc1NVRk1RU3hKUVVGSmRIRkNMRWRCUVZNc1JVRkRWRkFzUlVGQlUzZEVMRVZCUVUxNFJDeFBRVU5tT0hGQ0xFVkJRV0YyY0VJc1JVRkJUM1pDTEU5QlEzQkNaU3hQUVVWTFVpeEZRVUZSVUN4SFFVRlJMRU5CUTNaQ0xFbEJRVWxSTEVWQlFWRkVMRVZCUVZGMWNVSXNSVUZCWVhad1FpeEZRVUZQYUVJc1IwRkJVeTlNTEVWQlEycEVjVEpDTEVWQlFWYzVjRUlzUlVGQlVYbERMRVZCUVUxcVJDeEhRVUZSUXl4SFFVVnVReXhQUVVGUFR5eEZRVlZVTEZOQlFWTm5jVUlzUjBGQmIwSjJjVUlzUjBGRE0wSXNUMEZCVHpac1FpeEhRVUZyUWpkc1FpeEhRVUZUUVN4TFFWVndReXhUUVVGVGQzRkNMRWRCUVdGNGNVSXNSMEZEY0VJc1RVRkJkVUlzYlVKQlFWUkJMRVZCUVhOQ1FTeEZRVUZSYzJ0Q0xFZEJWemxETEZOQlFWTTVSQ3hIUVVGVGVHZENMRVZCUVU5dFF5eEhRVU4yUWl4UFFVRkpjMVlzUjBGQlVYcFlMRWRCUTBoQkxFVkJSVVp2YkVJc1IwRkJUWEJzUWl4RlFVRlBiVU1zU1VGQlYyNURMRWRCUVZONWNVSXNSMEZCWVRkWUxFZEJRVk0xVXl4SlFWbG9SU3hKUVVGSk1IRkNMRWRCUVZkcVJDeEhRVmRtTEZOQlFWTnJSQ3hIUVVGVmFISkNMRVZCUVU4cmJrSXNSVUZCVDFjc1IwRkRMMElzU1VGQlNUZHZRaXhGUVVGVFJ5eEZRVUZOU0N4UFFVVnVRaXhQUVVSQk5tOUNMRVZCUVUxQkxFbEJRVkZ5TUVJc1JVRkJXWGRNTEVWQlFWTTJiMElzUjBGRE1VSllMRWRCUVZOWExFZEJRVTgzYjBJc1JVRkJWVWNzUlVGQlVYbHZRaXhIUVVGVmVtOUNMRVZCUVU4cmJrSXNSVUZCVDFjc1IwRlRja1VzU1VGQlNUTlVMRWRCUVdWRUxFbEJRVzFDTEZOQlFWTnRWeXhIUVVNM1F5eFBRVUZQYm5SQ0xFZEJRVXRwV0N4aFFVRmhhMWNzU1VGWE0wSXNVMEZCVTJ4UExFZEJRVmxoTEVWQlFWRjBRaXhIUVVNelFpeEhRVUZKUVN4RlFVTkdMRTlCUVU5elFpeEZRVUZQTldFc1VVRkZhRUlzU1VGQlNXNUVMRVZCUVZNclpDeEZRVUZQTDJRc1QwRkRhRUpsTEVWQlFWTnRWQ3hIUVVGalFTeEhRVUZaYkZVc1IwRkJWU3hKUVVGSksyUXNSVUZCVDI1Q0xGbEJRVmsxWXl4SFFVZDRSU3hQUVVSQksyUXNSVUZCVDNOT0xFdEJRVXQwY1VJc1IwRkRURUVzUlVGVlZDeFRRVUZUT0dNc1IwRkJhVUo1VGl4SFFVTjRRaXhKUVVGSmRuRkNMRVZCUVZNc1NVRkJTWFZ4UWl4RlFVRlpNVThzV1VGQldUQlBMRVZCUVZseVRpeFpRVVZ5UkN4UFFVUkJMRWxCUVVsb1N5eEhRVUZYYkZRc1IwRkJVVzFSTEVsQlFVa3NTVUZCU1N0RExFZEJRVmR4V0N4SlFVTnVRM1p4UWl4RlFXZEVWQ3hUUVVGVGIyUXNSMEZCWjBKdlRpeEZRVUZaT1U4c1IwRkRia01zU1VGQlNYTkNMRVZCUVZOMFFpeEZRVUZUYjBJc1IwRkJhVUl3VGl4RlFVRlhlRTRzVVVGQlZYZE9MRVZCUVZkNFRpeFBRVU4yUlN4UFFVRlBMRWxCUVVsM1RpeEZRVUZYTTA4c1dVRkJXVzFDTEVWQlFWRjNUaXhGUVVGWGRrNHNWMEZCV1hWT0xFVkJRVmQyY2tJc1VVRlhPVVVzVTBGQlUzRnVRaXhIUVVGcFFqZHRRaXhGUVVGUGJXaENMRWRCUXk5Q0xFZEJRVWx1YUVJc1NVRkJWVzFvUWl4RlFVRlBMRU5CUTI1Q0xFbEJRVWsyU2l4RlFVRmxhSEpDTEVsQlFWVm9UU3hGUVVONlFqZ3dRaXhGUVVGelFpeFBRVUZXT1c5Q0xFVkJRMXBwY2tJc1JVRkJhVUpxY2tJc1IwRkJWVUVzUlVGRE0wSXJiMElzUlVGQlkzQktMRWRCUVZNelppeEhRVVYyUW1sd1FpeEZRVUZsT1Vnc1NVRkJWVzUwUWl4RlFVTjZRbXN4UWl4RlFVRnpRaXhQUVVGV0wwZ3NSVUZEV21kSkxFVkJRV2xDYUVrc1IwRkJWVUVzUlVGRE0wSnBTU3hGUVVGamVrb3NSMEZCVTNkQ0xFZEJSVE5DTEVsQlFVMHJTQ3hKUVVGalJTeEpRVUZuUWt3c1IwRkJaUzl2UWl4RlFVRlJiV2hDTEVkQlEzUkVORWdzUjBGQlpVVXNSMEZCWjBKRkxFbEJRVzFDUkN4SlFVRmpSU3hIUVVOb1JVNHNSMEZCWVVjc1IwRkJaMEpGTEVsQlF6VkNOa0lzUjBGQlowSTNRaXhKUVVOcVFqaENMRVZCUTBnc1QwRkJUeXhGUVVWVUxFbEJRVTF1UXl4SlFVRmpReXhKUVVGblFrc3NSMEZCWlhCd1FpeEZRVUZSYldoQ0xFZEJRM1JFYVVrc1IwRkJaVFJDTEVkQlFXZENReXhKUVVGdFFtNURMRWxCUVdORExFZEJRMmhGUnl4SFFVRmhPRUlzUjBGQlowSkRMRWxCUXpWQ2FFTXNSMEZCWjBKblF5eEpRVU5xUWpsQ0xFVkJRMGdzVDBGQlVTeEZRVWRhTEU5QlFVOHNSVUYxUkZRc1UwRkJVeXRDTEVkQlFWa3pja0lzUlVGQlRUUnlRaXhGUVVGVlF5eEZRVUZUUXl4SFFWVTFReXhKUVZSQkxFbEJRVWxETEVkQlFXRXNSVUZEWWtNc1JVRkJZV2h6UWl4RlFVRkxReXhQUVVOc1FtZHpRaXhGUVVGblFrb3NSVUZCVVRWeVFpeFBRVU40UW1selFpeEhRVUZoTEVWQlEySkRMRVZCUVdGUUxFVkJRVk16Y2tJc1QwRkRkRUp0YzBJc1JVRkJZMmhYTEVkQlFWVTBWaXhGUVVGaFF5eEZRVUZsTEVkQlEzQkVhbkpDTEVWQlFWTk5MRWRCUVUwMmNVSXNSVUZCWVVNc1IwRkROVUpETEVkQlFXVlFMRWxCUlZaSkxFVkJRVmxETEVkQlEyNUNibkpDTEVWQlFVOXJja0lzUjBGQllVNHNSVUZCVTAwc1IwRkZMMElzVDBGQlUwZ3NSVUZCV1VVc1NVRkRaa2tzUjBGQlpVNHNSVUZCV1VNc1MwRkROMEpvY2tJc1JVRkJUelp4UWl4RlFVRlJSU3hKUVVGakwzSkNMRVZCUVVzcmNrSXNTVUZIZEVNc1MwRkJUMHNzUzBGRFRIQnlRaXhGUVVGUGEzSkNMRXRCUVdWc2MwSXNSVUZCU3l0eVFpeExRVVUzUWl4UFFVRlBMM0ZDTEVWQlkxUXNVMEZCVTNOeVFpeEhRVUZwUW5SelFpeEZRVUZOTkhKQ0xFVkJRVlZETEVWQlFWTkRMRWRCVjJwRUxFbEJWa0VzU1VGQlNVTXNSMEZCWVN4RlFVTmlReXhGUVVGaGFITkNMRVZCUVV0RExFOUJRMnhDYzNOQ0xFZEJRV2RDTEVWQlEyaENUaXhGUVVGblFrb3NSVUZCVVRWeVFpeFBRVU40UW5WelFpeEhRVUZqTEVWQlEyUkRMRVZCUVdOaUxFVkJRVk16Y2tJc1QwRkRka0p0YzBJc1JVRkJZMmhYTEVkQlFWVTBWaXhGUVVGaFF5eEZRVUZsTEVkQlEzQkVhbkpDTEVWQlFWTk5MRWRCUVUwNGNVSXNSVUZCWTBzc1IwRkROMEpLTEVkQlFXVlFMRWxCUlZaRExFVkJRVmxMTEVkQlEyNUNjSEpDTEVWQlFVOHJjVUlzUjBGQllTOXlRaXhGUVVGTEszSkNMRWRCUnpOQ0xFbEJSRUVzU1VGQlNYUnhRaXhGUVVGVGMzRkNMRWxCUTBwVExFVkJRV0ZETEVkQlEzQkNlbkpDTEVWQlFVOVRMRVZCUVZNcmNVSXNSMEZCWTFvc1JVRkJVMWtzUjBGRmVrTXNUMEZCVTBRc1JVRkJaVTRzU1VGRGJFSkpMRWRCUVdWT0xFVkJRVmxETEV0QlF6ZENhSEpDTEVWQlFVOVRMRVZCUVZOdmNVSXNSVUZCVVZVc1NVRkJhVUoyYzBJc1JVRkJTeXR5UWl4TlFVZHNSQ3hQUVVGUEwzRkNMRVZCVjFRc1UwRkJVeXRhTEVkQlFWVXhhRUlzUlVGQlVTdEhMRWRCUTNwQ0xFbEJRVWxKTEVkQlFWTXNSVUZEVkZBc1JVRkJVelZITEVWQlFVODBSeXhQUVVkd1FpeEpRVVJCUnl4SlFVRlZRU3hGUVVGUmEwSXNSMEZCVFhKQ0xFMUJRMlpQTEVWQlFWRlFMRWRCUTJaSExFVkJRVTFKTEVkQlFWTnVTQ3hGUVVGUGJVZ3NSMEZGZUVJc1QwRkJUMG9zUlVGaFZDeFRRVUZUZFdJc1IwRkJWM1JwUWl4RlFVRlJiMHNzUlVGQlQySXNSVUZCVVRSYUxFZEJRM3BETEVsQlFVbHJVU3hIUVVGVE9YQkNMRVZCUTJKQkxFbEJRVmRCTEUxQlMxZ3NTVUZJUVN4SlFVRkpjRU1zUjBGQlV5eEZRVU5VVUN4RlFVRlRkMFFzUlVGQlRYaEVMRk5CUlZaUExFVkJRVkZRTEVkQlFWRXNRMEZEZGtJc1NVRkJTV3RETEVWQlFVMXpRaXhGUVVGTmFrUXNSMEZGV2pSc1FpeEZRVUZYTlVvc1JVRkRXRUVzUlVGQlZ6VmFMRVZCUVU5VUxFZEJRVTA1U1N4RlFVRlBPRWtzUjBGQlRVRXNSVUZCUzFNc1JVRkJVWFpLTEVkQlEyeEVOVVVzUlVGRlFUSjRRaXhKUVVGaE0zaENMRWxCUTJZeWVFSXNSVUZCVnk5elFpeEZRVUZQT0Vrc1NVRkZhRUoxY1VJc1JVRkRSblJTTEVkQlFXZENlRmtzUlVGQlVWUXNSVUZCUzJsclFpeEhRVVUzUWk5TExFZEJRVmw2V1N4RlFVRlJWQ3hGUVVGTGFXdENMRWRCUnpkQ0xFOUJRVTk0YWtJc1JVRnRRMVFzVTBGQlV5dHdRaXhIUVVGcFFuUnpRaXhGUVVGUmRYTkNMRWRCUTJoRExFOUJRVThzVTBGQlV6TnhRaXhGUVVGWk0wSXNSMEZETVVJc1NVRkJTVklzUlVGQlQyOVpMRWRCUVZGcVZ5eEhRVUZqT1VJc1IwRkJhMEp4WWl4SFFVTXZRMnBpTEVWQlFXTnhjMElzUlVGQlkwRXNUMEZGYUVNc1QwRkJUemx6UWl4RlFVRkxiVU1zUlVGQldUVkNMRVZCUVZGNWJVSXNSMEZCV1hodFFpeEZRVUZWTEVkQlFVbERMRWxCVnpsRUxGTkJRVk56YzBJc1IwRkJaVU1zUjBGRGRFSXNUMEZCVHpWRkxFZEJRVk1zVTBGQlUzUnNRaXhGUVVGUmJYRkNMRWRCUXk5Q0xFbEJRVWwyYzBJc1IwRkJVeXhGUVVOVVVDeEZRVUZUT0hOQ0xFVkJRVkU1YzBJc1QwRkRha0oxWXl4RlFVRmhkbU1zUlVGQlV5eEZRVUZKT0hOQ0xFVkJRVkU1YzBJc1JVRkJVeXhIUVVGTGVFd3NSVUZEYUVSMU5FSXNSVUZCVVM5elFpeEZRVUZUTEVWQlFVazRjMElzUlVGQlVTeEhRVUZMZERSQ0xFVkJWM1JETEVsQlZFRXJia0lzUlVGQlkzTlJMRVZCUVZNM2MwSXNUMEZCVXl4SFFVRXdRaXh0UWtGQlpIVmpMRWRCUTNaRGRtTXNTVUZCVlhWakxFZEJRMWd2YmtJc1JVRkZRWFUwUWl4SFFVRlRReXhIUVVGbFJpeEZRVUZSTEVkQlFVbEJMRVZCUVZFc1IwRkJTVU1zUzBGRGJFUjRVU3hGUVVGaGRtTXNSVUZCVXl4RlFVRkplRXdzUlVGQldTdHVRaXhGUVVOMFEzWmpMRVZCUVZNc1IwRkZXREpETEVWQlFWTTNSU3hIUVVGUE5rVXNTMEZEVUhCRExFVkJRVkZRTEVkQlFWRXNRMEZEZGtJc1NVRkJTVFZITEVWQlFWTXdla0lzUlVGQlVYWnpRaXhIUVVOcVFtNUlMRWRCUTBaNWVrSXNSVUZCVTJ4eFFpeEZRVUZSZGtvc1JVRkJVVzFJTEVWQlFVOW5ZeXhIUVVkd1F5eFBRVUZQTlZvc1NVRlpXQ3hUUVVGVGEyUXNSMEZCWlRWa0xFVkJRVlZKTEVkQlEyaERMRTlCUVU4c1UwRkJVMHdzUlVGQldUTkNMRWRCUXpGQ0xFZEJRV3RDTEUxQlFXUXlRaXhGUVVOR0xFOUJRVTlCTEVWQlJWUXNTVUZCUzNscVFpeEhRVUZaZW1wQ0xFZEJRMllzVDBGQlQwTXNSVUZCVTBRc1JVRkJXVE5DTEVkQlRUbENMRWxCU2tFc1NVRkJTVXdzUlVGQlUyZERMRVZCUVZkb1F5eFBRVU53UWs4c1JVRkJVVGhDTEVWQlFWbHlReXhIUVVGVkxFVkJRemxDYVhSQ0xFVkJRVmR1ZGtJc1IwRkJUMnRGTEVsQlJXUkxMRVZCUVZrNVFpeE5RVUZaUVN4RlFVRlJVQ3hMUVVOaExFbEJRUzlEU3l4RlFVRlROSE5DTEVWQlFWTXhjMElzUjBGQlVVRXNSVUZCVHpCelFpeExRVWwyUXl4UFFVRlBhbkpDTEVkQlYxZ3NVMEZCVXpCbExFZEJRV055WlN4SFFVTnlRaXhQUVVGUExGTkJRVk5OTEVWQlFWRjBReXhGUVVGVk9HZENMRWRCVFdoRExFbEJURUVzU1VGQlNUVm5RaXhIUVVGVExFVkJRMVF3YzBJc1JVRkJWMjUyUWl4SFFVRlBOa1VzUjBGRGJFSmhMRVZCUVZFeVpDeEZRVUZUZUdVc1IwRkRha0l6UXl4RlFVRlRkMFFzUlVGQlRYaEVMRTlCUlZwQkxFdEJRVlVzUTBGRFppeEpRVUZKYTBNc1JVRkJUWE5DTEVWQlFVMXVRaXhGUVVGWmNrTXNTVUZCVjA4c1IwRkRka01zU1VGQkswTXNTVUZCTTBOR0xFVkJRVk0wYzBJc1JVRkJVeTl4UWl4SFFVRk5RU3hGUVVGTEszRkNMRWRCUXk5Q0xFMUJSMG9zVDBGQlQzUnhRaXhIUVdkRFdDeFRRVUZUZFhGQ0xFZEJRV2RDUXl4SFFVTjJRaXhQUVVGUExGTkJRVk5xY1VJc1IwRkhaQ3hKUVVGSlZ5eEZRVUZoZVUwc1IwRkdha0p3VGl4RlFVRlRhMUVzUjBGQlUyeFJMRWxCUjJSeFR5eEhRVUZqY2s4c1IwRkRaREZQTEVWQlJVRTJZaXhGUVVGTmVFMHNSVUZEVGtFc1JVRkJWeXhIUVVOWVdDeEZRVUZQTUU4c1QwRkJUeXhIUVVWa2QySXNSVUZCVjNad1FpeEZRVU5ZYzI1Q0xFZEJRVlYwYmtJc1JVRkJXU3hIUVVGSGVrZ3NTMEZCU3l4SlFVTTVRamhITEVWQlFVOURMRTFCUVUwc1IwRkZha0lzVDBGQlQydE9MRVZCUVVrNFl5eExRVUZuUWtNc1IwRlhMMElzVTBGQlUwTXNSMEZCYVVKRExFZEJRM2hDTEU5QlFVOHNVMEZCVTNCeFFpeEhRVU5rTEU5QlFVOTZRaXhIUVVGWk9ISkNMRWRCUVUxRExFZEJRVTkwY1VJc1IwRkJVVWNzVVVGQlVUbEhMRWRCUVZFc1MwRkJUU3QzUWl4RlFVRlZMRXRCV1RWRkxGTkJRVk5ITEVkQlFWYzNVQ3hIUVVOc1FpeFBRVUZQTEZkQlNVd3NTVUZCU1Rka0xFVkJRVTh5ZEVJc1ZVRkRXQ3hQUVVGUk0zUkNMRVZCUVV0RExGRkJRMWdzUzBGQlN5eEZRVUZITEU5QlFVOHNTVUZCU1RSa0xFVkJRMjVDTEV0QlFVc3NSVUZCUnl4UFFVRlBMRWxCUVVsQkxFVkJRVXMzWkN4RlFVRkxMRWxCUXpkQ0xFdEJRVXNzUlVGQlJ5eFBRVUZQTEVsQlFVazJaQ3hGUVVGTE4yUXNSVUZCU3l4SFFVRkpRU3hGUVVGTExFbEJRM1JETEV0QlFVc3NSVUZCUnl4UFFVRlBMRWxCUVVrMlpDeEZRVUZMTjJRc1JVRkJTeXhIUVVGSlFTeEZRVUZMTEVkQlFVbEJMRVZCUVVzc1NVRkRMME1zUzBGQlN5eEZRVUZITEU5QlFVOHNTVUZCU1Raa0xFVkJRVXMzWkN4RlFVRkxMRWRCUVVsQkxFVkJRVXNzUjBGQlNVRXNSVUZCU3l4SFFVRkpRU3hGUVVGTExFbEJRM2hFTEV0QlFVc3NSVUZCUnl4UFFVRlBMRWxCUVVrMlpDeEZRVUZMTjJRc1JVRkJTeXhIUVVGSlFTeEZRVUZMTEVkQlFVbEJMRVZCUVVzc1IwRkJTVUVzUlVGQlN5eEhRVUZKUVN4RlFVRkxMRWxCUTJwRkxFdEJRVXNzUlVGQlJ5eFBRVUZQTEVsQlFVazJaQ3hGUVVGTE4yUXNSVUZCU3l4SFFVRkpRU3hGUVVGTExFZEJRVWxCTEVWQlFVc3NSMEZCU1VFc1JVRkJTeXhIUVVGSlFTeEZRVUZMTEVkQlFVbEJMRVZCUVVzc1NVRkRNVVVzUzBGQlN5eEZRVUZITEU5QlFVOHNTVUZCU1Raa0xFVkJRVXMzWkN4RlFVRkxMRWRCUVVsQkxFVkJRVXNzUjBGQlNVRXNSVUZCU3l4SFFVRkpRU3hGUVVGTExFZEJRVWxCTEVWQlFVc3NSMEZCU1VFc1JVRkJTeXhIUVVGSlFTeEZRVUZMTEVsQlJYSkdMRWxCUVVrMGRFSXNSVUZCWTNSV0xFZEJRVmQxUml4RlFVRkxOMHNzVjBGRE9VSm9VeXhGUVVGVE5tTXNSVUZCUzJobExFMUJRVTByZEVJc1JVRkJZVFYwUWl4SFFVbHlReXhQUVVGUGQxa3NSMEZCVTNoWUxFZEJRVlZCTEVWQlFWTTBjMElzUjBGblJIWkRMRk5CUVZORExFZEJRVmRETEVkQlEyeENMRTlCUVU4c1UwRkJVemR5UWl4RlFVRlpjRUlzUlVGQlYzZENMRWRCUTNKRExFbEJRVWsyY1VJc1JVRkJWMjUyUWl4SFFVRlBhMFVzUjBGRGRFSXNTVUZCUzNscVFpeEhRVUZaZW1wQ0xFZEJRV0VzUTBGRE5VSXNTVUZCU1ROQ0xFVkJRVmQzYlVJc1IwRkJXV3B0UWl4RlFVRlhMRWRCUTNSRGIwSXNSVUZCWVhsU0xFZEJRVXQ2VWl4SFFVTnNRbkJDTEVWQlFWa3NVMEZCVTNOQ0xFZEJRVThzVDBGQlR6ZENMRVZCUVZNMGMwSXNSVUZCVXk5eFFpeEhRVUZOUVN4RlFVRkxLM0ZDTEVsQlJXeEZMRWxCUVVreGMwSXNSVUZCVVhOMFFpeEZRVUZqTjNKQ0xFVkJRVmx3UWl4RlFVRlhkMElzUjBGRGFrUXNUMEZCVHpkQ0xFZEJRVk1zUlVGQlNUQnpRaXhGUVVGVE5YTkNMRVZCUVZjeVFpeEZRVUZYZWtJc1IwRkJVMEVzUjBGQlV5OU1MRWRCVjNwRkxGTkJRVk56TlVJc1IwRkJWM3B5UWl4SFFVTnNRaXhQUVVGUE1ISkNMRWRCUVZNc1UwRkJVME1zUjBGRGRrSXNTVUZCU1doMVFpeEZRVUZUWjNWQ0xFVkJRVTFvZFVJc1QwRkRaazhzUlVGQlVWQXNSVUZEVW1sMVFpeEZRVUZUT1ZZc1IwRkJZM0JHTEZWQlFWVnRZaXhMUVV0eVF5eEpRVWhKTjNKQ0xFZEJRMFl5Y2tJc1JVRkJUWEJZTEZWQlJVUnlWeXhMUVVGVExFTkJRMlFzU1VGQlNWWXNSVUZCVDIxMVFpeEZRVUZOZW5SQ0xFZEJRMnBDTEVkQlFXMUNMRzFDUVVGU1ZpeEZRVU5VTEUxQlFVMHNTVUZCU1dkVUxFZEJRVlZzWlN4SFFVVjBRaXhIUVVGSmN6VkNMRWxCUVZkRkxFZEJRV2RETEZkQlFYSkNReXhIUVVGWmRuVkNMRWRCUTNCRExFbEJRVWx6ZFVJc1JVRkJWU3hKUVVGSmFGY3NUMEZCYTBJc1IwRkplRU1zU1VGRVFUVllMRVZCUVZFMGRFSXNSVUZCVlRWMFFpeEZRVUZSVUN4SlFVTnFRazhzUlVGQlVWQXNSMEZCVVN4RFFVZDJRaXhKUVVGSmNYVkNMRVZCUVZkRUxFZEJSbVoyZFVJc1JVRkJUMjExUWl4RlFVRk5lblJDTEVsQlIxUjNXaXhGUVVGdFFpeFhRVUZhYzFVc1JVRkJkMEpETEVkQlFWRjZkVUlzUjBGQlVYSk1MRVZCVFdwRU1qVkNMRVZCU2tWd1ZTeEhRVUZSZDFVc1IwRkJWM2hWTEVWQlFVc3NTMEZEZEVKQkxFVkJRVXNzUzBGQlQyNXJRaXhGUVVGblFrb3NSVUZCYTBKRkxFVkJRVzlDUnl4TFFVTnFSV3RyUWl4RlFVRkxMRWRCUVVjdldpeFJRVUZ4UWl4SFFVRllLMW9zUlVGQlN5eEhRVVZzUW05VkxFVkJRVkZETEVkQlFWbHlWU3hGUVVGTExFdEJRVXR1WVN4TlFVRk5kWFZDTEVWQlFWTndWU3hGUVVGTExFbEJSV3hETEVkQlFXWnNZU3hGUVVGTFJ5eFJRVUZsZFhWQ0xFZEJRVmN4ZFVJc1IwRkRkRU56ZFVJc1JVRkJVVVVzUzBGRFVrWXNSVUZCVVVRc1MwRkJTM0oxUWl4SFFVZHlRaXhQUVVGUExGZEJRMHdzU1VGQlNVVXNSVUZCVHpKMFFpeFZRVU5RYkhSQ0xFVkJRVkZVTEVWQlFVc3NSMEZGYWtJc1IwRkJTVzkxUWl4SFFVRXdRaXhIUVVGbWNIVkNMRVZCUVV0RExGRkJRV1ZwV1N4SFFVRlJlbGdzUjBGRGVrTXNUMEZCVHpKMFFpeEZRVUZSU3l4TlFVRk5hSFZDTEVkQlFVOUJMRkZCU3psQ0xFbEJTRUVzU1VGQlNVUXNSVUZCVVN4RlFVTlNVU3hGUVVGVFppeEZRVUZUWjNWQ0xFVkJRVTE2ZEVJc1IwRkJUMWdzVFVGQlRUaFpMRXRCUVUweldTeEhRVUZSVXl4SlFVVTVRMFFzUlVGQlVWQXNSMEZEWm1Vc1JVRkJVMmwwUWl4RlFVRk5lblJDTEVkQlFVOU9MRXRCUVV0NVdTeExRVUZOTTFnc1IwRkZia01zVDBGQlQwRXNTMEYzUW1Jc1UwRkJVekIwUWl4SFFVRmhOWFZDTEVWQlFVMTVZeXhGUVVGVGVHTXNSVUZCVXpaeVFpeEZRVUZWUXl4RlFVRlRPRU1zUlVGQlpVTXNSVUZCWTBNc1JVRkJVVU1zUlVGQlMwTXNSMEZEZWtjc1NVRkJTVU1zUlVGQlVYcFRMRVZCUVZVeGJVSXNSVUZEYkVKdk5VSXNSVUZCVXpGVExFVkJRVlZxYmtJc1JVRkRia0kwTlVJc1JVRkJXVE5UTEVWQlFWVm9ia0lzUlVGRGRFSjFNa0lzUlVGQldYWlFMRWRCUVZjNWJVSXNSVUZCYTBKRExFZEJRM3BEZVRWQ0xFVkJRVk0xVXl4RlFVRlZlRzFDTEVWQlEyNUNPRzVDTEVWQlFVOXhVaXhGUVVGWmVqWkNMRVZCUVZscE5VSXNSMEZCVnpWMFFpeEhRVFpET1VNc1QwRXpRMEVzVTBGQlUzTjFRaXhKUVV0UUxFbEJTa0VzU1VGQlNXNTFRaXhGUVVGVE1IUkNMRlZCUVZVeGRFSXNUMEZEYmtKRUxFVkJRVTl6UWl4SFFVRk5ja0lzUjBGRFlrOHNSVUZCVVZBc1JVRkZURThzUzBGRFRGSXNSVUZCUzFFc1IwRkJVMjEwUWl4VlFVRlZiblJDTEVkQlJURkNMRWRCUVVsemNrSXNSVUZEUml4SlFVRkpOMkVzUlVGQlkyMWxMRWRCUVZWb1FpeEhRVU40UW1sQ0xFVkJkbWhKV2l4VFFVRnpRbXAyUWl4RlFVRlBObEVzUjBGSk0wSXNTVUZJUVN4SlFVRkphRklzUlVGQlUwY3NSVUZCVFVnc1QwRkRabVVzUlVGQlV5eEZRVVZPWml4TFFVTkVSeXhGUVVGTlNDeExRVUZaWjFJc1MwRkRiRUpxVVN4RlFVZE9MRTlCUVU5QkxFVkJPR2RKYTBKemRVSXNRMEZCWVhSMlFpeEZRVUZOYVZJc1IwRlRlRU1zUjBGUVNUSmhMRWxCUTBZMWNrSXNSVUZCVHpKeVFpeEhRVUZaTTNKQ0xFVkJRVTAwY2tJc1JVRkJWVU1zUlVGQlUwTXNTVUZGTVVNMlF5eEpRVU5HTTNWQ0xFVkJRVTl6YzBJc1IwRkJhVUowYzBJc1JVRkJUVEoxUWl4RlFVRmxReXhGUVVGak9VTXNTVUZGTjBRM2NrSXNSMEZCVlc5MlFpeEZRVU5PZGtRc1IwRkJZVGR5UWl4RlFVRlRPSFZDTEVWQlFVOHNRMEZETDBJc1NVRkJTVkVzUlVGQllYWmxMRWRCUVdWb1VpeEZRVUZOYVZJc1IwRkRkRU1zVDBGQlQzVmxMRWRCUTB3eGRrSXNSVUZCVFhsakxFVkJRVk50VXl4SFFVRmpUaXhGUVVGUmJtUXNXVUZCWVd4U0xFVkJRMnhFUXl4RlFVRk5kWFpDTEVWQlFWbFdMRVZCUVZGRExFVkJRVXRETEVWQlFWRTVkVUlzUjBGSE0wTXNTVUZCU1RKMFFpeEZRVUZqY1VJc1JVRkJVMngyUWl4RlFVRlZORmtzUzBGRGFrTTRWeXhGUVVGTFVDeEZRVUZaZEVJc1JVRkJXVGwwUWl4SFFVRlJRU3hGUVdONlF5eFBRVnBCUnl4RlFVRlRSQ3hGUVVGTFF5eFBRVU5XTkhWQ0xFVkJRMFkzZFVJc1JVRm5ORU5PTEZOQlFXbENTU3hGUVVGUE1HNUNMRWRCUzNSQ0xFbEJTa0VzU1VGQlNUUklMRVZCUVZsMGRrSXNSVUZCVFVnc1QwRkRiRUpCTEVWQlFWTnhWeXhIUVVGVmQxSXNSVUZCVVRkdVFpeFBRVUZSZVhaQ0xFZEJRMjVEUXl4RlFVRlhOVlVzUjBGQlZUTmhMRWRCUld4Q1NDeExRVUZWTEVOQlEyWXNTVUZCU1U4c1JVRkJVWE51UWl4RlFVRlJOMjVDTEVkQlEzQkNSeXhGUVVGTlNDeEhRVUZWZDJFc1IwRkJVV3BoTEVWQlFVOXJka0lzUjBGQllVTXNSVUZCVTI1MlFpeEhRVUZUTDB3c1JVRkZhRVVzVDBGQlR6Sk1MRVZCZWpSRFNYZDJRaXhEUVVGUk5YWkNMRVZCUVUwMmRVSXNSMEZEV2swc1IwRkJWV3gyUWl4RlFVRlRMRWRCUXpWQ1JDeEZRVUZMTmxjc1ZVRkZTRzFaTEVkQlFWTkdMRVZCUVUwM2RVSXNTVUZEYWtKRUxFVkJRVXRETEU5QlFWTTJkVUlzUjBGRldtNVhMRTFCUVZGQkxFOUJRVk42WVN4SlFVRlJlV0VzWjBKQlFXZENlVllzU1VGRE0wTnhRaXhGUVVGTE5WSXNSMEZCVVRaUUxFZEJRVmNyUWl4SlFVVnVRa0VzUlVGQlJ6VjJRaXhOUVVGTkszUkNMRVZCUVdFMWRFSXNTVUZoYWtNc1UwRkJVeloyUWl4SFFVRmxlSFpDTEVWQlFWRjVka0lzUjBGRE9VSXNUMEZCVHl4VFFVRlRiSFJDTEVWQlFWRjBReXhIUVVOMFFpeFBRV2d2UkVvc1UwRkJjMEp6UXl4RlFVRlJka01zUlVGQlVVTXNSVUZCVlVNc1IwRkpPVU1zVDBGSVFYZG1MRWRCUVZkdVpDeEZRVUZSTEZOQlFWTnVReXhGUVVGUE1FSXNSVUZCUzFNc1IwRkRkRU4yUXl4RlFVRlBSU3hGUVVGaFJDeEZRVUZUUnl4SFFVRlJNRUlzUlVGQlMxTXNTMEZGY2tOeVF5eEZRVFFyUkVWM2RrSXNRMEZCWVc1MFFpeEZRVUZSZGtNc1JVRkJVWGwyUWl4RlFVRlhlSFpDTEZGQldXNUVMRk5CUVZNd2RrSXNSMEZCYjBKRExFVkJRVlZETEVkQlEzSkRMRTlCUVU4c1UwRkJVM3AyUWl4RlFVRlBiV2hDTEVkQlEzSkNMRWxCUVVrMVowSXNSVUZEU2l4SFFVRkpVQ3hKUVVGVmFFMHNSMEZCWVcxMFFpeEpRVUZWYm5SQ0xFVkJRMjVETEU5QlFVOTVOMElzUlVGTFZDeEhRVWhKZW5aQ0xFbEJRVlZvVFN4SlFVTmFkVTBzUlVGQlUxQXNSMEZGVUcxb1FpeEpRVUZWYm5SQ0xFVkJRVmNzUTBGRGRrSXNSMEZCU1hWTkxFbEJRVmQyVFN4RlFVTmlMRTlCUVU5dGRFSXNSVUZGVnl4cFFrRkJWRzVvUWl4SFFVRnhReXhwUWtGQlZHMW9RaXhIUVVOeVEyNW9RaXhGUVVGUmQzQkNMRWRCUVdGNGNFSXNSMEZEY2tKdGFFSXNSVUZCVVhGSkxFZEJRV0Z5U1N4TFFVVnlRbTVvUWl4RlFVRlJkWEJDTEVkQlFXRjJjRUlzUjBGRGNrSnRhRUlzUlVGQlVXOUpMRWRCUVdGd1NTeEpRVVYyUWpWblFpeEZRVUZUYVhaQ0xFVkJRVk40ZGtJc1JVRkJUMjFvUWl4SFFVVXpRaXhQUVVGUE5XZENMRWRCVjFnc1UwRkJVMjEyUWl4SFFVRlhReXhIUVVOc1FpeFBRVUZQY0VNc1IwRkJVeXhUUVVGVGNFZ3NSMEZGZGtJc1QwRkVRVUVzUlVGQldYWnNRaXhIUVVGVGRXeENMRVZCUVZkeWFrSXNSMEZCVlhWcVFpeFBRVU51UTI5Q0xFZEJRVk1zVTBGQlUyeHZRaXhIUVVOMlFpeEpRVUZKUkN4RlFVRlZORmtzUzBGRFpDeFBRVUZQZVZnc1JVRkJWWGhLTEVWQlFWY3NVMEZCVTNSdFFpeEhRVU51UXl4UFFVRlBWQ3hIUVVGTlV5eEZRVUZWVUN4RlFVRlRReXhUUVdWNFF5eFRRVUZUY1hkQ0xFZEJRV053ZDBJc1JVRkJVWEYzUWl4SFFVYzNRaXhKUVVGSlF5eEhRVVpLUkN4RlFVRlJRU3hKUVVGVk56ZENMRVZCUVZrc1NVRkJUWGN4UWl4SFFVRmhjVWNzU1VGRmVrSnlkMElzVDBGRGVFSXNSMEZCU1hOM1FpeEZRVUZqTEVWQlEyaENMRTlCUVU5QkxFVkJRV04wU1N4SFFVRlhjVWtzUlVGQlQzSjNRaXhIUVVGVmNYZENMRVZCUlc1RUxFbEJRVWwwZGtJc1JVRkJVMmx1UWl4SFFVRlhjVWtzUlVGQlR6bGhMRWRCUVZkMlZpeEZRVUZUYjFJc1IwRkJWMmxtTEV0QlF6bEVMRTlCUVU4dlppeEhRVUZYSzJZc1IwRkRaR3hHTEVkQlFWVTFXaXhIUVVGamVGRXNSMEZCVXl4RlFVRkhaaXhIUVVGUk5VUXNTMEZCU3l4SlFVTnFSREpGTEVWQlFVOXZReXhOUVVGTkxFVkJRVWR1UkN4SFFUWkRkRUlzVTBGQlUzVjNRaXhIUVVGWmJIVkNMRWRCUTI1Q0xFOUJRVThzVTBGQlV6WnNRaXhGUVVGUFZ5eEZRVUZMTWtnc1IwRmhNVUlzVDBGYVNVRXNSMEZCZFVJc2FVSkJRVkpCTEVkQlFXOUNlRVFzUjBGQlpUbEZMRVZCUVU5WExFVkJRVXN5U0N4TFFVTm9SVE5JTEVWQlFVMHlTQ3hGUVVGUGFEaENMRWRCUjJZd2VrSXNSVUZCVVhWSkxFZEJRVk4yU1N4SFFVTmlWeXhKUVVGUmNqQkNMRWRCUTFaeE1FSXNSVUZCVFZnc1JVRkRUa0VzUlVGQlVTeEhRVVZTVnl4RlFVRk5ORWdzUjBGQlV6VklMRWRCTlRkRGNrSXNVMEZCYlVKWUxFVkJRVTlYTEVWQlFVc3lTQ3hGUVVGTmJuVkNMRWRCUzI1RExFbEJTa0VzU1VGQlNUbENMRWRCUVZNc1JVRkRWRkFzUlVGQlUyMVhMRWRCUVZWYUxFbEJRVmx6VkN4RlFVRk5XQ3hKUVVGVmMwa3NSMEZCVVN4SlFVRkxMRWRCUXpWRWVuWkNMRVZCUVZOTkxFZEJRVTF5UWl4SFFVVmFRU3hMUVVOTVpTeEZRVUZQYzBJc1JVRkJXWEpETEVsQlFWZFBMRWRCUVZNeWJrSXNSVUZEZGtOQkxFZEJRVk56U1N4RlFVVllMRTlCUVU5NmRrSXNSVUZ6TjBORk1uWkNMRU5CUVZWNFNTeEZRVUZQVnl4RlFVUjRRakpJTEVWQlFVOUJMRWxCUVZOb09FSXNSVUZCWVRCNlFpeEZRVUZSVnl4RlFVRk5MRWRCUVVzc1JVRkJTelJJTEVkQlFWTkVMRWRCUXpOQ2JuVkNMRWxCVjNaRExGTkJRVk56ZFVJc1IwRkJNRUpZTEVkQlEycERMRTlCUVU4c1UwRkJVM2gyUWl4RlFVRlBiV2hDTEVkQlMzSkNMRTFCU25OQ0xHbENRVUZVYm1oQ0xFZEJRWEZETEdsQ1FVRlViV2hDTEVsQlEzWkRibWhDTEVWQlFWRnZkMElzUjBGQlUzQjNRaXhIUVVOcVFtMW9RaXhGUVVGUmFWQXNSMEZCVTJwUUxFbEJSVnB4VHl4RlFVRlRlSFpDTEVWQlFVOXRhRUlzU1VGeFFqTkNMRk5CUVZNMFRpeEhRVUZqTVhaQ0xFVkJRVTE1WXl4RlFVRlRkVlVzUlVGQlZUZG1MRVZCUVdGc1VpeEZRVUZUTm5KQ0xFVkJRVlZETEVWQlFWTm5SQ3hGUVVGUlF5eEZRVUZMUXl4SFFVTndSeXhKUVVGSlowTXNSVUZCVlhoVkxFVkJRVlU1YlVJc1JVRk5lRUk0YlVJc1IwRkJXWGRWTEVWQlFWVndOMElzUlVGQmIwSkRMRWRCUXpGRE1tMUNMRXRCUVdGM1ZTeEZRVUZWYmpkQ0xFVkJRVEJDUkN4SlFVVnFRMGdzU1VGRFpDdHRRaXhMUVVGaGFtNUNMRVZCUVdsQ1F5eEpRVVZvUXl4SlFVRkplVGRDTEVkQlEwWnNlRUlzUlVGQlRYbGpMRVZCUVZONFl5eEZRVlpEWjNoQ0xFVkJRVlZ1Uml4RlFVRlhiak5DTEVWQlJuUkNjemhDTEVWQlFWVnNSaXhGUVVGVmNETkNMRVZCUjJSek9FSXNSVUZCVlhRNFFpeEZRVUZaYlROQ0xFVkJSblpDYlVZc1JVRkJWWFE0UWl4RlFVRlpiek5DTEVWQldYcENaMFFzUlVGQlVVTXNSVUZCUzBNc1IwRkhOVUl2ZEVJc1JVRkJVemgyUWl4RlFVRlRhbmhDTEUxQlFVMXdUQ3hGUVVGWGRUaENMRWRCUzNaRExFOUJTa2w0UXl4SFFVRlhNWFZDTEVsQlEySnRlRUlzUjBGQlVXcDNRaXhGUVVGUlozZENMRWRCUld4Q2FIZENMRVZCUVU5cFVTeFpRVUZqUVN4RlFVTmthV2RDTEVkQlFXZENiSGRDTEVWQlFWRnNRaXhGUVVGTmVXTXNSMEZWZGtNc1UwRkJVelJWTEVkQlFWa3ZSQ3hIUVVOdVFpeEpRVUZKZEhSQ0xFVkJRVTg0VXl4SFFVRkxkMkVzUjBGRGFFSXNUMEZCVHl4VFFVRlRhbElzUlVGQlVXbFdMRWRCUjNSQ0xFZEJSa0ZxVml4RlFVRlRNRlVzUjBGQlV6RlZMRWxCUTJ4Q2FWWXNSVUZCZVVJc1RVRkJZa0VzUlVGQmIwSXNSVUZCU1RsaExFZEJRVlVyWVN4SFFVRlZSQ3hIUVVGWkxFOUJRMjVFY0dJc1IwRkJaVzFITEVkQlFWTXNRMEZIZGtNc1NVRkJTVzFXTEVkQlFWRnFaU3hIUVVGVE9Fa3NSMEZCVlN4TFFVRkxlRXNzVFVGQlRTeExRVWt4UXl4VFFVUkJNbVlzUjBGQlVXcGxMRWRCUmtsMlZDeEZRVUZMZDNoQ0xFVkJRVXNzUjBGQlN5eE5RVUZSUVN4RlFVRkxMRWRCUVV0R0xFdEJSVzVDTEV0QlFVdDZaaXhOUVVGTkxFMUJRM1pDTEVkQlFVc3NUVUZCVVRKbUxFVkJRVXNzUjBGQlMwWXNTVUZGZGtNc1QwRkJUM1I0UWl4RlFVRkxjV01zU1VGWGFFSXNTVUZCU1dkUExFZEJRV05zVkN4SlFVRlJMRVZCUVVrdlJpeEhRVUZYTEVsQlFVa3JSaXhKUVVGTExFVkJRVVVzUzBGQlN5eEpRVUZQTTJkQ0xFVkJRVzFDTEZOQlFWTnJUQ3hIUVVNeFJpeFBRVUZQTEVsQlFVbDVWaXhIUVVGSmVsWXNTVUZFTWtRcmRrSXNSMEZYTlVVc1UwRkJVME1zUjBGQlkzQlJMRWRCUTNKQ0xFOUJRVThzVTBGQlUzaGxMRWRCUTJRc1NVRkJTVzloTEVWQlFVMURMRWRCUVU5eVlTeEhRVU5xUWl4UFFVRkpiMkVzUjBGQlQzcHNRaXhGUVVOR2Exb3NSMEZCVnpkT0xFZEJSV2hDYjJFc1IwRkJUMjVzUWl4RlFVTkdkVm9zUjBGQlYzaFBMRWRCYmpaSk1VSXNVMEZCY1VKQkxFVkJRVkZoTEVkQlF6TkNMRTlCUVU5d1F5eEhRVUZUYjBNc1JVRkJUeXhUUVVGVGRFSXNSMEZET1VJc1QwRkJVVUVzUlVGQlMxTXNSVUZCVDFRc1RVRnROa2xZYzNaQ0xFTkJRVmszZFVJc1JVRkJVWGRsTEVWQlFWTjRaU3hMUVRaQ2VFTXNVMEZCVXpoMVFpeEhRVUZYTlhoQ0xFVkJRVTE1WXl4RlFVRlRlR01zUlVGQlV6WnlRaXhGUVVGVlF5eEZRVUZUWjBRc1JVRkJVVU1zUlVGQlMwTXNSMEZETVVVc1NVRkJTVWNzUlVGQldUTlRMRVZCUVZWb2JrSXNSVUZETVVJc1NVRkJTekkxUWl4SFFVRTBRaXh0UWtGQlVuQjJRaXhGUVVOMlFpeE5RVUZOTEVsQlFVbG5WQ3hIUVVGVmJHVXNSMEZGZEVJc1NVRkJTWEZNTEVWQlFWTXlja0lzUlVGQlYwRXNSVUZCVXpOeVFpeFBRVUZUTEVWQlV6RkRMRWRCVWt0QkxFbEJRMGh6WXl4TFFVRmhOVzFDTEVWQlFXOUNReXhIUVVOcVEyY3lRaXhGUVVGWFF5eEZRVUZWY0ROQ0xFZEJSWFpDY1RaQ0xFVkJRVTFCTEVsQlFWRnlOa0lzUlVGQldYRTJRaXhGUVVGTk1Wa3NSMEZCVldsaUxFZEJRVlYyUXl4SFFVRk5MRWRCUXpGRVF5eEZRVUZSUVN4SlFVRlZkRFpDTEVWQlFWbHpOa0lzUlVGQlVYTkRMRWRCUVZWMFF5eEhRVU5vUkRsMVFpeEhRVUZWTkhKQ0xFVkJRVlZCTEVWQlFWRTFja0lzVDBGQlV5eEZRVVZxUTNOakxFVkJRVlV6YlVJc1JVRkJlVUlzUTBGRGNrTXNTVUZCU1NzMFFpeEZRVUZuUWk5RExFVkJRMmhDWjBRc1JVRkJaUzlETEVWQlJXNUNSQ3hGUVVGWFF5eEZRVUZWY0ROQ0xFVkJSWFpDTEVsQlFVbDFiRUlzUlVGQlQydFdMRVZCUVZsNk5rSXNSVUZCV1RnMVFpeEhRVUZSZW5WQ0xFZEJSWFpEYTNoQ0xFZEJRMFpzZUVJc1JVRkJUWGxqTEVWQlFWTjRZeXhGUVVGVE5uSkNMRVZCUVZWRExFVkJRVk00UXl4RlFVRmxReXhGUVVNeFJFTXNSVUZCVVVNc1JVRkJTME1zUjBGclFtWXNSMEZtU1M5VkxFZEJNalpDVGl4VFFVRnRRa0VzUlVGQlRUTm5RaXhIUVVOMlFpeEpRVUZKYTJwQ0xFVkJRVlYyUXl4RlFVRkxMRWRCUTJZeVdDeEZRVUZoZERSQ0xFVkJRVThzUjBGRGNFSjFORUlzUlVGQllYSldMRVZCUVZWdlZpeEZRVU4yUWpWVExFVkJRVmMyVXl4SFFVRmpkRGhDTEVWQlFXbENReXhGUVVGeFFrMHNSMEZGTDBSbk9FSXNSVUZEUVVZc1IwRkJZemszUWl4SFFVRnRRakJ0UWl4SFFVRlhPVzFDTEVkQlF6VkRhemhDTEVkQlFXTTVOMElzUjBGQmJVSXdiVUlzUjBGQlYzcHRRaXhIUVVGeFFtdHJRaXhGUVVGTExFZEJRVWN2V2l4UlFVRlZOVWNzUlVGQlR5eEpRVU14Um5NMFFpeEpRVUZsT1RkQ0xFVkJRV2RDUXl4SlFVRnpRblZFTEVWQlFVOHNSMEZCUnpSSExGRkJRVlUxUnl4RlFVRlBMRWxCUVZGcmFrSXNSMEZCVnpsdFFpeEZRVWQyUnl4SlFVRk5jM0JDTEVsQlFWazRVeXhGUVVOb1FpeFBRVUZQTjFnc1JVRkhUREpZTEVWQlFXRnlPRUlzU1VGRFpqQnJRaXhGUVVGTExFZEJRVXN6WjBJc1JVRkJUeXhIUVVWcVFuVTBRaXhIUVVGamNsWXNSVUZCVldwdVFpeEZRVUZwUWl4RlFVRkpSU3hIUVVjdlF5eEpRVUZKYVV3c1JVRkJVWEJJTEVWQlFVOHNSMEZEYmtJc1IwRkJTVzlJTEVWQlFVOHNRMEZEVkN4SlFVRkpiWEpDTEVWQlFWYzFVaXhGUVVGTExFZEJRM0JDUVN4RlFVRkxMRWRCUVVzMFVpeEZRVUZYUkN4SFFVRlpReXhGUVVGVmJuSkNMRVZCUVU5d1NDeEZRVUZQTEVsQlFVMXZTQ3hGUVVNdlJIVmFMRVZCUVVzc1IwRkJTelJTTEVWQlFWYzFZU3hIUVVGbFowb3NSVUZCU3l4SFFVRkphR3hDTEVkQlFXVnhSU3hGUVVGUExFbEJSM0pGYjBnc1JVRkJVWEJJTEVWQlFVOHNUVUZGWW5WNVFpeEZRVUZYTlZJc1JVRkJTeXhIUVVOb1FrRXNSVUZCU3l4SFFVRkxORklzUlVGQlYxVXNSMEZCYVVKV0xFVkJRVlZ1Y2tJc1JVRkJUM0JJTEVWQlFVOHNTVUZCVFc5SUxFVkJRM0JGZFZvc1JVRkJTeXhIUVVGTE5GSXNSVUZCVnpWaExFZEJRV1ZuU2l4RlFVRkxMRWRCUVVsb2JFSXNSMEZCWlhGRkxFVkJRVThzUzBGSGNrVnZTQ3hGUVVGUmNFZ3NSVUZCVHl4TlFVVmlNbWRDTEVWQlFVc3NSMEZCUzNaYUxFZEJSMUpyZUVJc1JVRkJZVGszUWl4SlFVTm1iV3RDTEVWQlFVc3NSMEZCWjBJc1RVRkJXRUVzUlVGQlN5eEhRVUZoTTJkQ0xFVkJRVThzUjBGQlMybGtMRWRCUVZVd1JDeEZRVUZMTEVkQlFVa3paMElzUlVGQlR5eExRVWR5UkN4TlFVRllNbWRDTEVWQlFVc3NTMEZEVUVFc1JVRkJTeXhIUVVGTE0yZENMRVZCUVU4c1NVRkhia0l5WjBJc1JVRkJTeXhIUVVGTE0yZENMRVZCUVU4c1IwRkRha0l5WjBJc1JVRkJTeXhIUVVGTE5GZ3NSVUUxT1VKU1JTeERRVUZWWkN4RlFVRlRhRmdzUjBGRmNrSnNZU3hGUVVGUGEzaENMRVZCUVZFc1IwRkRabnBWTEVWQlFWVjVWU3hGUVVGUkxFZEJRMnhDYW5oQ0xFVkJRVlZwZUVJc1JVRkJVU3hIUVVOc1FuQkdMRVZCUVZkdlJpeEZRVUZSTEVkQlEyNUNia1lzUlVGQlZXMUdMRVZCUVZFc1MwRkRiRUpxUXl4RlFVRlJhVU1zUlVGQlVTeEhRVUZMUVN4RlFVRlJMRXRCUVU5Mk9FSXNSVUZETDBKNU5rSXNSVUZCV1N4RlFVRkpjSFpDTEVWQlFVdEhMRTlCUTNSQ2JWY3NSMEZCVlRSaExFVkJRVkVzUjBGQlN5OTNRaXhGUVVGUkxFdEJSWEpDYzJNc1IwRkJWemx0UWl4RlFVRnJRa01zUzBGRGVrTTJiVUlzUzBGQllUbHRRaXhGUVVGclFrTXNTVUZGTlVJMmJVSXNSMEZCVjBFc1IwRkJWMnB1UWl4RlFVZDZRakJNTEVWQlJGTjFZaXhIUVVGWE9XMUNMRWRCUVcxQ09HMUNMRWRCUVZjM2JVSXNSVUZ3WjBKMFJDeFRRVUZ4UW05TExFVkJRVTE1WXl4RlFVRlRkMU1zUjBGRGJFTXNTVUZCU1d4U0xFVkJRVTgyVUN4SFFVRlhOWFJDTEVkQmQwSjBRaXhQUVhSQ1FTeFRRVUZUYzNWQ0xFbEJUVkFzU1VGTVFTeEpRVUZKYm5WQ0xFVkJRVk13ZEVJc1ZVRkJWVEYwUWl4UFFVTnVRa1FzUlVGQlQzTkNMRWRCUVUxeVFpeEhRVU5pVHl4RlFVRlJVQ3hGUVVOU1oxSXNSVUZCWTIxbExFZEJRVlZvUWl4SFFVVnlRalYwUWl4TFFVTk1VaXhGUVVGTFVTeEhRVUZUYlhSQ0xGVkJRVlZ1ZEVJc1IwRkZNVUlzU1VGQlNYRnlRaXhGUVVGWE5YSkNMRVZCUVZNc1IwRkJTMFFzUlVGQlN5eExRVUZQYVZJc1IwRkJaV3BTTEVWQlFVdERMRVZCUVZNc1MwRkJUMmRTTEV0QlJYcEZSQ3hIUVVGbGFGSXNSVUZCVFdsU0xFZEJSM3BDTEU5QlJFRm9VaXhIUVVGVk5ISkNMRVZCUVZFMWNrSXNVVUZEVERoMVFpeEZRVU5LVXl4SFFVTk1NWFpDTEVWQlFVMTVZeXhGUVVGVGJWTXNSMEZCWTA0c1JVRkJVVzVrTEZsQlFXRjRZeXhGUVVOc1JIVk1MRVZCUVUwMmNrSXNSVUZCVTNBelFpeEZRVUZYUVN4RlFVRlhjelpDTEVWQlFWRTVkVUlzUjBGSE1VTktMRWRCUkVjNFdTeE5RVUZSUVN4UFFVRlRlbUVzU1VGQlVYbGhMR2RDUVVGblFubFdMRVZCUVZkMlVTeEZRVUZQTDJRc1JVRkRjRVEyV1N4TFFVRk5NMWtzU1VFNFpXUXJlRUlzUTBGQldXcDVRaXhGUVVGTmVXTXNSVUZCVTNkVExFZEJRekZDZUZNc1IwRkJWelZ0UWl4SFFVRnhRalJ0UWl4SlFVRlphbTVDTEVWQlFXbENTeXhKUVVGM1Ftc3lRaXhGUVVGUk5YSkNMRTlCUnpsR2VYVkNMRWRCUVdFM2RVSXNUVUZCVFhCTUxFVkJRVmQxT0VJc1IwRTVUek5ETEZOQlFYVkNiSGhDTEVWQlFVMTVZeXhGUVVGVGVHTXNSVUZCVXpaeVFpeEhRVU0zUXl4SlFVRkpjVVFzUlVGQlV6RlRMRVZCUVZWcWJrSXNSVUZEYmtKMWIwSXNSVUZCVHpaUUxFZEJRVmMxZEVJc1IwRnJRblJDTEU5QmFFSkJMRk5CUVZOemRVSXNTVUZSVUN4SlFWQkJMRWxCUVVseVF5eEhRVUZoTEVWQlEySkRMRVZCUVdFeVFpeFZRVUZWTVhSQ0xFOUJRM1pDYVhOQ0xFZEJRV0VzUlVGRFlrTXNSVUZCWVZBc1JVRkJVek55UWl4UFFVTjBRa1FzUlVGQlQzTkNMRWRCUVUwMmNVSXNSVUZCWVVnc1IwRkRNVUo1UkN4RlFVRk5PVmNzVFVGQlVVRXNUMEZCVTNwaExFbEJRVkY1WVN4blFrRkJaMEo1Vml4RlFVRlhkbEVzUlVGQlR5OWtMRWxCUlRWRWIzTkNMRVZCUVZsRExFZEJRMjVDYm5OQ0xFVkJRVXRyYzBJc1IwRkJZVTRzUlVGQlUwMHNSMEZGTjBJc1MwRkJUMFlzUzBGRFRHaHpRaXhGUVVGTGEzTkNMRXRCUVdWNVFpeFpRVUZaTlVJc1IwRkZiRU1zVDBGQlQyeHpRaXhIUVVGTk5IWkNMRVZCUVVsU0xFVkJRVk5zZGtJc1JVRkJWVFJaTEV0QlFVMHpXU3hKUVRCT2FrTm5lVUlzUTBGQlkyeDVRaXhGUVVGTmVXTXNSVUZCVTNoakxFVkJRVk0yY2tJc1VVRktMME1zU1VGQlNUVnhRaXhGUVdodFFsSXNVMEZCYjBKc1FpeEZRVUZOZVdNc1JVRkJVM2hqTEVkQlEycERMRWxCUVVscmRrSXNSVUZCVXpGVExFVkJRVlZxYmtJc1JVRkRia0oxYjBJc1JVRkJUelpRTEVkQlFWYzFkRUlzUjBGTmRFSXNUMEZLUVN4VFFVRlRjM1ZDTEVsQlJWQXNUMEZFVlhwV0xFMUJRVkZCTEU5QlFWTjZZU3hKUVVGUmVXRXNaMEpCUVdkQ2VWWXNSVUZCVjNaUkxFVkJRVTh2WkN4SFFVTXpSRVFzVFVGQlRXOTJRaXhGUVVGVGJIWkNMRVZCUVZVMFdTeExRVUZOWjFZc1dVRXdiRUkxUW5ORkxFTkJRVmR1ZVVJc1JVRkJUWGxqTEVWQlFWTjRZeXhIUVZONlF5eFBRVUZQYlhoQ0xFbEJSRTFzV0N4RlFVRlBlVThzUjBGQlkzZEpMRWxCUTBwcWQwSXNSVUZCVVdkM1FpeEhRVUZWYkhoQ0xFVkJRVTE1WXl4SFFXVjRSQ3hUUVVGVE1sWXNSMEZCZFVJMVZ5eEZRVUZWYzBvc1JVRkJWWHBwUWl4RlFVRkxVeXhIUVVOMlJDeFBRVUZKTUZrc1NVRkJZVGR0UWl4SFFVTmFNRzFDTEVkQlFVZEhMRVZCUVZWd1NTeEhRVUZaTDFFc1RVRkJWVzFTTEVkQlFXVndWQ3hMUVVGTE1FTXNSVUZCVVZRc1IwRkRNMFI1YVVJc1JVRkZSblJLTEVWQmFVSlVMRk5CUVZNMlZ5eEhRVUZ2UWpkWExFVkJRVlZ6U2l4RlFVRlZlbWxDTEVWQlFVdFRMRVZCUVZGMlNpeEZRVUZSYjJwQ0xFZEJUM0JGTEU5QlRrbHFSU3hIUVVGVE9FTXNTVUZCWVRsRExFZEJRVk52VFN4TFFVVnFRMjVKTEVWQlFVMTBUQ3hKUVVGSmVWUXNSVUZCVlhSS0xFZEJRM0JDTUVzc1IwRkJWVEZMTEVWQlFWVnpTaXhGUVVGVmJuZENMRVZCUVZjd09VSXNSMEZCY1VJeFZpeEhRVU01UkVFc1JVRkJZeXhQUVVGRmJVa3NTVUZGV0hSS0xFVkJXVlFzVTBGQlV6aFhMRWRCUVdkQ00zaENMRWRCUTNaQ0xFOUJRVTg0YkVJc1IwRkJZemxzUWl4SFFVRlRhRTBzUlVGQldXZE5MRVZCWjBJMVF5eFRRVUZUTW1sQ0xFZEJRVmxvYWtJc1JVRkJUM2RvUWl4RlFVRlBja1lzUlVGQlUwTXNSVUZCV1c5SExFVkJRVmR1Unl4SFFVTnFSU3hKUVVGSkswY3NSVUZCV1dwSUxFVkJRVlZ1YmtJc1JVRkRkRUp6TmtJc1JVRkJXWFIyUWl4RlFVRk5TQ3hQUVVOc1FtZHBRaXhGUVVGWlRDeEZRVUZOTTJoQ0xFOUJSWFJDTEVkQlFVbDVka0lzUjBGQllYcE9MRXRCUVdWMVFpeEhRVUZoZGtJc1JVRkJXWGxPTEVkQlEzWkVMRTlCUVU4c1JVRkhWQ3hKUVVGSk1rTXNSVUZCWVRWV0xFVkJRVTFRTEVsQlFVazVZaXhIUVVOMlFqWnFRaXhGUVVGaGVFZ3NSVUZCVFZBc1NVRkJTVEJHTEVkQlF6TkNMRWRCUVVsNVVTeEhRVUZqY0U4c1JVRkRhRUlzVDBGQlQyOVBMRWRCUVdONlVTeEhRVUZUY1VNc1IwRkJZemRxUWl4RlFVVTVReXhKUVVGSlNTeEhRVUZUTEVWQlExUlJMRWRCUVZNc1JVRkRWSE5vUWl4RlFVRlJMMFlzUlVGQlZXeHVRaXhGUVVFd1FpeEpRVUZKZFd0Q0xFZEJRVmR1YkVJc1JVRk5MMFFzU1VGS1FXZHZRaXhGUVVGTmRFd3NTVUZCU1M5UkxFVkJRVTkzYUVJc1IwRkRha0p1Uml4RlFVRk5kRXdzU1VGQlNYbFJMRVZCUVU5NGFFSXNTMEZIVWtrc1JVRkJVV3QyUWl4SFFVRlhMRU5CUXpGQ0xFbEJRVWswUXl4RlFVRlhiSGxDTEVWQlFVMUpMRWRCUTJwQ01tcENMRVZCUVZkMlF5eEZRVUZOY0doQ0xFZEJSWEpDTEVkQlFVbG5ZeXhGUVVOR0xFbEJRVWswU0N4RlFVRlhXaXhGUVVOWWFFZ3NSVUZCVnpKSUxFVkJRVlZ0VHl4RlFVRlZPWGhDTEVWQlFVOXZhRUlzUlVGQlQzaG9RaXhGUVVGUGNXTXNSMEZEY0VSRUxFVkJRVmM0Vml4RlFVRlZiazhzUlVGQlZUTnFRaXhGUVVGUFNpeEZRVUZQZDJoQ0xFVkJRVTl1Uml4SFFVVXhSQ3hIUVVGSk1rZ3NTVUZCWVROMlFpeEZRVUZYTEVOQlF6RkNMRWRCUVVreWRrSXNSVUZEUml4VFFVVkdjR3BDTEVkQlFWTXNSVUZEVkN4TlFVZEdMRWRCUVVsemFFSXNSMEZEUml4SlFVRkxlbWRDTEVkQlFWVXJaaXhGUVVGUExGTkJRVk4xUXl4RlFVRlZha01zUjBGRGJrTXNTVUZCUzNobExFZEJRVk0wWlN4RlFVRk5TaXhMUVVObWIxRXNTVUZCWVc1UExFZEJRVmwyUWl4RlFVRlZNRkFzUlVGQlZXNVBMRVZCUVZVMVNDeEZRVUZUUXl4RlFVRlpReXhKUVVNdlJTeFBRVUZQTmtZc1JVRkJTelZJTEV0QlFVdDNTQ3hMUVVWcVFpeERRVU5PYkdoQ0xFZEJRVk1zUlVGRFZDeFpRVVZITEVkQlEwUnplRUlzU1VGQllXNVBMRWxCUTFoMlFpeEZRVUZWTUZBc1JVRkJWVzVQTEVWQlFWVTFTQ3hGUVVGVFF5eEZRVUZaUXl4SFFVTndSQ3hEUVVOTWVtSXNSMEZCVXl4RlFVTlVMRTlCUzBvc1QwRkdRWGxpTEVWQlFXTXNUMEZCUlhKakxFZEJRMmhDY1dNc1JVRkJZeXhQUVVGRmJVWXNSMEZEVkRWblFpeEZRVEJMVkN4VFFVRlRaM1JDTEVkQlFWTnNkVUlzUjBGRGFFSXNUMEZCVDNOdlFpeEhRVUZaUXl4SFFVRlRkbTlDTEVWQlFVMXlUQ3hGUVVGWE9EbENMRWxCUVZWNmVVSXNSVUZCVHl4SlFWVm9SU3hUUVVGVE1tVXNSMEZCVnpkaUxFZEJRMnhDTEU5QlFVOTFaU3hIUVVGbGRtVXNSVUZCVVRoUkxFZEJRVTByU2l4SlFWZDBReXhUUVVGVFpTeEhRVUZoTldJc1IwRkRjRUlzVDBGQlQzVmxMRWRCUVdWMlpTeEZRVUZSTW1Fc1IwRkJVVVlzU1VGVmVFTXNTVUZCU1d0U0xFZEJRVmR1V0N4SFFVRnBRaXhUUVVGVGRGZ3NSMEZEZGtNc1QwRkJUM05ZTEVkQlFWRTRSU3hKUVVGSmNHTXNTVUZFU1hsNFFpeEhRVmQ2UWl4VFFVRlRiRVFzUjBGQldYWjFRaXhIUVV0dVFpeEpRVXBCTEVsQlFVbHJRaXhGUVVGVmJFSXNSVUZCUzNWcVFpeExRVUZQTEVkQlEzUkNhbXBDTEVWQlFWRnBXQ3hIUVVGVmNsY3NSMEZEYkVKbUxFVkJRVk54VkN4SFFVRmxjRlFzUzBGQlMyMVlMRWRCUVZkeVZ5eEhRVUZWV2l4RlFVRk5TQ3hQUVVGVExFVkJSVGxFUVN4TFFVRlZMRU5CUTJZc1NVRkJTU3RhTEVWQlFVODFXaXhGUVVGTlNDeEhRVU5pZFhsQ0xFVkJRVmw0V1N4RlFVRkxiR0VzUzBGRGNrSXNSMEZCYVVJc1RVRkJZakI1UWl4SFFVRnhRa0VzUjBGQllURjVRaXhGUVVOd1F5eFBRVUZQYTJFc1JVRkJTM0ZLTEV0QlIyaENMRTlCUVU5eWFVSXNSVUZWVkN4VFFVRlRiM1ZDTEVkQlFWVjBka0lzUjBGRmFrSXNUMEZFWVhkVUxFZEJRV1Z3VkN4TFFVRkxPRmdzUjBGQlVTeGxRVUZwUWtFc1IwRkJVMnhaTEVkQlEzSkViVklzV1VGamFFSXNVMEZCVXpaV0xFdEJRMUFzU1VGQlNUbHNRaXhGUVVGVFoxZ3NSMEZCVHpGWUxGVkJRVmxCTEVkQlJXaERMRTlCUkVGVkxFVkJRVk5CTEVsQlFWZFdMRWRCUVZkM2EwSXNSMEZCWlRscVFpeEZRVU4yUXpKelFpeFZRVUZWTVhSQ0xFOUJRVk5sTEVWQlFVOHljMElzVlVGQlZTeEhRVUZKUVN4VlFVRlZMRWxCUVUwemMwSXNSVUZYYWtVc1UwRkJVelJsTEVkQlFWZHNVQ3hGUVVGTGRrOHNSMEZEZGtJc1NVRm5XV2xDTVVJc1JVRkRZbWQ1UWl4RlFXcFpRWHBaTEVWQlFVOTBTaXhGUVVGSmJVb3NVMEZEWml4UFFXbFpaMElzVjBGRVdqUlpMRk5CUkdGb2VVSXNSVUV2V0VFd1FpeExRV2xaYlVJc1ZVRkJVbk4zUWl4SFFVRTBRaXhWUVVGU1FTeEhRVUUwUWl4WFFVRlNRU3hGUVVOeVJDeGpRVUZXYUhsQ0xFVkJRMVVzVDBGQlZrRXNSMEZzV1VSMVdpeEZRVUZ0UWl4cFFrRkJVRGRZTEVWQlFXdENMRk5CUVZjc1VVRkRla00yV0N4RlFVRkxkRW9zU1VGVldDeFRRVUZUYVZZc1IwRkJZUzlwUWl4SFFVbHdRaXhKUVVoQkxFbEJRVWsxUWl4RlFVRlRNRk1zUjBGQlN6bFJMRWRCUTJRelF5eEZRVUZUWlN4RlFVRlBaaXhQUVVWaVFTeExRVUZWTEVOQlEyWXNTVUZCU1d0RExFVkJRVTF1UWl4RlFVRlBaaXhIUVVOaVVTeEZRVUZSYlVNc1JVRkJUMVFzUjBGRmJrSnVRaXhGUVVGUFppeEpRVUZYYTBNc1JVRkJTekZDTEVWQlFVOXhiRUlzUjBGQmJVSnliRUlzU1VGRmJrUXNUMEZCVDA4c1JVRlhWQ3hUUVVGVGFWVXNSMEZCVlhKVExFVkJRVkZVTEVkQlEzcENMRWxCUVVreFFpeEZRV3g0U2xJc1UwRkJhMEp0UXl4RlFVRlJWQ3hIUVVONFFpeFBRVUZwUWl4TlFVRldVeXhGUVVGcFFtNVBMRVZCUVZsdFR5eEZRVUZQVkN4SFFXbDRTamRDZFhkQ0xFTkJRVk01ZGtJc1JVRkJVVlFzUjBGRE4wSXNUMEZCVHpCcFFpeEhRVUZoY0d0Q0xFZEJRVk5CTEVWQlFWRm9UU3hGUVhGRGRrTXNTVUZCU1dkd1FpeEhRVUZqTjBnc1IwRkJLMElzVTBGQlUyaFVMRWRCUTNoRUxFOUJRV01zVFVGQlZrRXNUVUZIU2tFc1JVRkJVemRGTEVkQlFVODJSU3hIUVVOVU9VSXNSMEZCV1RoVkxFZEJRV2xDYUZRc1IwRkJVeXhUUVVGVEsyRXNSMEZEY0VRc1QwRkJUMjVLTEVkQlFYRkNkRlVzUzBGQlN6QkRMRVZCUVZFcllTeFBRVTVTWjFZc1IwRnBRbXBEZEZZc1IwRkJaMEo2U0N4SFFVRXJRaXhUUVVGVGFGUXNSMEZGTVVRc1NVRkVRU3hKUVVGSk5VSXNTMEZEUnpSQ0xFZEJRMHh5UWl4SFFVRlZVQ3hGUVVGUmVXTXNSMEZCVnpkaExFbEJRemRDUVN4RlFVRlRkMUlzUjBGQllYaFNMRWRCUlhoQ0xFOUJRVTgxUWl4SFFVNDRRako0UWl4SFFXZENia014Vml4SFFVRlRjVVVzUjBFeVJXSXNVMEZCVTNOU0xFZEJRVkZvZDBJc1JVRkJVVzlsTEVWQlFVMDJVaXhIUVU4M1FpeEpRVXBCTEVsQlFVbHllVUlzUjBGQlV5eEZRVU5VVUN4SFFVaEtLMmRDTEVWQlFVOURMRWRCUVZORUxFVkJRVTF3WlN4SlFVZEtNME1zVDBGRFpHVXNSMEZCVXl4SlFVVktVaXhGUVVGUlVDeEhRVUZSTEVOQlEzWkNMRWxCUVVsclF5eEZRVUZOSzJVc1IwRkJUVVlzUlVGQlMzaG5RaXhKUVVOeVFpeExRVUZOVVN4RlFVRnRRaXhOUVVGV05FSXNSMEZCYTBKcGQwSXNSVUZCVVdwM1FpeEZRVUZSVkN4SlFVTXZReXhOUVVWR1V5eEZRVUZUUVN4RlFVRlBWQ3hIUVVWc1FpeFBRVUZKYmtJc1MwRkJXVklzUjBGQlUxQXNSVUZEYUVKbExFdEJSVlJtTEVWQlFXMUNMRTFCUVZZeVF5eEZRVUZwUWl4RlFVRkpRU3hGUVVGUE0wTXNVMEZEYkVJMmVVSXNSMEZCVXpkNVFpeEpRVUZYZDJFc1IwRkJVWFJaTEVWQlFVdHNReXhMUVVOcVJHbFpMRWRCUVZGMFZpeEpRVUZYZVZnc1IwRkJXWHBZTEVsQk5rSndReXhUUVVGVGQyRXNSMEZCWjBKNFlTeEhRVU4yUWl4TlFVRnhReXh0UWtGQmRFSkJMRVZCUVU5cFlTeGhRVUU0UW5WSkxFZEJRVmw0YVVJc1RVRkROVVF3Vml4SFFVRlhiRVVzUjBGQllYaFNMRWxCT0VVNVFpeFRRVUZUTm1Rc1IwRkJZMmhuUWl4SFFVTnlRaXhQUVVGUGVWZ3NSMEZCVVhwWUxFbEJRVlUwV2l4SFFVRlpOVm9zVDBGRGFFTnBWU3hKUVVGdlFtcFZMRWRCUVZOQkxFVkJRVTFwVlN4TFFWY3hReXhUUVVGVEswWXNSMEZCVVdoaExFVkJRVTlTTEVkQlEzUkNMRWxCUVVsM2VVSXNVMEZCWTJoNVFpeEZRVWRzUWl4VFFVWkJVaXhGUVVGdFFpeE5RVUZXUVN4RlFVRnBRakZLTEVWQlFXMUNNRW9zUzBGSGJFTXNWVUZCVW5kNVFpeEhRVU5WTEZWQlFWSkJMRWRCUVc5Q05UTkNMRWRCUVZNeVZpeExRVUZMTDFBc1MwRkRhRU5CTEVkQlFWTXNSMEZCUzBFc1JVRkJVU3hIUVVGTExFZEJRVXRCTEVWQlFWRlNMRVZCWVdwRUxGTkJRVk5uZEVJc1IwRkJaWGh6UWl4RlFVRlBSQ3hGUVVGUGIwTXNSMEZEY0VNc1NVRkJTelJXTEVkQlFWTTFWaXhIUVVOYUxFOUJRVThzUlVGRlZDeEpRVUZKTm5aQ0xGTkJRV05xZVVJc1JVRkRiRUlzVTBGQldTeFZRVUZTYVhsQ0xFVkJRMHN2VFN4SFFVRlpPV2xDTEVsQlFWYzJXQ3hIUVVGUmFtRXNSVUZCVDI5RExFVkJRVTh6UXl4UlFVTnlReXhWUVVGU2QzbENMRWRCUVc5Q2FubENMRXRCUVZOdlF5eEpRVVUzUW5WWkxFZEJRVWQyV1N4RlFVRlBjRU1zUjBGQlVVTXNSMEZoTjBJc1UwRkJVMjlzUWl4SFFVRk5jR3hDTEVWQlFVOXRReXhIUVVOd1FpeEhRVUZKYzFZc1IwRkJVWHBZTEVkQlExWXNUMEZCVHl4RlFVVlVMRWxCUVVsbmVVSXNVMEZCWTJoNVFpeEZRVU5zUWl4UlFVRlpMRlZCUVZKbmVVSXNSMEZCTkVJc1ZVRkJVa0VzUjBGQk5FSXNWMEZCVWtFc1IwRkRMMElzVFVGQlZHaDVRaXhKUVVGcFFqSm1MRWRCUVZNelppeExRVWQyUWpsSExFZEJRV00yVnl4TFFVRkxMMUFzUzBGQlZ5OUhMRWRCUVdFNFZ5eExRVUZMTDFBc1NVRkRNVU1zVFVGQlZtMURMRWRCUVd0Q2JrTXNTMEZCVXpGRExFZEJRVTgyUlN4SFFYbENka01zVTBGQlV6UnlRaXhIUVVGWE1YVkNMRWRCUTJ4Q0xFbEJRVWwzZFVJc1JVRkJWMFFzUjBGQldYWjFRaXhIUVVOMlFqaG9RaXhGUVVGUk5Vb3NSMEZCVDNOWExFZEJSVzVDTEVkQlFXOUNMRzFDUVVGVU1VMHNTMEZCZVVJd1RTeExRVUZaYmxjc1IwRkJXVzVHTEZkQlF6RkVMRTlCUVU4c1JVRkZWQ3hIUVVGSmJGUXNTVUZCVXpob1FpeEZRVU5ZTEU5QlFVOHNSVUZGVkN4SlFVRkpOVWdzUlVGQlQzVlZMRWRCUVZFelRTeEhRVU51UWl4UlFVRlROVWdzUjBGQlVXeGhMRWxCUVZOcllTeEZRVUZMTEVsQk4xTTFRbXhFTEVsQlFWbHRSeXhIUVVGUExFbEJRVWx1Unl4SFFVRlRMRWxCUVVscFl5eFpRVUZaTEUxQlFWRXpOa0lzU1VGRGVFUXlaU3hKUVVGUGEwY3NSMEZCVHl4SlFVRkpiRWNzUzBGQlVYaG1MRWRCUXpGQ2VXWXNTVUYyTTB4VkxHOUNRWFV6VEVOcFJ5eEhRVUZQYWtjc1IwRkJVV2RqTEZsQlF6RkNMMklzU1VGQlQyZEhMRWRCUVU4c1NVRkJTV2hITEV0QlFWRndaaXhIUVVNeFFuRm1MRWxCUVZjclJpeEhRVUZQTEVsQlFVa3ZSaXhMUVVGWmFtWXNUVUZEY2tObmJFSXNSMEZCVXl4VFFVRlRlR01zUjBGRGFFSXNTVUZCU1U4c1JVRkJVM05uUWl4SFFVRlhOMmRDTEVkQlEzQkNiMlFzUlVGQlR6ZGpMRWRCUVZWMFNpeEZRVUZaSzBrc1JVRkJUVzlqTEZsQlFXTndiMElzUlVGRGFrUjNLMElzUlVGQllYQldMRVZCUVU5MFJ5eEhRVUZUYzBjc1IwRkJVU3hIUVVWNlF5eEhRVUZKYjFZc1JVRkRSaXhQUVVGUlFTeEhRVU5PTEV0QlFVc3pZaXhIUVVGdlFpeFBRVUZQYkdZc1IwRkRhRU1zUzBGQlMyOW1MRWRCUVdVc1QwRkJUMnBuUWl4RlFVTXpRaXhMUVVGTGEyZENMRWRCUVcxQ0xFMUJialJNYWtJc2JVSkJielJNVUN4TFFVRkxReXhIUVVGbExFOUJRVTgzWml4RlFVTXpRaXhMUVVGTE9HWXNSMEZCYlVJc1QwRkJUekZtTEVkQlIyNURMRTlCUVU4clNTeEpRU3RUV0N4SlFVRkphM2xDTEVkQlFXRXZaaXhIUVVGaE1rNHNSMEZCWVhGVExFZEJVek5ETEZOQlFWTXZUaXhIUVVGWk0ydENMRWRCUTI1Q0xFbEJRVWx2WkN4RlFVRlBjR1FzUjBGQlUwRXNSVUZCVFc5akxGbEJSekZDTEU5QlFVOXdZeXhMUVVaeFFpeHRRa0ZCVW05a0xFZEJRWE5DUVN4RlFVRkxOMHNzVjBGQlkwVXNTVUZoTDBRc1UwRkJVelJUTEVkQlFXMUNjbXhDTEVkQlF6RkNMRTlCUVU5QkxFZEJRVlZCTEVsQlFWVXJXQ3hIUVVGVEwxZ3NSMEZaZEVNc1UwRkJVMjFzUWl4SFFVRjNRbnBxUWl4RlFVRkxlV2xDTEVkQlEzQkRMRTlCUVU4c1UwRkJVMmhwUWl4SFFVTmtMRTlCUVdNc1RVRkJWa0VzUjBGSFIwRXNSVUZCVDFRc1MwRkJVM2xwUWl4SlFVTndRa0VzU1VGQllXNTNRaXhIUVVGak1FNHNTMEZCVDNCRkxFZEJRVTgyUlN4TFFYTkphRVFzVTBGQlUzbHNRaXhIUVVGVGRtOUNMRVZCUVUxeGIwSXNSVUZCVDNKWUxFZEJSVGRDTEU5QlJFRnhXQ3hGUVVGUkwxSXNSMEZCVlN0U0xFbEJRVlV4ZWtJc1JVRkJZWEZNTEVWQlFVdEhMRTlCUVZNc1JVRkJTMnR2UWl4RlFVRlBMRWRCUXpWRUxGZEJUVXdzU1VGTVFTeEpRVUZKYm05Q0xFVkJRVTh5ZEVJc1ZVRkRVRzUwUWl4SFFVRlRMRVZCUTFSUUxFVkJRVk50Vnl4SFFVRlZjRmNzUlVGQlMwTXNUMEZCVTJ0dlFpeEZRVUZQTEVkQlEzaERMMjVDTEVWQlFWRnJRaXhIUVVGTmNrSXNTMEZGVkU4c1JVRkJVVkFzUjBGRFprY3NSVUZCVFVrc1IwRkJVMUlzUlVGQlMyMXZRaXhGUVVGUk0yNUNMRWRCUlRsQ1FTeEhRVUZUTEVWQlJWUXNTVUZFUVN4SlFVRkpOSGxDTEVWQlFWazVlRUlzUjBGQlRUWnRRaXhGUVVGUkxFdEJRM0pDTTI1Q0xFVkJRVkV5YmtJc1IwRkRabWxNTEVWQlFWVTFlVUlzUjBGQlUxSXNSVUZCUzFFc1IwRkhNVUlzVDBGRVFUUjVRaXhGUVVGVmFrd3NSMEZCVTNKWUxFVkJRVlV4VVN4SFFVTjBRbEFzUjBGQlRVTXNSVUZCVFRaWkxFdEJRVTE1WVN4SlFWazNRaXhUUVVGVE5WRXNSMEZCVHpWbUxFVkJRVkZ2WlN4SFFVTjBRaXhQUVVGUFFTeEZRVUZMTDJkQ0xFOUJRVk1zUlVGQlNUSkRMRVZCUVZOdFpTeEhRVUZSYm1Vc1JVRkJVV2x0UWl4SFFVRlZOMGdzUlVGQlRTeEhRVUZKTEVsQmFVTjRSU3hUUVVGVGJVWXNSMEZCVVhacVFpeEZRVUZSVkN4SFFVTjJRaXhKUVVGWkxHZENRVUZTUVN4SFFVRm5SQ3h0UWtGQmFFSlRMRVZCUVU5VUxFdEJTV2hETEdGQlFWQkJMRVZCU1Vvc1QwRkJUMU1zUlVGQlQxUXNSMEZwUW1oQ0xFbEJRVWs0ZFVJc1IwRkJWVzlETEVkQlFWTTFTeXhKUVZWdVFteFVMRWRCUVdGRUxFbEJRV2xDTEZOQlFWTjRWaXhGUVVGTk9HVXNSMEZETDBNc1QwRkJUekZuUWl4SFFVRkxjVmdzVjBGQlYzcFdMRVZCUVUwNFpTeEpRVmN6UW5kS0xFZEJRV05wVEN4SFFVRlRNMHNzU1VGWk0wSXNVMEZCVTNkSkxFZEJRV2RDT1VNc1JVRkJVMnRHTEVWQlFWY3ZWeXhIUVVNelF5eEpRVUZKYkdwQ0xFVkJRVlZwTmtJc1JVRkJXU3hIUVVNeFFpeFBRVUZQYkV3c1IwRkJXV2RITEVWQk1XSnlRaXhUUVVFeVFpOHdRaXhGUVVGUmF6WkNMRWRCUTJwRExFbEJRVWwwZWtJc1JVRkJVM042UWl4RlFVRlJkSHBDTEU5QlEzSkNMRWxCUVV0QkxFVkJRMGdzVDBGQlR6VkhMRVZCUlZRc1NVRkJTV2xaTEVWQlFWbHlVaXhGUVVGVExFVkJSM3BDTEU5QlJrRnpla0lzUlVGQlVXcHBRaXhKUVVGamNsSXNSVUZCVXl4RlFVRkpMRXRCUVU4c1NVRkJUWE42UWl4RlFVRlJhbWxDTEVkQlEzaEVhV2xDTEVWQlFWVkJMRVZCUVZGc00wSXNTMEZCU3pSRUxFVkJRVk1zUlVGQlNTeExRVUZQTEV0QlEzQkROVWNzUlVGQlQybExMRkZCUVZGeVNpeEhRVUZsTEhWQ1FVRjVRbk0xUWl4RlFVRlZMRlZCYTJJMVEwTXNRMEZCYTBKdU5rSXNSVUZ4U0doRUxGTkJRVEpDYXpaQ0xFVkJRVk5vV0N4SFFVOXNReXhQUVU1Qk4ySXNSMEZCVlRkS0xFVkJRVmNzVTBGQlUzazJRaXhIUVVNMVFpeEpRVUZKTjNkQ0xFVkJRVkVzUzBGQlR6WjNRaXhGUVVGTExFZEJRMjVDTDFVc1JVRkJWU3RWTEVWQlFVc3NTMEZCVVhKM1FpeEhRVUZqYzNsQ0xFVkJRVk01ZVVJc1NVRkRha1E0ZVVJc1JVRkJVVGRaTEV0QlFVdHFZU3hMUVVkV09IbENMRVZCUVZGMlRTeFBRVFZJZFVONVRTeERRWFJxUW5oRUxGTkJRWGRDY0RaQ0xFZEJRM1JDTEVsQlFVbHZXU3hGUVVGUmNGa3NSVUZCVDI5WkxFMUJRVTEyV0N4SlFVTjZRaXhQUVVGUGRWZ3NSVUZCVVVFc1JVRkJUU3hIUVVGSFJTeE5RVUZOZUZnc1QwRnZha0l3UTNVMVFpeERRVUZsY2paQ0xFZEJRVk5yYWtJc1MwRlpiRWNzVTBGQlV6aFhMRWRCUVZOMmVrSXNSMEZEYUVJc1NVRkJTVFo2UWl4RlFVRlJMRVZCUTFKRExFVkJRV0VzUlVGRmFrSXNUMEZCVHl4WFFVTk1MRWxCUVVsRExFVkJRVkZ5WkN4TFFVTlNjMlFzUlVGQldUTTVRaXhIUVVGWk1EbENMRVZCUVZGRUxFZEJSM0JETEVkQlJFRkJMRVZCUVdGRExFVkJRMVJETEVWQlFWa3NSMEZEWkN4TFFVRk5TQ3hIUVVGVGVqbENMRVZCUTJJc1QwRkJUM2t6UWl4VlFVRlZMRkZCUjI1Q1owY3NSVUZCVVN4RlFVVldMRTlCUVU4M2VrSXNSVUZCUzBRc1RVRkJUWEJNTEVWQlFWZHJOVUlzV1VGWmFrTXNVMEZCVXpkVExFZEJRVmt4WVN4RlFVRlBkVkVzUjBGRE1VSXNTVUZCU1c1UkxFZEJRVk1zUlVGRFZGQXNSVUZCVTBjc1JVRkJUVWdzVDBGRFpuRlNMRVZCUVZseVVpeEZRVUZUTEVWQlIzcENMRWxCUkVFd1VTeEZRVUZQUVN4SlFVRlRiR01zUlVGQldYZE1MRVZCUVZNd1VTeEpRVU0xUW01UkxFVkJRVkZ0VVN4SFFVRk5MRU5CUTNKQ0xFbEJRVWx2YWtJc1JVRkJUMjVhTEVkQlFWZHdZU3hGUVVGUE9GRXNSMEZEZWtJM1VTeEZRVUZSVEN4RlFVRk5NbnBDTEVkQlJXeENNM3BDTEVWQlFVMHlla0lzUjBGQlVUTjZRaXhGUVVGTlNTeEhRVU53UWtvc1JVRkJUVWtzUjBGQlUwTXNSVUZIYWtJc1QwRkVRVXdzUlVGQlRVZ3NUMEZCVXpCUkxFVkJRMUoyVVN4RlFWVlVMRWxCUVVrNGNVSXNSMEYyVkVvc1UwRkJkVUp3Y2tJc1IwRkRja0lzU1VGQlNXdENMRVZCUVZObmVrSXNSMEZCVVd3d1FpeEZRVUZOTEZOQlFWTnhReXhIUVVsc1F5eFBRVWhKZDBJc1JVRkJUV2RPTEU5QlFWTTFZaXhIUVVOcVFqUlBMRVZCUVUwMlZpeFJRVVZFY2xnc1NVRkhUSGRDTEVWQlFWRXpReXhGUVVGUE1rTXNUVUZEYmtJc1QwRkJUek5ETEVWQk9GTlZhWHBDTEVOQlFXTXNVMEZCVXpsM1FpeEhRVU40UXl4SlFVRkpia01zUzBGUFNpeFBRVTQyUWl4TFFVRjZRbTFETEVWQlFVOHJkMElzVjBGQlZ5eEpRVU53UW14NlFpeEZRVUZQTUZvc1MwRkJTeXhKUVVWa2RsZ3NSVUZCVDBjc1VVRkJVVEZLTEVkQlFWa3NVMEZCVXpaWUxFVkJRVTh3U3l4RlFVRlJaMWtzUlVGQlQwTXNSMEZEZUVSd2VrSXNSVUZCVHpCYUxFdEJRVXQ1V2l4RlFVRlJReXhGUVVGVk9YZENMRkZCUVZGb1NpeEhRVUZqTEUxQlFWTTJhRUlzUjBGQlZURkxMRXRCUld4RmVsRXNTVUZWVkN4VFFVRlRhMmRDTEVkQlFVMTZaMElzUjBGRFlpeEhRVUZ2UWl4cFFrRkJWRUVzUjBGQmNVSXlaaXhIUVVGVE0yWXNSMEZEZGtNc1QwRkJUMEVzUlVGRlZDeEpRVUZKVHl4RlFVRlZVQ3hGUVVGUkxFZEJRM1JDTEUxQlFXdENMRXRCUVZaUExFZEJRV3RDTEVWQlFVbFFMRWxCUVZkdVN5eEZRVUZaTEV0QlFVOHdTeXhGUVZVNVJDeFRRVUZUZFZjc1IwRkJVM3BZTEVkQlEyaENMRWRCUVZrc1RVRkJVa0VzUlVGQll5eERRVU5vUWl4SlFVTkZMRTlCUVU5elZDeEhRVUZoYkZRc1MwRkJTMG9zUjBGRGVrSXNUVUZCVDJRc1NVRkRWQ3hKUVVORkxFOUJRVkZqTEVWQlFVOHNSMEZEWml4TlFVRlBaQ3hMUVVWWUxFMUJRVThzUjBFMFFsUXNVMEZCVTNGYUxFZEJRV0VyVml4SFFVTndRaXhIUVVGSlFTeGhRVUZ0UW1wWExFZEJRM0pDTEU5QlFVOXBWeXhGUVVGUmFVY3NVVUZGYWtJc1NVRkJTWEo2UWl4RlFVRlRMRWxCUVVsdldDeEhRVUZqWjFjc1JVRkJVWGhXTEZsQlFXRjNWaXhGUVVGUmRGWXNWMEZKTlVRc1QwRklRVGxZTEVWQlFVODJXQ3haUVVGamEwTXNSMEZCVlhGVUxFVkJRVkYyVml4aFFVTjJRemRZTEVWQlFVOHJXQ3hWUVVGaGNWWXNSVUZCVVhKV0xGVkJRelZDTDFnc1JVRkJUMmRaTEZkQlFXRnZWaXhGUVVGUmNGWXNWMEZEY2tKb1dTeEZRWE5KVkN4SlFVRkpjM3BDTEVkQlFXRndUU3hIUVVGVExGTkJRVk01YmtJc1JVRkJUMjlDTEVkQlEzaERMRTlCUVU4NGEwSXNSMEZCYTBKc2JVSXNSMEZEY2tKNVpTeEhRVUZsZW1Vc1JVRkJUMnRuUWl4SFFVRlpPV1VzUlVGQlVTeEZRVUZIT0d0Q0xFbEJRVzFDTEZOQk9FSnNSV2xQTEVkQlFXVnlUU3hIUVVGVExGTkJRVk01YmtJc1JVRkJUMjlDTEVkQlF6RkRMRWxCUVVsc1FpeEZRVUZYYldsQ0xFZEJRVXRxYUVJc1IwRkpjRUlzVDBGSVNUaHJRaXhIUVVGclFtaHRRaXhMUVVOd1FrRXNSVUZCVnpkTUxFZEJSVTQyZUVJc1IwRkJhMEpzYlVJc1IwRkRja0o1WlN4SFFVRmxlbVVzUlVGQlQydG5RaXhIUVVGWk9XVXNSVUZCVVN4RlFVRkhPR3RDTEVsQlFXMUNMRWRCUVU5UkxFZEJRVmw0YlVJc1JVRkJWU3hUUVRKQ0wwWnJNRUlzUjBGQmFVSjBUU3hIUVVGVExGTkJRVk01YmtJc1JVRkJUMjlDTEVkQlF6VkRMRWxCUVVsS0xFVkJRV0Z4YUVJc1IwRkJTMnBvUWl4SFFVbDBRaXhQUVVoSk9HdENMRWRCUVd0Q2JHeENMRXRCUTNCQ1FTeEZRVUZoTTAwc1IwRkZValo0UWl4SFFVRnJRbXh0UWl4SFFVTnlRbmxsTEVkQlFXVjZaU3hGUVVGUGEyZENMRWRCUVZrNVpTeEZRVUZSTEVWQlFVYzRhMElzU1VGQmJVSXNSMEZCVHpkNFFpeEZRVUZYTWswc1VVRjFUM2hHTEZOQlFWTnhla0lzUjBGQlZYSXdRaXhGUVVGUFV5eEZRVUZYZDBJc1IwRkRia01zU1VGQlNYQkRMRVZCUVd0Q0xFMUJRVlJITEVWQlFXZENMRVZCUVVsQkxFVkJRVTFJTEU5QlEzWkRMRWxCUVV0QkxFVkJRMGdzVDBGQlVTeEZRVVZXTEVsQlFVbFBMRVZCUVhGQ0xFMUJRV0kyUWl4RlFVRnZRaXhGUVVGSlozWkNMRWRCUVZWb2RrSXNSMEZKT1VNc1QwRklTVGRDTEVWQlFWRXNTVUZEVmtFc1JVRkJVVFJXTEVkQlFWVnVWeXhGUVVGVFR5eEZRVUZQTEVsQlJUZENORUlzUjBGQlkyaERMRVZCUVU4d2JVSXNSMEZCV1dwdFFpeEZRVUZYTEVkQlFVbE1MRWRCYzBONlJDeFRRVUZUYXpCQ0xFZEJRV04wTUVJc1JVRkJUMU1zUlVGQlYzZENMRWRCUTNaRExFbEJRVWx3UXl4RlFVRnJRaXhOUVVGVVJ5eEZRVUZuUWl4RlFVRkpRU3hGUVVGTlNDeFBRVU4yUXl4SlFVRkxRU3hGUVVOSUxFOUJRVkVzUlVGRlZpeEpRVUZKVHl4RlFVRlJVQ3hGUVVGVExFVkJUM0pDTEU5QlRrbHZReXhKUVVGak5VNHNTVUZEYUVJclRDeEZRVUZSTm5kQ0xFZEJRVlZvZGtJc1IwRkRiRUkzUWl4RlFVRlJOa0lzUlVGQldTeEZRVU5vUWl0VUxFZEJRVlZ1Vnl4RlFVRlRUeXhGUVVGUExFZEJRekZDT0ZZc1IwRkJWVGxXTEVWQlFVOVFMRVZCUVZNc1NVRkZla0p0UXl4SFFVRmphRU1zUlVGQlR6QnRRaXhIUVVGWmFtMUNMRVZCUVZjc1IwRkJTVXdzUjBGQlR5eEhRV2xDYUVVc1UwRkJVeXQ0UWl4SFFVRlJibmxDTEVkQlJXWXNUMEZFYzBJc1RVRkJWRUVzUjBGQmIwSkJMRVZCUVUxSUxFOUJRM1pDY1dkQ0xFZEJRVmxzWjBJc1JVRkJUeXhOUVdkSGNrTXNVMEZCVTNVd1FpeEhRVUZMZGpCQ0xFZEJRMW9zVDBGQlVVRXNSMEZCVTBFc1JVRkJUVWdzVDBGQlZVY3NSVUZCVFN4SFFVRkxNMHdzUlVFd1JUbERMRWxCUVVsdFowTXNSMEZCWlRGTkxFZEJRVk1zVTBGQlUyeEhMRWRCUTI1RExFbEJRVWsyVXl4RlFVRlRlSHBDTEVkQlFWTXlaMElzUlVGQlVXZEtMRWxCUXpsQ0xFOUJRVkUyU2l4RlFVRlBOVEJDTEZGQlFWVTBNRUlzUlVGQlR5eExRVUZQTjFNc1JVRkJUeXhIUVVNeFEwUXNSMEZCYVVJNFV5eFJRVEpDYmtKRExFZEJRV2xDTlUwc1IwRkJVeXhUUVVGVGJFY3NSMEZEY2tNc1NVRkJTVEZvUWl4RlFVRlhiV2xDTEVkQlFVdFVMRWRCUTJoQ05sTXNSVUZCVTNoNlFpeEhRVUZUTW1kQ0xFVkJRVkZuU2l4SlFVODVRaXhQUVV4Sk1YRkNMRWxCUVdGdGFVSXNSMEZCUzI5VExFZEJRM0JDZGpCQ0xFVkJRVmMzVEN4RlFVVlliMmRETEVWQlFVOXVWaXhOUVVWRWJWWXNSVUZCVHpVd1FpeFJRVUZWTkRCQ0xFVkJRVThzUzBGQlR6ZFRMRVZCUVU4c1IwRkRNVU5FTEVkQlFXbENPRk1zUlVGQlVTOU9MRWRCUVZsNGJVSXNSVUZCVlN4VFFYbENha1I1TUVJc1IwRkJiVUkzVFN4SFFVRlRMRk5CUVZOc1J5eEhRVU4yUXl4SlFVRkpOV2RDTEVWQlFXRnhhRUlzUjBGQlMxUXNSMEZEYkVJMlV5eEZRVUZUZUhwQ0xFZEJRVk15WjBJc1JVRkJVV2RLTEVsQlRUbENMRTlCU2tFMWNFSXNSVUZCYTBNc2JVSkJRV1JCTEVWQlFUSkNRU3hGUVVGaE0wMHNTVUZGTVVSdlowTXNSVUZCVDI1V0xFMUJSVVJ0Vml4RlFVRlBOVEJDTEZGQlFWVTBNRUlzUlVGQlR5eExRVUZQTjFNc1JVRkJUeXhIUVVNeFEwUXNSMEZCYVVJNFV5eEZRVUZSY0dkRExFVkJRVmN5VFN4UlFYRkRNVU1zVTBGQlUzRm9RaXhIUVVGTGNtbENMRWRCUTFvc1NVRkJTVWdzUlVGQmEwSXNUVUZCVkVjc1JVRkJaMElzUlVGQlNVRXNSVUZCVFVnc1QwRkRka01zVDBGQlQwRXNSVUZCVTBjc1JVRkJUVWdzUlVGQlV5eEhRVUZMZUV3c1JVRjFSblJETEVsQlFVbDFaME1zUjBGQlR6bE5MRWRCUVZNclRTeEpRWE5DY0VJc1UwRkJVMEVzUjBGQlVUY3dRaXhGUVVGUGIwSXNSMEZEZEVJc1QwRkJVWEJDTEVkQlFWTkJMRVZCUVUxSUxGRkJRVlYxUWl4SFFVRlZRU3hGUVVGUGRrSXNUMEZET1VNd2JrSXNSMEZCV1hadVFpeEZRVUZQYjBJc1IwRkRia0p3UWl4RlFYRkdUaXhKUVVGSk9EQkNMRWRCUVZOc1NDeEhRVUZUTEZOQlFWTTFkRUlzUlVGQlR6QnVRaXhIUVVOd1F5eEpRVUZKTjI1Q0xFVkJRV3RDTEUxQlFWUkhMRVZCUVdkQ0xFVkJRVWxCTEVWQlFVMUlMRTlCUTI1RFpTeEZRVUZUSzJFc1IwRkJUek5pTEVWQlFVOHdia0lzUjBGTk0wSXNUMEZLUVVRc1IwRkJWM3B1UWl4RlFVRlBhVUlzUjBGQlUzbHRRaXhGUVVGVExGTkJRVk4wYmtJc1IwRkRNME1zVDBGQlQybGhMRWRCUVZGcVlTeEZRVUZQVUN4SlFVRlhUeXhGUVVGUlFTeEpRVU40UTNkdFFpeExRVUZMVFN4TFFVVkVkRzFDTEVsQk1rVlVMRk5CUVZNMlZpeEhRVUZSZWxjc1IwRkRaaXhQUVVGblFpeE5RVUZVUVN4RlFVRm5Ra0VzUlVGQlVYZFhMRWRCUVdNeFZ5eExRVUZMUlN4SFFXdGhjRVFzU1VGQlNTc3dRaXhIUVVGUmFrNHNSMEZCVXl4VFFVRlRiRWNzUjBGRE5VSXNUMEZCVDJ0SkxFZEJRVk0xU2l4SFFVRlpNRUlzUlVGQlVTeEZRVUZIYzBVc1NVRkJiVUlzVFVFd1FuaEVPRThzUjBGQlZXeE9MRWRCUVZNc1UwRkJVMnhITEVkQlF6bENMRWxCUVVreGFFSXNSVUZCVjIxcFFpeEhRVUZMVkN4SFFVbHdRaXhQUVVoSmMwVXNSMEZCYTBKb2JVSXNTMEZEY0VKQkxFVkJRVmMzVEN4SFFVVk9lVEZDTEVkQlFWTTFTaXhIUVVGWk1FSXNSVUZCVVN4RlFVRkhjMFVzU1VGQmJVSXNSMEZCVDFFc1IwRkJXWGh0UWl4RlFVRlZMRTFCZDBKeVJpc3dRaXhIUVVGWmJrNHNSMEZCVXl4VFFVRlRiRWNzUjBGRGFFTXNTVUZCU1RWblFpeEZRVUZoY1doQ0xFZEJRVXRVTEVkQlJYUkNMRTlCUkVFMVowSXNSVUZCYTBNc2JVSkJRV1JCTEVWQlFUSkNRU3hGUVVGaE0wMHNSVUZEY2tSNU1VSXNSMEZCVXpWS0xFZEJRVmt3UWl4RlFVRlJMRVZCUVVkelJTeEpRVUZ0UWl4SFFVRlBOM2hDTEVWQlFWY3lUU3hMUVdkSE9VVXNVMEZCVTJzd1FpeEhRVUZOYkRGQ0xFZEJRMklzU1VGQlRVRXNTVUZCVTBFc1JVRkJUVWdzVDBGRGJrSXNVMEZGUml4SlFVRkpRU3hGUVVGVExFVkJUMklzVDBGT1FVY3NSVUZCVVZVc1IwRkJXVllzUlVGQlR5eFRRVUZUYlRGQ0xFZEJRMnhETEVkQlFVbHFVQ3hIUVVGclFtbFFMRWRCUlhCQ0xFOUJSRUYwTVVJc1JVRkJVMjFYTEVkQlFWVnRaaXhGUVVGTmRERkNMRTlCUVZGQkxFbEJRekZDTEVsQlIwb3JReXhIUVVGVkwwTXNSVUZCVVN4VFFVRlRUeXhIUVVOb1F5eFBRVUZQWVN4SFFVRlRha0lzUlVGQlR6SkNMRWRCUVdGMlFpeE5RWGxDZUVNc1UwRkJVMmN4UWl4SFFVRlZjREZDTEVWQlFVOUZMRWRCUTNoQ0xFbEJRVTFHTEVsQlFWTkJMRVZCUVUxSUxFOUJRMjVDTEZOQlJVWXNTVUZCU1dVc1JVRkJVM013UWl4SFFVRk5iREZDTEVkQlEyNUNMRTlCUVdkQ0xFMUJRVnBGTEVWQlEwdFZMRVZCUlVaTExFZEJRVk5NTEVWQlFWRXNVMEZCVTNVd1FpeEhRVU12UWl4UFFVRlBNVEZDTEVkQlFVMVRMRVZCUVZVM1RDeEZRVUZYT0dkRExFdEJkMEowUXl4SlFVRkpSU3hIUVVGVmRrNHNSMEZCVXl4VFFVRlRPVzVDTEVWQlFVOXZRaXhIUVVOeVF5eFBRVUZQT0d0Q0xFZEJRV3RDYkcxQ0xFZEJRM0pDZVdVc1IwRkJaWHBsTEVWQlFVOXZRaXhSUVhOQ2VFSnJNRUlzUjBGQlRYaE9MRWRCUVZNc1UwRkJVMnhITEVkQlF6RkNMRTlCUVU4MFNTeEhRVUZST1hCQ0xFZEJRVmxyYUVJc1JVRkJVWE5GTEU5Qk1FSnFRM0ZRTEVkQlFWRjZUaXhIUVVGVExGTkJRVk5zUnl4SFFVTTFRaXhKUVVGSk1XaENMRVZCUVZkdGFVSXNSMEZCUzFRc1IwRkpjRUlzVDBGSVNYTkZMRWRCUVd0Q2FHMUNMRXRCUTNCQ1FTeEZRVUZYTjB3c1IwRkZUbTB5UWl4SFFVRlJPWEJDTEVkQlFWbHJhRUlzUlVGQlVYTkZMRWxCUVc5Q1VTeEhRVUZaZUcxQ0xFVkJRVlVzVFVGM1FqTkZjekZDTEVkQlFWVXhUaXhIUVVGVExGTkJRVk5zUnl4SFFVTTVRaXhKUVVGSk5XZENMRVZCUVdGeGFFSXNSMEZCUzFRc1IwRkZkRUlzVDBGRVFUVm5RaXhGUVVGclF5eHRRa0ZCWkVFc1JVRkJNa0pCTEVWQlFXRXpUU3hGUVVOeVJHMHlRaXhIUVVGUk9YQkNMRWRCUVZscmFFSXNSVUZCVVhORkxFbEJRVzlDTjNoQ0xFVkJRVmN5VFN4TFFXMUNhRVY1TUVJc1IwRkJUVE5PTEVkQlFWTnZUaXhKUVRaRWJrSXNTVUZCU1ZFc1IwRkJWVFZPTEVkQlFWTXNVMEZCVTJ4SExFZEJRemxDTEVsQlFVa3ZhRUlzUlVGQlV5dG9RaXhGUVVGUEwyaENMRTlCUTJoQ1N5eEZRVUZYVEN4RlFVRlRMRVZCUVVrcmFFSXNSVUZCVHk5b1FpeEZRVUZUTEVkQlFVdDRUQ3hGUVVkcVJDeFBRVUZQSzJkRExFZEJRVlY0VkN4RlFVUnFRakZvUWl4RlFVRTRRaXh0UWtGQldrRXNSMEZCTUVJd2FFSXNSVUZCVDNSRExFMUJRVTl3Wml4SFFVRlpOMHdzUzBGdFEzaEZMRk5CUVZOemFFTXNSMEZCVFhReFFpeEhRVU5pTEVsQlFVbFBMRVZCUVZObldDeEhRVUZQZGxnc1IwRkZjRUlzVDBGRVFVOHNSVUZCVHpoWUxGZEJRVmtzUlVGRFdqbFlMRVZCYzBSVUxGTkJRVk50ZEVJc1IwRkJTekYwUWl4RlFVRlBkVEZDTEVkQlEyNUNMRTlCUVU5QkxFVkJRVmwyTVVJc1IwRnRRbkpDTEVsQlFVbDNNVUlzUjBGQldXcEpMRWRCUVZNc1UwRkJVMmhUTEVkQlEyaERMRWxCUVVrdllpeEZRVUZUSzJJc1JVRkJUUzlpTEU5QlEyWnJiMElzUlVGQlVXeHZRaXhGUVVGVEsySXNSVUZCVFN4SFFVRkxMRVZCUXpWQ2RtSXNSVUZCVVd0WkxFdEJRVXRETEZsQlEySnZaQ3hGUVVGakxGTkJRVk53ZWtJc1IwRkJWU3hQUVVGUGJWb3NSMEZCVDI1YUxFVkJRVkZ2V2l4SlFVVXpSQ3hSUVVGSkwySXNSVUZCVXl4SFFVRkxNRmtzUzBGQlMwVXNXVUZCV1RWWkxGTkJRemRDVVN4aFFVRnBRakJZTEVsQlFXbENjME1zUjBGQlVUQk9MRXRCUjJoRU1XNUNMRVZCUVZGQkxFVkJRVTB5UXl4TlFVRk5LMnRDTEVkQlFWRkJMRWRCUVZOc2IwSXNSVUZCVXl4RlFVRkpMRXRCUXpWRE5Ga3NXVUZCV1RaQ0xFMUJRMmhDTldFc1MwRkJVWEYxUWl4SFFVTlNiblZDTEUxQlFWTm5Na0lzUjBGRFZHb3lRaXhSUVVGWGRFd3NTVUZGVGl4SlFVRkpNbXBDTEVkQlFXTXpXQ3hGUVVGUGExa3NTMEZCUzBjc1YwRkJWM0ZXTEV0QlFVc3NVMEZCVXk5MFFpeEhRVWsxUkN4UFFVaEpTQ3hKUVVGWFJ5eEZRVUZOU0N4UlFVTnVRa2NzUlVGQlRYTmhMRXRCUVV0cWJVSXNSMEZGVGpKTUxFdEJXa0YxV1N4TFFVRkxkMVlzUzBGQlN6WklMRXRCSzFCeVFpeEpRVUZKUlN4SFFVRlZka29zUjBGQmFVSXNVMEZCVXpOeVFpeEZRVUZSVUN4RlFVRlBNRUlzUjBGRGFrUnRVaXhIUVVGbGNGUXNTMEZCUzJNc1JVRkJVVzFDTEV0QlF6VkNia0lzUlVGQlQyMUNMRWRCUlZScFdpeEhRVUZuUW5CaExFVkJRVkZ0UWl4RlFVRkxMRXRCZFVscVF5eEpRVUZKWnpCQ0xFZEJRVTkwU1N4SFFVRlhORWNzU1VGeFFteENNa0lzUjBGQlYzWkpMRWRCUVZjMlJ5eEpRVEpITVVJc1UwRkJVemxxUWl4SFFVRlJNMDhzUlVGQldUTkNMRWRCUlROQ0xFOUJSRmMwV0N4SFFVRlJhbGNzUjBGQlkzWkNMRWRCUVZrcllTeEpRVU5xUTNoYUxFVkJRVmsyYTBJc1IwRkJXWGh0UWl4RlFVRlZMRWxCZFVKb1JDeFRRVUZUS3pGQ0xFZEJRV0Z3TUVJc1JVRkJXVE5DTEVkQlJXaERMRTlCUkZjMFdDeEhRVUZSYWxjc1IwRkJZM1JDTEVkQlFXbENjV1lzU1VGRGRFTXZaQ3hGUVVGWk5tdENMRWRCUVZsNGJVSXNSVUZCVlN4SlFUQkNhRVFzU1VGQlNXY3lRaXhIUVVGVk0wb3NSMEZCYVVJc1UwRkJVek55UWl4RlFVRlJVQ3hGUVVGUE1FSXNSMEZEYWtSdFVpeEhRVUZsY0ZRc1MwRkJTMk1zUlVGQlVXMUNMRWRCUXpsQ2JrSXNSVUZCVDIxQ0xFZEJRVXQxV1N4TFFVRkxhbUVzUjBGRmFrSXlZU3hIUVVGblFuQmhMRVZCUVZGdFFpeEhRVUZOTVVJc1RVRnpSV3hETEVsQlFVazRNVUlzUjBGQldYSlBMRWRCUVZNc1UwRkJVMnB0UWl4RlFVRlpLMlVzUlVGQlRXaG9RaXhIUVVOc1JDeEpRVUZKVVN4SFFVRlRMRVZCUTFRd1l5eEZRVUYzUWl4dFFrRkJVamhFTEVWQlEyaENhR2RDTEVWQlFWTXdhMElzUjBGQldYcHFRaXhIUVVGaldDeEhRVUZOVnl4RlFVRlhhRU1zVjBGTGVFUXNUMEZJUVhkaUxFZEJRVk40V2l4RlFVRlpMRk5CUVZONFFpeEhRVU0xUWs4c1NVRkJVMUlzUjBGQlV6QmpMRVZCUVZOeVpDeEhRVUZOYldoQ0xFVkJRVTEyWjBJc1JVRkJUMVFzUjBGQlVYVnBRaXhIUVVGWE9XaENMRVZCUVU5MVowSXNSVUZCVFdob1FpeExRVVY2UldkQ0xFbEJLMEpNZHpGQ0xFZEJRVkUzU2l4SFFVRnBRaXhUUVVGVE0zSkNMRVZCUVZGUUxFVkJRVTh3UWl4SFFVTnVSR2xhTEVkQlFXZENjR0VzUlVGQlVXMUNMRVZCUVVzeFFpeExRVFpETDBJc1UwRkJVMmxSTEVkQlFVbDZUeXhGUVVGWk0wSXNSMEZGZGtJc1QwRkVWelJZTEVkQlFWRnFWeXhIUVVGaldpeEhRVUZYYjJ0Q0xFbEJRMmhEZUdwQ0xFVkJRVmsyYTBJc1IwRkJXWGh0UWl4RlFVRlZMRWxCYTBab1JDeEpRVUZKYlRKQ0xFZEJRVms1U2l4SFFVRnBRaXhUUVVGVE0zSkNMRVZCUVZGUUxFVkJRVTh3UWl4SFFVTjJSRzVDTEVWQlFVOXRRaXhGUVVGTkxFVkJRVWtzUjBGQlIzVlpMRXRCUVV0cVlTeEpRVU40UWl4WFFVRmhMR2RDUVcxVGFFSXNTVUZCU1dreVFpeEhRVUZUZUU4c1IwRkJVeXhUUVVGVGFtMUNMRVZCUVZreWEwSXNSMEZEZWtNc1IwRkJhMElzVFVGQlpETnJRaXhGUVVOR0xGTkJSVVlzU1VGQlNXaERMRVZCUVZNeWJVSXNSVUZCVlROdFFpeFBRVTEyUWl4UFFVeEpRU3hGUVVGVExFZEJRVXRuZEVJc1IwRkJaV2h5UWl4RlFVRlpNbXRDTEVWQlFWVXNSMEZCU1VFc1JVRkJWU3hKUVVOdVJVRXNTMEZEVXpOdFFpeEZRVUZUTEVkQlFVdG5kRUlzUjBGQlpYSkhMRVZCUVZVc1IwRkJTVUVzUlVGQlZTeEhRVUZKUVN4RlFVRlZMRTFCUXpWRlFTeEhRVUZoUVN4RlFVRlZMRXRCUld4Q1JDeEhRVUZaTVd0Q0xFVkJRVmx4WlN4SFFVRlpjMGNzUlVGQlZ5eFRRWEZDY0VSMlVpeEhRVUZOUkN4SlFVRlZMRmRCUTJ4Q0xFOUJRVTlzV0N4SFFVRkxkMVVzUzBGQlN6SkRMRTlCTUVSdVFpeFRRVUZUZVZvc1IwRkJTV2gyUWl4RlFVRk5iVVFzUlVGQlJ5dHdRaXhIUVVkd1FpeFBRVVpCTDNCQ0xFVkJRVWtyY0VJc1JVRkJVWFkwUWl4RlFVRlpkMDhzUlVGRGVFSkJMRVZCUVV0dVJDeEhRVUZoTEUxQlFVeHRSQ3hGUVVGaGJrUXNSVUZCUzBjc1QwRkJVMmRFTEVWQlEycERlWFZDTEVkQlFWYzFlRUlzUlVGQlRXcExMRVZCUVdWd1FpeEZRVUZYUVN4RlFVRlhRU3hGUVVGWFFTeEZRVUZYZDA4c1IwRnZRbkpHTEZOQlFWTXdla0lzUjBGQlR6RjZRaXhGUVVGSGJrUXNSMEZEYWtJc1NVRkJTV3RDTEVWQlEwb3NSMEZCYlVJc2JVSkJRVkpzUWl4RlFVTlVMRTFCUVUwc1NVRkJTV2RVTEVkQlFWVnNaU3hIUVVkMFFpeFBRVVJCY1U4c1JVRkJTVzkxUWl4SFFVRlZjSFZDTEVkQlExQXNWMEZQVEN4UlFVNU5RU3hGUVVGSkxFbEJRMUpxUXl4RlFVRlRiRUlzUlVGQlMwUXNUVUZCVFRoWkxFdEJRVTFuVml4WlFVVjRRakZ4UWl4SFFVRkxMRWxCUTFCdVJDeEZRVUZQY2t3c1IwRkZSblZOTEVkQmRVTllMRWxCUVVrME1VSXNSMEZCVHpGUExFZEJRVk1zVTBGQlUzQnZRaXhGUVVGTlF5eEZRVUZUTm5KQ0xFZEJRekZETEVsQlFVbHlVQ3hGUVVGVmFtNUNMRVZCUTJRc1IwRkJTWE15UWl4RlFVRlRNM0pDTEU5QlFWRXNRMEZEYmtJc1NVRkJTVFJ5UWl4RlFVRlZOMkVzUjBGQlpUUmhMRVZCUVZWM1JDeEhRVUZWZDBnc1MwRkRha1J5WVN4SFFVRlhOVzFDTEVWQlJXSXNUMEZCVHlzM1FpeEhRVUZYTlhoQ0xFVkJRVTE1WXl4RlFVRlRlR01zUlVGQlV6WnlRaXhGUVVGVlF5eExRV2RFYkVSblRDeEhRVUZWTTA4c1IwRkJVeXhUUVVGVGRHeENMRVZCUVZGVUxFVkJRVXQ1Y0VJc1IwRkRNME1zU1VGQlNYSlFMRVZCUVZWcWJrSXNSVUZCYVVKRExFVkJReTlDTEVkQlFVbHhNa0lzUlVGQlV6TnlRaXhQUVVGUkxFTkJRMjVDTEVsQlFVazBja0lzUlVGQlZUZGhMRWRCUVdVMFlTeEZRVUZWZDBRc1IwRkJWWGxJTEV0QlEycEVkR0VzUjBGQlZ6VnRRaXhGUVVWaUxFOUJRVThyTjBJc1IwRkJWM1oyUWl4RlFVRkxiMkVzUlVGQlV6TmFMRVZCUVZGbmNFSXNSVUZCVlVNc1MwRnpTbkJFTEZOQlFWTnBUQ3hIUVVGVGFETkNMRVZCUVUwNFpTeEZRVUZOYlZrc1IwRkROVUlzU1VGQlNVTXNSVUZEUVVNc1JVRkRRVU1zUlVGRFFXd3lRaXhGUVVOQmJUSkNMRVZCUTBGRExFVkJRMEZETEVWQlFXbENMRVZCUTJwQ1F5eEhRVUZWTEVWQlExWkRMRWRCUVZNc1JVRkRWR3hMTEVkQlFWY3NSVUZGWml4SFFVRnRRaXh0UWtGQlVuWjBRaXhGUVVOVUxFMUJRVTBzU1VGQlNXZFVMRWRCUVZWc1pTeEhRVlYwUWl4VFFVRlROR2xETEVWQlFWZERMRWRCUTJ4Q0xFbEJRVWw2TTBJc1JVRkJUMmN6UWl4RlFVTlFhak5DTEVWQlFWVnJNMElzUlVGTFpDeFBRVWhCUkN4RlFVRlhReXhGUVVGWGVHbERMRVZCUTNSQ05HbERMRVZCUVdsQ1NTeEZRVU5xUW5veVFpeEZRVUZUYkVJc1JVRkJTMFFzVFVGQlRVVXNSVUZCVTBNc1IwRjFRaTlDTEZOQlFWTXdNMElzUlVGQllVUXNSMEZEY0VJc1NVRkJTVVVzUlVGQmIwSkdMRVZCUVU5TUxFVkJUUzlDTEU5QlFWRkJMRWxCUVdsQ00ybERMRWRCUVdOcmFrTXNSMEZCY1VJdldTeEhRVU42UkN0WkxFVkJRVzlDTEVkQlFVOUtMRWRCVGtwRkxFVkJRVTlLTEVkQlRUaENTQ3hGUVVkcVJTeFRRVUZUVlN4SlFVTlFMRWxCUVVsSUxFVkJRVTl3YVVJc1MwRkRXQ3hIUVVGSmNXbENMRVZCUVdGRUxFZEJRMllzVDBGQlQwa3NSVUZCWVVvc1IwRkhkRUpPTEVWQlFWVTFhRUlzUjBGQlYzRnBRaXhGUVROQ2RrSXNVMEZCZFVKSUxFZEJRM0pDTEVsQlJVbExMRVZCUVdOc1dpeEhRVVpOTmxrc1JVRkJUMHdzUjBGSkwwSXNUMEZCVDBjc1JVRkRTR3BvUWl4SFFVRlZkMmhDTEVWQlFXRmFMRWRCU2tSUExFVkJRVTlLTEVsQlN6ZENVeXhGUVc5Q0swSkRMRU5CUVdOT0xFbEJSMjVFTEZOQlFWTkpMRVZCUVdGS0xFZEJTM0JDTEU5QlNrRk9MRVZCUVZVeGFVTXNSVUZKVGpRMFFpeEhRVUZaTWtvc1JVRkRVRkVzUlVGQlYwTXNTVUZGY0VKVUxFVkJRVmRETEVWQlFWZDRhVU1zUlVGRFpuVk5MRWRCWlZRc1UwRkJVMmN6UWl4SlFVTlFMRWxCUVVsUUxFVkJRVTl3YVVJc1MwRkRVRFJwUWl4RlFVRmhVQ3hGUVVGaFJDeEhRVTA1UWl4SFFVcEJWQ3hGUVVGWGNrb3NWVUZEV0hOS0xFVkJRVmQwWlN4TFFVTlllV1VzUlVGQlpVc3NSVUZGV0ZFc1JVRkJXU3hEUVVOa0xFZEJRVWxrTEVsQlFWa3hhVU1zUlVGRFpDeFBRWHBGVGl4VFFVRnhRbWRxUXl4SFFVMXVRaXhQUVVwQlNpeEZRVUZwUWtrc1JVRkZha0pPTEVWQlFWVTFhRUlzUjBGQlYzRnBRaXhGUVVGamFGb3NSMEZGTlVJd1dTeEZRVUZWUlN4RlFVRlhReXhIUVVGUmVqSkNMRVZCYlVWNlFtc3pRaXhEUVVGWlpDeEhRVVZ5UWl4SFFVRkpSeXhGUVVsR0xFOUJSa0Z3YVVJc1IwRkJZV2RwUWl4SFFVTmlRU3hGUVVGVk5XaENMRWRCUVZkeGFVSXNSVUZCWTJoYUxFZEJRelZDTkZrc1JVRkJWMG9zUjBGTmRFSXNUMEZJU1VRc1NVRkJXVEZwUXl4SlFVTmtNR2xETEVWQlFWVTFhRUlzUjBGQlYzRnBRaXhGUVVGamFGb3NTVUZGT1VJMVpDeEZRVWxVTEU5Qk0wZEJOR1FzUlVGQlQybFRMRWRCUVZOcVV5eEpRVUZUTEVWQlEzSkNjRWNzUjBGQlUzVmxMRXRCUTFoUExFbEJRVmxRTEVWQlFWRlBMRkZCUlhCQ1NpeEhRVVJCU3l4RlFVRlRMRmxCUVdGU0xFZEJRMGd6WjBJc1IwRkJWWGxoTEVkQlFWTnJSeXhGUVVGUlJ5eFZRVUZaTEVWQlFVZDBXU3hIUVVGUmMxa3NSVUZEY2tVM1NpeEZRVUZYTEdGQlFXTXdTaXhKUVVGWlFTeEZRVUZSTVVvc1UwRkJWMEVzUjBGdlJ6RkVNa3NzUlVGQlZVY3NUMEZ3UTFZc1YwRkRUV2hDTEVsQlFWa3hhVU1zUjBGRFpEQm5RaXhIUVVGaFoybENMRWRCUldaRkxFVkJRV2xDTEVWQlEycENUQ3hGUVVGWFNTeEZRVUZsU0N4RlFVRlhSU3hGUVVGVk1XbERMRWRCWjBOcVJIVnFReXhGUVVGVlNTeE5RVGRDVml4WFFVTkZMRTlCUVU5cVFpeEpRVUZaTVdsRExFVkJRVmwxVFN4RlFVRlROakpDTEVWQlFXRjRhVUlzVDBFMlFtaEVNbWxDTEVWQmNVSlVMRWxCUVVsTExFZEJRVkZ1VVN4SFFVRlRMRk5CUVZOd2IwSXNSVUZCVFVVc1IwRkRiRU1zVDBGQlR6SmxMRWRCUVZVM1pTeEZRVUZOTEVWQlFVZEZMRXRCYzBKNFFuTTBRaXhIUVVGUmNGRXNSMEZCVXl4VFFVRlRjRzlDTEVWQlFVMDRaU3hGUVVGTk5XVXNSMEZEZUVNc1QwRkJUekpsTEVkQlFWVTNaU3hGUVVGTkszZENMRWRCUVZOcVV5eEpRVUZUTEVWQlFVYzFaU3hMUVhGRk9VTXNVMEZCVTJjd1FpeEhRVUZSYkRCQ0xFVkJRVTE1TkVJc1IwRkRja0lzUjBGQmJVSXNiVUpCUVZKNk5FSXNSMEZCYlVNc1RVRkJXbmswUWl4SFFVRjFReXh0UWtGQldrRXNSVUZETTBRc1RVRkJUU3hKUVVGSmVteENMRWRCUVZWc1pTeEhRVVYwUWl4SlFVRkpOR3BETEVWQlFWY3NWMEZEWWl4SlFVRkplRFJDTEVWQlFVOHlkRUlzVlVGRFVIaHlRaXhGUVVGTmJ6SkNMRVZCUVZkQkxFVkJRVk14TkVJc1RVRkJUVGhaTEV0QlFVMHpXU3hIUVVGUlFTeEZRVUZMTEVkQlEyNUVNa1FzUlVGQlVUWXdRaXhGUVVGVE56QkNMRTFCUlhKQ0xFZEJRVWxCTEVWQlFVMURMRWxCUVVsNlFpeEhRVU5hTEU5QlFVOTNRaXhGUVVGTmRWa3NTVUZCU1M5YUxFZEJSVzVDTEVsQlFVbHVRaXhGUVVGVGJFSXNSVUZCUzBRc1RVRkJUVGhaTEV0QlFVMHpXU3hIUVVVNVFpeFBRVVJCZHpSQ0xFVkJRVk0zTUVJc1RVRkJVVUVzUlVGQlRYZE9MRWxCUVVsb1VDeEZRVUZMYmtJc1NVRkJWekpETEVWQlEzQkRNME1zUjBGSFZDeFBRVVJCZHpOQ0xFVkJRVk0zTUVJc1RVRkJVU3hKUVVGTGNYZENMRWRCUVZGNVJTeFBRVUZUT1dVc1NVRkRhRU0yWlN4RlFUQkNWQ3hUUVVGVFJTeEhRVUZQTnpOQ0xFZEJRMlFzUjBGQmQwSXNiVUpCUVdKQkxFVkJRMVFzVFVGQlRTeEpRVUZKYVZNc1IwRkJWV3hsTEVkQlJYUkNMRTlCUVU4c1YwRkRUQ3hKUVVGSmIwd3NSVUZCVHpKMFFpeFZRVU5ZTEU5QlFWRXpkRUlzUlVGQlMwTXNVVUZEV0N4TFFVRkxMRVZCUVVjc1QwRkJVVmtzUlVGQlZWZ3NTMEZCUzNsWkxFMUJReTlDTEV0QlFVc3NSVUZCUnl4UFFVRlJPVmdzUlVGQlZWZ3NTMEZCUzNsWkxFdEJRVTB6V1N4RlFVRkxMRWxCUXpGRExFdEJRVXNzUlVGQlJ5eFBRVUZSWVN4RlFVRlZXQ3hMUVVGTGVWa3NTMEZCVFROWkxFVkJRVXNzUjBGQlNVRXNSVUZCU3l4SlFVTnVSQ3hMUVVGTExFVkJRVWNzVDBGQlVXRXNSVUZCVlZnc1MwRkJTM2xaTEV0QlFVMHpXU3hGUVVGTExFZEJRVWxCTEVWQlFVc3NSMEZCU1VFc1JVRkJTeXhKUVVVNVJDeFBRVUZSWVN4RlFVRlZhRUlzVFVGQlRUaFpMRXRCUVUweldTeEpRV3hEYkVObk1FSXNSMEZCVVhsRkxFMUJRVkU1WlN4SFFUSkdhRUlzU1VGQlNXZG1MRWRCUVZkNFRpeEhRVUZUTEZOQlFWTnlja0lzUlVGQlRUZzBRaXhIUVV0eVF5eEpRVUZKUXl4SFFVcEtSQ3hGUVVGdFF5eEhRVUZ5UWtFc1JVRkJWek0wUWl4UlFVRmxhVmtzUjBGQlVUQm5RaXhGUVVGWExFbEJRM1pFZGpOQ0xFZEJRVk4xTTBJc1JVRkJWeXhIUVVGSmNqRkNMRWRCUVZWMWFrSXNUMEZEYkVONmJFSXNSMEZCVTJsbUxFZEJRVmx6V1N4RlFVRlpMRWRCUVVseU1VSXNSMEZCVlhWcVFpeFJRVVYwUWpkdFFpeFBRVU0zUWl4UFFVRlBhVzlDTEVkQlFWTXNVMEZCVTJ4dlFpeEhRVWwyUWl4SlFVaEJMRWxCUVVsUkxFZEJRVk1zUlVGRFZGQXNSVUZCVTNGWExFZEJRVlYwVnl4RlFVRkxReXhQUVVGUk5EUkNMRXRCUlROQ2NqUkNMRVZCUVZGUUxFZEJRMlpFTEVWQlFVdFJMRWRCUVZOdk5FSXNSVUZCVjNBMFFpeEhRVUZQVGl4TFFVRkxlVmtzUzBGQlRUTlpMRVZCUVV0UkxFbEJSV3hFTEU5QlFVOVlMRWRCUVUxRExFVkJRVTAyV1N4TFFVRk5NMWtzVDBGeFEzcENPRFJDTEVkQlFWVTFVU3hIUVVGVExGTkJRVk53YjBJc1JVRkJUVGh5UWl4SFFVTndReXhKUVVGSlF5eEZRVUZWTjJFc1IwRkJaVFJoTEVWQlFWVjNSQ3hIUVVGVk1Fb3NTMEZEYWtRc1QwRkJUM0JJTEVkQlFWYzFlRUlzUlVGQlRXNUxMRVZCUVcxQ2JFSXNSVUZCVjIwelFpeEZRVUZWUXl4TFFXMURPVVJyVGl4SFFVRmxOMUVzUjBGQlV5eFRRVUZUY0c5Q0xFVkJRVTA0Y2tJc1IwRkRla01zU1VGQlNVTXNSVUZCVlRkaExFZEJRV1UwWVN4RlFVRlZkMFFzUjBGQlZUSktMRXRCUTJwRUxFOUJRVTl5U0N4SFFVRlhOWGhDTEVWQlFVMXNTeXhGUVVGNVFtNUNMRVZCUVZkdE0wSXNSVUZCVlVNc1MwRjVRbkJGYlU0c1IwRkJVV2hNTEVkQlFWTXNVMEZCVTJ4MVFpeEZRVUZOWjI5Q0xFZEJRMnhETEU5QlFVODBTaXhIUVVGWE5YaENMRVZCUVUxb1N5eEZRVUZwUW5KQ0xFVkJRVmRCTEVWQlFWZEJMRVZCUVZkeGVrSXNTMEZwWVRWRkxGTkJRVk16VFN4SFFVRkhNV0VzUlVGQlQyMW9RaXhIUVVOcVFpeFBRVUZQYm1oQ0xFbEJRVlZ0YUVJc1IwRkJWVzVvUWl4SFFVRlZRU3hIUVVGVGJXaENMRWRCUVZWQkxFVkJNRUl4UkN4SlFVRkpjVmdzUjBGQlMzSkpMRWRCUVRCQ2FsQXNTVUY1UWk5Q2RWZ3NSMEZCVFhSSkxFZEJRVEJDTEZOQlFWTnVkMElzUlVGQlQyMW9RaXhIUVVOc1JDeFBRVUZQYm1oQ0xFZEJRVk50YUVJc1NVRnhRbVIyU0N4SFFVRmpjVWtzUjBGQlowSXNWMEZCWVN4UFFVRlBhVXdzVlVGQmNFSXNTVUZCYzBOcVRDeEhRVUZyUWl4VFFVRlRhbWxDTEVkQlEycEhMRTlCUVU5M1dDeEhRVUZoZUZnc1NVRkJWVFpUTEVkQlFXVndWQ3hMUVVGTFR5eEZRVUZQTEZsQlEzUkVLMVFzUjBGQmNVSjBWU3hMUVVGTFR5eEZRVUZQTEZkQk1FSnNRM2xZTEVkQlFWVTFWeXhIUVVGTk5GY3NVVUZ0UW1oQ2FGb3NSMEZCWjBKRUxFZEJRVzlDYzBVc1IwRkJWWFJGTEVsQk56VlFiRVFzVTBGQk1rSjNRaXhIUVVONlFpeFBRVUZQZDFnc1IwRkJZWGhZTEVsQlFWVTJaMElzUjBGQlZ6ZG5RaXhKUVVGVmRFa3NTVUYxTjFCeVJDeFRRVUZUZFhSQ0xFZEJRVmxxYkVJc1IwRkRia0lzVDBGQlowSXNUVUZCVkVFc1IwRkJhVUp4ZVVJc1IwRkJVM0o1UWl4RlFVRk5VaXhWUVVGWk5tZENMRWRCUVZkeVowSXNSMEUwUW1oRkxGTkJRVk0yYkVJc1IwRkJhMEkzYkVJc1IwRkRla0lzVDBGQlQzZFlMRWRCUVdGNFdDeEpRVUZWYVd4Q0xFZEJRVmxxYkVJc1IwRXdRelZETEVsQlFVbHpWaXhIUVVGWFJDeEpRVUZyUW5Ga0xFZEJiVUkzUWk5NlFpeEhRVUZUUkN4SFFVRmhiMFVzUjBGQlZYQkZMRWxCZUdkUmNFTXNVMEZCYjBKelFpeEhRVU5zUWl4UFFVRlBkMWdzUjBGQllYaFlMRWxCUVZVMlowSXNSMEZCVnpkblFpeEpRVUZWZGtvc1IwRXJjVkZ5UkN4VFFVRlRhV2xETEVkQlFWRXhORUlzUjBGRFppeEpRVUZMZDFnc1IwRkJZWGhZTEVkQlEyaENMRTlCUVU4c1JVRkZWQ3hKUVVGSmRXTXNSVUZCVFhORkxFZEJRVmMzWjBJc1IwRkRja0lzVDBGQlQzVmpMRWRCUVU4MWJFSXNSMEZCV1RSc1FpeEhRVUZQTjJ4Q0xFZEJRMDRzYVVKQlFXcENjMG9zUlVGQlRUWnBRaXhUUVVFMFF5eHBRa0ZCWkRkcFFpeEZRVUZOTkdsQ0xFOUJRWEZDYTBRc1IwRkJZemxzUWl4SFFXdEVla1lzVTBGQlUzRm5RaXhIUVVGWGNtZENMRWRCUTJ4Q0xFbEJRVXNyV0N4SFFVRlRMMWdzUjBGRFdpeFBRVUZQTEVWQlNWUXNTVUZCU1hWakxFVkJRVTF6UlN4SFFVRlhOMmRDTEVkQlEzSkNMRTlCUVU5MVl5eEhRVUZQTTJ4Q0xFZEJRVmN5YkVJc1IwRkJUekZzUWl4SFFVRlZNR3hDTEVkQlFVOW9iVUlzUjBGQldXZHRRaXhIUVVGUGNteENMRVZCTmtKMFJTeFRRVUZUZVdoRExFZEJRVlV6TkVJc1IwRkRha0lzVFVGQmRVSXNhVUpCUVZSQkxFZEJRWEZDUVN4SFFVRlROSGRDTEVkQlFWVTFkMElzUjBFMlFuaEVMRk5CUVZOeGVVSXNSMEZCVTNKNVFpeEhRVU5vUWl4TlFVRjFRaXhwUWtGQlZFRXNSMEZEV2tFc1IwRkJVeXhIUVVGTFFTeEZRVUZSTEVkQlFVc3NSMEZCUzBFc1IwRkJVMnhMTEVWQk5FSTNReXhUUVVGVGFXbENMRWRCUVZNdldDeEhRVU5vUWl4SlFVRkpaM2xDTEZOQlFXTm9lVUlzUlVGRGJFSXNUMEZCWjBJc1RVRkJWRUVzU1VGQk1FSXNWVUZCVW1kNVFpeEhRVUUwUWl4WlFVRlNRU3hIUVRKQ0wwTXNVMEZCVTNoaExFZEJRV0Y0V0N4SFFVTndRaXhQUVVGblFpeE5RVUZVUVN4SFFVRnBReXhwUWtGQlZFRXNSVUZ2UW1wRExFbEJRVWx1UWl4SFFVRlJSQ3hIUVVGWmEwVXNSMEZCVld4RkxFbEJOWGhSYkVNc1UwRkJiVUp2UWl4SFFVTnFRaXhQUVVGUGQxZ3NSMEZCWVhoWUxFbEJRVlYzWXl4SFFVRlBlR01zU1VGQlZXeEtMRWRCTml0UmFrUXNVMEZCVXpob1F5eEhRVUZUTlRSQ0xFZEJRMmhDTEUxQlFYVkNMR2xDUVVGVVFTeEhRVU5ZZDFnc1IwRkJZWGhZTEVsQlFWVTJaMElzUjBGQlZ6ZG5RaXhKUVVGVmFrb3NSVUVyUW1wRUxGTkJRVk1yZFVJc1IwRkJZemxzUWl4SFFVTnlRaXhKUVVGTGQxZ3NSMEZCWVhoWUxFbEJRVlUyWjBJc1IwRkJWemRuUWl4SlFVRlZMMGtzUlVGREwwTXNUMEZCVHl4RlFVVlVMRWxCUVVrMlowSXNSVUZCVVc1RkxFZEJRV0V6VkN4SFFVTjZRaXhIUVVGakxFOUJRVlk0V0N4RlFVTkdMRTlCUVU4c1JVRkZWQ3hKUVVGSmMwWXNSVUZCVDNaTExFZEJRV1Z3VkN4TFFVRkxjVmtzUlVGQlR5eG5Ra0ZCYTBKQkxFVkJRVTF6UlN4WlFVTTVSQ3hOUVVGelFpeHRRa0ZCVW1kQ0xFZEJRWE5DUVN4aFFVRm5Ra0VzUjBGRGJFUjZTeXhIUVVGaGJGUXNTMEZCU3pKa0xFbEJRVk5vU3l4SFFXOUNMMElzU1VGQlNYSlZMRWRCUVZkRUxFZEJRV1ZuUlN4SFFVRlZhRVVzU1VFMU9WRjRReXhUUVVGelFtdENMRWRCUTNCQ0xFOUJRVTkzV0N4SFFVRmhlRmdzU1VGQlZUWm5RaXhIUVVGWE4yZENMRWxCUVZVM1NTeEhRVFpuVW5KRUxFbEJRVWs0U0N4SFFVRlJSQ3hIUVVGWk9FUXNSMEZCVlRsRUxFbEJibWRTYkVNc1UwRkJiVUpuUWl4SFFVTnFRaXhQUVVGUGQxZ3NSMEZCWVhoWUxFbEJRVlYzWXl4SFFVRlBlR01zU1VGQlZUVkpMRWRCY1doU2FrUXNVMEZCVTNsb1F5eEhRVUZUTnpSQ0xFZEJRMmhDTEUxQlFYVkNMR2xDUVVGVVFTeEpRVU5XZVZnc1IwRkJVWHBZTEVsQlFWVjNXQ3hIUVVGaGVGZ3NTVUZCVlRablFpeEhRVUZYTjJkQ0xFbEJRVlV6U1N4RlFXOUNjRVVzVTBGQlUzTnZRaXhIUVVGVE0yWXNSMEZEYUVJc1RVRkJkVUlzYVVKQlFWUkJMRWRCUTFoM1dDeEhRVUZoZUZnc1NVRkJWVFpuUWl4SFFVRlhOMmRDTEVsQlFWVXhTU3hIUVc5Q2FrUXNTVUZCU1RaSUxFZEJRV1ZFTEVkQlFXMUNORVFzUjBGQlZUVkVMRWxCZG1wU2FFUXNVMEZCTUVKakxFZEJRM2hDTEU5QlFVOTNXQ3hIUVVGaGVGZ3NTVUZEYkVKeGVVSXNSMEZCVTNKNVFpeEZRVUZOVWl4WFFVRmhha1FzUjBGQlpYTnJRaXhIUVVGWE4yZENMRXRCTm05U01VUXNTVUZCU1RnMFFpeEhRVUZMTTBrc1IwRkJNRUp3VEN4SlFYbENMMEpuVlN4SFFVRk5OVWtzUjBGQk1FSXNVMEZCVTI1M1FpeEZRVUZQYldoQ0xFZEJRMnhFTEU5QlFVOXVhRUlzUjBGQlUyMW9RaXhKUVRCQ2JFSXNVMEZCVXpaWUxFZEJRVkZvTlVJc1IwRkRaaXhKUVVGTFFTeEZRVU5JTEZOQlJVWXNSMEZCU1dsc1FpeEhRVUZaYW14Q0xFZEJRMlFzVDBGQlR6WTBRaXhIUVVGVE56UkNMRWRCUVZNclVTeEhRVUZqTDFFc1IwRkJVM05oTEVkQlFWVjBZU3hIUVVVMVJDeEhRVUZKYlZVc1NVRkJaVzVWTEVWQlFVMXRWU3hKUVVOMlFpeFBRWFk0Vms0c1UwRkJlVUpETEVkQlNYWkNMRWxCU0VFc1NVRkJTVzFHTEVWQlEwRm9XaXhQUVVWTFoxb3NSVUZCVDI1R0xFVkJRVk0yYTBJc1VVRkJVVU1zVFVGREwwSXpORUlzUlVGQlR6QmFMRXRCUVV0V0xFVkJRVXQyV2l4UFFVVnVRaXhQUVVGUFR5eEZRV2M0VmtrME5FSXNRMEZCWjBKdU5VSXNSVUZCVFcxVkxFOUJSUzlDTEVsQlFVbHZTU3hGUVVGTlF5eEhRVUZQZUdNc1IwRkhha0lzVDBGR1YzVmpMRWRCUVU5NmJFSXNSVUZCVTJ0YUxFZEJRV04xVFN4SFFVRlBibXhDTEVWQlFWTnhXaXhIUVVGaE1WQXNTVUZGTVVSbUxFZEJNRUprTEZOQlFWTnBkMElzUjBGQlUycDNRaXhIUVVOb1FpeFBRVUZMUVN4SFFVZE1RU3hGUVVGUmIzZENMRWRCUVZOd2QwSXNUVUZEU0c1TExFZEJRVmx0U3l4TFFVRlhia3NzUjBGRGRrSnRTeXhGUVVGUkxFZEJRVXNzUlVGQlNTeEhRVU5tYWtzc1JVRkZWR2xMTEVkQlFWVkJMRVZCUVZGQkxFVkJRVkVzUlVGUVpDeEpRVUZXUVN4RlFVRmpRU3hGUVVGUkxFVkJiME5xUXl4VFFVRlROSGRDTEVkQlFWVTFkMElzUjBGRGFrSXNTVUZCU1U4c1JVRkJVekIyUWl4SFFVRlRhbmRDTEVkQlEyeENielZDTEVWQlFWazNORUlzUlVGQlV5eEZRVVY2UWl4UFFVRlBRU3hIUVVGWFFTeEZRVUZWTmpSQ0xFVkJRVmszTkVJc1JVRkJVelkwUWl4RlFVRlpOelJDTEVWQlFWVXNSVUU0UW5wRkxGTkJRVk00TkVJc1IwRkJVM0kxUWl4SFFVTm9RaXhQUVVGUFFTeEZRVUZSZFdFc1IwRkJWWEZYTEVkQlFWVTFkMElzUjBGQlVTeEZRVUZITDBvc1IwRkJiMElzUlVFd1FuQkZMRk5CUVZOdE5rSXNSMEZCVTNCM1FpeEhRVU5vUWl4SFFVRnZRaXhwUWtGQlZFRXNSVUZEVkN4UFFVRlBRU3hGUVVWVUxFZEJRVWt5Wml4SFFVRlRNMllzUjBGRFdDeFBRVUZQYUVzc1JVRkZWQ3hIUVVGSksyaENMRWRCUVZNdldDeEhRVUZSTEVOQlEyNUNMRWxCUVVsdGFFSXNSVUZCWjBNc2JVSkJRV3BDYm1oQ0xFVkJRVTF4V0N4UlFVRjNRbkpZTEVWQlFVMXhXQ3hWUVVGWmNsZ3NSVUZEYmtWQkxFVkJRVkVyV0N4SFFVRlRiMG9zUjBGQlZVRXNSVUZCVVN4SFFVRk5RU3hGUVVVelF5eEhRVUZ2UWl4cFFrRkJWRzVvUWl4RlFVTlVMRTlCUVdsQ0xFbEJRVlpCTEVWQlFXTkJMRWRCUVZOQkxFVkJSV2hEUVN4RlFVRlJlVU1zUjBGQlUzcERMRWRCUTJwQ0xFbEJRVWx6TlVJc1JVRkJWM0l2UWl4SFFVRlhPRllzUzBGQlN5OVFMRWRCUXk5Q0xFOUJRVkZ6TlVJc1IwRkJXVzR2UWl4SFFVRlZORllzUzBGQlN5OVFMRWRCUXk5Q09VTXNSMEZCWVRoRExFVkJRVTB5UXl4TlFVRk5MRWRCUVVreU1rSXNSVUZCVnl4RlFVRkpMRWRCUXpORGRDOUNMRWRCUVZjclZpeExRVUZMTDFBc1IwRkJVMmhMTEVkQlFVOW5TeXhGUVRKQ2RrTXNVMEZCVXl0c1FpeEhRVUZqTDJ4Q0xFZEJRM0pDTEU5QlFVOXJZaXhIUVVGWGJHSXNSVUZCVHpoakxFZEJRVTg1WXl4SlFYTkViRU1zVTBGQlV6UlRMRWRCUVZNMVV5eEhRVU5vUWl4UFFVRm5RaXhOUVVGVVFTeEZRVUZuUWl4SFFVRkxkM0JDTEVkQlFXRjRjRUlzUjBGeFF6TkRMRWxCUVVsMU5VSXNSMEZCVTI1T0xFZEJRV1VzVTBGQlUycHhRaXhGUVVGUmRrb3NSMEZETTBNc1IwRkJTU3R5UWl4SFFVRlpMM0pDTEVsQlFWZHhjMElzUjBGQldYSnpRaXhIUVVOeVEzTnBRaXhIUVVGWGRHbENMRVZCUVZGeFlTeEhRVUZMY21Fc1IwRkJVM1ZLTEZGQlIyNURMRWxCUVVzc1NVRkJTVlFzUzBGQlR6bEpMRVZCUTFacFlTeEhRVUZsY0ZRc1MwRkJTemRITEVWQlFWRTRTU3hKUVVNNVFtdGFMRWRCUVZsNldTeEZRVUZSVkN4RlFVRkxPVWtzUlVGQlR6aEpMRTFCYjBOc1F6Z3pRaXhIUVVGWGNFNHNSMEZCWlN4VFFVRlRhbkZDTEVWQlFWRjJTaXhIUVVNM1EzTnBRaXhIUVVGWGRHbENMRVZCUVZGcmEwSXNSMEZCVDJ4clFpeEhRVUZUZFVvc1MwRm5RMnBEY3pOQ0xFZEJRV1Z5VGl4SFFVRmxMRk5CUVZOcWNVSXNSVUZCVVhaS0xFVkJRVkUwYzBJc1JVRkJWWHBLTEVkQlEyNUZZaXhIUVVGWGRHbENMRVZCUVZGcmEwSXNSMEZCVDJ4clFpeEhRVUZUZFVvc1JVRkJVVFJhTEV0QkswSjZRekprTEVkQlFXRjBUaXhIUVVGbExGTkJRVk5xY1VJc1JVRkJVWFpLTEVWQlFWRTBjMElzUlVGQlZYcEtMRWRCUTJwRllpeEhRVUZYZEdsQ0xFVkJRVkZ4WVN4SFFVRkxjbUVzUjBGQlUzVktMRVZCUVZFMFdpeExRVzlDZGtNMFpDeEhRVUZMY0Uwc1IwRkJVMnBUTEVsQk9FUnNRaXhKUVVGSmRrb3NSMEZCVnpCV0xFZEJRVk1zVTBGQlUzUnNRaXhGUVVGUmJYRkNMRWRCUTNaRGJuRkNMRVZCUVZNM1JTeEhRVUZQTmtVc1IwRkZhRUlzU1VGQlNYQkRMRWRCUVZNc1JVRkRWRkFzUlVGQlV6aHpRaXhGUVVGUk9YTkNMRTlCUTJwQ0szTkNMRVZCUVZFdmMwSXNSVUZCVXl4RlFVRkpPSE5DTEVWQlFWRXNSMEZCUzNRMFFpeEZRVTEwUXl4SlFVcEpkVFJDTEVkQlFWTkRMRWRCUVdWR0xFVkJRVkVzUjBGQlNVRXNSVUZCVVN4SFFVRkpReXhMUVVOc1JDOXpRaXhGUVVGVExFdEJSMFpQTEVWQlFWRlFMRWRCVFdZc1NVRk1RU3hKUVVGSk5VY3NSVUZCVXpCNlFpeEZRVUZSZG5OQ0xFZEJRMnBDYVVRc1JVRkJVVGhhTEVkQlFVOXNhMElzUjBGRFptZG9ReXhIUVVGakxFVkJRMlJETEVWQlFXTTNNa0lzUlVGQlRYaEVMRk5CUldadk5rSXNSVUZCWVVNc1IwRkJZU3hEUVVOcVF5eEpRVUZKYmpSQ0xFVkJRVTF6UWl4RlFVRk5OREpDTEVkQlExbzFOVUlzUlVGQlVXMURMRVZCUVU5VUxFbEJSV1l4UWl4SlFVRlZhRTBzUjBGRFZEQnRRaXhIUVVGSE1XRXNSVUZCVDNsVExFZEJRVmt2VVN4TlFVRlZiVklzUjBGQlpYQlVMRXRCUVVzd1F5eEZRVUZSVkN4TlFVTXZSRk1zUlVGQlQxUXNSMEZCVHpsSkxFVkJRVTg0U1N4SlFVc3pRaXhQUVVGUFV5eEpRWE5DVERJelFpeEhRVUZsY2xNc1IwRkJVeXhUUVVGVGJHOUNMRWRCUlc1RExFOUJSRUZCTEVWQlFVc3dZU3hMUVVGTGFtMUNMRVZCUVZjd09VSXNTVUZEWkhSNVFpeEhRVUZOTWpaQ0xFZEJRVmN2YkVNc1JVRkJWM1ZNTEV0QloxTnlReXhUUVVGVGEyTXNSMEZCU1hSYUxFVkJRVkZ2WlN4RlFVRk5hMUFzUjBGRGVrSXNTVUZCU1d4MlFpeEZRVUZ0UWl4TlFVRldORUlzUlVGQmFVSnVUeXhGUVVGWmMzTkNMRWRCUVZGdVpTeEZRVUZSYjJVc1IwRkRNVVFzVDBGQlQyaG5RaXhKUVVGWGRrMHNSVUZCV1hrM1FpeEZRVUZsYkhaQ0xFVkJORVF2UXl4VFFVRlRLMnRDTEVkQlFVMXVha0lzUlVGQlVXOWxMRWRCUTNKQ0xFOUJRV2xDTEUxQlFWWndaU3hIUVVGclFtZDNRaXhIUVVGUmFIZENMRVZCUVZGdlpTeEZRVUZOWXl4SlFYRkNha1FzU1VGQlNUSlpMRWRCUVZNMVN5eEhRVUZsTEZOQlFWTTNkVUlzUlVGQlVWQXNSVUZCVHpCQ0xFZEJRM0pETEUxQlFWUXhRaXhIUVVONVFpeHRRa0ZCYkVKQkxFVkJRVTAwVXl4WFFVTm1OVk1zUlVGQlVXMVVMRWRCUVhGQ01WUXNTMEZCUzA4c1NVRkhjRU5QTEVWQlFVOVFMRWRCUVZNd1FpeEhRVU5tZDIxQ0xFZEJRVk0xUkN4TFFUUkNVakpXTEVkQlFWYzNTeXhIUVVGbExGTkJRVk0zZFVJc1JVRkJVVkFzUlVGQlR6QkNMRWRCUTNaRExFMUJRVlF4UWl4SFFVTjVRaXh0UWtGQmJFSkJMRVZCUVUwMFV5eFhRVU5tTlZNc1JVRkJVVzFVTEVkQlFYRkNNVlFzUzBGQlMwOHNTVUZIYUVNMlV5eEhRVUZsY0ZRc1MwRkJTMk1zUlVGQlVWQXNSMEZET1VKUExFVkJRVTlRTEVkQlFVOXBZU3hMUVVGTGRsa3NSMEZGYmtKdVFpeEZRVUZQVUN4SlFVRlZNRUlzU1VGRmJFSXlhMElzU1VGdlFrTTJWQ3hIUVVGVGVsTXNSMEZCVXpOR0xFbEJPRUowUWl4VFFVRlROMDhzUjBGQlN6bFJMRWRCUTFvc1QwRkJUemhwUWl4SFFVRlpPV2xDTEVkQlFWVnhXQ3hIUVVGamNsZ3NSMEZCVlhWcFFpeEhRVUZUZG1sQ0xFZEJNRUpvUlN4VFFVRlRNbUVzUjBGQlR6TmhMRWRCUTJRc1QwRkJUemhwUWl4SFFVRlpPV2xDTEVkQlFWVnhXQ3hIUVVGamNsZ3NSMEZCVVN4SFFVRlJlV2xDTEVkQlFWZDZhVUlzUjBGMVIzaEZMRWxCUVVsbk5FSXNSMEZCVVM5T0xFZEJRV1VzVTBGQlUycHhRaXhGUVVGUmRrb3NSVUZCVVRSelFpeEhRVU5zUkVRc1IwRkJWWEJxUWl4RlFVRlJka29zUlVGQlVUUnpRaXhMUVd0RGVFSjFWU3hIUVVGWk0wNHNSMEZCWlN4VFFVRlRhbkZDTEVWQlFWRjJTaXhGUVVGUk5ITkNMRVZCUVZWNlNpeEhRVU5vUlhkS0xFZEJRVlZ3YWtJc1JVRkJVWFpLTEVWQlFWRTBjMElzUlVGQlZYcEtMRXRCZFVKc1EzRmxMRWRCUVU4M1RTeEhRVUZUTEZOQlFWTndja0lzUlVGQlVXOWFMRWRCUTI1RExFbEJRVWxvWWl4TFFVTktMRWRCUVdNc1RVRkJWalJDTEVWQlEwWXNUMEZCVHpWQ0xFVkJSVlFzU1VGQlNUQmlMRWRCUVZNc1JVRkRZbFlzUlVGQlVUTmhMRWRCUVZNeVlTeEZRVUZQTEZOQlFWTm5SaXhIUVVjdlFpeFBRVVpCUVN4RlFVRlBReXhIUVVGVFJDeEZRVUZOY0dVc1IwRkRkRUk0V2l4SlFVRlhRU3hGUVVGVGMwVXNSVUZCU3k5blFpeFBRVUZUTEVkQlF6TkNLMmRDTEVsQlJWUnlSaXhIUVVGWEwxa3NSVUZCVVRSaUxFZEJRV0UxWWl4SFFVRlROVUlzUjBGRGNrTXdZaXhKUVVOR01XSXNSVUZCVTNOaUxFZEJRVlYwWWl4RlFVRlJMMHdzUlVGQmEwSkRMRVZCUVd0Q1F5eEZRVUZ2UW1rNVFpeExRVWR5Uml4SlFVUkJMRWxCUVVsdWVVSXNSVUZCVXl0aUxFVkJRVTB2WWl4UFFVTmFRU3hMUVVOTUsyNUNMRWRCUVZWb2JrSXNSVUZCVVdkaUxFVkJRVTB2WWl4SlFVVXhRaXhQUVVGUFpTeEpRVFJEVkN4SlFVRkplVklzUjBGQlQzVmlMRWRCUVZNc1UwRkJVM0J5UWl4RlFVRlJiMW9zUjBGRGJrTXNUMEZCYVVJc1RVRkJWbkJhTEV0QmJtMVVWQ3hUUVVGclFrRXNSVUZCVVc5YUxFZEJRM2hDTEU5QlFVOTVUQ3hIUVVGWE4ydENMRVZCUVZGdldpeEZRVUZQTEZOQlFWTjJZaXhGUVVGUGRXZENMRWRCUXk5RExFOUJRVThyUlN4SFFVRk5ibXBDTEVWQlFWRnZaU3hMUVdsdFZFMDRXaXhEUVVGVGJEUkNMRVZCUVZGdldpeExRWEZDYUVRc1UwRkJVeXRsTEVkQlFVOXVORUlzUlVGQlVTOUNMRWRCUTNSQ0xFZEJRV01zVFVGQlZpdENMRVZCUTBZc1UwRkZSaXhKUVVGSllTeEZRVUZSY0VNc1IwRkJVMjFrTEVkQlFXRTFZaXhIUVVGVExGTkJRVk52TkVJc1IwRkRiRVFzVDBGQlVVRXNTMEZIVml4UFFVUkJialpDTEVWQlFWbHBiVUlzUjBGQldXcHRRaXhIUVVOcVFqUnRRaXhIUVVGWE4ydENMRVZCUVZGaExFVkJRVThzVTBGQlUyaEVMRVZCUVU5MVowSXNSMEZETDBNc1QwRkJUMjVuUWl4RlFVRlZTaXhGUVVGUGRXZENMRVZCUVVzc1RVRTBTV3BETEVsQlFVbHBZU3hIUVVGVmVrb3NSMEZCWXpsa0xFbEJNRUo0UW5kdVFpeEhRVUZaTVVvc1IwRkJZMnBWTEVsQk5FczVRaXhUUVVGVEwySXNSMEZCVDI5Q0xFZEJRMlFzVDBGQmFVSXNUVUZCVmtFc1MwRkJjMEpaTEVkQlFWZGFMRVZCUVZFNFVTeEhRVUZMT1ZFc1NVRnJUblpFTEVsQlFVbDFORUlzUjBGQldUZE9MRWRCUVdsQ0xGTkJRVk4wYzBJc1JVRkJVVzgyUWl4RlFVRk5OVFpDTEVkQlJYUkVMRTlCUkVFME5rSXNSVUZCVDBFc1JVRkJTME1zWTBGRFRISTJRaXhIUVVGVlVpeEZRVUZST0RaQ0xFZEJRVmRHTEVkQlFWRkJMRXRCYTBJNVF5eFRRVUZUUlN4SFFVRlhialJDTEVkQlEyeENMRTlCUVU5dk5FSXNSMEZCVjJ4dlFpeEhRVUZUYkZFc1IwRkJVV3MwUWl4bFFYRkNja01zVTBGQlV6Vk9MRWRCUVU5MGNVSXNSMEZGWkN4UFFVUkJRU3hGUVVGVGExRXNSMEZCVTJ4UkxFdEJRMFJCTEVWQlFVOUhMRkZCUVZGNFNTeEhRVUZUYlVvc1NVRkJZMWdzVVVGQlVUZEhMRWRCUVdFc1NVRnpTRGxGTEVsQlFVa3JLMElzUjBGQldXeFBMRWRCUVdsQ0xGTkJRVk4wYzBJc1JVRkJVVzgyUWl4RlFVRk5OVFpDTEVkQlEzUkVMRTlCUVU5UkxFZEJRVlZTTEVWQlFWRXNTVUZCVFN4SlFVRk5ORFpDTEVWQlFVdERMR2RDUVhWQ2VFTkpMRWRCUVZsdVR5eEhRVUZwUWl4VFFVRlRkSE5DTEVWQlFWRnZOa0lzUlVGQlRUVTJRaXhIUVVOMFJDeFBRVUZQVVN4SFFVRlZVaXhGUVVGUkxFbEJRVTBzU1VGQlRUUTJRaXhGUVVGTFF5eG5Ra0Z2UW5oRFN5eEhRVUZoZGs4c1IwRkJaMElzWlVFd1RtcERMRWxCUVVsM1R5eEhRVUZaY2s4c1IwRkJhVUlzVTBGQlUzUnpRaXhGUVVGUmJ6WkNMRVZCUVUwMU5rSXNSMEZEZEVRc1QwRkJUMUVzUjBGQlZWSXNSVUZCVVN4SlFVRk5MRWxCUVUwME5rSXNSVUZCUzBNc1owSkJaMFUxUXl4SlFVRkpUeXhIUVVGWmRFOHNSMEZCYVVJc1UwRkJVM1J6UWl4RlFVRlJielpDTEVWQlFVMDFOa0lzUjBGRGRFUXNUMEZCVDFFc1IwRkJWVklzUlVGQlVTeEpRVUZOTEVsQlFVMHJOa0lzUjBGQlYwZ3NTMEZ6YVVKc1JDeEpRVUZKVXl4SFFVRlpkazhzUjBGQmFVSXNVMEZCVTNSelFpeEZRVUZSYnpaQ0xFVkJRVTAxTmtJc1IwRkRkRVFzVDBGQlQxRXNSMEZCVlZJc1JVRkJVU3hKUVVGTkxFbEJRVTAwTmtJc1JVRkJTMVVzWjBKQmIwSjRRMUFzUjBGQllYQlBMRWRCUVdkQ0xHVkJjVUpxUXl4VFFVRlRTeXhIUVVGTmNuRkNMRVZCUVZFME5FSXNSVUZCVXk5UExFZEJTVGxDTEU5QlNFRTNjRUlzUlVGQlUydFJMRWRCUVZOc1VTeEpRVU5zUWpRMFFpeEZRVUZWTDA4c1JVRkJVWFkwUWl4RlFVRlpjMjVETEV0QlJXUjBia01zUlVGeWVXSndRaXhUUVVGM1FqQlBMRWRCUTNSQ0xFOUJRVTkwUnl4SFFVRnBRakpVTEV0QlFVdHlUaXhIUVhGNVlteENOalJDTEVOQlFXVTNORUlzUjBFeGFtSTFRaXhUUVVGelFrRXNSMEZEY0VJc1QwRkJUMEVzUlVGQlQzTlBMRTFCUVUwNVZTeFJRWGxxWW1kQ2N5OUNMRU5CUVdFNU5FSXNSMEY2Y21OdVJDeFRRVUZ2UWtFc1IwRkRiRUlzVDBGQlQwRXNSVUZCVDNOUExFMUJRVTF5V0N4UlFYZHlZM1ZET0doRExFTkJRVmN2TkVJc1IwRkZOMFJCTEVWQlFVOXpUeXhOUVVGTmMzRkNMRTlCTWtKMFFpeEpRVUZKU1N4SFFVRlZhbFVzUjBGQlV5eFRRVUZUY0c5Q0xFVkJRVTFGTEVkQlEzQkRMRWxCUTBVc1QwRkJUMGdzUjBGQlRVTXNSVUZCVFhKTUxFVkJRVmQxVEN4SFFVTTVRaXhOUVVGUGFFSXNSMEZEVUN4UFFVRlBiVFpDTEVkQlFWRnVOa0lzUjBGQlMwRXNSVUZCU1N4SlFVRkpNbFFzUjBGQlRUTlVMRTFCT0VKc1EyODVRaXhIUVVGVmNFOHNSMEZCVXl4VFFVRlRjSEpDTEVWQlFWRjVOVUlzUjBGTGRFTXNUMEZLUVRNM1FpeEhRVUZWTWpkQ0xFVkJRV0VzVTBGQlUydzJRaXhIUVVNNVFrRXNSVUZCVFN0bExFZEJRVTB2WlN4SFFVTmFhVm9zUjBGQlowSjRXU3hGUVVGUlZDeEZRVUZMZVRCQ0xFZEJRVXRvTUVJc1JVRkJUMVFzUjBGQlRWTXNUVUZGTVVOQkxFbEJjVWRVTEZOQlFWTXJiRUlzUjBGQlUyeHZRaXhIUVVOb1FpeFBRVUZQTEZkQlEwd3NUMEZCVDBFc1IwRnJSRmdzU1VGQlNUWTNRaXhIUVVGUGRrOHNTMEYxUWxCM1R5eEhRVUZaZUU4c1NVRkJWeXhIUVd0Q00wSXNVMEZCVTJoS0xFZEJRVk4wYTBJc1IwRkRhRUlzVDBGQlQwRXNSVUUyUTFRc1UwRkJVMGdzUjBGQlUxSXNSMEZEYUVJc1QwRkJUMmRzUWl4SFFVRTBRaXh0UWtGQlVtaHNRaXhGUVVGeFFrRXNSVUZCVDNkakxFZEJRVlY0WXl4RlFVRk5OMHNzU1VGMVIzcEZMRWxCUVVsMWJrTXNSMEZCVTNSVkxFZEJRVk1zVTBGQlUyeElMRVZCUVUxb2FFSXNSMEZEYmtNc1QwRkJUeXhUUVVGVE5FTXNSMEZEWkN4UFFVRlBNbVlzUjBGQlZ6Tm1MRVZCUVZGdlpTeEZRVUZOYUdoQ0xFMUJNa0pvUTNrNFFpeEhRVUZYZGxVc1IwRkJVeXhUUVVGVGRHeENMRVZCUVZFMVF5eEhRVU4yUXl4UFFVRlBMRk5CUVZObmFFSXNSMEZEWkN4UFFVRlBkVUlzUjBGQlZ6Tm1MRVZCUVZGdlpTeEZRVUZOYUdoQ0xFMUJkME53UXl4VFFVRlRNRGhDTEVkQlFVMDVOVUlzUlVGQlVYWktMRVZCUVZFd09VSXNSMEZETjBJc1NVRkJTWFI2UWl4RlFVRlJhVkVzUjBGQlMzSmhMRWRCUTJKbmFrTXNSVUZCWTNoaUxFZEJRV040YmtJc1JVRkJVVzlMTEVkQlJYcENMRTFCUVZoemVrSXNSMEZEUlhabExFZEJRVk51Wml4TFFVRlpaMnBETEVWQlFWbHdPRUlzVTBGQlYzZEVMRVZCUVUxNFJDeFZRVU4wUkRneVFpeEZRVUZWTVRsQ0xFVkJRMVpCTEVWQlFWTjFTaXhGUVVOVVFTeEZRVUZUSzFZc1MwRkRWREJxUWl4RlFVRmplR0lzUjBGQlkzaHVRaXhGUVVGUmNXRXNSMEZCUzNKaExFdEJSVE5ETEVsQlFVa3dPRUlzU1VGQlZYWmtMRWRCUVZOMVpTeEpRVUZaTEZWQlFWZEJMRWxCUVdOQkxFVkJRVkZvUWl4UFFVTm9SVGRaTEVWQlFWTTBSQ3hIUVVGWGJHVXNSMEZ4UW5oQ0xFOUJia0pCYkVNc1IwRkJWVEkzUWl4RlFVRmhMRk5CUVZOcVVDeEhRVU01UWl4SlFVRkpkSFJDTEVWQlFVOTZSeXhGUVVGUEszcENMRWRCUTJ4Q2VIRkNMRVZCUVU5M2NVSXNSMEZCWTNSMFFpeEZRVU5xUW05a0xFbEJRMFowWVN4RlFVRlBiMUVzVlVGQlZXOWhMRWRCUVdNc1YwRkROMElzU1VGQlNURlZMRVZCUVZkRExFdEJRVXRITEZWQlEzQkNMRWRCUVVscFpDeEhRVUZUY21Rc1JVRkJWU3hEUVVOeVFpeEpRVUZKTVZnc1JVRkJVelJDTEVWQlFVOHJWaXhMUVVGTFF5eGhRVXQ2UWl4UFFVcGpOVmdzUlVGQlR6WllMRmxCUVdOclF5eEhRVUZWY0VNc1MwRkJTMFVzWTBGRk1VTTJRaXhOUVVGUE5XRXNTMEZCVVVFc1JVRkJUVVVzUzBGQlVUSjBRaXhWUVVGWE5YUkNMRkZCUVZjMlF5eEpRVU16UkRWQ0xFVkJRVTg0V0N4VlFVRlpTaXhGUVVOYU1WZ3NSVUZGVkN4UFFVRlBiRUlzUlVGQlMwUXNUVUZCVFN0RExFVkJRVkZ5UWl4SlFVRlhiMWdzUzBGQlMyeFpMRk5CUVZWcmRFSXNaMEpCUzI1RUwzRkNMRVZCYlVOVUxGTkJRVk15ZFVJc1RVRnBSRlFzU1VGQlNXOU1MRWRCUVU5NFRTeEhRVUZYT1hWQ0xFbEJPRUpzUW5VM1FpeEhRVUZaZWswc1IwRkJWM1oyUWl4SlFXbERka0pwT0VJc1IwRkJWekZOTEVkQlFWZDBkVUlzU1VGM1FqRkNMRk5CUVZOeGFrSXNSMEZCVTJ4RkxFZEJRMmhDTEU5QlFVODJSU3hIUVVGTk4wVXNSMEZCVVdwbUxFZEJRV0Z0Wml4SFFVRk5SaXhKUVdneldERkRMRk5CUVRCQ1FTeEhRVU40UWl4UFFVRlBMRk5CUVZOd1pTeEhRVU5rTEU5QlFVOXRaU3hIUVVGUmJtVXNSVUZCVVc5bExFbEJPREpZZDBJNFlpeERRVUZwUWpsaUxFZEJkVVZ3UlN4SlFVRkpLMklzUjBGQlVYWk5MRXRCYzBOU2QwMHNSMEZCWVhoTkxFbEJRVmtzUjBGdlFqZENMRk5CUVZOdFF5eExRVU5RTEZOQlowSkdMRk5CUVZOUkxFdEJRMUFzVDBGQlR5eEZRU3RLVkN4SlFVRkpjbG9zUjBGQlRXdFhMRWRCUVc5Q0xGTkJRVk5wVGl4RlFVRlJReXhIUVVNM1F5eFBRVUZQUkN4RlFVRlRReXhIUVVObUxFZEJkVUpEZW01Q0xFZEJRVTh3WWl4SFFVRlpMRkZCYVVKdVFtZE5MRWRCUVZOdVRpeEhRVUZ2UWl4VFFVRlRiMDRzUlVGQlZVTXNSMEZEYkVRc1QwRkJUMFFzUlVGQlYwTXNSMEZEYWtJc1IwRjFRa014YmtJc1IwRkJVWGRpTEVkQlFWa3NVMEYzUzNoQ0xFbEJaMkZOT1ROQ0xFZEJhR0ZHYVd0RExFZEJRVmQwVGl4SFFVRnZRaXhUUVVGVGRVNHNSVUZCV1VNc1IwRkRkRVFzVDBGQlQwUXNSVUZCWVVNc1IwRkRia0lzUjBGMVFrTkRMRWRCUVZGMFRTeEhRVUZaTEZOQmFVSndRblZOTEVkQlFWY3hUaXhIUVVGdlFpeFRRVUZUTWs0c1JVRkJVME1zUjBGRGJrUXNUMEZCVDBRc1JVRkJWVU1zUjBGRGFFSXNSMEZuYlVKSUxFOUJNV2xDUVRWc1FpeEhRVUZQTm14Q0xFMUJjRFpOVUN4VFFVRmxOVFpDTEVWQlFVZHVSQ3hIUVVOb1FpeEhRVUZ0UWl4dFFrRkJVa0VzUlVGRFZDeE5RVUZOTEVsQlFVbG5WQ3hIUVVGVmJHVXNSMEZIZEVJc1QwRkVRWEZQTEVWQlFVbHZkVUlzUjBGQlZYQjFRaXhIUVVOUUxGZEJRMHdzUzBGQlRVRXNSVUZCU1N4RlFVTlNMRTlCUVU5dVJDeEZRVUZMUkN4TlFVRk5PRmtzUzBGQlRXZFdMR0ZCT0RWTk9VSXpWaXhIUVVGUE9GY3NTVUZCVFVFc1IwRkRZamxYTEVkQlFVOW5hVUlzVDBGQlUwRXNSMEZEYUVKb2FVSXNSMEZCVDJscFFpeFRRVUZYUVN4SFFVTnNRbXBwUWl4SFFVRlBhMmxDTEdGQlFXVkJMRWRCUTNSQ2JHbENMRWRCUVU5dGFVSXNWMEZCWVVFc1IwRkRjRUp1YVVJc1IwRkJUMjlwUWl4SFFVRkxRU3hIUVVOYWNHbENMRWRCUVU4eVpTeFBRVUZUUVN4SFFVTm9Rak5sTEVkQlFVODBaU3hMUVVGUFFTeEhRVU5rTldVc1IwRkJUMjlyUWl4UlFVRlZRU3hIUVVOcVFuQnJRaXhIUVVGUE5tVXNVVUZCVlVFc1IwRkRha0kzWlN4SFFVRlBPR3hDTEZWQmJEaExVQ3hYUVVORkxFbEJRVXR1VVN4VlFVRlZNWFJDTEU5QlEySXNVMEZGUml4SlFVRkpVU3hGUVVGUmEzUkNMRlZCUVZVc1IwRkRkRUlzVDBGQlQzcFdMRWRCUVZGNldDeEhRVUZUUVN4SFFVRlRRU3hKUVRnM1MyNURkVmdzUjBGQlR5dGtMRTFCUVZGQkxFZEJRMll2WkN4SFFVRlBLMnhDTEUxQmNHZFVVQ3hUUVVGbE16bENMRVZCUVU5MVVTeEZRVUZOY1dNc1IwRkZlRUp5WXl4SFFVUkhjV01zUlVGQlVVTXNSMEZCWlRkelFpeEZRVUZQZFZFc1JVRkJUWEZqTEVkQlFWTnlZeXhKUVVGVGJHTXNSMEZEYkVRc1JVRkZRVEpvUWl4SFFVRlZhV0lzUjBGQlZURm5RaXhIUVVGUExFZEJSWEJETEVsQlFVa3hVU3hGUVVGclFpeE5RVUZVUnl4RlFVRm5RaXhGUVVGSlFTeEZRVUZOU0N4UFFVTjJReXhKUVVGTFFTeEhRVUZWTUZFc1JVRkJUeXhGUVVOd1FpeFRRVTFHTEVsQlNrRXNTVUZCU1c1UkxFVkJRVkVzUlVGRFVrOHNSVUZCVnl4RlFVTllReXhGUVVGVFRTeEhRVUZOYTFVc1IwRkJWM1pXTEVWQlFWTXdVU3hKUVVWb1EyNVJMRVZCUVZGUUxFZEJRMkpsTEVWQlFVOUVMRXRCUVdNNGJrSXNSMEZCVlhwdlFpeEZRVUZQU1N4RlFVRlJRU3hIUVVGVGJWRXNSMEZGZWtRc1QwRkJUek5RTEVkQmJ5OVRWR2RZTEVkQlFVOW5iVUlzVVVGc0sxTlFMRk5CUVdsQ05UbENMRWRCVFdZc1NVRk1RU3hKUVVGSlNTeEhRVUZUTEVWQlExUlFMRVZCUVd0Q0xFMUJRVlJITEVWQlFXZENMRVZCUVVsQkxFVkJRVTFJTEU5QlEyNURZeXhGUVVGWExFVkJRMWhETEU5QlJVdFNMRVZCUVZGUUxFZEJRVkVzUTBGRGRrSXNTVUZCU1ZFc1JVRkJVVXdzUlVGQlRVa3NSMEZEWkVNc1NVRkRSazhzUlVGQlQwUXNTMEZCWTA0c1IwRkhla0lzVDBGQlQwOHNSMEYxT1ZOVVoxZ3NSMEZCVDJsdFFpeFBRVGszVTFBc1YwRkRSU3hKUVVGSmFDdENMRVZCUVZNd2RFSXNWVUZCVlRGMFFpeFBRVU4yUWl4SlFVRkxRU3hGUVVOSUxGTkJUVVlzU1VGS1FTeEpRVUZKUkN4RlFVRlBjMElzUjBGQlRYSkNMRVZCUVZNc1IwRkRkRUpITEVWQlFWRjFkRUlzVlVGQlZTeEhRVU5zUW01MFFpeEZRVUZSVUN4RlFVVk1UeXhMUVVOTVVpeEZRVUZMVVN4RlFVRlJMRWRCUVV0dGRFSXNWVUZCVlc1MFFpeEhRVVU1UWl4UFFVRlBaU3hIUVVGVk1sY3NSMEZCVVRsWUxFZEJRVk15WVN4SFFVRlZNMkVzU1VGQlZVRXNSMEZCVVd0blFpeEhRVUZaZEdkQ0xFVkJRVTBzUzBGdE4xTnNSbWRaTEVkQlFVOXJiVUlzUzBFemRFTlFMRk5CUVdOeVpTeEhRVU5hTEVsQlFVazFaaXhGUVVGclFpeE5RVUZVTkdZc1JVRkJaMElzUlVGQlNVRXNSVUZCVFRWbUxFOUJRMjVETm5aQ0xFVkJRV0ZvU2l4TFFWTnFRaXhQUVZCQmFrZ3NSVUZCVXpWbUxFVkJRV052UWl4SFFVRlRkMlVzUlVGQlR5eFRRVUZUZVZJc1IwRkRPVU1zUjBGQmMwSXNiVUpCUVZoQkxFVkJRVXNzUjBGRFpDeE5RVUZOTEVsQlFVbDRaU3hIUVVGVmJHVXNSMEZGZEVJc1QwRkJVV3MzUWl4RlFVRlhkMElzUlVGQlN5eEpRVUZMUVN4RlFVRkxMRk5CUnpkQ2NFb3NSMEZCVXl4VFFVRlRiRzlDTEVkQlJYWkNMRWxCUkVFc1NVRkJTVkVzUjBGQlV5eEpRVU5LUVN4RlFVRlJVQ3hIUVVGUkxFTkJRM1pDTEVsQlFVbHhlRUlzUlVGQlQzcFNMRVZCUVUxeVppeEhRVU5xUWl4SFFVRkpXQ3hIUVVGTmVYaENMRVZCUVVzc1IwRkJTVE5aTEV0QlFVMHpXU3hIUVVOMlFpeFBRVUZQU0N4SFFVRk5lWGhDTEVWQlFVc3NSMEZCU1ROWkxFdEJRVTB6V1N4UFFUUnpRM0JEWjFrc1IwRkJUMjF0UWl4VFFUbHhRMUFzVTBGQmEwSTVhME1zUjBGRGFFSXNUMEY2TlZsR0xGTkJRWE5DUVN4SFFVTndRaXhKUVVGSmIwc3NSVUZCVVdsUkxFZEJRVXR5WVN4SFFVTnFRaXhQUVVGUExGTkJRVk4xU2l4SFFVTmtMRTlCUVU4NFlpeEhRVUZsT1dJc1JVRkJVWFpLTEVWQlFWRnZTeXhKUVhNMVdXcERNalpDTEVOQlFXRTVhRUlzUjBGQlZXcHFRaXhGUVVGUmNFVXNTMEU0Y1VONFF5dHBRaXhIUVVGUE1sRXNVMEZCVjBFc1IwRkRiRUl6VVN4SFFVRlBhMlVzVVVGQlZVRXNSMEZEYWtKc1pTeEhRVUZQZWtRc1QwRjBkVWhRTEZOQlFXZENka0lzUlVGQlYzRnlRaXhIUVVONlFpeEpRVUZKY2psQ0xFVkJRVk56V0N4SFFVRlhkRVlzUjBGRGVFSXNUMEZCY1VJc1RVRkJaSEZ5UWl4RlFVRnhRbkk1UWl4RlFVRlRNR0VzUjBGQlZ6RmhMRVZCUVZGeE9VSXNTVUZ4ZFVneFJISnRRaXhIUVVGUGMyMUNMRTFCZW5WTlVDeFRRVUZUUVN4RlFVRk5lQ3RDTEVWQlFVMXBka0lzUlVGQlR5OUNMRWRCUlRGQ0xFbEJRVWxvYzBJc1JVRkJVekIzUWl4SFFVRlhOWGhDTEVWQlFVMXlTeXhGUVVGcFFtaENMRVZCUVZkQkxFVkJRVmRCTEVWQlFWZEJMRVZCUVZkQkxFVkJSRE5HY3paQ0xFVkJRVkV2UWl4RlFVRlJkalJDTEVWQlFWbHpOa0lzUjBGSE5VSXNUMEZFUVM5MFFpeEZRVUZQYVZFc1dVRkJZM0YwUWl4RlFVRk5jblJDTEZsQlEzQkNhbEVzUjBGemRVMVVaMWdzUjBGQlQzVnRRaXhYUVRkeVRWQXNVMEZCVTBFc1JVRkJWM29yUWl4RlFVRk5hWFpDTEVWQlFVOHZRaXhIUVVVdlFpeEpRVUZKYUhOQ0xFVkJRVk13ZDBJc1IwRkJWelY0UWl4RlFVRk5jRXNzUlVGQmRVSnFRaXhGUVVGWFFTeEZRVUZYUVN4RlFVRlhRU3hGUVVGWFFTeEZRVVJxUjNNMlFpeEZRVUZSTDBJc1JVRkJVWFkwUWl4RlFVRlpjelpDTEVkQlJ6VkNMRTlCUkVFdmRFSXNSVUZCVDJsUkxGbEJRV056ZEVJc1JVRkJWM1IwUWl4WlFVTjZRbXBSTEVkQk1ISk5WR2RZTEVkQlFVODRaU3hUUVVGWFFTeEhRVU5zUWpsbExFZEJRVTk0Uml4VFFVRlhRU3hIUVVOc1FuZEdMRWRCUVU5MWFVSXNZVUZCWlVFc1IwRkRkRUoyYVVJc1IwRkJUM0ZuUWl4TlFVRlJRU3hIUVVObWNtZENMRWRCUVU5elowSXNUVUZCVVVFc1IwRkRablJuUWl4SFFVRlBjMk1zVjBGQllVRXNSMEZEY0VKMFl5eEhRVUZQZFdNc1lVRkJaVUVzUjBGRGRFSjJZeXhIUVVGUGQyTXNaVUZCYVVKQkxFZEJRM2hDZUdNc1IwRkJUM2R0UWl4TFFYUXdVMUFzVTBGQlkzQXJRaXhGUVVGUE5rTXNSVUZCUnl0d1FpeEhRVU4wUWl4SlFVRkpMM05DTEVWQlFXdENMRTFCUVZSSExFVkJRV2RDTEVWQlFVbEJMRVZCUVUxSUxFOUJRM1pETEU5QlFVdEJMRVZCU1VVMGIwSXNSMEZCVlhwdlFpeEhRVVJxUWpaRExFVkJRVXNyY0VJc1IwRkJVeTl3UWl4SlFVRk5lRThzUlVGQllTeEZRVUZKTkRoQ0xFZEJRVlZ3ZFVJc1NVRkRia0lzUlVGQlNTeEZRVUZKUVN4RlFVRkhhRVFzVDBGcE1GTjZReXRZTEVkQlFVOTViVUlzVlVGeWVWTlFMRk5CUVcxQ2NpdENMRVZCUVU4MlF5eEZRVUZISzNCQ0xFZEJRek5DTEVsQlFVa3ZjMElzUlVGQmEwSXNUVUZCVkVjc1JVRkJaMElzUlVGQlNVRXNSVUZCVFVnc1QwRkRka01zVDBGQlMwRXNSVUZMUlRSdlFpeEhRVUZWZW05Q0xFVkJRVThzUjBGRWVFSTJReXhGUVVGSmFFUXNSMEZFU21kRUxFVkJRVXNyY0VJc1IwRkJVeTl3UWl4SlFVRk5lRThzUlVGQllTeEZRVUZKTkRoQ0xFZEJRVlZ3ZFVJc1MwRkZhRUlzUlVGQlNTeEZRVUZKUVN4UFFTdDRVM3BESzFVc1IwRkJUekJ0UWl4bFFYcDJVMUFzVTBGQmQwSjBLMElzUlVGQlQxTXNSMEZETjBJc1QwRkJVVlFzUjBGQlUwRXNSVUZCVFVnc1QwRkRia0p6Y1VJc1IwRkJWVzV4UWl4RlFVRlBNRzFDTEVkQlFWbHFiVUlzUlVGQlZ5eEpRVUZKTEVkQlFVMHNUMEYzZGxONFJHMVlMRWRCUVU4eWJVSXNWVUZxZEZOUUxGTkJRVzFDZGl0Q0xFVkJRVTlUTEVkQlEzaENMRTlCUVZGVUxFZEJRVk5CTEVWQlFVMUlMRTlCUTI1Q2MzRkNMRWRCUVZWdWNVSXNSVUZCVHpCdFFpeEhRVUZaYW0xQ0xFVkJRVmNzU1VGQlNTeFBRV2QwVTJ4RWJWZ3NSMEZCVHpSdFFpeExRUzl4VTFBc1UwRkJZM2dyUWl4RlFVRlBTeXhGUVVGUE1HNUNMRVZCUVU5WExFZEJRMnBETEVsQlFVazNiMElzUlVGQmEwSXNUVUZCVkVjc1JVRkJaMElzUlVGQlNVRXNSVUZCVFVnc1QwRkRka01zVDBGQlMwRXNSMEZIUkd0dlFpeEhRVUY1UWl4cFFrRkJWRUVzUjBGQmNVSTRSU3hIUVVGbE4zTkNMRVZCUVU5TExFVkJRVTh3YmtJc1MwRkRjRVZCTEVWQlFWRXNSVUZEVWxjc1JVRkJUVGR2UWl4SFFYcDJTVllzVTBGQmEwSkhMRVZCUVU5TExFVkJRVTh3YmtJc1JVRkJUMWNzUjBGRGNrTXNTVUZCU1RkdlFpeEZRVUZUUnl4RlFVRk5TQ3hQUVZkdVFpeExRVlJCYTI5Q0xFVkJRVkZyU2l4SFFVRlZiRW9zU1VGRFRpeEpRVU5XUVN4SFFVRlRRU3hGUVVGUmJHOUNMRVZCUVZNc1JVRkJTMEVzUlVGQlUydHZRaXhKUVVVeFExY3NSVUZCVDBFc1NVRkJVWEl3UWl4SFFVRmhjVEJDTEVWQlFVMDNiMElzUlVGQlZVRXNSVUZCVTI5NFFpeEhRVUZWZGtrc1NVRkRja1FzU1VGRFVrRXNSMEZCVHpkdlFpeEhRVVZVTm05Q0xFVkJRVTFZTEVWQlFWRlhMRVZCUVUwc1JVRkJTV2RTTEVkQlFWTm9VaXhIUVVNeFFsZ3NSVUZCVVZjc1IwRkRZakZ2UWl4RlFVRk5LMjVDTEV0QlFWY3hia0lzUlVGRmJrSXNUMEZCVDB3c1JVRTBkVWxCZVN0Q0xFTkJRVk42SzBJc1JVRkJUMHNzUlVGQlR6QnVRaXhGUVVGUFZ5eFJRWFZ4VTNaRE9WRXNSMEZCVHpodFFpeFBRVE4yVDFBc1UwRkJaMEkzT0VJc1JVRkJXWEJDTEVkQlJURkNMRTlCUkZkeFdDeEhRVUZSYWxjc1IwRkJZMjVDTEVkQlFXTjFaaXhKUVVOdVEzQmxMRVZCUVZrMmEwSXNSMEZCV1dwdFFpeEZRVUZYTEV0Qk1IWlBha1J0V0N4SFFVRlBLMjFDTEZGQmRuRlBVQ3hUUVVGcFFqazRRaXhGUVVGWk0wSXNSMEZETTBJc1QwRkJUMmRuUWl4SFFVRlpOVkFzUjBGQlNYcFBMRVZCUVZrelFpeEhRVUZYTEVsQmRYRlBhRVF3V0N4SFFVRlBaMjVDTEZsQmFIQlBVQ3hUUVVGeFFpODRRaXhGUVVGWk0wSXNSMEZETDBJc1QwRkJUMmRuUWl4SFFVRlpOVkFzUjBGQlNYcFBMRVZCUVZrelFpeEhRVUZYYUVzc1NVRm5jRTlvUkRCb1FpeEhRVUZQYVc1Q0xHRkJlRzVQVUN4VFFVRnpRbWc1UWl4RlFVRlpNMElzUlVGQlZXbG5RaXhIUVVVeFF5eFBRVVJCUVN4RlFVRlJRU3hKUVVGVk9YSkNMRVZCUVZrc1JVRkJTVFE0UWl4SFFVRlZPVkVzUjBGRGNrTkVMRWRCUVZrMVVDeEhRVUZKZWs4c1JVRkJXVE5DTEVkQlFWZHBaMElzU1VGMWJrOW9SSFpKTEVkQlFVOTFZU3hSUVVGVlFTeEhRVU5xUW5aaExFZEJRVTlyYmtJc1dVRjJhVk5RTEZOQlFYRkNPU3RDTEVkQlJXNUNMRTlCUkhOQ0xFMUJRVlJCTEVkQlFXOUNRU3hGUVVGTlNDeFBRVU4yUW5GblFpeEhRVUZaYkdkQ0xFVkJRVTg1U2l4UFFYTnBVM0pETUdoQ0xFZEJRVTl0YmtJc1lVRXZaMU5RTEZOQlFYTkNMeXRDTEVWQlFVOXRaMElzUjBGRk0wSXNUMEZFYzBJc1RVRkJWRzVuUWl4SFFVRnZRa0VzUlVGQlRVZ3NUMEZMYUVOeFowSXNSMEZCV1d4blFpeEZRVVJ1UW0xblFpeEZRVUZSUVN4SlFVRlZPWEpDTEVWQlFWa3NSVUZCU1RRNFFpeEhRVUZWT1ZFc1VVRXlaMU01UTNaSkxFZEJRVTl2YmtJc1MwRjZPVXhRTEZOQlFXTjBMMElzUjBGRFdpeFBRVUZQTkhoQ0xFZEJRVmMxZUVJc1JVRkJUUzlLTEVsQmVUbE1NVUpwYVVJc1IwRkJUM05yUWl4TFFVRlBRU3hIUVVOa2RHdENMRWRCUVU5MWEwSXNWVUZCV1VFc1IwRkRia0oyYTBJc1IwRkJUM0Z1UWl4VlFUTXZVbEFzVTBGQmJVSjRaaXhIUVV0cVFpeEpRVXBCTEVsQlFVbHlaaXhIUVVGVExFVkJRMVJRTEVWQlFXdENMRTFCUVZRMFppeEZRVUZuUWl4RlFVRkpRU3hGUVVGTk5XWXNUMEZEYmtObExFOUJSVXRTTEVWQlFWRlFMRWRCUVZFc1EwRkRka0lzU1VGQlNYRjRRaXhGUVVGUGVsSXNSVUZCVFhKbUxFZEJRMnBDVVN4RlFVRlBjM2RDTEVWQlFVc3NTVUZCVFVFc1JVRkJTeXhIUVVWNlFpeFBRVUZQZEhkQ0xFZEJiUzlTVkdkWUxFZEJRVTl6YmtJc1ZVRXpPRWRRTEZOQlFXMUNNVGhDTEVkQlEycENMRTlCUVdsQ0xFMUJRVlpCTEV0QlFYTkNhV1VzUjBGQlkycGxMRVZCUVZFNFVTeEhRVUZMT1ZFc1MwRXlPRWN4Ukc5V0xFZEJRVTkxYmtJc1dVRnFOMGRRTEZOQlFYRkNNemhDTEVkQlEyNUNMRTlCUVdsQ0xFMUJRVlpCTEV0QlFYTkNhV1VzUjBGQlkycGxMRVZCUVZFeVlTeEhRVUZQTTJFc1MwRnBOMGMxUkc5V0xFZEJRVTl6WlN4UlFVRlZRU3hIUVVOcVFuUmxMRWRCUVU5M2JrSXNVVUUxTmxKUUxGTkJRV2xDY0M5Q0xFZEJSV1lzVDBGRWMwSXNUVUZCVkVFc1IwRkJiMEpCTEVWQlFVMUlMRTlCUTNaQ05HOUNMRWRCUVZWNmIwSXNSVUZCVHl4SFFVRkpMRTlCTWpaU2RrTTBXQ3hIUVVGUE5HTXNZVUZCWlVFc1IwRkRkRUkxWXl4SFFVRlBPR01zWlVGQmFVSkJMRWRCUTNoQ09XTXNSMEZCVHl0akxHbENRVUZ0UWtFc1IwRkRNVUl2WXl4SFFVRlBlV2xDTEU5QlFWTkJMRWRCUTJoQ2VtbENMRWRCUVU4d2FVSXNVMEZCVjBFc1IwRkRiRUl4YVVJc1IwRkJUM1ZsTEZWQlFWbEJMRWRCUTI1Q2RtVXNSMEZCVHpGWUxGTkJRVmRCTEVkQlEyeENNRmdzUjBGQlQzZGxMRTFCUVZGQkxFZEJRMlo0WlN4SFFVRlBkRVVzUzBGQlQwRXNSMEZEWkhORkxFZEJRVTkxUml4UFFVRlRRU3hIUVVOb1FuWkdMRWRCUVU5MFNDeEpRVUZOUVN4SFFVTmljMGdzUjBGQlQzbHVRaXhSUVRGeVIxQXNVMEZCYVVJM09FSXNSVUZCVVhSRExFZEJRM1pDTEVsQlFVbFZMRXRCVFVvc1QwRk1RVllzUlVGQlYzZHRRaXhIUVVGWmVHMUNMRVZCUVZVc1IwRkZha041Wml4SFFVRlhibVFzUlVGQlVTeFRRVUZUYmtNc1JVRkJUekJDTEVWQlFVdFRMRWRCUTNSRGQxa3NSMEZCWjBKd1lTeEZRVUZSVml4RlFVRlRSeXhGUVVGUE1FSXNSVUZCUzFNc1IwRkJVMjVETEV0QlJXcEVUeXhIUVc5eVIxUm5XQ3hIUVVGUE1HNUNMRlZCY25CSFVDeFRRVUZ0UWprNFFpeEZRVUZSZEVNc1IwRkRla0lzU1VGQlNWVXNTMEZOU2l4UFFVeEJWaXhGUVVGWGQyMUNMRWRCUVZsNGJVSXNSVUZCVlN4SFFVVnFRM2xtTEVkQlFWZHVaQ3hGUVVGUkxGTkJRVk51UXl4RlFVRlBNRUlzUlVGQlMxTXNSMEZEZEVOM1dTeEhRVUZuUW5CaExFVkJRVkZ0UWl4RlFVRkxOMElzUlVGQlUwY3NSVUZCVHpCQ0xFVkJRVXRUTEUxQlJUZEROVUlzUjBFcmIwZFVaMWdzUjBGQlR6SnVRaXhSUVhCb1ExQXNVMEZCYVVKMGJVTXNSMEZEWml4UFFVRlBOSEpDTEVkQlFWa3pTU3hIUVVGVmFtcENMRVZCUVZGd1JTeExRVzlvUTNaREsybENMRWRCUVU4MGJrSXNaMEpCYUM5Q1VDeFRRVUY1UWpWbExFVkJRVTAwUkN4SFFVTTNRaXhQUVVGUFNTeEhRVUZ2UW1oRkxFVkJRVTB4UlN4SFFVRlZjMGtzUlVGQlZUTjJRaXhMUVdjdlFuWkVLMmxDTEVkQlFVOW5ZeXhSUVVGVlFTeEhRVU5xUW1oakxFZEJRVTgwYVVJc1RVRkJVVUVzUjBGRFpqVnBRaXhIUVVGUGQybENMRlZCUVZsQkxFZEJRMjVDZUdsQ0xFZEJRVTkzYTBJc1QwRkJVMEVzUjBGRGFFSjRhMElzUjBGQlQzbHJRaXhUUVVGWFFTeEhRVU5zUW5wclFpeEhRVUZQTUd0Q0xFMUJRVkZCTEVkQlEyWXhhMElzUjBGQlR6Qm5RaXhQUVVGVFFTeEhRVU5vUWpGblFpeEhRVUZQTm01Q0xFOUJlbnBDVUN4VFFVRm5RalU0UWl4SFFVVmtMRTlCUkVGQkxFVkJRVWx2ZFVJc1IwRkJWWEIxUWl4SFFVTlFhV3hDTEVkQlFWTXNVMEZCVTJ4dlFpeEhRVU4yUWl4UFFVRlBNRzFDTEVkQlFWRXhiVUlzUlVGQlRXbEVMRTFCZFhwQ2VrSXJWU3hIUVVGUE5tbENMRXRCUVU5QkxFZEJRMlEzYVVJc1IwRkJUemh1UWl4UFFXNW9SMUFzVTBGQlowSnNPVUlzUlVGQlVTOUNMRWRCUTNSQ0xFOUJRVTlyTmtJc1IwRkJUMjQwUWl4RlFVRlJPREZDTEVkQlFVODFVaXhIUVVGWmFtMUNMRTFCYldoSE0wTnRXQ3hIUVVGUEsyNUNMRXRCTnpOTVVDeFRRVUZqYW1kRExFZEJRMW9zVDBGQlR6WXlRaXhIUVVGUExFVkJRVWMzTWtJc1NVRTJNMHh1UW10WkxFZEJRVTluYjBJc1VVRnlORTVRTEZOQlFXbENMemxDTEVWQlFWa3lhMElzUlVGQlYwTXNSVUZCVVcxSExFZEJRemxETEU5QlFXdENMRTFCUVdRdmNVSXNUVUZIUTJsWExFZEJRVkV3VHl4TFFVTllRU3hGUVVGNVFpeE5RVUZpUVN4TlFVRXdRa0VzU1VGSGJrTXhUeXhIUVVSTU1rOHNSVUZCVTIxSExFVkJRVkYyTkVJc1JVRkJXVzk1UWl4TFFVVXpRa0VzUlVGQmJVSXNUVUZCVmtFc1RVRkJkVUpCTEVsQlJUTkNSaXhIUVVGWk1XdENMRVZCUVZreWEwSXNSVUZCVjBNc1MwRXlNMDQxUXpkUExFZEJRVTh5YTBJc1MwRkJUMEVzUjBGRFpETnJRaXhIUVVGUE1tZENMRk5CUVZkQkxFZEJRMnhDTTJkQ0xFZEJRVTgwYTBJc1ZVRkJXVUVzUjBGRGJrSTFhMElzUjBGQlR6WnJRaXhUUVVGWFFTeEhRVU5zUWpkclFpeEhRVUZQT0dkQ0xGRkJRVlZCTEVkQlEycENPV2RDTEVkQlFVOHJaMElzWVVGQlpVRXNSMEZEZEVJdlowSXNSMEZCVDNsbExGVkJRVmxCTEVkQlEyNUNlbVVzUjBGQlQzWkdMRXRCUVU5QkxFZEJRMlIxUml4SFFVRlBLMmxDTEU5QlFWTkJMRWRCUTJoQ0wybENMRWRCUVU5clRpeFRRVUZYUVN4SFFVTnNRbXhPTEVkQlFVOXBiMElzVjBFdmNrSlFMRk5CUVc5Q2NqbENMRWRCUTJ4Q0xFOUJRVThzVTBGQlUyOWxMRWRCUTJRc1QwRkJhVUlzVFVGQlZuQmxMRVZCUVdsQ2JrOHNSVUZCV1hOelFpeEhRVUZSYm1Vc1JVRkJVVzlsTEV0Qk9ISkNlRVJvU2l4SFFVRlBaMlFzUzBGQlQwRXNSMEZEWkdoa0xFZEJRVTlwWkN4UlFVRlZRU3hIUVVOcVFtcGtMRWRCUVU5cmIwSXNWVUZ3YzFKUUxGTkJRVzFDT1M5Q0xFVkJRVTl2UWl4RlFVRlJiRUlzUjBGRGFFTXNUMEZCVVVZc1IwRkJVMEVzUlVGQlRVZ3NVVUZCVlhWQ0xFZEJRVlZCTEVWQlFVOTJRaXhQUVVNNVF6QnVRaXhIUVVGWmRtNUNMRVZCUVU5dlFpeEZRVUZSYzJ4Q0xFZEJRVmw0YlVJc1JVRkJWU3hKUVVOcVJFWXNSMEZyYzFKT05GZ3NSMEZCVDIxdlFpeFpRWGh4VWxBc1UwRkJjVUl2TDBJc1JVRkJUMjlDTEVWQlFWRktMRWRCUTJ4RExFOUJRVkZvUWl4SFFVRlRRU3hGUVVGTlNDeFJRVUZWZFVJc1IwRkJWVUVzUlVGQlQzWkNMRTlCUXpsRE1HNUNMRWRCUVZsMmJrSXNSVUZCVDI5Q0xFVkJRVkV2VFN4RlFVRlhNazBzUjBGRGRFTm9RaXhIUVhOeFVrNDBXQ3hIUVVGUGEyUXNUMEZCVTBFc1IwRkRhRUpzWkN4SFFVRlBLMnRDTEUxQlFWRkJMRWRCUTJZdmEwSXNSMEZCVDJkc1FpeFhRVUZoUVN4SFFVTndRbWhzUWl4SFFVRlBaMmhDTEUxQlFWRkJMRWRCUTJab2FFSXNSMEZCVDI5dlFpeFBRWGgyVGxBc1UwRkJaMEp1SzBJc1JVRkJXWEJDTEVkQlJURkNMRTlCUkZkeFdDeEhRVUZSYWxjc1IwRkJZMjVDTEVkQlFXTjFaaXhKUVVOdVEzQmxMRVZCUVZsNU1rSXNSMEZCVHpWU0xFZEJRVmxxYlVJc1JVRkJWeXhOUVhWMlRuaEViVmdzUjBGQlQzRnZRaXhQUVhwdFVsQXNVMEZCWjBKcVowTXNSVUZCVDFNc1IwRkRja0lzU1VGQlNVY3NTMEZEU2l4SlFVRk5XaXhKUVVGVFFTeEZRVUZOU0N4UFFVTnVRaXhQUVVGUFpTeEZRVVZVTEVsQlFVbFNMRWRCUVZNc1JVRkRWSE51UWl4TFFVTkJOMjVDTEVWQlFWTkhMRVZCUVUxSUxFOUJSMjVDTEVsQlJFRlpMRVZCUVZscGJVSXNSMEZCV1dwdFFpeEZRVUZYTEV0QlF6RkNUQ3hGUVVGUlVDeEhRVUZSTEVOQlEzWkNMRWxCUVVsUkxFVkJRVkZNTEVWQlFVMUpMRWRCUTJSTExFVkJRVlZLTEVWQlFVOUVMRVZCUVU5S0xFdEJRekZDV1N4RlFVRlBNRm9zUzBGQlMycGhMRWRCUTFweGJrSXNSVUZCVVhCT0xFdEJRVXRzWVN4SlFVbHFRaXhQUVVSQmNXNUNMRWRCUVZkNmJrSXNSVUZCVHpCdVFpeEhRVU5ZT1cxQ0xFZEJkMnhTVkdkWUxFZEJRVTl6YjBJc1MwRnNkVXhRTEZOQlFXTjRaME1zUlVGQlRYRnZRaXhIUVVOc1FpeEhRVUZ0UWl4dFFrRkJVbkp2UWl4RlFVTlVMRTFCUVUwc1NVRkJTV2RVTEVkQlFWVnNaU3hIUVVkMFFpeFBRVUZQYzNwQ0xFZEJRVk53YjBJc1JVRkVhRUp4YjBJc1JVRkJVVUVzU1VGQlZURjZRaXhGUVVGWk1IcENMRVZCUVZGclNpeEhRVUZWYkVvc1MwRXJkRXhzUkc1UkxFZEJRVTl1UWl4UlFVRlZRU3hIUVVOcVFtMUNMRWRCUVU5MWIwSXNWMEZvZEU1UUxGTkJRVzlDZEN0Q0xFVkJRVmxuUWl4RlFVRkhLM0JDTEVkQlQycERMRTlCVEVVdmNFSXNSMEZFUnl0d1FpeEZRVUZSUXl4SFFVRmxhSEpDTEVWQlFWbG5RaXhGUVVGSEszQkNMRWRCUVZNdmNFSXNTVUZCVFhoUExFZEJRM0JFTEVWQlJVRTBPRUlzUjBGQlZYQjFRaXhKUVVWTWFWWXNSMEZCVVdwWExFZEJRV00wV1N4SFFVRnJRakJPTEVsQlEzWkRkRzFDTEVWQlFWbG5RaXhKUVRCelRqRkNLMVVzUjBGQlR6ZEhMRWxCZGpaR1VDeFRRVUZoZGs4c1JVRkJVVzlsTEVWQlFVMTJaMElzUjBGRGVrSXNUMEZCYVVJc1RVRkJWbTFETEVWQlFXbENRU3hGUVVGVE9HdENMRWRCUVZFNWEwSXNSVUZCVVc5bExFVkJRVTEyWjBJc1NVRjFOa1o2UkhWWUxFZEJRVTkzYjBJc1VVRTFORVpRTEZOQlFXbENOVGxDTEVWQlFWRnZaU3hGUVVGTmRtZENMRVZCUVU4cllpeEhRVVZ3UXl4UFFVUkJRU3hGUVVGclF5eHRRa0ZCWkVFc1JVRkJNa0pCTEVWQlFXRXZia0lzUlVGRE0wTXNUVUZCVm0xUExFVkJRV2xDUVN4RlFVRlRPR3RDTEVkQlFWRTVhMElzUlVGQlVXOWxMRVZCUVUxMlowSXNSVUZCVHl0aUxFbEJNalJHYUVWNFJTeEhRVUZQZVc5Q0xGRkJNWEpPVUN4VFFVRnBRbmdyUWl4SFFVVm1MRTlCUkZkcFZ5eEhRVUZSYWxjc1IwRkJZMmRhTEVkQlFXVXlUaXhKUVVOd1F6TnRRaXhKUVhseVRtUXJWaXhIUVVGUE5WVXNUVUZvYWxKUUxGTkJRV1ZvUkN4RlFVRlBLMjVDTEVWQlFVOVhMRWRCUXpOQ0xFbEJRVWszYjBJc1JVRkJhMElzVFVGQlZFY3NSVUZCWjBJc1JVRkJTVUVzUlVGQlRVZ3NUMEZEZGtNc1QwRkJTMEVzUjBGSFJEWnZRaXhIUVVGeFFpeHBRa0ZCVUVFc1IwRkJiVUp0UlN4SFFVRmxOM05DTEVWQlFVOHJia0lzUlVGQlQxY3NTVUZEYUVWWUxFVkJRVkVzUlVGRFVsY3NSVUZCVFRkdlFpeEpRVWRPYTI5Q0xFVkJRV2xDTEUxQlFWUkJMRVZCUVdkQ0xFVkJRVWxyU2l4SFFVRlZiRW9zUjBGRGRFTlhMRVZCUVUxQkxFbEJRVkZ5TUVJc1JVRkJXWGRNTEVWQlFWTnZlRUlzUjBGQlZYWkpMRWxCUlhoRFJDeEhRVUZWZW05Q0xFVkJRVThyYmtJc1JVRkJUMWNzVVVGdmFWSnFRemxSTEVkQlFVOHdaU3hQUVVGVFFTeEhRVU5vUWpGbExFZEJRVTh3YjBJc1YwRjRNMUZRTEZOQlFXOUNkR2RETEVkQlEyeENMRTlCUVZGQkxFZEJRVk5CTEVWQlFVMUlMRTlCUTI1Q09IQkNMRWRCUVdVemNFSXNUMEYxTTFGeVFqUllMRWRCUVU4eWIwSXNZVUZ1TWxGUUxGTkJRWE5DZG1kRExFVkJRVTlGTEVkQlF6TkNMRTlCUVZGR0xFZEJRVk5CTEVWQlFVMUlMRTlCUTI1Q09IQkNMRWRCUVdVemNFSXNSVUZCVHpCdFFpeEhRVUZaZUcxQ0xFVkJRVlVzVVVGck1sRnNSREJZTEVkQlFVOXlSeXhOUVRWb1JWQXNVMEZCWlhoUExFVkJRVkY1T1VJc1JVRkJWME1zUjBGTGFFTXNUMEZLU1VFc1IwRkJlVUlzYVVKQlFWUkJMRWRCUVhGQ05WUXNSMEZCWlRsd1FpeEZRVUZSZVRsQ0xFVkJRVmRETEV0QlEzcEZSQ3hGUVVGWlF5eEZRVUZSY0hORExFbEJSWFJDYjNORExFVkJRVkZCTEVsQlFWVndjME1zUlVGQldXbERMRVZCUVcxQ2JYRkRMRWxCUVZVc1NVRkpNMFF4T1VJc1JVRkJVMnRSTEVkQlFWTnNVU3hOUVVWUkxHbENRVUZpZVRsQ0xFZEJRMDhzVFVGQllrRXNTVUZCYzBKd2FFTXNSMEZCVTI5b1F5eFBRVVZ3UTBFc1JVRkJXVE5YTEVkQlFXRXlWeXhMUVVOUWNuZENMRWRCUVZkd1RpeEhRVU53UW1sdlFpeEhRVUZWTlZvc1IwRkJZM0pQTEVkQlFWTXNSVUZCUnpBNVFpeEhRVWQ0UXpFNVFpeEZRVUZQZDA4c1RVRkJUV2wyUWl4RlFVRlhReXhQUVRKblJXcEROMjlDTEVkQlFVODRiMElzVDBGdWMweFFMRk5CUVdkQ2FHaERMRVZCUVUxeGIwSXNSMEZEY0VJc1IwRkJiVUlzYlVKQlFWSnliMElzUlVGRFZDeE5RVUZOTEVsQlFVbG5WQ3hIUVVGVmJHVXNSMEZIZEVJc1QwRkVRWFY2UWl4RlFVRnBRaXhOUVVGVVFTeEZRVUZuUWl4RlFVRkpMMUlzUjBGQlZXbGlMRWRCUVZWc1NpeEhRVUZSTEVkQlEycEVSQ3hIUVVGVExGTkJRVk5zYjBJc1IwRkRka0lzU1VGQlNVa3NSVUZCVVVvc1JVRkJTMjF2UWl4SFFVTmlhVXdzUlVGQldXaEpMRWRCUVZWd2NrSXNSVUZCVFN4RlFVRkhiVzlDTEVkQlMyNURMRTlCU0VrdmJrSXNSMEZEUm0xQ0xFZEJRVlUyZUVJc1JVRkJWMmg2UWl4SFFVVm9RbEFzUjBGQlRVTXNSVUZCVFRaWkxFdEJRVTE1WVN4TlFYZHlURGRDY0dJc1IwRkJUeXR2UWl4TFFXd3hVVkFzVTBGQll6Tm5ReXhIUVVOYUxFbEJRVWxJTEVWQlFXdENMRTFCUVZSSExFVkJRV2RDTEVWQlFVbEJMRVZCUVUxSUxFOUJRM1pETEU5QlFVOUJMRVZCUVZNMGIwSXNSMEZCVlhwdlFpeEZRVUZQTEVWQlFVZElMRTlCYVRGUmRFTXJXQ3hIUVVGUFozQkNMRXRCY25wUlVDeFRRVUZqTldkRExFVkJRVTgyUXl4RlFVRkhLM0JDTEVkQlEzUkNMRTlCUVUwMWMwSXNSMEZCVTBFc1JVRkJUVWdzVDBGSlpEUnZRaXhIUVVGVmVtOUNMRVZCUVU4c1IwRkVlRUkyUXl4RlFVRkxLM0JDTEVkQlFWTXZjRUlzU1VGQlRYaFBMRVZCUVdFc1JVRkJTVFE0UWl4SFFVRlZjSFZDTEVsQlEyaENMRVZCUVVrc1JVRkJTVUVzVDBGcGVsRjZReXRWTEVkQlFVOXBjRUlzVlVGeWVGRlFMRk5CUVcxQ04yZERMRVZCUVU4MlF5eEZRVUZISzNCQ0xFZEJRek5DTEVsQlFVa3ZjMElzUlVGQmEwSXNUVUZCVkVjc1JVRkJaMElzUlVGQlNVRXNSVUZCVFVnc1QwRkRka01zVDBGQlMwRXNSVUZMUlRSdlFpeEhRVUZWZW05Q0xFZEJSR3BDTmtNc1JVRkJTV2hFTEVkQlJFcG5SQ3hGUVVGTEszQkNMRWRCUVZNdmNFSXNTVUZCVFhoUExFVkJRV0VzUlVGQlNUUTRRaXhIUVVGVmNIVkNMRXRCUlc1Q0xFVkJRVWtzUlVGQlNVRXNSVUZCUjJoRUxFOUJLM2RSZWtNcldDeEhRVUZQYTNCQ0xHVkJlblZSVUN4VFFVRjNRamxuUXl4RlFVRlBVeXhIUVVNM1FpeFBRVUZSVkN4SFFVRlRRU3hGUVVGTlNDeFBRVU51UW5OeFFpeEhRVUZWYm5GQ0xFVkJRVTh3YlVJc1IwRkJXV3B0UWl4RlFVRlhMRWxCUVVrc1IwRkJUeXhQUVhkMVVYcEViVmdzUjBGQlQyMXdRaXhWUVdwelVWQXNVMEZCYlVJdlowTXNSVUZCVDFNc1IwRkRlRUlzVDBGQlVWUXNSMEZCVTBFc1JVRkJUVWdzVDBGRGJrSnpjVUlzUjBGQlZXNXhRaXhGUVVGUE1HMUNMRWRCUVZscWJVSXNSVUZCVnl4UlFXZHpVVGxEYlZnc1IwRkJUMjl3UWl4SlFYQjFVRkFzVTBGQllUTm5ReXhGUVVGUGRURkNMRWRCUld4Q0xFOUJSRUZCTEVWQlFWbDJNVUlzUjBGRFRFRXNSMEZ0ZFZCVWRWZ3NSMEZCVDNGd1FpeFRRVGx2VEZBc1UwRkJhMEoyYUVNc1JVRkJUVGhsTEVWQlFVMXRXU3hIUVVNMVFpeEpRVUZKVHl4SFFVRlZMRVZCUTFacVN5eEhRVUZYTEVWQlJXWXNSMEZCYlVJc2JVSkJRVkoyZEVJc1JVRkRWQ3hOUVVGTkxFbEJRVWxuVkN4SFFVRlZiR1VzUjBGTmRFSXNUMEZLU1RScVFpeEhRVUZUZFdVc1MwRkRXRThzUlVGQlZTeFpRVUZoVUN4SlFVRlpRU3hGUVVGUlR5eFJRVUZWUVN4RlFVTnlSR3BMTEVWQlFWY3NZVUZCWXpCS0xFbEJRVmxCTEVWQlFWRXhTaXhUUVVGWFFTeEhRVVZ1UkhsS0xFZEJRVk5vTTBJc1JVRkJUVGhsTEVkQlEzQkNNRmtzVVVGQlYwRXNSVUZEV0Vvc1VVRkJWM1JaTEVWQlExaDVUeXhUUVVGWlFTeExRV2x2VEdoQ2NsWXNSMEZCVDIxWExFdEJRVTlCTEVkQlEyUnVWeXhIUVVGUGVXaENMRkZCUVZWQkxFZEJRMnBDZW1oQ0xFZEJRVTlwYWtJc1VVRkJWVUVzUjBGRGFrSnFha0lzUjBGQlQydHFRaXhWUVVGWlFTeEhRVU51UW14cVFpeEhRVUZQYzNCQ0xFOUJjbVpRTEZOQlFXZENOMmRETEVkQlEyUXNUMEZCU1hsWUxFZEJRVkY2V0N4SFFVTklXU3hIUVVGVFdpeEZRVUZQZVdkQ0xFbEJSV3hDWkN4SFFVRlRNMllzU1VGQlZVRXNSMEZCVTNOaExFZEJRVlZ0VVN4SFFVRmhOMWdzUjBGQlV6VlRMRTFCYTJaeVJYVllMRWRCUVU5M1R5eGpRVUZuUWtFc1IwRkRka0o0VHl4SFFVRlBiRWdzVlVFeE1FWlFMRk5CUVcxQ2JFOHNSVUZCVVhSRExFVkJRVlZETEVkQlEyNURMRWxCUVVrMFdpeEZRVUZSYWtNc1IwRkJVWFJXTEVkQlEyaENNaXRDTEVWQlFWbHdia0lzUjBGQlUzQkZMRWRCUVZOdVZDeEpRVUZYYUVRc1IwRkJZV2RFTEVkQlJ6RkVMRWRCUkVGMFF5eEZRVUZYZDIxQ0xFZEJRVmw0YlVJc1JVRkJWU3hIUVVOa0xFMUJRV1pETEVWQlFYRkNMRU5CUTNaQ0xFbEJRVWx6WkN4RlFVRlBhbUlzUjBGQlZVRXNSVUZCVDJsaExGbEJSVEZDZEdNc1JVRkVSV2RvUXl4RlFVTlpjRzVDTEVWQlFWRXNTVUZCU1RCRUxFdEJSVzVDY2tZc1IwRkJVelZXTEVsQlEwWnJaU3hIUVVGWGFrUXNSMEZCVVhaR0xFZEJRVmRzUlN4SFFVRmhlRklzVDBGVE4wUXNUMEZJUXpJclFpeEZRVUZaTjJkRExFZEJRVmx4Wml4SlFVRlpibVFzUlVGQlVTeFRRVUZUYmtNc1JVRkJUMFFzUlVGQlQyOURMRWRCUTJ4RkxFOUJRVTkwUXl4RlFVRlRReXhGUVVGaFJTeEZRVUZQUkN4RlFVRlBiME1zUzBGRmRFTnlReXhIUVhWNlJsUjVXQ3hIUVVGUGQzQkNMRTFCY201TVVDeFRRVUZsTVdoRExFZEJRMklzVDBGQlQyZDJRaXhIUVVGSmFIWkNMRVZCUVUwc1NVRnhia3h1UW10WkxFZEJRVTl0WkN4TlFVRlJRU3hIUVVObWJtUXNSMEZCVDI5a0xGRkJRVlZCTEVkQlEycENjR1FzUjBGQlQzRmtMRlZCUVZsQkxFZEJRMjVDY21Rc1IwRkJUM2x3UWl4TFFYcHRVVkFzVTBGQlkzSm9ReXhIUVVOYUxFOUJRVkZCTEVkQlFWTkJMRVZCUVUxSUxFOUJRVlZwY1VJc1IwRkJVemx3UWl4UFFYbHRVVFZETkZnc1IwRkJUekJ3UWl4UFFTOXJVVkFzVTBGQlowSjBhRU1zUlVGQlQwVXNSMEZEY2tJc1QwRkJVVVlzUjBGQlUwRXNSVUZCVFVnc1QwRkJWV2x4UWl4SFFVRlRPWEJDTEVWQlFVOHdiVUlzUjBGQldYaHRRaXhGUVVGVkxGRkJLMnRSZWtVd1dDeEhRVUZQTW5CQ0xGTkJlR3BSVUN4VFFVRnJRblpvUXl4RlFVRlBaMElzUjBGRmRrSXNUMEZFUVVFc1JVRkJhME1zYlVKQlFXUkJMRVZCUVRKQ1FTeEZRVUZoTTAwc1JVRkRjRVF5VEN4SFFVRlRRU3hGUVVGTlNDeFBRVUZWYVhGQ0xFZEJRVk01Y0VJc1JVRkJUek5NTEVWQlFWY3lUU3hQUVhWcVVUbEVORmNzUjBGQlR6UndRaXhOUVdoNVJsQXNVMEZCWldndlFpeEZRVUZSYjJVc1IwRkRja0lzVDBGQmFVSXNUVUZCVm5CbExFZEJRWGRDYjJ4Q0xFZEJRVlZ3YkVJc1JVRkJVVzlsTEVsQlozbEdia1JvU2l4SFFVRlBjMlFzVFVGQlVVRXNSMEZEWm5Sa0xFZEJRVTkzWkN4VlFVRlpRU3hIUVVOdVFuaGtMRWRCUVU4MmNFSXNUMEZ3ZDBaUUxGTkJRV2RDYWk5Q0xFVkJRVkZ2WlN4RlFVRk5jMG9zUjBGRE5VSXNUMEZCYVVJc1RVRkJWakZ1UWl4RlFVRnBRa0VzUlVGQlUzbHVRaXhIUVVGWGVtNUNMRVZCUVZGdlpTeEZRVUZOYVVzc1IwRkJZVmdzUzBGdmQwWjZSWFJUTEVkQlFVODRjRUlzVjBGNmRVWlFMRk5CUVc5Q2JDOUNMRVZCUVZGdlpTeEZRVUZOYzBvc1JVRkJVemxPTEVkQlJYcERMRTlCUkVGQkxFVkJRV3RETEcxQ1FVRmtRU3hGUVVFeVFrRXNSVUZCWVM5dVFpeEZRVU16UXl4TlFVRldiVThzUlVGQmFVSkJMRVZCUVZONWJrSXNSMEZCVjNwdVFpeEZRVUZSYjJVc1JVRkJUV2xMTEVkQlFXRllMRWRCUVZVNVRpeEpRWGQxUm01R2VFVXNSMEZCVDNoWExFOUJRVk5CTEVkQlEyaENkMWNzUjBGQlR5dHdRaXhUUVdoeVJsQXNVMEZCYTBKdUwwSXNSMEZEYUVJc1QwRkJhVUlzVFVGQlZrRXNTMEZCYzBKWkxFZEJRVmRhTEVWQlFWRXlZU3hIUVVGUE0yRXNTMEZuY2taNlJHOVdMRWRCUVU5NVpDeFJRVUZWUVN4SFFVTnFRbnBrTEVkQlFVOTNWaXhOUVVGUlFTeEhRVU5tZUZZc1IwRkJUMmR4UWl4TFFUTnRURkFzVTBGQlkzWm9ReXhGUVVGUE1uUkNMRWRCUTI1Q0xFOUJRVTh3U3l4SFFVRlJOMDRzUjBGQllXMUVMRWRCUVZVemRFSXNTVUV5YlV4NFEzVllMRWRCUVU4d1pDeEpRVUZOUVN4SFFVTmlNV1FzUjBGQlR6SmtMRTFCUVZGQkxFZEJRMll6WkN4SFFVRlBOR1FzVVVGQlZVRXNSMEZEYWtJMVpDeEhRVUZQTm1Rc1NVRkJUVUVzUjBGRFlqZGtMRWRCUVU5cGNVSXNWVUZxTTFCUUxGTkJRVzFDZUN0Q0xFVkJRVTlxUXl4SFFVTjRRaXhQUVVGUGNYQkNMRWRCUVdOd2JrSXNUVUZCWVdwRExFMUJRV00yV2l4TFFXa3pVR3hFY2tRc1IwRkJUMnR4UWl4alFTOHhVRkFzVTBGQmRVSjZLMElzUlVGQlQycERMRWRCUXpWQ0xFOUJRVTl4Y0VJc1IwRkJZM0J1UWl4TlFVRmhha01zVFVGQlkydHRRaXhMUVNzeFVHeEVNVkFzUjBGQlR6aGtMRkZCUVZWQkxFZEJSMnBDT1dRc1IwRkJUM1ZDTEZGQlFWVXdhRUlzUjBGRGFrSnFha0lzUjBGQlQyMXhRaXhWUVVGWmFrZ3NSMEZEYmtKc2FrSXNSMEZCVDI5eFFpeFBRVUZUYmtrc1IwRkRhRUpxYVVJc1IwRkJUM0Z4UWl4WFFVRmhia2tzUjBGSGNFSjNReXhIUVVGTk1XdENMRWRCUVZGQkxFbEJTMlJCTEVkQlFVODRRaXhKUVVGTlFTeEhRVU5pT1VJc1IwRkJUMjFyUWl4UlFVRlZRU3hIUVVOcVFtNXJRaXhIUVVGUGJXcENMRlZCUVZsQkxFZEJRMjVDYm1wQ0xFZEJRVTl6YWtJc1YwRkJZVUVzUjBGRGNFSjBha0lzUjBGQlQzWkRMRXRCUVU5QkxFZEJRMlIxUXl4SFFVRlBjM0ZDTEUxQmNISkdVQ3hUUVVGbGJtMUNMRVZCUVZGRExFVkJRVTlETEVkQllUVkNMRTlCV2tsQkxFbEJRVlUxYmtJc1NVRkRXalJ1UWl4RlFVRlJSQ3hGUVVOU1FTeEZRVUZSTTI1Q0xFZEJSVTQwYmtJc1NVRkJWVFZ1UWl4SlFVVmFORzVDTEVkQlJFRkJMRVZCUVZGM1ZTeEhRVUZUZUZVc1MwRkRRMEVzUlVGQlVVRXNSVUZCVVN4SFFVVm9RMFFzU1VGQlZUTnVRaXhKUVVWYU1tNUNMRWRCUkVGQkxFVkJRVkY1VlN4SFFVRlRlbFVzUzBGRFEwRXNSVUZCVVVFc1JVRkJVU3hIUVVVM1FuQkNMRWRCUVZVMlZpeEhRVUZUTVZVc1IwRkJVME1zUlVGQlQwTXNTVUYzY1VZMVEzSkZMRWRCUVU5eFl5eE5RVGRxVEZBc1UwRkJaVFY2UWl4SFFVTmlMRTlCUVU4MllpeEhRVUZWTjJJc1JVRkJUM1JNTEVsQk5tcE1NVUkyYVVJc1IwRkJUM1Z4UWl4VlFYQm5URkFzVTBGQmJVSTVhRU1zUjBGRGFrSXNUMEZCVHpaaUxFZEJRVlUzWWl4RlFVRlBlRXdzUlVGQmEwSkZMRWxCYjJkTU5VTTJhVUlzUjBGQlQzZHhRaXhqUVhJclMxQXNVMEZCZFVJdmFFTXNSVUZCVHl0aUxFZEJSVFZDTEU5QlFVOUdMRWRCUVZVM1lpeEZRVUZQZUV3c1JVRkJhMEpGTEVWQlJERkRjVzVDTEVWQlFXdERMRzFDUVVGa1FTeEZRVUV5UWtFc1JVRkJZUzl1UWl4SlFYRXJTemxFZFdwQ0xFZEJRVTk1Y1VJc1ZVRTNhRXhRTEZOQlFXMUNhR2xETEVWQlFVOHJZaXhIUVVWNFFpeFBRVUZQUml4SFFVRlZOMklzUlVGQlQzUk1MRVZCUkhoQ2NXNUNMRVZCUVd0RExHMUNRVUZrUVN4RlFVRXlRa0VzUlVGQllTOXVRaXhKUVRab1REbEVkV3BDTEVkQlFVOHdjVUlzVjBFeE9FdFFMRk5CUVc5Q09TOUNMRVZCUVZGMlNpeEhRVU14UWl4UFFVRnBRaXhOUVVGV1FTeEhRVUZyUW5Gc1FpeEhRVUZsT1dJc1JVRkJVWFpLTEVWQlFWRnhZU3hIUVVGTGNtRXNTMEV3T0VzdlJESmxMRWRCUVU5NVZpeFBRVUZUUVN4SFFVTm9RbnBXTEVkQlFVOHljVUlzVlVFeGVFTlFMRk5CUVcxQ2JHbERMRVZCUVU5NWRrSXNSMEZEZUVJc1QwRkJhVUlzVFVGQlZIcDJRaXhIUVVGcFFrRXNSMEZCVlVFc1JVRkJVM2wyUWl4RlFVRmxlblpDTEVkQk1IaEROMFIxV0N4SFFVRlBiV3hDTEU5QlFWTkJMRWRCUTJoQ2JteENMRWRCUVU4MGNVSXNVMEY2T1VWUUxGTkJRV3RDZWk5Q0xFVkJRVkV3TDBJc1JVRkJVVU1zUjBGRGFFTXpMMElzUlVGQlUydFJMRWRCUVZOc1VTeEhRVU5zUWpBdlFpeEZRVUZUTlZrc1IwRkJZVFJaTEVkQlJYUkNMRWxCUVVrMWFVTXNSVUZCVTJ0RUxFVkJRVTlzUkN4UFFVdG9Ralp2UWl4RlFVcEtaMkVzUlVGQlYwRXNTVUZCWVhKMVF5eEZRVU53UW5kTUxFVkJRMEVyWVN4SFFVRlZjVmNzUjBGQlZYbFNMRWRCUVZjc1JVRkJSemRwUXl4SFFVbDBReXhQUVVSQk5tbERMRWRCUVZsRUxFVkJRVTgxYVVNc1UwRkRRU3hIUVVGTGEwUXNSVUZCVDBNc1RVRkJUVEF2UWl4RlFVRlZhR0VzU1VGQlVTdGFMRWRCS3poRmVrUTNjVUlzUjBGQlQyMUVMRWRCUVV0QkxFZEJRMXB1UkN4SFFVRlBjVWdzVDBGcU4wVlFMRk5CUVdkQ2JHTXNSMEZGWkN4UFFVUkJRU3hGUVVGVGExRXNSMEZCVTJ4UkxFdEJRMEUzU2l4SFFVRnRRbXRZTEV0QlFVdHlUaXhIUVVOMFEwRXNSVUZCVDBjc1VVRkJVWEJMTEVkQlFXbENPRmNzU1VGRGFFTTNUU3hIUVRnMlJVNDJWU3hIUVVGUEszRkNMR0ZCTlRWRlVDeFRRVUZ6UWpVdlFpeEhRVVZ3UWl4UFFVUkJRU3hGUVVGVGExRXNSMEZCVTJ4UkxFdEJRMEZ5U2l4SFFVRm5RakJYTEV0QlFVdHlUaXhIUVVOdVEwRXNSVUZCVDBjc1VVRkJVWHBLTEVkQlFXTXNVVUZETjBKelNpeEhRWGsxUlU0MlZTeEhRVUZQWjNKQ0xFMUJOVGRQVUN4VFFVRmxMMmRETEVWQlFWbHdRaXhGUVVGWGJYTkNMRWRCUTNCRExFbEJRVWxzZEVJc1JVRkJUMjlaTEVkQlFWRnFWeXhIUVVGamNrSXNSMEZCWVhObUxFZEJTVGxETEU5QlNFazRUU3hIUVVGVFF5eEhRVUZsYUhKQ0xFVkJRVmx3UWl4RlFVRlhiWE5DTEV0QlEycEVibk5DTEVWQlFWbHdUU3hIUVVWUWNVd3NSVUZCUzIxRExFVkJRVmsyYTBJc1IwRkJXV3B0UWl4RlFVRlhMRXRCZHpkUGFrUnRXQ3hIUVVGUGJXVXNTMEZCVDBFc1IwRkRaRzVsTEVkQlFVOTVZeXhWUVVGWlFTeEhRVU51UW5wakxFZEJRVTlwY2tJc1VVRnllRWhRTEZOQlFXbENjbWRETEVWQlFWRXZRaXhIUVVOMlFpeFBRVUZQYlVJc1IwRkJXVmtzUlVGQlVXdHJRaXhIUVVGWmFtMUNMRVZCUVZjc1IwRkJTV3RtTEV0QmNYaEllRVF2U0N4SFFVRlBiMlVzVTBGQlYwRXNSMEZEYkVKd1pTeEhRVUZQTUdNc1kwRkJaMEpCTEVkQlEzWkNNV01zUjBGQlQydHlRaXhaUVdwMlNGQXNVMEZCY1VKMFowTXNSVUZCVVM5Q0xFZEJRek5DTEU5QlFVOXRRaXhIUVVGWldTeEZRVUZSYTJ0Q0xFZEJRVmxxYlVJc1JVRkJWeXhIUVVGSmIyWXNTMEZwZGtoNFJHcEpMRWRCUVU5eVF5eE5RVUZSUVN4SFFVTm1jVU1zUjBGQlQzQklMRkZCUVZWQkxFZEJRMnBDYjBnc1IwRkJUM0ZsTEdGQlFXVkJMRWRCUTNSQ2NtVXNSMEZCVDIxeVFpeE5RWEowU0ZBc1UwRkJaWFpuUXl4RlFVRlJkRU1zUjBGRGNrSXNUMEZCYVVJc1RVRkJWbk5ETEVWQlEwaEJMRVZCUTBFNFpDeEhRVUZST1dRc1JVRkJVV3RyUWl4SFFVRlplRzFDTEVWQlFWVXNSMEZCU1dsa0xFdEJiWFJJYUVSMlJpeEhRVUZQYjNKQ0xGZEJkSEpJVUN4VFFVRnZRbmhuUXl4RlFVRlJkRU1zUjBGRE1VSXNUMEZCYVVJc1RVRkJWbk5ETEVWQlEwaEJMRVZCUTBGblpTeEhRVUZoYUdVc1JVRkJVV3RyUWl4SFFVRlplRzFDTEVWQlFWVXNSMEZCU1dsa0xFdEJiM0pJY2tSMlJpeEhRVUZQY1hKQ0xFOUJjbkJJVUN4VFFVRm5RbnBuUXl4RlFVRlJkRU1zUjBGRGRFSXNUMEZCVDNORExFZEJRVlZ0WkN4SFFVRlhibVFzUlVGQlVXdHJRaXhIUVVGWmVHMUNMRVZCUVZVc1MwRnhjRWcxUkRCWUxFZEJRVTl6Y2tJc1dVRjRia2hRTEZOQlFYRkNNV2RETEVWQlFWRjBReXhIUVVNelFpeFBRVUZQYzBNc1IwRkJWWEZrTEVkQlFXZENjbVFzUlVGQlVXdHJRaXhIUVVGWmVHMUNMRVZCUVZVc1MwRjNia2hxUlRCWUxFZEJRVTlyUlN4SlFVRk5RU3hIUVVOaWJFVXNSMEZCVDJsb1FpeEhRVUZMUVN4SFFVTmFhbWhDTEVkQlFVOXJhRUlzU1VGQlRVRXNSMEZEWW14b1FpeEhRVUZQY0ZVc1NVRjZaMGhRTEZOQlFXRm9RaXhGUVVGUmIyVXNSMEZEYmtJc1QwRkJhVUlzVFVGQlZuQmxMRWRCUVd0Q1ozZENMRWRCUVZGb2QwSXNSVUZCVVc5bExFVkJRVTFoTEV0QmVXZElha1EzU2l4SFFVRlBLMDRzVFVGQlVVRXNSMEZEWmk5T0xFZEJRVTh5WXl4TFFVRlBRU3hIUVVOa00yTXNSMEZCVHl0TkxGTkJRVmRCTEVkQlEyeENMMDBzUjBGQlR6aEhMRk5CTlhCUFVDeFRRVUZyUWpkakxFVkJRVmw0UWl4RlFVRlBORUlzUlVGQlZ6SnhRaXhIUVVNNVF5OXhRaXhGUVVGaGVXcENMRWRCUVZsNmFrSXNSMEZCWTBFc1JVRkJZVlFzUjBGQlQxTXNSMEZETTBSSkxFVkJRV0ZCTEVsQlFXTXljVUlzUlVGQlUzRkZMRWRCUVZWb2RrSXNSMEZCWVN4RlFVVXpSQ3hKUVVGSmNFTXNSVUZCVTJkRExFVkJRVmRvUXl4UFFVbDRRaXhQUVVoSmIwTXNSVUZCV1N4SlFVTmtRU3hGUVVGWksxUXNSMEZCVlc1WExFVkJRVk52UXl4RlFVRlhMRWxCUlhKRGFUTkNMRWRCUVZOeU0wSXNSMEZEV0Vrc1IwRkJZWEJETEVkQlFWVm5ReXhGUVVGWE1teENMRkZCUVZGdWJrSXNSVUZCVHpSQ0xFbEJRV01zU1VGRE4wUndReXhIUVVGVmFVSXNSMEZCV1dVc1JVRkJXWGhDTEVWQlFVODBRaXhKUVVGakxFZEJiWEJQYUVVeVZpeEhRVUZQTkZBc1VVRTViRk5RTEZOQlFXbENlRzVDTEVWQlFVOUxMRVZCUVU4MFFpeEhRVU0zUWl4SlFVRkpjRU1zUlVGQmEwSXNUVUZCVkVjc1JVRkJaMElzUlVGQlNVRXNSVUZCVFVnc1QwRkRka01zU1VGQlMwRXNSVUZEU0N4UFFVRlJMRVZCUlZZc1NVRkJTVThzUlVGQmNVSXNUVUZCWWpaQ0xFVkJRVzlDTEVWQlFVbG5ka0lzUjBGQlZXaDJRaXhIUVVrNVF5eFBRVWhKTjBJc1JVRkJVU3hKUVVOV1FTeEZRVUZSTkZZc1IwRkJWVzVYTEVWQlFWTlBMRVZCUVU4c1NVRkZOMEpWTEVkQlFWbGtMRVZCUVU5TExFVkJRVTlFTEVsQmMyeFRia04zV0N4SFFVRlBkWEpDTEZGQmJIRkdVQ3hUUVVGcFFuQnVRaXhGUVVGUlowMHNSVUZCVDFjc1IwRlRPVUlzVDBGU1FWZ3NSVUZCVVhWSkxFZEJRVk4yU1N4SFFVTmlWeXhKUVVGUmNqQkNMRWRCUTFaeE1FSXNSVUZCVFZnc1JVRkRUa0VzUlVGQlVTeEhRVVZTVnl4RlFVRk5ORWdzUjBGQlV6VklMRWRCY25OV2JrSXNVMEZCY1VJelRTeEZRVUZSWjAwc1JVRkJUMWNzUjBGRGJFTXNUMEZCVHpOTkxFZEJRVlUzUml4SFFVRlZObElzUlVGQlQxY3NTVUZCVVROTkxFVkJRVk12Uml4SFFVRlZLMUlzUlVGQlQxY3NSMEYxYzFZM1JEQmhMRU5CUkZCeWJrSXNSVUZCVXpCVkxFZEJRVk14VlN4SFFVTlRaMDBzUlVGQlQxY3NTVUV3Y0Vad1F6bFJMRWRCUVU4eWFVSXNUMEZCVTBFc1IwRkRhRUl6YVVJc1IwRkJUM0ZETEZsQlFXTkJMRWRCUTNKQ2NrTXNSMEZCVDBVc1VVRkJWVUVzUjBGRGFrSkdMRWRCUVU4NVdTeGpRVUZuUWtFc1IwRkRka0k0V1N4SFFVRlBNRTRzV1VGQlkwRXNSMEZEY2tJeFRpeEhRVUZQYzA4c2EwSkJRVzlDUVN4SFFVTXpRblJQTEVkQlFVOTVja0lzVlVGMGQwdFFMRk5CUVcxQ2FHcERMRWRCUTJwQ0xFOUJRV2xDTEVsQlFWWkJMRWxCUVRSQ0xFbEJRVlpCTEVkQlEzUkNkMWdzUjBGQllYaFlMRWxCUVZVMlowSXNSMEZCVnpkblFpeEpRVUZWZUVvc1IwRnhkMHRxUkN0blFpeEhRVUZQYWtNc1UwRkJWMEVzUjBGRGJFSnBReXhIUVVGUE5Wa3NUMEZCVTBFc1IwRkRhRUkwV1N4SFFVRlBNSEpDTEZWQk4zTkxVQ3hUUVVGdFFtcHFReXhIUVVOcVFpeFBRVUZQZDFnc1IwRkJZWGhZTEVsQlFUWkNMRWxCUVc1Q1FTeEZRVUZOYmtNc1YwRkJiVUpwYjBJc1IwRkJZemxzUWl4SlFUWnpTM1pGZFZnc1IwRkJUekp5UWl4UlFYcHhTMUFzVTBGQmFVSnNha01zUjBGRFppeEhRVUZoTEUxQlFWUkJMRVZCUTBZc1QwRkJUeXhGUVVWVUxFZEJRVWxwYkVJc1IwRkJXV3BzUWl4TFFVTlllVmdzUjBGQlVYcFlMRWxCUVRCQ0xHbENRVUZVUVN4SFFVRTBReXh0UWtGQmFFSkJMRVZCUVUxblZTeFJRVU14UkhOQ0xFZEJRVk4wVml4SlFVRlZZaXhIUVVGaFlTeEpRVUZWTkZvc1IwRkJXVFZhTEVsQlF6RkVMRTlCUVZGQkxFVkJRVTFTTEU5QlJXaENMRWxCUVVrcll5eEZRVUZOUXl4SFFVRlBlR01zUjBGRGFrSXNSMEZCU1hWakxFZEJRVTk2YkVJc1IwRkJWWGxzUWl4SFFVRlBibXhDTEVWQlF6RkNMRTlCUVZFMFNTeEZRVUZOYTFFc1MwRkZhRUlzUjBGQlNYbFZMRWRCUVZremEwSXNSMEZEWkN4UFFVRlJNR3RDTEVkQlFWTXhhMElzUjBGQlQxSXNUMEZGTVVJc1NVRkJTeXhKUVVGSmEwTXNTMEZCVHpGQ0xFVkJRMlFzUjBGQlNUWlRMRWRCUVdWd1ZDeExRVUZMVHl4RlFVRlBNRUlzUjBGRE4wSXNUMEZCVHl4RlFVZFlMRTlCUVU4c1IwRnhjRXRVTmxZc1IwRkJUelJ5UWl4UlFYUnVTMUFzVTBGQmFVSnVha01zUlVGQlQyMW9RaXhIUVVOMFFpeFBRVUZQWlN4SFFVRlpiR2xDTEVWQlFVOXRhRUlzU1VGemJrczFRalZLTEVkQlFVODJja0lzV1VGdWJFdFFMRk5CUVhGQ2NHcERMRVZCUVU5dGFFSXNSVUZCVDNCR0xFZEJSV3BETEVsQlFVbDRZaXhIUVVSS2QySXNSVUZCYTBNc2JVSkJRV1JCTEVWQlFUSkNRU3hGUVVGaEwyNUNMRWRCUTJ4REsyNUNMRVZCUVZjdllpeEZRVUZQYldoQ0xFZEJRVk51ZEVJc1JVRkRja1FzVDBGQlQzVk5MRWxCUVZkMlRTeEZRVUZaYTNWQ0xFZEJRVmxzYVVJc1JVRkJUMjFvUWl4RlFVRlBiblJDTEVWQlFWY3Jia0lzUzBGQlowSjRZaXhIUVdsc1MzSkdaMWdzUjBGQlQyMW9RaXhSUVVGVlFTeEhRVU5xUW01b1FpeEhRVUZQTDBJc1UwRXhhRXRRTEZOQlFXdENlRllzUjBGRGFFSXNUVUZCZFVJc2FVSkJRVlJCTEVkQlFYRkNkVllzUjBGQlpYWldMRWxCTUdoTGNFUjFXQ3hIUVVGUE9Fa3NWMEZCWVVFc1IwRkRjRUk1U1N4SFFVRlBiMmhDTEZWQlFWbEJMRWRCUTI1Q2NHaENMRWRCUVU4NFlTeFRRVUZYUVN4SFFVTnNRamxoTEVkQlFVOHhXU3hOUVVGUlFTeEhRVU5tTUZrc1IwRkJUemh5UWl4UlFURXhTbEFzVTBGQmFVSnNhRU1zUlVGQlVYWktMRWRCUTNaQ0xFOUJRVTkxU2l4SlFVRlhka29zUjBGQlZXOXlRaXhIUVVGWk4yaENMRVZCUVZGMlNpeEZRVUZSYzNOQ0xFZEJRV0YwYzBJc1MwRXdNVXAyUlRKbExFZEJRVThyY2tJc1dVRjJla3BRTEZOQlFYRkNibWhETEVWQlFWRjJTaXhGUVVGUmJXcENMRWRCUlc1RExFOUJSRUZCTEVWQlFXdERMRzFDUVVGa1FTeEZRVUV5UWtFc1JVRkJZUzl1UWl4RlFVTnlSR2QzUWl4SFFVRlpOMmhDTEVWQlFWRjJTaXhGUVVGUmMzTkNMRWRCUVdGMGMwSXNSMEZCVTIxcVFpeEpRWE42U2pORWVFVXNSMEZCVDJkelFpeE5RWFo0U2xBc1UwRkJaWFpxUXl4SFFVbGlMRTlCUVU4ME5FSXNSMEZCVXpVMFFpeEpRVUZWUVN4SlFVRlZRU3hIUVc5NFNuUkRkVmdzUjBGQlQybHpRaXhUUVhaMlNsQXNVMEZCYTBKNGFrTXNSMEZEYUVJc1IwRkJTWGw1UWl4SFFVRlhlbmxDTEVkQlEySXNUVUZCVFN4SlFVRkphMU1zUjBGQlRXaGxMRWRCUld4Q0xFOUJRVTlyZDBJc1IwRkJZWEJyUWl4SlFXOTJTblJDZFZnc1IwRkJUMnR6UWl4TlFYaHpTbEFzVTBGQlpYcHFReXhIUVVOaUxFOUJRV2RDTEUxQlFWUkJMRWRCZDNOS1ZIVllMRWRCUVU5dGMwSXNUMEZxZFVwUUxGTkJRV2RDTVdwRExFZEJRMlFzVDBGQmFVSXNUMEZCVmtFc1IwRnBkVXBVZFZnc1IwRkJUM0ZvUWl4VFFVRlhRU3hIUVVOc1FuSm9RaXhIUVVGUFVTeFRRVUZYUVN4SFFVTnNRbElzUjBGQlQwTXNZVUZCWlVFc1IwRkRkRUpFTEVkQlFVOTFUeXhqUVVGblFrRXNSMEZEZGtKMlR5eEhRVUZQZUZrc1UwRkJWMEVzUjBGRGJFSjNXU3hIUVVGUGIzTkNMR05CY214S1VDeFRRVUYxUWpOcVF5eEhRVU55UWl4UFFVRlBNalJDTEVkQlFWVXpORUlzU1VGQlZVRXNTVUZCVld4TExFZEJRVzlDYTBzc1IwRkJVMnhMTEVkQmNXeEtjRVY1YUVJc1IwRkJUM1JaTEUxQlFWRkJMRWRCUTJaeldTeEhRVUZQYzJoQ0xGTkJRVmRCTEVkQlEyeENkR2hDTEVkQlFVOXZTU3hUUVVGWFFTeEhRVU5zUW5CSkxFZEJRVTl3V1N4aFFVRmxRU3hIUVVOMFFtOVpMRWRCUVU5eGMwSXNXVUZ1TDBsUUxGTkJRWEZDTldwRExFZEJRMjVDTEU5QlFVOUJMRWxCUVZWb1RTeEhRVzB2U1c1Q2RXcENMRWRCUVU5emMwSXNWVUV2T1VsUUxGTkJRVzFDTjJwRExFZEJRMnBDTEU5QlFVOTNXQ3hIUVVGaGVGZ3NTVUZCVlhkakxFZEJRVTk0WXl4SlFVRlZlRWtzU1VFck9VbHFSQ3RtTEVkQlFVOTFjMElzVlVFek9FbFFMRk5CUVcxQ09XcERMRWRCUTJwQ0xFOUJRVTkzV0N4SFFVRmhlRmdzU1VGQlZUWm5RaXhIUVVGWE4yZENMRWxCUVZWMlNTeEpRVEk0U1hKRU9HWXNSMEZCVHpOaUxFdEJlaTlTVUN4VFFVRmpLMFFzUlVGQlQzZG5ReXhIUVVOdVFpeFBRVUZuUWl4TlFVRlVlR2RETEVWQlFXZENMRWRCUVVzNFZpeEhRVUZYYUZjc1MwRkJTMFVzUlVGQlQzZG5ReXhKUVhrdlVuSkVOVzlDTEVkQlFVOTNha0lzVlVGQldVRXNSMEZEYmtKNGFrSXNSMEZCVDNsTExFdEJRVTlCTEVkQlEyUjZTeXhIUVVGUGQzTkNMRmxCYURsU1VDeFRRVUZ4UW5CclF5eEZRVUZQU3l4RlFVRlBORUlzUjBGRGFrTXNTVUZCU1hCRExFVkJRV3RDTEUxQlFWUkhMRVZCUVdkQ0xFVkJRVWxCTEVWQlFVMUlMRTlCUTNaRExFbEJRVXRCTEVWQlEwZ3NUMEZCVVN4RlFVVldMRWxCUVVsUExFVkJRVkZRTEVWQlMxb3NUMEZLU1c5RExFbEJRV00xVGl4SlFVVm9RaXRNTEVkQlJFRkJMRVZCUVZFMmQwSXNSMEZCVldoMlFpeEpRVU5HTEVWQlFVa3JWQ3hIUVVGVmJsY3NSVUZCVTA4c1JVRkJUeXhIUVVGTE9GWXNSMEZCVlRsV0xFVkJRVTlRTEVWQlFWTXNTVUZGZUVWUkxFZEJRVlZCTEVWQmNuWk5ja0lzVTBGQk1rSk1MRVZCUVU5TExFVkJRVTgwUWl4SFFVVjJReXhKUVVSQkxFbEJRVWszUWl4RlFVRlJOa0lzUlVGQldTeEZRVU5xUWpkQ0xFdEJRMHdzUjBGQlNVb3NSVUZCVFVrc1MwRkJWME1zUlVGRGJrSXNUMEZCVDBRc1JVRkhXQ3hQUVVGUFFTeEZRU3QxVFVScGEwTXNRMEZCYTBKeWEwTXNSVUZCVDBzc1JVRkJUMFFzUjBGRGFFTTBRaXhIUVVGamFFTXNSVUZCVDI5RExFZEJRVmRvUXl4SFFVRlBMRWxCY1RoU04wTjNXQ3hIUVVGUGVXcENMRlZCUVZsQkxFZEJRMjVDZW1wQ0xFZEJRVTh3YWtJc1YwRkJZVUVzUjBGRGNFSXhha0lzUjBGQlQzVm9RaXhIUVVGTFFTeEhRVU5hZG1oQ0xFZEJRVTkzYUVJc1NVRkJUVUVzUjBGRFluaG9RaXhIUVVGUE0wSXNTVUZvWmxBc1UwRkJZV3BYTEVkQlExZ3NUMEZCVVVFc1IwRkJVMEVzUlVGQlRVZ3NUMEZEYmtKclowSXNSMEZCWVM5bUxFVkJRVTh5YTBJc1IwRkJWWEJFTEVsQlF6bENiSFJDTEVkQk9HVk9kV3BDTEVkQlFVOHdjMElzVFVGd1pGQXNVMEZCWlhSclF5eEZRVUZQUlN4SFFVTndRaXhQUVVGUlJpeEhRVUZUUVN4RlFVRk5TQ3hQUVVOdVFtdG5RaXhIUVVGaEwyWXNSVUZCVHpCdFFpeEhRVUZaZUcxQ0xFVkJRVlVzUjBGQlNYRm9RaXhKUVVNNVEyeDBRaXhIUVd0a1RuVnFRaXhIUVVGUE1uTkNMRXRCYW1OUUxGTkJRV04yYTBNc1IwRkRXaXhQUVVGUGMwTXNSMEZCVTNSRExFVkJRVTh5YTBJc1MwRnBZM3BDTDAwc1IwRkJUelJ6UWl4UFFYWmhVQ3hUUVVGblFuaHJReXhGUVVGUFJTeEhRVU55UWl4UFFVRlBiME1zUjBGQlUzUkRMRVZCUVU4d2JVSXNSMEZCV1hodFFpeEZRVUZWTEV0QmRXRXZRekJZTEVkQlFVOTZRaXhKUVd4YVVDeFRRVUZoYmxjc1IwRkRXQ3hQUVVGUlFTeEhRVUZUUVN4RlFVRk5TQ3hQUVVOdVFtdG5RaXhIUVVGaEwyWXNSVUZCVHpKclFpeEhRVUZWVXl4SlFVTTVRaTkzUWl4SFFXZGFUblZxUWl4SFFVRlBObk5DTEUxQmRGaFFMRk5CUVdWNmEwTXNSVUZCVDBVc1IwRkRjRUlzVDBGQlVVWXNSMEZCVTBFc1JVRkJUVWdzVDBGRGJrSnJaMElzUjBGQllTOW1MRVZCUVU4d2JVSXNSMEZCV1hodFFpeEZRVUZWTEVkQlFVbHJiRUlzU1VGRE9VTXZkMElzUjBGdldFNTFha0lzUjBGQlR6SmhMRlZCUVZsQkxFZEJRMjVDTTJFc1IwRkJUMjFpTEZWQlFWbEJMRWRCUTI1Q2JtSXNSMEZCVHpoelFpeFhRWHAwUWxBc1YwRkRSU3hWUVhsMFFrWTVjMElzUjBGQlR5dHpRaXhYUVhwelFsQXNWMEZEUlN4TlFVRlBMRWxCZVhOQ1ZDOXpRaXhIUVVGUFozUkNMRk5CZW5KQ1VDeFhRVU5GTEU5QlFVOHNSMEY1Y2tKVWFIUkNMRWRCUVU5emJFSXNVMEZCVjBFc1IwRkRiRUowYkVJc1IwRkJUMmwwUWl4SlFUYzNVbEFzVTBGQllUZHJReXhGUVVGUE5rTXNSMEZEYkVJc1QwRkJVVGRETEVkQlFWTkJMRVZCUVUxSUxFOUJRVlY1YlVJc1IwRkJVWFJ0UWl4RlFVRlBhWGhDTEVkQlFWVndkVUlzU1VGQlRYaFBMRWRCTmpkU2JFVjFha0lzUjBGQlQydDBRaXhYUVd4cFExQXNWMEZKUlN4UFFVaEphRzVETEVkQlFVdHJWU3hKUVVGTmRVY3NUMEZEWW5waExFZEJRVXRyVlN4RlFVRkpNRUlzU1VGRlNqWkZMRTFCSzJoRFZGZ3NSMEZCVDNWYUxFdEJRVTlCTEVkQlEyUjJXaXhIUVVGUE0wTXNTVUZCVFVFc1IwRkRZakpETEVkQlFVOXRkRUlzU1VGcU5VVlFMRk5CUVdGb2FVTXNSVUZCVVd4RUxFVkJRVkZ4ZDBJc1IwRkRNMEp1ZEVJc1JVRkJVMnRSTEVkQlFWTnNVU3hIUVVkc1FpeEpRVUZKYVdsRExFZEJSa3B1YkVNc1JVRkJVMjk0UWl4SFFVRlZjSGhDTEVsQlJVMXZVaXhIUVVGWGJFOHNSMEZCVlN4RlFVTTVReXhKUVVGTGJFUXNSMEZCVlcxc1F5eEhRVUZoYm14RExFVkJRekZDTEU5QlFVOXJSQ3hGUVVWVUxFbEJRVWxwYlVJc1IwRkJUMjV3UWl4RlFVRlRiV3hETEVkQlFXRXNSVUZEYWtNc1QwRkRSUzlWTEVkQlFXTXpZU3hIUVVGWk1GUXNSMEZCVFd0SUxFZEJRMmhEYm5SQ0xFVkJRMEZyZEVJc1IwRkJZemRoTEVkQlFWYzBWQ3hIUVVGTmEwZ3NTVUZ6TkVWdVEzUlpMRWRCUVU5eGRFSXNUMEV6TWtWUUxGTkJRV2RDYkdsRExFVkJRVkZzUkN4RlFVRlJjWGRDTEVkQlF6bENiblJDTEVWQlFWTnJVU3hIUVVGVGJGRXNSMEZIYkVJc1NVRkJTV2xwUXl4SFFVWktibXhETEVWQlFWTnZlRUlzUjBGQlZYQjRRaXhKUVVWTmIxSXNSMEZCVjJ4UExFZEJRVlVzUlVGRE9VTXNUMEZCVVd4RUxFZEJRVlZ0YkVNc1JVRkJXVzVzUXl4RlFVTjZRbXRFTEVWQlFWTnJkRUlzUjBGQlkzQjNRaXhGUVVGVGJXeERMRVZCUVZjNVZTeEhRVU0xUTI1MFFpeEhRWEV5UlU0MlZTeEhRVUZQYzNSQ0xGTkJNekJGVUN4VFFVRnJRbTVwUXl4RlFVRlJiRVFzUlVGQlVYRjNRaXhIUVVOb1EyNTBRaXhGUVVGVGExRXNSMEZCVTJ4UkxFZEJSMnhDTEVsQlFVbHBhVU1zUjBGR1NtNXNReXhGUVVGVGIzaENMRWRCUVZWd2VFSXNTVUZGVFc5U0xFZEJRVmRzVHl4SFFVRlZMRVZCUXpsRExFOUJRVkZzUkN4SFFVRlZiV3hETEVWQlFWbHViRU1zUlVGRGVrSnZkMElzUjBGQlkzQjNRaXhGUVVGVGJXeERMRVZCUVZjNVZTeEhRVUZUYm5SQ0xFVkJRelZEUVN4SFFYRXdSVTQyVlN4SFFVRlBjR0VzVTBFeGVVVlFMRk5CUVd0Q2RVWXNSVUZCVVc5cFF5eEZRVUZQZGxrc1IwRk5MMElzVDBGTVNVRXNSMEZCYTBJc1RVRkJWSFZaTEVWQlExaEJMRVZCUVZFc1JVRkRRMEVzU1VGRFZFRXNSMEZCVTBFc1IwRkZTamwxUWl4SFFVRmxjRVFzUjBGQlUyeFJMRWRCUVZGSExGRkJRVkYyU2l4SFFVRmhMRWxCUVV0M2NrTXNSMEZCVXl4SlFYRjVSVFZGZG5SQ0xFZEJRVTl5UWl4UFFURnlSbEFzVTBGQlowSjVSaXhGUVVGUFF5eEZRVUZQYlhCQ0xFZEJNa0kxUWl4SFFURkNTVUVzUjBGQkswSXNhMEpCUVZwQkxFZEJRWGxDZGxrc1IwRkJaVGRSTEVWQlFVOURMRVZCUVU5dGNFSXNTMEZETTBWdWNFSXNSVUZCVVcxd1FpeEZRVUZYTDNkRExFZEJSV3BDSzNkRExFbEJRV0V2ZDBNc1NVRkRTeXhyUWtGQlZEUnVRaXhIUVVOVWJYQkNMRVZCUVZkdWNFSXNSVUZEV0VFc1JVRkJVVFZ1UWl4SFFVVmxMR3RDUVVGVU1tNUNMRWxCUTJSdmNFSXNSVUZCVjNCd1FpeEZRVU5ZUVN4RlFVRlJNMjVDTEVsQlIxSXlia0lzU1VGQlZUTnVRaXhIUVVGaE5HNUNMRWxCUVZVMWJrSXNSMEZEYmtNeWJrSXNSVUZCVVN4RlFVTlNReXhGUVVGUkxFbEJSMUpFTEVWQlFWRnpWU3hIUVVGVGRGVXNSMEZEWWtNc1NVRkJWVFZ1UWl4SFFVTmFORzVDTEVWQlFWRkVMRVZCUTFKQkxFVkJRVkVzUjBGRlVrTXNSVUZCVVhGVkxFZEJRVk55VlN4SlFVZHFRa1FzUlVGQlVVTXNSVUZCVHl4RFFVTnFRaXhKUVVGSmIzQkNMRVZCUVU5eWNFSXNSVUZEV0VFc1JVRkJVVU1zUlVGRFVrRXNSVUZCVVc5d1FpeEZRVVZXTEVkQlFVbEVMRWRCUVZsd2NFSXNSVUZCVVN4SFFVRkxReXhGUVVGUkxFVkJRVWNzUTBGRGRFTXNTVUZCU1RCWUxFVkJRVTl5WkN4TFFVTllMRTlCUVU5S0xFZEJRVlU0Uml4RlFVRlRNbGdzUjBGQlVURllMRVZCUVZGRUxFVkJRVkV6WlN4SFFVRmxMRkZCUVZWek1rSXNSVUZCVHl4SlFVRkpPWHBDTEU5QlFWTXNTMEZCVDI5akxFZEJSWGhITEU5QlFVOTZRaXhIUVVGWGQwSXNSVUZCVDBNc1NVRjFjRVl6UW5KRkxFZEJRVTh3ZEVJc1QwRTFLMDVRTEZOQlFXZENlbXBETEVWQlFWa3pRaXhGUVVGVlF5eEhRVU53UXl4SlFVRkpWQ3hGUVVGUGIxa3NSMEZCVVdwWExFZEJRV05RTEVkQlFXTnZRaXhIUVVNelEyNUNMRVZCUVZsbmMwSXNWVUZCVlRGMFFpeFBRVUZUTEVWQlJXNURMRTlCUVU5SUxFVkJRVXR0UXl4RlFVRlpObXRDTEVkQlFWbDRiVUlzUlVGQlZTeEhRVUZKUXl4RlFVRmhiMElzUlVGQlZ6aGFMRXRCZVN0T05VVjZSQ3hIUVVGUE1uUkNMRmxCYURsT1VDeFRRVUZ4UWpGcVF5eEZRVUZaTTBJc1JVRkJWVU1zUjBGRGVrTXNTVUZCU1ZRc1JVRkJUMjlaTEVkQlFWRnFWeXhIUVVGalRDeEhRVUZ0UW10Q0xFZEJRMmhFYmtJc1JVRkJXV2R6UWl4VlFVRlZNWFJDTEU5QlFWTXNSVUZGYmtNc1QwRkJUMGdzUlVGQlMyMURMRVZCUVZrMmEwSXNSMEZCV1hodFFpeEZRVUZWTEVkQlFVbERMRVZCUVdGdlFpeEZRVUZYY1dVc1MwRTJPRTQxUldoSkxFZEJRVTgwZEVJc1QwRXZkMFZRTEZOQlFXZENlbWxETEVWQlFWRkdMRVZCUVVjcmNFSXNSMEZOZWtJc1QwRktSUzl3UWl4SFFVUkhLM0JDTEVWQlFWRkRMRWRCUVdVNWNFSXNSVUZCVVVZc1JVRkJSeXR3UWl4SFFVRlRMM0JDTEVsQlFVMTRUeXhIUVVOb1JDeEZRVVZCTkRoQ0xFZEJRVlZ3ZFVJc1IwRkZWR2RzUWl4SFFVRlhOVlVzUjBGQlUyeFJMRWRCUVZOR0xFbEJNSGRGZEVNclZTeEhRVUZQTVZVc1VVRndka1ZRTEZkQlEwVXNTVUZCU1hSRUxFVkJRVTh5ZEVJc1ZVRkRVSGh4UWl4RlFVRlRhMUVzUjBGQlUzSlVMRVZCUVVzc1NVRkZNMElzVDBGQlQwRXNSVUZCUzBNc1QwRkJVeXhGUVVGSmEwUXNSVUZCVTBFc1JVRkJUMGNzVVVGQlVYUkVMRVZCUVVzc1IwRkJTVUVzUlVGQlN5eExRV2wyUldwRloxa3NSMEZCVDJoWUxFOUJkRzlIVUN4VFFVRm5RalJDTEVWQlFWRnZaU3hGUVVGTmExQXNSMEZITlVJc1NVRkJTVEYyUWl4SFFVRlRMRVZCUTFSUUxFZEJTRW9yWjBJc1JVRkJUME1zUjBGQlUwUXNSVUZCVFhCbExFbEJSMG96UXl4UFFVOXNRaXhKUVVwTFFTeEpRVU5JUVN4RlFVRlRMRVZCUTFReVF5eEZRVUZUYms4c1MwRkZSaXRNTEVWQlFWRlFMRWRCUVZFc1EwRkRka0lzU1VGQlNWRXNSVUZCYTBJc1RVRkJWbTFETEVWQlFXbENiazhzUlVGQldXMVBMRVZCUVU5elpTeEhRVUZOUml4RlFVRkxlR2RDTEV0QlEzWkVReXhKUVVGVmFFMHNTVUZEV2l0TUxFVkJRVkZRTEVWQlExSlJMRVZCUVZGNWRrSXNSMEZGVm5SMFFpeEZRVUZUYTJVc1IwRkJWM0puUWl4SFFVRlRRU3hGUVVGTlVDeExRVUZMTUVNc1IwRkJWVzVETEVWQlJYQkVMRTlCUVU5dFF5eEhRVzl1UjFSdlZpeEhRVUZQZVd4Q0xFMUJRVkZCTEVkQlEyWjZiRUlzUjBGQlR6TkdMR0ZCUVdWQkxFZEJRM1JDTWtZc1IwRkJUelowUWl4UFFURTFUbEFzVTBGQlowSTFha01zUjBGRlpDeFBRVVJYYVZjc1IwRkJVV3BYTEVkQlFXTXdXU3hIUVVGak1rNHNTVUZEYmtOeWJVSXNTVUY1TlU1a0sxWXNSMEZCVDNKSUxFdEJMekJPVUN4VFFVRmpNVThzUjBGRFdpeEhRVUZyUWl4TlFVRmtRU3hGUVVOR0xFOUJRVThzUlVGRlZDeEhRVUZKZVdwQ0xFZEJRVmw2YWtJc1IwRkRaQ3hQUVVGUGNUTkNMRWRCUVZOeU0wSXNSMEZCWTI5UUxFZEJRVmR3VUN4SFFVRmpRU3hGUVVGWGFFTXNUMEZGY0VVc1NVRkJTU3RqTEVWQlFVMURMRWRCUVU5b1lpeEhRVU5xUWl4UFFVRkpLMkVzUjBGQlQzcHNRaXhIUVVGVmVXeENMRWRCUVU5dWJFSXNSVUZEYmtKdlN5eEZRVUZYTUU4c1MwRkZZbmRWTEVkQlFWTnNha0lzUjBGQldXaERMRkZCY1RCT09VSXJXQ3hIUVVGUE1tcENMRlZCUVZsQkxFZEJRMjVDTTJwQ0xFZEJRVTg0ZEVJc1MwRXZlRTVRTEZOQlFXTTNha01zUlVGQldYQkNMRVZCUVZkdGMwSXNSMEZEYmtNc1NVRkJTV3gwUWl4RlFVRlBiMWtzUjBGQlVXcFhMRWRCUVdOS0xFZEJRVmxyYmtJc1IwRkpOME1zVDBGSVNXbEZMRWRCUVZORExFZEJRV1ZvY2tJc1JVRkJXWEJDTEVWQlFWZHRjMElzUzBGRGFrUnVjMElzUlVGQldYQk5MRWRCUlZCeFRDeEZRVUZMYlVNc1JVRkJXVFpyUWl4SFFVRlphbTFDTEVWQlFWY3NTMEV5ZUU1cVJHMVlMRWRCUVU4cmRFSXNXVUZvYzFKUUxGTkJRWEZDTTJ4RExFVkJRVTlMTEVkQlF6RkNMRTlCUVU5MWIwSXNSMEZCWjBJMWIwSXNSVUZCVDBzc1NVRm5jMUpvUTNWWUxFZEJRVTluZFVJc1kwRndjVkpRTEZOQlFYVkNOV3hETEVWQlFVOUxMRVZCUVU5SUxFZEJRMjVETEU5QlFVOHJiMElzUjBGQmEwSnFjRUlzUlVGQlQwc3NSVUZCVDNGdFFpeEhRVUZaZUcxQ0xFVkJRVlVzUzBGdmNWSXZSREJZTEVkQlFVOXBkVUlzWTBGcWNGSlFMRk5CUVhWQ04yeERMRVZCUVU5TExFZEJRelZDTEVsQlFVbFNMRVZCUVd0Q0xFMUJRVlJITEVWQlFXZENMRVZCUVVsQkxFVkJRVTFJTEU5QlEzWkRMRWRCUVVsQkxFVkJRVkVzUTBGRFZpeEpRVUZKVHl4RlFVRlJkMjlDTEVkQlFXZENOVzlDTEVWQlFVOUxMRWRCUTI1RExFZEJRVWxFTEVWQlFWRlFMRWRCUVZWcllpeEhRVUZITDJFc1JVRkJUVWtzUjBGQlVVTXNSMEZEY2tNc1QwRkJUMFFzUlVGSFdDeFBRVUZSTEVkQk1HOVNWbmRZTEVkQlFVOXJkVUlzWjBKQmNtNVNVQ3hUUVVGNVFqbHNReXhGUVVGUFN5eEhRVU01UWl4UFFVRlBkVzlDTEVkQlFXZENOVzlDTEVWQlFVOUxMRWRCUVU4c1NVRnhibEoyUTNWWUxFZEJRVTl0ZFVJc2EwSkJlbXhTVUN4VFFVRXlRaTlzUXl4RlFVRlBTeXhGUVVGUFNDeEhRVU4yUXl4UFFVRlBLMjlDTEVkQlFXdENhbkJDTEVWQlFVOUxMRVZCUVU5eGJVSXNSMEZCV1hodFFpeEZRVUZWTEVsQlFVa3NTVUY1YkZKdVJUQllMRWRCUVU5dmRVSXNhMEpCZEd0U1VDeFRRVUV5UW1odFF5eEZRVUZQU3l4SFFVVm9ReXhIUVVSelFpeE5RVUZVVEN4SFFVRnZRa0VzUlVGQlRVZ3NUMEZETTBJc1EwRkRWaXhKUVVGSlR5eEZRVUZSZDI5Q0xFZEJRV2RDTlc5Q0xFVkJRVTlMTEVkQlFVOHNSMEZCVVN4RlFVTnNSQ3hIUVVGSk1HRXNSMEZCUnk5aExFVkJRVTFKTEVkQlFWRkRMRWRCUTI1Q0xFOUJRVTlFTEVWQlIxZ3NUMEZCVVN4SFFTdHFVbFozV0N4SFFVRlBOR3BDTEZWQlFWbEJMRWRCUTI1Q05XcENMRWRCUVU5eGRVSXNWMEV6YjBWUUxGTkJRVzlDYkdwRExFVkJRVkV3TDBJc1JVRkJVVU1zUjBGUGJFTXNUMEZPUVRNdlFpeEZRVUZUYTFFc1IwRkJVMnhSTEVkQlEyeENNaTlDTEVWQlFYVkNMRTFCUVZwQkxFVkJRMUFzUlVGRFFUbHVRaXhIUVVGVmNWY3NSMEZCVlhsU0xFZEJRVmNzUlVGQlJ6TXZRaXhGUVVGUGJFUXNVVUZGTjBNMGFVTXNSVUZCVXpWWkxFZEJRV0UwV1N4SFFVTm1NUzlDTEVWQlFVOURMRTFCUVUwd0wwSXNSVUZCVlVFc1JVRkJWMFFzUlVGQlR6VnBReXhUUVVGWE5HbERMRWRCY1c5Rk4wUTNjVUlzUjBGQlR6QnNRaXhUUVVGWFFTeEhRVU5zUWpGc1FpeEhRVUZQYzNWQ0xFbEJlbFZRTEZOQlFXRnNiVU1zUjBGRFdDeFBRVUZSUVN4SFFVRlRRU3hGUVVGTlNDeFBRVU51UWpCRExFZEJRVkYyUXl4RlFVRlBNbXRDTEVsQlEyWXNSMEYxVlU0dlRTeEhRVUZQZFhWQ0xFMUJOMU5RTEZOQlFXVnViVU1zUlVGQlQwVXNSMEZEY0VJc1QwRkJVVVlzUjBGQlUwRXNSVUZCVFVnc1QwRkRia0l3UXl4SFFVRlJka01zUlVGQlR6QnRRaXhIUVVGWmVHMUNMRVZCUVZVc1NVRkRja01zUjBFeVUwNHdXQ3hIUVVGUGQzVkNMRk5CTjJoRlVDeFRRVUZyUW5KcVF5eEZRVUZSTkhwQ0xFVkJRVk12U2l4SFFVbHFReXhKUVVGSmVWb3NSVUZCVjNwMVFpeEhRVUZQYjBnc2FVSkJSV3hDTkU0c1IwRkJVME1zUjBGQlpUbHdRaXhGUVVGUk5IcENMRVZCUVZNdlNpeExRVU16UXl0S0xFVkJRVlYwYVVNc1IwRkZXakJQTEVWQlFWTnJVU3hIUVVGVGJGRXNSMEZEYkVJMGVrSXNSVUZCVlcxRUxFMUJRV2xDYmtRc1JVRkJVekJRTEVWQlFWVjJWU3hKUVVVNVF5eEpRVWxKZDFVc1JVRkRRVU1zUlVGTVFXeHVRaXhGUVVGVmVXRXNUVUZCYVVKdVJDeEZRVUZSZEZnc1VVRkJVMmR1UWl4RlFVRlRhRzVDTEZGQlFWTjVVeXhKUVVNNVJEQlZMRVZCUVdOc2VrSXNSMEZCU3l0TUxFZEJRMjVDYjI1Q0xFVkJRV2RDY21wRExFZEJRVmRwWXl4RlFVRlRiVzVDTEVkQlNYQkRjRzFETEVWQlFWRXNSVUZEVWl0bExFVkJRV04zV0N4RlFVRlJlRmdzWVVGQlpYaHJRaXhIUVVOeVF6RkNMRVZCUVZNc1YwRkhWSGwwUXl4RlFVRmxNWFJETEVsQlEyaENNamxDTEVWQlFWRXhXQ3hSUVVGVmRHdENMRWxCUVZjeFFpeFBRVUZUTEVsQlEzWkRhMjFDTEVWQlFWbHNiVUlzVDBGQlV5eExRVU53UW10dFFpeEpRVUZuUWpsc1FpeEhRVUZuUW1Nc1IwRkJaVkVzU1VGQlZ6RkNMRTlCUVZNc1MwRkRia1V3T1VJc1JVRkJVWHBZTEZWQlFWbDJhMElzU1VGQlZ6RkNMRTlCUVZNc1MwRkRla01zUzBGTlJUQjBReXhGUVVGWkxHdENRVU5pZW5wQ0xFZEJRV1Z3VkN4TFFVRkxOakpDTEVWQlFWTXNZMEZEZWtKQkxFVkJRVkZuVVN4VlFVRlpMRWxCUVVsNmFrTXNVVUZCVVN4TlFVRlBMRXRCUTNaRExEWkNRVUVyUW5aSExFZEJRVzFDTEV0QlEyNUVMRXRCUlU1dlJ5eEZRVUZQUnl4UlFVRlJkMnBETEVWQlFXTXNVMEZCVTNJeFFpeEZRVUZQZFRGQ0xFVkJRV0ZETEVWQlFXdENReXhGUVVGcFFrTXNSVUZCWlRGc1F5eEhRWE5DTVVjc1QwRnlRa0YzYkVNc1NVRkJjVUpCTEVWQlFXMUNReXhIUVVkNFF6ZDBReXhIUVVGVk9Fb3NSVUZCVDBNc1RVRkJUVFZETEVWQlFVOXBRaXhIUVVGUk5rSXNVVUZCVVhSSkxFZEJRVzFDY1ZZc1NVRkhOMFF5TWtJc1NVRkRSazRzUjBGQllTeEZRVU5pY25SRExFZEJRVlVzV1VGQll6SjBReXhGUVVGakxGVkJSWEJEUnl4SlFVTkdVaXhIUVVGbExFVkJRMlowZEVNc1IwRkJWU3hQUVVGVE9IUkRMRVZCUVdkQ0xHVkJSV3BEUml4SlFVTkdOWFJETEVkQlFWVXNhVUpCUVcxQ05IUkRMRVZCUVcxQ0xDdENRVVZzUkhwdFF5eEZRVUZSYVVJc1JVRkJVMmRSTEVWQlFVMTRVaXhQUVVsb1FuZFNMRWxCUjFSd1dTeEhRVUZWTEU5QlNWWXNTVUZCU1cxdFFpeEZRVUZYYkUwc1IwRkJaWEJVTEV0QlFVczJNa0lzUlVGQlV5eGhRVUZsUVN4RlFVRlJkbGdzVTBGRGJrVXNSMEZCUzBFc1IwRkxRU3hIUVVGSmJteENMRWRCUVRKQ2JWY3NTMEZCUzJkUUxFZEJRM1pETEUxQlFVMHNTVUZCU1RkTkxFZEJRVTA1WkN4UlFVeG9RbmRGTEVWQlFWTXNhVUpCUVcxQ1FTeEZRVUZUTEZGQlUzWkRRU3hIUVVGVmMzUkRMRVZCUVdWMGRFTXNSVUZCVDJsTExGRkJRVkY0U3l4SFFVRnpRaXhKUVVGTlR5eEhRVU5xUldsTExGRkJRVkYyU3l4SFFVRnhRaXhOUVVNM1FuVkxMRkZCUVZGMFN5eEhRVUYxUWl4UFFVZHNRMHNzUlVGQlV5eGhRVUZsYlcxQ0xFZEJRVmtzVDBGQlV5eFRRVU14UTBFc1JVRkRSeXhIUVVOQkxIZENRVVZLTEhGQ1FVTkRhMjVDTEVWQlEwa3NiVUpCUTBFc1MwRkZTa01zUlVGRFJ5eDFSa0ZGUVN4UFFVVktkSFJETEVWQlEwRXNaMEpCUlVZc1NVRkJTVEpJTEVWQlFWTnROMElzUjBGQlVTeFhRVU51UWl4UFFVRlBhQ3RDTEVkQlFWTjViME1zUlVGQllVY3NSVUZCV1N4VlFVRlpNWFJETEVkQlEyeEVkMGNzVFVGQlRYQk1MRVZCUVZkdmVVTXNTMEZOZEVJc1IwRkVRVGRzUXl4RlFVRlBNMGdzVDBGQlUwRXNSVUZEV2pndlFpeEhRVUZSYmpSQ0xFZEJRMVlzVFVGQlRVRXNSVUZGVWl4UFFVRlBRU3hIUVRRMlJGUm5XQ3hIUVVGUGIzWkNMRTFCY0hOQ1VDeFRRVUZsYm10RExFVkJRVWN6UXl4SFFVVm9RaXhKUVVSQk1rTXNSVUZCU1c5MVFpeEhRVUZWY0hWQ0xFbEJRMDRzUjBGQlMwRXNSVUZCU1RGTkxFVkJRMllzVTBGRlJpeEpRVUZKYVVzc1JVRkJVVGxLTEVWQlExSjFTaXhGUVVGVGNWY3NSMEZCVlhKVUxFVkJRVWQyVFN4SFFVVXhRalJLTEVWQlFWZDNiVUlzUjBGQldYaHRRaXhIUVVOMlFqSkRMRWRCUVV0MlRTeEZRVWRNTEVsQlJFRXNTVUZCU1hOTExFVkJRVk5uUXl4SFFVRlZMME1zUlVGQlVVc3NTMEZEZEVKRkxFVkJRVkY1UXl4SFFVTm1NME1zUlVGQlUwVXNSMEZGV0N4UFFVRlBVU3hIUVhOeVFsUm5XQ3hIUVVGUE1Ga3NVMEZCVjBFc1IwRkRiRUl4V1N4SFFVRlBjVm9zVlVGQldVRXNSMEZEYmtKeVdpeEhRVUZQT0doQ0xGTkJRVmRCTEVkQlEyeENPV2hDTEVkQlFVOXhka0lzVVVGNE5VUlFMRk5CUVdsQ05XMURMRWRCUTJZc1QwRkJUelJUTEVkQlFWTTFVeXhIUVVGUE5EWkNMR1ZCZHpWRWVrSnlha0lzUjBGQlR6WlpMRk5CUVZkQkxFZEJRMnhDTjFrc1IwRkJUM04yUWl4alFYQjFTVkFzVTBGQmRVSTNiVU1zUjBGRGNrSXNUMEZCVDBFc1JVRkRTSFZoTEVkQlFWVnhWeXhIUVVGVk5YZENMRWxCUVZOc1N5eEZRVUZyUWtFc1IwRkRjRU1zU1VGQlZtdExMRVZCUVdOQkxFVkJRVkVzUjBGcmRVazNRblZZTEVkQlFVOHpSU3hUUVVGWFFTeEhRVU5zUWpKRkxFZEJRVTkxZGtJc1VVRnVORVJRTEZOQlFXbENPVzFETEVkQlEyWXNUMEZCVHpSVExFZEJRVk0xVXl4SFFVRlBjVGRDTEdWQmJUUkVla0k1YWtJc1IwRkJUM2QyUWl4TFFURXlSRkFzVTBGQlkzSnJReXhGUVVGUmJYUkNMRVZCUVU5MFJDeEhRVVV6UWl4SlFVUkJOM0JDTEVWQlFWTnJVU3hIUVVGVGJGRXNUVUZEU0Rad1FpeEhRVUZUYzBRc1NVRkJWVGMzUWl4SFFVTm9ReXhQUVVGUGVVOHNSMEZCVTBNc1IwRkZiRUlzU1VGQlMwRXNTMEZCV1cxMFFpeEZRVUZSY2tjc1IwRkJZWEZITEVsQlEzQkRMRTlCUVU5dWRFSXNSVUZGVkN4SlFVRkpWeXhGUVVGaE1FNHNSMEZCWTNKUExFZEJRek5DV1N4RlFVRmhlVTRzUjBGQll6aGxMRWRCU1M5Q0xFOUJRVTlzUml4SFFVRlZkRzVDTEVWQlNFeEVMRWRCUVdkQ1F5eEZRVUZaUXl4SFFVTTVRa01zUjBGQlkwWXNSVUZCV1VNc1IwRkJZeXhIUVVWVU1VZ3NTMEZCU3l4TFFUZ3hSR2hFTW1Jc1IwRkJUM2wyUWl4UlFYZ3dSRkFzVTBGQmFVSjBhME1zUlVGQlVXMTBRaXhGUVVGUGRFUXNSMEZGT1VJc1NVRkVRVGR3UWl4RlFVRlRhMUVzUjBGQlUyeFJMRTFCUTBnMmNFSXNSMEZCVTNORUxFbEJRVlUzTjBJc1IwRkRhRU1zVDBGQlR6QlBMRVZCUVU5RExFMUJRVTBzUlVGQlIwTXNSMEZCWjBKR0xFZEJRVlVzUjBGRmJrUXNTVUZCUzBFc1MwRkJXVzEwUWl4RlFVRlJja2NzUjBGQllYRkhMRWxCUTNCRExFOUJRVTl1ZEVJc1JVRkZWQ3hKUVVGSlZ5eEZRVUZoTUU0c1IwRkJZM0pQTEVkQlJ5OUNMRTlCUVU5cGIwSXNSMEZCVlhSdVFpeEZRVUZaTEVWQlJtNUNSU3hIUVVGalJpeEZRVUZaTUU0c1IwRkJZemhsTEVsQlFWVXNSMEZGZGtKcU1FSXNTMEZCU3l4TFFUaDZSRFZETW1Jc1IwRkJUekIyUWl4VlFYaDVSRkFzVTBGQmJVSjJhME1zUlVGQlVXMTBRaXhGUVVGUGRFUXNSMEZGYUVNc1NVRkVRVGR3UWl4RlFVRlRhMUVzUjBGQlUyeFJMRTFCUTBnMmNFSXNSMEZCVTNORUxFbEJRVlUzTjBJc1IwRkRhRU1zVDBGQlR6QlBMRVZCUVU5SExGRkJRVkYyU2l4SFFVRmhMRWxCUlhKRExFbEJRVXR2U2l4TFFVRlpiWFJDTEVWQlFWRnlSeXhIUVVGaGNVY3NTVUZEY0VNc1QwRkJUMjUwUWl4RlFVVlVMRWxCUVVsWExFVkJRV0V3VGl4SFFVRmpjazhzUjBGSEwwSXNUMEZCVDJsdlFpeEhRVUZWZEc1Q0xFVkJSa3hFTEVkQlFXZENReXhGUVVGWk1FNHNSMEZCWXpobExFdEJSV3hDYWpCQ0xFdEJRVXNzUzBFNGVFUXpRekppTEVkQlFVOHlka0lzVTBGMGRrUlFMRk5CUVd0Q2VHdERMRVZCUVZFMGVrSXNSMEZEZUVJc1NVRkJTVGt5UWl4RlFVRlRha3NzUlVGRFZEUjRReXhGUVVGWE0zaERMRVZCUldZc1IwRkJTWFZwUWl4SFFVRlRkV1VzUjBGQlZTeERRVU55UWl4SlFVRkpOa29zUlVGQldTeGpRVUZsTjBvc1JVRkJWVUVzUlVGQlVUWktMRlZCUVZsQkxFVkJRemRFTTJkRExFVkJRVk1zVjBGQldUZ3lRaXhGUVVGVk1VWXNSMEZCVlRCR0xFVkJRVkU1TWtJc1VVRkJWVUVzUlVGRE0wUXlia01zUlVGQlZ5eGhRVUZqTjFFc1JVRkJWVGxOTEVkQlFXRTRUU3hGUVVGUk5sRXNWVUZCV1VFc1JVRkpkRVVzU1VGQlNYaERMRWRCUmtwcWFVTXNSVUZCVTJ0UkxFZEJRVk5zVVN4SlFVVkxiRVFzVDBGRGRrSXNSMEZCU1hOUkxFZEJRVmR3VGl4SFFVRlRMRU5CUTNSQ0xFbEJRVWxYTEVWQlFXRXdUaXhIUVVGamNrOHNSMEZETDBKcGFVTXNSVUZCV1hSb1F5eEZRVUZYTjBRc1QwRkZla0lzUjBGQlNVRXNSMEZCVlcxc1F5eEZRVU5hTEU5QlFVOXFhVU1zUlVGRlZDeEpRVUZKTW14Q0xFVkJRVTAzYjBJc1JVRkJVMjlTTEVkQlFWZDFNa0lzUjBGRE9VSXNSMEZCU1RsbExFVkJRVTBzUlVGRFVpeFBRVUZQT0dVc1JVRkZWQ3hKUVVGSk5XMURMRVZCUVZNNFF5eEZRVU5VYzI1Q0xFZEJRVlYwYmtJc1JVRkJXU3hGUVVGSFoyeENMRWRCUVV0NmMwSXNTMEZCU3l4SlFVTnVRemhITEVWQlFVOURMRTFCUVUwc1JVRkJSekJzUWl4SFFVVndRaXhIUVVGSk9GZ3NTVUZCWTI1elF5eEZRVU5vUWl4UFFVRlBkVTBzUlVGQlV6UnRReXhGUVV0c1FpeEhRVWhKT1dwRExFbEJRMFpuYkVJc1IwRkJVVGx1UWl4RlFVRlBaaXhQUVVGVE5tOUNMRWRCUlhSQ2RIQkNMRWRCUVZOdmFFTXNTVUZEV0N4SFFVRkplamxDTEVWQlFVOURMRTFCUVUwd2JFSXNSMEZCU3l0bExFOUJRVTlxU0N4SFFVRlpMRU5CUTNaRExFbEJRVWx1ZGtJc1JVRkRRWEV5UWl4RlFVRlpPVzFETEVWQlRXaENMRWxCU2tzMEwwSXNSVUZCVlRscFF5eFRRVU5pT0dsRExFVkJRVmw0YmtNc1IwRkJUM2R1UXl4RlFVRlZkbTVETEU5QlFWRm5ZU3hIUVVGVE4xa3NSMEZCVVdsYUxFdEJRVXR0ZEVJc1NVRkJZeXhOUVVVelJVRXNSVUZCVlhSMlFpeFZRVUZaTEVWQlEyUkhMRVZCUVZGdGRrSXNSVUZCVlc1MFFpeExRVUZMY1RCQ0xFbEJRemRDTEVsQlFVbERMRVZCUVZOME1rSXNSVUZCVFdwU0xFMUJSWEpDVVN4RlFVRlRRU3hGUVVGUGIwTXNUVUZCVFN4RlFVRkhNbXRETEVsQlFWZDBla01zUlVGQldYRXdRaXhGUVVGTmFXWXNVMEZGYmtRc1IwRkJTVFZyUXl4RlFVRlBlV3RDTEZGQlFWRnhReXhIUVVGaE1sY3NSMEZCV1RsWUxFbEJRVkZCTEVWQlFVc3NRMEZET1VRc1NVRkJTWFJ2UWl4RlFVRlJVU3hGUVVGUGQycERMRmxCUVZrMVJDeEhRVU16UW5CblF5eEhRVUZUTEVsQlExaFJMRVZCUVZOQkxFVkJRVTl2UXl4TlFVRk5MRVZCUVVjMVF5eEpRVWMzUWl4UFFVRlBVU3hGUVVGVE5HMURMRWRCYTNORWJFSTFka0lzUjBGQlQyZDNRaXhUUVRWeFJGQXNVMEZCYTBJM2EwTXNSMEZGYUVJc1QwRkVRVUVzUlVGQlUydFJMRWRCUVZOc1VTeExRVU5CYUVzc1IwRkJhVUp4V0N4TFFVRkxjazRzUjBGRGNFTkJMRVZCUVU5SExGRkJRVkZ5U3l4SFFVRmxObGtzU1VGRE9VSXpUeXhIUVhseFJFNDJWU3hIUVVGUGFYZENMRk5CZG5CQ1VDeFRRVUZyUWtNc1IwRkRhRUlzU1VGQlNUZGpMRWxCUVU4NVdDeEhRVU5ZTEU5QlFVOUdMRWRCUVZNMk1FSXNSMEZCVlRkakxFZEJjM0JDTlVKeVZDeEhRVUZQTm1wQ0xGVkJRVmxCTEVkQlEyNUNOMnBDTEVkQlFVOTFha0lzVjBGQllVRXNSMEZIY0VKMmFrSXNSMEZCVDIxM1FpeExRVUZQZGpOQ0xFZEJRMlJ2U0N4SFFVRlBiM2RDTEZWQlFWa3ZVaXhIUVVOdVFuSmxMRWRCUVU5eGQwSXNUVUZCVVRGVUxFZEJSV1lyU0N4SFFVRk5NV3RDTEVsQlEwRXpaU3hOUVVOS01HMUNMRWRCUVZjdlNDeEhRVUZSTEZOQlFWTnNXU3hGUVVGTmMzUkNMRWRCUXpOQ09Wb3NSMEZCWlhCVUxFdEJRVXM0V0N4SFFVRlBhRVlzVlVGQlYyOWhMRXRCUTNwREwzcENMRWRCUVU4cmVrSXNSMEZCWTNSMFFpeExRVWRzUW5wSExFdEJRMFF3T0VJc1QwRkJVeXhKUVZkcVFpOWtMRWRCUVU5emQwSXNVVUV2YVdoQ1N5eFZRV3RxYUVKYU5XNURMRWxCUVZjc1QwRkJVU3hWUVVGWExGRkJRVk1zWVVGQll5eFZRVUZYTEdkQ1FVRnBRaXhUUVVGVE1ITkNMRWRCUTNoR2NGWXNSMEZCVDI5V0xFZEJRVmx1WXl4WlFVRmpLMGNzUzBGSmJrTjBXQ3hKUVVGWExFOUJRVkVzVVVGQlV5eFRRVUZUTUhOQ0xFVkJRVmsxYzBJc1IwRkRMME15V0N4SFFVRlpia1lzVlVGQlZXOWhMRWRCUVdNc1UwRkJVMjV4UWl4SFFVTXpRMEVzUlVGQlNVRXNTVUZCVFhoUExFVkJRVmtzUlVGQlNUSm9RaXhIUVVGVmFXSXNSMEZCVlhCMVFpeEhRVUZKTEVkQlJXeEVMRWxCUVVscVF5eEZRVUZWTWxnc1MwRkJTMDhzWlVGQmFVSXhXU3hGUVVOb1F5eEpRVUZKTWxnc1IwRkJXVkVzVFVGRGFFSkJMRXRCUVVzd1lpeFJRVlZVTEU5QlVrbHlla0lzUlVGQlQydFpMR0ZCUTFSc1dTeEZRVUZQYjFrc1kwRkJaMEk1UXl4SFFVRlZjbFFzUlVGQlIycERMRVZCUVU5dldTeGxRVVV6UTNCWkxFVkJRVTl4V1N4VlFVRlZjVUlzVFVGRFppOUtMRXRCUVZFeVJpeEhRVUZWY2xRc1JVRkJSM1pOTEVkQlEzSkNLemRDTEV0QlFWRnlSaXhIUVVGamNITkNMRVZCUVU5cFdTeFJRVUZWTEVWQlFVa3NVVUZCVlN4TlFVZHNSR3BaTEVkQlIxUnRXQ3hIUVVGWmJrWXNWVUZCVlc5aExFVkJRV0VzVTBGQlZ5eFRRVUZUYm5GQ0xFZEJRM0pFTEU5QlFVOHdWaXhMUVVGTE9VSXNWVUZCVlhWWExFZEJRVmx1Y1VJc1IwRkJSelJVTEdGQlMzcERibGNzU1VGQlZ5eFRRVUZWTEUxQlFVOHNZVUZCWXl4VFFVRlRNSE5DTEVWQlFWazFjMElzUjBGRE4wUXNTVUZCU1dsNVFpeEZRVUZQYW5sQ0xFVkJRVkVzUlVGRFppdHVReXhGUVVGWE9WWXNSMEZCVVhJNFFpeEhRUzlvYUVKTUxFZEJLMmhvUW5sQ2NUaENMRVZCUlRORGRHRXNSMEZCV1c1R0xGVkJRVlZ2WVN4SFFVRmpMRk5CUVZNNWMwSXNSMEZETTBNc1NVRkJTVlVzUlVGQlV6SllMRXRCUVVzd1lpeFJRVTFzUWl4UFFVeEJjbnBDTEVWQlFVOXRXU3hqUVVGamRVSXNUVUZEYmtKd1lTeFRRVUZaZDIxQ0xFZEJRVmw0YlVJc1JVRkJWU3hIUVVOc1EyMTVRaXhMUVVGUlFTeEpRVVZXZW5oQ0xFVkJRVTlyV1N4aFFVRmxiRmtzUlVGQlQydFpMR05CUVdkQ2NYWkNMRVZCUTNSRGRtNURMRXRCUzFoT0xFbEJRVmNzVDBGQlVTeFJRVUZUTEZOQlFWTXdjMElzUlVGQldUVnpRaXhIUVVNdlF5eEpRVUZKWjI5RExFVkJRVmNzVVVGQlZXaHZReXhGUVVGUkxGRkJRVlVzU1VGRk0wTXlXQ3hIUVVGWmJrWXNWVUZCVlc5aExFZEJRV01zVjBGRGJFTXNUMEZCVDNwVkxFdEJRVXMyZGtJc1IwRkJWU3hIUVVGSEwyNURMRkZCUVZFc1RVRkxja05ETEVsQlFWY3NWVUZCVnl4UlFVRlRMRk5CUVZNd2MwSXNSVUZCV1RWelFpeEhRVU5zUkN4SlFVRkphVzlETEVWQlFWY3NVVUZCVldwdlF5eEZRVUZSTEVkQlFVc3NVMEZGZEVNeVdDeEhRVUZaYmtZc1ZVRkJWVzloTEVkQlFXTXNWMEZEYkVNc1QwRkJUM3BWTEV0QlFVdFBMR0ZCUVdVc1NVRkJTV1lzUjBGQldWRXNUVUZCVVVFc1MwRkJTemgyUWl4SFFVRlZMRTFCU1hSRmRIZENMRWRCUVZsdVJpeFZRVUZWWjNKQ0xGRkJRVlVzVjBGRE9VSXNUMEZCVDNKc1FpeExRVUZMYlcxQ0xFOUJRVTh2V2l4TFFVZHlRalZOTEVkQlFWbHVSaXhWUVVGVmJXcENMRXRCUVU4c1UwRkJVM1F4UWl4SFFVTndReXhQUVVGUE9GZ3NTMEZCUzIxdFFpeFBRVUZQYWl0Q0xFZEJRVmM0ZWtJc1VVRkhhRU40WXl4SFFVRlpia1lzVlVGQlZXOXFRaXhUUVVGWExGTkJRVk4yTVVJc1IwRkRlRU1zVDBGQlR6aFlMRXRCUVVzNVFpeFZRVUZWYzJZc1MwRkJTM1F4UWl4SlFVYzNRbk5ZTEVkQlFWbHVSaXhWUVVGVmRXcENMRlZCUVZseVR5eEhRVUZUTEZOQlFWTnNTQ3hGUVVGTmFHaENMRWRCUTNoRUxFMUJRVzFDTEcxQ1FVRlNaMmhDTEVWQlEwWXNTVUZCU1RkSkxFZEJRVmxSTEUxQlJXeENRU3hMUVVGTGFra3NTVUZCU1N4VFFVRlRhbEVzUjBGRGRrSXNUMEZCVHpob1FpeEhRVUZYT1doQ0xFVkJRVTkxWjBJc1JVRkJUV2hvUWl4UFFVbHVRMjFaTEVkQlFWbHVSaXhWUVVGVmIzUkNMRTlCUVZNc1UwRkJVM1l2UWl4SFFVTjBReXhQUVVGUE9GZ3NTMEZCUzIxdFFpeFBRVUZQY0Vjc1IwRkJUelZTTEVkQlFWbHFiVUlzVFVGSGVFTnpXQ3hIUVVGWmJrWXNWVUZCVlRWUUxFMUJRVkVzVTBGQlV5dHJRaXhGUVVGUFZ5eEhRVU0xUTFnc1JVRkJVV3RLTEVkQlFWVnNTaXhIUVVWc1FpeEpRVUZKYm01Q0xFVkJRVk15V0N4TFFVTmlMRTlCUVVreldDeEZRVUZQYTFrc1pVRkJhVUpwVUN4RlFVRlJMRWRCUVV0WExFVkJRVTBzUjBGRGRFTXNTVUZCU1ROUkxFZEJRVmx1V0N4SlFVVnlRbTF1UWl4RlFVRlJMRVZCUTFadWJrSXNSVUZCVTBFc1JVRkJUMmxuUXl4WFFVRlhPVmtzUjBGRGJFSkJMRWxCUTFSdWJrSXNSVUZCVTBFc1JVRkJUM2M1UWl4TFFVRkxjbGNzU1VGRmJrSlhMRWxCUVZGeU1FSXNTVUZGVm5WTkxFZEJSRUU0YmtJc1JVRkJUWFZKTEVkQlFWVjJTU3hKUVVORUxFVkJRVWs1YmtJc1JVRkJUM2s1UWl4WFFVRlhNMVlzUjBGQlR6bHVRaXhGUVVGUFoyZERMRXRCUVV0c1dTeEZRVUZOV0N4SlFVVjZSRzV1UWl4SlFVZFViVmdzUjBGQldXNUdMRlZCUVZWcmRVSXNaVUZCYVVJc1UwRkJVM0puUXl4SFFVTTVReXhQUVVGUE9GZ3NTMEZCU3psQ0xGVkJRVlZ6Y1VJc1ZVRkJWWFJuUXl4SFFVRlhaMWNzVjBGSE4wTnpRaXhIUVVGWmJrWXNWVUZCVlhsdFFpeFJRVUZWTEZkQlF6bENMRTlCUVU4NVowSXNTMEZCUzNGdlFpeExRVUZMZEhGRExFbEJTVzVDY1hCQ0xFZEJRVmMxU0N4SFFVRlpia1lzVlVGQlZ5eFRRVUZUYkZRc1JVRkJUWE4wUWl4SFFVTXZReXhKUVVGSmMySXNSVUZCWjBJc2NVTkJRWEZEYkRSQ0xFdEJRVXMwWXl4SFFVTXhSSFZpTEVWQlFWVXNhMEpCUVd0Q2JqUkNMRXRCUVVzMFl5eEhRVU5xUTNkaUxFVkJRV0UxZDBJc1IwRkJUekozUWl4RlFVRlhMRkZCUVhkQ0xGRkJRV1IyWWl4RlFVRjFRaXhSUVVGVkxFbEJRVTlCTEVkQlEycEdlV0lzUlVGQlpVWXNSMEZCVnl4UlFVRlJialJDTEV0QlFVczBZeXhIUVVWMFEzZGlMRWxCUjB3MWQwSXNSMEZCVDJoR0xGVkJRVlZ2WVN4SFFVRmpMRmRCUXpkQ0xFbEJRVWt6YzBJc1JVRkJVV3RaTEV0QlFVdERMRmxCUTJJMVdTeEZRVUZQTW05RExFZEJRVmNzUjBGQlMyaGlMRlZCUTNaQ2JXSXNSVUZCVTNKdlF5eGhRVUZwUWpCWUxFZEJRekZDTjFnc1JVRkJWMDRzUlVGQlN5eEhRVU5vUWl0dlF5eEZRVUZWUkN4SFFVRlZOWGRDTEVkQlFWRjZXQ3hIUVVVMVFuVXhRaXhGUVVGakxGTkJRVk4yTVVJc1IwRkRla0lzU1VGQlNVOHNSVUZCVXpSdVF5eEZRVUZYTDI5RExFMUJRVTF0V1N4SFFVRlJlbGNzU1VGQlYyUXNSMEZCVVZRc1NVRkRla1FzVDBGQlVUSnZReXhIUVVGWGFuZENMRVZCUVZreFdDeEZRVUZQTEVkQlFVdEJMRWRCUjNwREsyNURMRWRCUVZkTUxFZEJRVzlETEcxQ1FVRmFjRzlETEVkQlFUWkRMRWRCUVc1Q1FTeEZRVUZUVEN4VFFVVjRSVFp2UXl4RlFVRlRReXhIUVVGVkxFZEJSWEpDTEVsQlFVbHlkMElzUlVGQlYwTXNTMEZCUzBjc1ZVRkRhRUpyZDBJc1NVRkJZWEozUWl4TFFVRkxSU3haUVVGWk5Wa3NUMEZET1VKbmNFTXNSVUZCWTBvc1NVRkJhVUp1ZDBJc1JVRkRMMEozZDBJc1JVRkJWMG9zU1VGQlYwVXNSVUZGTVVJc1NVRkJTMGdzUjBGQlowSkZMRVZCUVZNc1EwRkROVUowYjBNc1JVRkJVWGx2UXl4RlFVRlhlbTlETEVWQlFWRXNTVUZCU1RCWUxFZEJRVmxSTEUxQlF6TkRMRWxCUVVreldDeEZRVUZUYkVJc1JVRkJTMFFzVFVGQlRWa3NSVUZCVDFRc1IwRkZMMElzVDBGRVFXZENMRVZCUVU4MldDeFpRVUZaTmtJc1RVRkJUelZoTEV0QlFWRnhkVUlzUjBGQlRXNTFRaXhOUVVGVFp6SkNMRWRCUVdOcU1rSXNVVUZCVjNSTUxFbEJRMjVGTEVsQlFVa3lha0lzUjBGQlkzQllMRVZCUVZFd1dDeEhRVVZ1UXl4UFFVRkpkWGRDTEVkQlFXVkRMRVZCUTFad2NFTXNSVUZCUzBRc1RVRkJUVGhaTEV0QlFVMHpXU3hKUVVVeFFtZENMRVZCUVZNeVdDeExRVUZMZDFZc1MwRkJTelpJTEVkQlExcHBWQ3hGUVVGbFRpeEZRVUZWTTI1RExFVkJRVTlRTEZGQlFWRXNSMEZCUzA4c1JVRkJUMUFzVVVGQlYwOHNUMEZMTVVWT0xFbEJRVmNzVFVGQlR5eFBRVUZSTEZGQlFWTXNUMEZCVVN4VFFVRlZMRmRCUVZrc1UwRkJVekJ6UWl4SFFVTjRSU3hKUVVGSmRIUkNMRVZCUVU5cFZDeEhRVUZYY1dFc1IwRkRiRUlyWWl4RlFVRlpMREJDUVVFd1FqTTBRaXhMUVVGTE5HTXNSMEZCWXl4TlFVRlJMRTlCUTJwRmVXSXNSVUZCWlN4clFrRkJhMEp5TkVJc1MwRkJTelJqTEVkQlJURkRjRllzUjBGQlQyaEdMRlZCUVZWdllTeEhRVUZqTEZkQlF6ZENMRWxCUVVsd2RFSXNSVUZCVHpKMFFpeFZRVU5ZTEVkQlFVbHJZaXhKUVVGcFFteDNRaXhMUVVGTFJ5eFZRVUZYTEVOQlEyNURMRWxCUVVseVdTeEZRVUZSYTFrc1MwRkJTMnhaTEZGQlEycENMRTlCUVU5WUxFVkJRVXRFTEUxQlFVMXhXU3hIUVVGUmVsZ3NSMEZCVTBFc1MwRkJXVlFzUjBGRmFrUXNUMEZCVHpKWkxFdEJRVXQzZDBJc1IwRkJWeXhUUVVGVE1XOURMRWRCUXpsQ0xFOUJRVTlZTEVWQlFVdEVMRTFCUVUxeFdTeEhRVUZSZWxnc1IwRkJVMEVzUzBGQldWUXNVVUZOY2tRclppeEhRVUZYTlVnc1IwRkJXVzVHTEZWQlFWY3NVMEZCVTJ4VUxFVkJRVTF6ZEVJc1IwRkRMME1zU1VGQlNYZGlMRVZCUVdFMWQwSXNSMEZCVDI5V0xFZEJRM2hDTEVkQlFVbDNZaXhGUVVGWkxFTkJRMlFzU1VGQlNYcHRReXhGUVVGTmVXMURMRVZCUVZkMmJFSXNTMEZCVHl4SFFVTjJRaTlRTEVkQlFXVndWQ3hMUVVGTGJWZ3NSMEZCVjJ4V0xFdEJRMnhEYTFZc1IwRkJWV3hXTEU5QlJWcHJWaXhIUVVGVmJGWXNSMEZCUzNWWkxFMUJRVTh5U1N4TFFVRlJLMG9zUlVGQldYUjBRaXhMUVVGUk9HOURMRTlCU1hSRWRuaENMRWRCUVZWeFdDeEhRVUZoYWpaQ0xFVkJRVmRqTEVkQlFXOUNPSFJDTEZGQlEzQkVRU3hMUVVGUkxGVkJRMUoyYWtJc1MwRkJVWEpNTEVsQlNWWXdha0lzUjBGQldXNUdMRlZCUVZWeGFFSXNUVUZvT1dSMFFpeFhRVU5GTEVsQlFVbHlla0lzUlVGQlV5eEpRVUZKYlZnc1IwRkJXVkVzUzBGQlMwTXNZVUZQYkVNc1QwRk9RVFZZTEVWQlFVODJXQ3haUVVGamEwTXNSMEZCVlhCRExFdEJRVXRGTEdGQlEzQkROMWdzUlVGQlQybFpMRkZCUVZWT0xFdEJRVXROTEZGQlEzUkNhbGtzUlVGQlQydFpMR0ZCUVdWUUxFdEJRVXRQTEdGQlF6TkNiRmtzUlVGQlQyMVpMR05CUVdkQ05FSXNSMEZCVlhCRExFdEJRVXRSTEdWQlEzUkRibGtzUlVGQlQyOVpMR05CUVdkQ1ZDeExRVUZMVXl4alFVTTFRbkJaTEVWQlFVOXhXU3hWUVVGWk1FSXNSMEZCVlhCRExFdEJRVXRWTEZkQlF6TkNjbGtzUjBGNU9HUlViVmdzUjBGQldXNUdMRlZCUVZVMlJDeFJRVGszWkhSQ0xGZEJRMFVzUjBGQlNUaENMRXRCUVV0UExHRkJRV01zUTBGRGNrSXNTVUZCU1d4WkxFVkJRVk1zU1VGQlNXMVlMRWRCUVZsUkxFMUJRemRDTTFnc1JVRkJUMmxaTEZOQlFWY3NSVUZEYkVKcVdTeEZRVUZQYTFrc1kwRkJaU3hQUVVWMFFteFpMRVZCUVZNeVdDeExRVUZMTUdJc1UwRkRVSEJpTEZWQlFWa3NSVUZGY2tJc1QwRkJUMnBaTEVkQmN6ZGtWRzFZTEVkQlFWbHVSaXhWUVVGVmRsTXNUVUV6Tm1SMFFpeFhRVU5GTEVsQlFVbE1MRVZCUVZGMVdTeExRVUZMUXl4WlFVRlpibGtzVVVGRGVrSXliME1zUlVGQlRYcDNRaXhMUVVGTFRTeFJRVU5ZYTBJc1JVRkJVV3BETEVkQlFWRTVXQ3hIUVVOb1FtbHdReXhGUVVGVlJDeEZRVUZOTEVWQlEyaENNVm9zUlVGQldYWldMRVZCUVZFdldpeEZRVUZOU0N4UFFVRlRMRVZCUTI1RGNYQkRMRVZCT0hCSlRpeFRRVUZwUW01b1FpeEZRVUZQVnl4RlFVRkxPRkFzUjBGSk0wSXNTVUZJUVN4SlFVRkpjRFJDTEVkQlFWTXNSVUZEVkZBc1JVRkJVekkwUWl4RlFVRlhNelJDTEZOQlJXWlBMRVZCUVZGUUxFZEJRVkVzUTBGRGRrSXNTVUZCU1N0YUxFVkJRVTgwWlN4RlFVRlhjRFJDTEVkQlEyeENiVkVzUlVGQlQzRktMRVZCUVV0eVNpeExRVVZvUWl4UFFVRlJjVW9zUlVGQlMzbFpMRTFCUTFnc1NVRkJTeXhQUVVGaGRFc3NSMEZCVTNoWUxFVkJRVTBzVFVGRGFrTXNTVUZCU3l4WlFVRmhiVmtzUjBGQlQyNVpMRVZCUVUwc1RVRkRMMElzU1VGQlN5eFBRVUZoYlZrc1JVRkJUWGhUTEVkQlFWVjNVeXhGUVVGTFdDeEZRVUZSZUZnc1IwRkJUeXhOUVVOMFJDeEpRVUZMTEZsQlFXRjNXQ3hGUVVGUkwxSXNSMEZCVlN0U0xFVkJRVTlYTEVWQlFVMXVXU3hKUVVkeVJDeFBRVUZUZDFnc1RVRkJVMEVzUlVGQlQxY3NTVUZCVDBFc1IwRTNjVWx5UW5sblFpeERRVUZSTEVWQlFVYzNXaXhGUVVGWEwxY3NTMEZCUzFVc1YwRkRiRU00VHl4RlFVRlJiV2hDTEVWQlFVdHVhRUlzVFVGRFlsY3NSVUZCVFhkblFpeEZRVUZMZUdkQ0xFbEJRMWczYjBJc1JVRkJVelp2UWl4RlFVRk5XQ3hGUVVObU0yNUNMRVZCUVZFMmIwTXNSVUZCVlhablFpeEZRVUZQV0N4RlFVRlJMRVZCUTJwRGRrSXNSVUZCV1dwUExFdEJRVXRSTEdOQlEycENjWGRDTEVWQlFXRTFhVUlzUlVGQlZUTnRRaXhQUVVOMlFtTXNSVUZCVnl4RlFVTllNRzlETEVWQlFWbHVla0lzUjBGQlZYSlhMRVZCUVZFd1dTeExRVUZMVXl4bFFVVjJReXhKUVVGTFpTeEpRVUZYYTNaQ0xFZEJRVmN6V2l4SFFVRmhlblpDTEVkQlFWVjNjRU1zUjBGQllYaHdReXhGUVVNM1JDeFBRVUZQZDNGQ0xFZEJRV2xDY25GQ0xFVkJRVTkxV1N4TFFVRkxSU3hoUVVWMFF5eEpRVUZKTjFnc1MwRkZTbWxsTEVWQlEwRXNTMEZCVDJobUxFdEJRVmxqTEVWQlFWY3diME1zUjBGQlZ5eERRVTEyUXl4SlFVaEJMRWxCUVVsRExFZEJRV0VzUlVGRFltcHdReXhGUVVGUlRDeEZRVWhhU1N4SFFVRlRORzlETEV0QlMwRk5MRVZCUVZsR0xFZEJRVmtzUTBGREwwSXNTVUZCU1hoMlFpeEZRVUZQTkUwc1JVRkJWVGhwUWl4SFFVTnFRbkJ3UXl4RlFVRlhNRm9zUlVGQlN6RmFMRk5CUTJoQ2JYbENMRVZCUVU5NldTeEZRVUZMZVZrc1MwRkRXblpVTEVWQlFWYzFaU3hGUVVGVFJ5eEhRVVY0UWl4SFFVRkpaM2xDTEVkQlFWRndPRUlzUlVGRFZtOUxMRVZCUVZGNVpTeFBRVU5JTEVsQlFVdEJMRVZCUVZVc1EwRkRjRUlzUjBGQlNYVlVMRWRCUVZGeU9FSXNSVUZEVml4VFFVRlRObTlDTEVWQlJWUXNUVUZCVFVFc1IwRkpXbXBsTEVWQlFVOUVMRXRCUVdOT0xFVkJSWFpDTEU5QlFVOVBMRWRCWnpSa1ZHZFlMRWRCUVU5b1JpeFZRVUZWYjI1Q0xFZEJRVXR1UlN4SFFVTjBRbXBsTEVkQlFVOW9SaXhWUVVGVksybENMRTFCTVdsUmFrSXNWMEZEUlN4UFFVRlBRU3hIUVVGTmNHUXNUMEV3YVZGbVdDeEhRVUZQYUVZc1ZVRkJWVEl5UWl4UFFUZG5VV3BDTEZkQlEwVXNUMEZCVHl4SlFVRkpkbmhDTEVkQlFXTlBMRXRCUVV0c1dTeFJRVUZUYTFrc1MwRkJTMGNzV1VFMloxRTVRMlFzUjBGQlQyaEdMRlZCUVZVd2JVSXNTMEZ3TDFCcVFpeFhRVU5OTDJkQ0xFdEJRVXRMTEdGQlFXVjJhMElzU1VGRGRFSnJhMElzUzBGQlMwc3NWMEZCWVhsblFpeEhRVUZST1dkQ0xFdEJRVXRzV1N4VlFVVnFReXhKUVVGSmF6VkNMRVZCUVU5b2FFSXNTMEZCUzBrc1YwRkJZVW9zUzBGQlMwc3NWMEZCVnk5WkxFOUJSemRETEU5QlFWTXdOVUlzUzBGQlVVRXNSVUZCVFd3MVFpeE5RVVpZYXpWQ0xFVkJRVTlzYkVNc1JVRkJXV3RyUWl4TFFVRkxTeXhYUVVGWFRDeExRVUZMU1N4bFFXY3ZVSFJFWml4SFFVRlBhRVlzVlVGQlZYbGlMRTFCTnpkUWFrSXNVMEZCYzBKb2RVSXNSMEZKY0VJc1NVRklRU3hKUVVGSlR5eEZRVU5CZDJoQ0xFVkJRVk0zU2l4TFFVVk9Oa29zWVVGQmEwSXZTaXhKUVVGWkxFTkJRMjVETEVsQlFVazBZaXhGUVVGUmFHTXNSMEZCWVcxTExFZEJRM3BDTmxJc1JVRkJUWFJpTEZWQlFWa3NSVUZEYkVKellpeEZRVUZOY21Jc1YwRkJZWFpyUWl4RlFVTm1kVTBzUlVGRFJpdHRRaXhGUVVGVGJsQXNXVUZCWTNsaUxFVkJSWFpDY25wQ0xFVkJRVk54ZWtJc1JVRkZXQ3hKUVVGSmRFMHNSVUZCVjNOTkxFVkJRMlkzVWl4RlFVRlRRU3hGUVVGUE5Vb3NXVUZIYkVJc1QwRkVRVzFRTEVWQlFWTnVVQ3haUVVGamJsa3NSVUZEYUVKUExFZEJOalpRVkdkWUxFZEJRVTlvUml4VlFVRlZOa1FzVVVGME5WQnFRaXhYUVVORkxFbEJRVWx3Vnl4RlFVRlJhMWtzUzBGQlMwTXNXVUZEYWtJc1IwRkJTVzVaTEdGQlFXbENNRmdzUjBGQllTeERRVU5vUXl4SlFVRkplWGhDTEVWQlFWVnVjRU1zUlVGVlpDeFBRVlJKYTFrc1MwRkJTMFVzV1VGQldUVlpMRk5CUTI1Q01uQkRMRVZCUVZVc1NVRkJTWHA0UWl4SFFVRlpVU3hSUVVVMVFtbDRRaXhGUVVGVlFTeEZRVUZSTDNsQ0xGZEJRMVpuUXl4WlFVRlpOa0lzVFVGRGJFSTFZU3hMUVVGUmNYVkNMRWRCUTFKdWRVSXNUVUZCVXpaWExFbEJRMVE1Vnl4UlFVRlhkRXdzU1VGRlRpeEpRVUZKTW1wQ0xFZEJRV04zZUVJc1JVRkJVMnA0UWl4TFFVRkxSeXhYUVVWNlF5eFBRVUZQU0N4TFFVRkxkMVlzUzBGQlMzUllMRXRCZHpSUWJrSnRRaXhIUVVGUGFFWXNWVUZCVlRZeVFpeFBRVUZUTjNoQ0xFZEJRVTlvUml4VlFVRlZPRVVzVVVGQlZVVXNSMEZCVDJoR0xGVkJRVlYyVXl4TlFYWXpVSFJGTEZkQlEwVXNUMEZCVDJkeFFpeEhRVUZwUWpsU0xFdEJRVXRETEZsQlFXRkVMRXRCUVV0RkxHTkJlVE5RYWtSaUxFZEJRVTlvUml4VlFVRlZjVEZDTEUxQlFWRnlkMElzUjBGQlQyaEdMRlZCUVZVeWFFSXNTMEZGZEVNdlppeExRVU5HYjBRc1IwRkJUMmhHTEZWQlFWVTBRaXhKUVdvclVHNUNMRmRCUTBVc1QwRkJUeXRFTEU5QmF5dFFSbGdzUjBGTlJETkdMRWRCUjJFc2JVSkJRVlo1TTBJc1VVRkJOa01zYVVKQlFXUkJMRTlCUVU5RExFdEJRVzFDUkN4UFFVRlBReXhMUVV0NlJUZHlReXhIUVVGTGExVXNSVUZCU1VFc1IwRkpWREF6UWl4UFFVRlBMRmRCUTB3c1QwRkJUekV6UWl4TlFVbEdOMVFzUzBGRlRrRXNSMEZCVjBZc1VVRkJWU3RVTEVsQlFVZEJMRVZCUVVsQkxFZEJSVGRDYUZVc1IwRkJXV2RWTEVWQlFVbEJMRWxCU1doQ2JGVXNSMEZCUzJ0VkxFVkJRVWxCTEV0QlJWaHNVeXhMUVVGTGVWa2lMQ0ptYVd4bElqb2lMMEZ3Y0d4cFkyRjBhVzl1Y3k5d2NtOXFaV04wY3k5amFHVnBiQzkwWVhKblpYUmZYM0JvYjI1bFEyOXVkSEpoWTNSelgxOHlORFV2Ym05a1pWOXRiMlIxYkdWekwyeHZaR0Z6YUM5c2IyUmhjMmd1YW5NaWZRPT0iLCJ2YXIgY2FjaGVkU2V0VGltZW91dCxjYWNoZWRDbGVhclRpbWVvdXQscHJvY2Vzcz1tb2R1bGUuZXhwb3J0cz17fTtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYoY2FjaGVkU2V0VGltZW91dD09PXNldFRpbWVvdXQpcmV0dXJuIHNldFRpbWVvdXQoZSwwKTtpZigoY2FjaGVkU2V0VGltZW91dD09PWRlZmF1bHRTZXRUaW1vdXR8fCFjYWNoZWRTZXRUaW1lb3V0KSYmc2V0VGltZW91dClyZXR1cm4gY2FjaGVkU2V0VGltZW91dD1zZXRUaW1lb3V0LHNldFRpbWVvdXQoZSwwKTt0cnl7cmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYoY2FjaGVkQ2xlYXJUaW1lb3V0PT09Y2xlYXJUaW1lb3V0KXJldHVybiBjbGVhclRpbWVvdXQoZSk7aWYoKGNhY2hlZENsZWFyVGltZW91dD09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFjYWNoZWRDbGVhclRpbWVvdXQpJiZjbGVhclRpbWVvdXQpcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dD1jbGVhclRpbWVvdXQsY2xlYXJUaW1lb3V0KGUpO3RyeXtyZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCxlKX1jYXRjaCh0KXtyZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcyxlKX19fSFmdW5jdGlvbigpe3RyeXtjYWNoZWRTZXRUaW1lb3V0PVwiZnVuY3Rpb25cIj09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDpkZWZhdWx0U2V0VGltb3V0fWNhdGNoKGUpe2NhY2hlZFNldFRpbWVvdXQ9ZGVmYXVsdFNldFRpbW91dH10cnl7Y2FjaGVkQ2xlYXJUaW1lb3V0PVwiZnVuY3Rpb25cIj09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6ZGVmYXVsdENsZWFyVGltZW91dH1jYXRjaChlKXtjYWNoZWRDbGVhclRpbWVvdXQ9ZGVmYXVsdENsZWFyVGltZW91dH19KCk7dmFyIGN1cnJlbnRRdWV1ZSxxdWV1ZT1bXSxkcmFpbmluZz0hMSxxdWV1ZUluZGV4PS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2RyYWluaW5nJiZjdXJyZW50UXVldWUmJihkcmFpbmluZz0hMSxjdXJyZW50UXVldWUubGVuZ3RoP3F1ZXVlPWN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpOnF1ZXVlSW5kZXg9LTEscXVldWUubGVuZ3RoJiZkcmFpblF1ZXVlKCkpfWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZighZHJhaW5pbmcpe3ZhciBlPXJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtkcmFpbmluZz0hMDtmb3IodmFyIHQ9cXVldWUubGVuZ3RoO3Q7KXtmb3IoY3VycmVudFF1ZXVlPXF1ZXVlLHF1ZXVlPVtdOysrcXVldWVJbmRleDx0OyljdXJyZW50UXVldWUmJmN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtxdWV1ZUluZGV4PS0xLHQ9cXVldWUubGVuZ3RofWN1cnJlbnRRdWV1ZT1udWxsLGRyYWluaW5nPSExLHJ1bkNsZWFyVGltZW91dChlKX19ZnVuY3Rpb24gSXRlbShlLHQpe3RoaXMuZnVuPWUsdGhpcy5hcnJheT10fWZ1bmN0aW9uIG5vb3AoKXt9cHJvY2Vzcy5uZXh0VGljaz1mdW5jdGlvbihlKXt2YXIgdD1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aC0xKTtpZihhcmd1bWVudHMubGVuZ3RoPjEpZm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl0W3ItMV09YXJndW1lbnRzW3JdO3F1ZXVlLnB1c2gobmV3IEl0ZW0oZSx0KSksMSE9PXF1ZXVlLmxlbmd0aHx8ZHJhaW5pbmd8fHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSl9LEl0ZW0ucHJvdG90eXBlLnJ1bj1mdW5jdGlvbigpe3RoaXMuZnVuLmFwcGx5KG51bGwsdGhpcy5hcnJheSl9LHByb2Nlc3MudGl0bGU9XCJicm93c2VyXCIscHJvY2Vzcy5icm93c2VyPSEwLHByb2Nlc3MuZW52PXt9LHByb2Nlc3MuYXJndj1bXSxwcm9jZXNzLnZlcnNpb249XCJcIixwcm9jZXNzLnZlcnNpb25zPXt9LHByb2Nlc3Mub249bm9vcCxwcm9jZXNzLmFkZExpc3RlbmVyPW5vb3AscHJvY2Vzcy5vbmNlPW5vb3AscHJvY2Vzcy5vZmY9bm9vcCxwcm9jZXNzLnJlbW92ZUxpc3RlbmVyPW5vb3AscHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcCxwcm9jZXNzLmVtaXQ9bm9vcCxwcm9jZXNzLnByZXBlbmRMaXN0ZW5lcj1ub29wLHByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wLHByb2Nlc3MubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfSxwcm9jZXNzLmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9LHByb2Nlc3MuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9LHByb2Nlc3MuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfSxwcm9jZXNzLnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1KeWIzZHpaWEl1YW5NaVhTd2libUZ0WlhNaU9sc2lZMkZqYUdWa1UyVjBWR2x0Wlc5MWRDSXNJbU5oWTJobFpFTnNaV0Z5VkdsdFpXOTFkQ0lzSW5CeWIyTmxjM01pTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aVpHVm1ZWFZzZEZObGRGUnBiVzkxZENJc0lrVnljbTl5SWl3aVpHVm1ZWFZzZEVOc1pXRnlWR2x0Wlc5MWRDSXNJbkoxYmxScGJXVnZkWFFpTENKbWRXNGlMQ0p6WlhSVWFXMWxiM1YwSWl3aVpTSXNJbU5oYkd3aUxDSjBhR2x6SWl3aWNuVnVRMnhsWVhKVWFXMWxiM1YwSWl3aWJXRnlhMlZ5SWl3aVkyeGxZWEpVYVcxbGIzVjBJaXdpWTNWeWNtVnVkRkYxWlhWbElpd2ljWFZsZFdVaUxDSmtjbUZwYm1sdVp5SXNJbkYxWlhWbFNXNWtaWGdpTENKamJHVmhibFZ3VG1WNGRGUnBZMnNpTENKc1pXNW5kR2dpTENKamIyNWpZWFFpTENKa2NtRnBibEYxWlhWbElpd2lkR2x0Wlc5MWRDSXNJbXhsYmlJc0luSjFiaUlzSWtsMFpXMGlMQ0poY25KaGVTSXNJbTV2YjNBaUxDSnVaWGgwVkdsamF5SXNJbUZ5WjNNaUxDSkJjbkpoZVNJc0ltRnlaM1Z0Wlc1MGN5SXNJbWtpTENKd2RYTm9JaXdpY0hKdmRHOTBlWEJsSWl3aVlYQndiSGtpTENKMGFYUnNaU0lzSW1KeWIzZHpaWElpTENKbGJuWWlMQ0poY21kMklpd2lkbVZ5YzJsdmJpSXNJblpsY25OcGIyNXpJaXdpYjI0aUxDSmhaR1JNYVhOMFpXNWxjaUlzSW05dVkyVWlMQ0p2Wm1ZaUxDSnlaVzF2ZG1WTWFYTjBaVzVsY2lJc0luSmxiVzkyWlVGc2JFeHBjM1JsYm1WeWN5SXNJbVZ0YVhRaUxDSndjbVZ3Wlc1a1RHbHpkR1Z1WlhJaUxDSndjbVZ3Wlc1a1QyNWpaVXhwYzNSbGJtVnlJaXdpYkdsemRHVnVaWEp6SWl3aWJtRnRaU0lzSW1KcGJtUnBibWNpTENKamQyUWlMQ0pqYUdScGNpSXNJbVJwY2lJc0luVnRZWE5ySWwwc0ltMWhjSEJwYm1keklqb2lRVUZEUVN4SlFVOUpRU3hwUWtGRFFVTXNiVUpCVWtGRExGRkJRVlZETEU5QlFVOURMRmRCVlhKQ0xGTkJRVk5ETEcxQ1FVTk1MRTFCUVUwc1NVRkJTVU1zVFVGQlRTeHRRMEZGY0VJc1UwRkJVME1zYzBKQlEwd3NUVUZCVFN4SlFVRkpSQ3hOUVVGTkxIRkRRWE5DY0VJc1UwRkJVMFVzVjBGQlYwTXNSMEZEYUVJc1IwRkJTVlFzYlVKQlFYRkNWU3hYUVVWeVFpeFBRVUZQUVN4WFFVRlhSQ3hGUVVGTExFZEJSek5DTEVsQlFVdFVMRzFDUVVGeFFrc3NiVUpCUVhGQ1RDeHRRa0ZCY1VKVkxGZEJSV2hGTEU5QlJFRldMR2xDUVVGdFFsVXNWMEZEV2tFc1YwRkJWMFFzUlVGQlN5eEhRVVV6UWl4SlFVVkpMRTlCUVU5VUxHbENRVUZwUWxNc1JVRkJTeXhIUVVNdlFpeE5RVUZOUlN4SFFVTktMRWxCUlVrc1QwRkJUMWdzYVVKQlFXbENXU3hMUVVGTExFdEJRVTFJTEVWQlFVc3NSMEZETVVNc1RVRkJUVVVzUjBGRlNpeFBRVUZQV0N4cFFrRkJhVUpaTEV0QlFVdERMRXRCUVUxS0xFVkJRVXNzUzBGTmNFUXNVMEZCVTBzc1owSkJRV2RDUXl4SFFVTnlRaXhIUVVGSlpDeHhRa0ZCZFVKbExHRkJSWFpDTEU5QlFVOUJMR0ZCUVdGRUxFZEJSM2hDTEVsQlFVdGtMSEZDUVVGMVFrMHNjMEpCUVhkQ1RpeHhRa0ZCZFVKbExHRkJSWFpGTEU5QlJFRm1MRzFDUVVGeFFtVXNZVUZEWkVFc1lVRkJZVVFzUjBGRmVFSXNTVUZGU1N4UFFVRlBaQ3h0UWtGQmJVSmpMRWRCUXpWQ0xFMUJRVTlLTEVkQlEwd3NTVUZGU1N4UFFVRlBWaXh0UWtGQmJVSlhMRXRCUVVzc1MwRkJUVWNzUjBGRGRrTXNUVUZCVDBvc1IwRkhUQ3hQUVVGUFZpeHRRa0ZCYlVKWExFdEJRVXRETEV0QlFVMUZMRTFCYWtWb1JDeFhRVU5ITEVsQlJWRm1MR2xDUVVSelFpeHRRa0ZCWmxVc1YwRkRXVUVzVjBGRlFVd3NhVUpCUlhwQ0xFMUJRVTlOTEVkQlEweFlMR2xDUVVGdFFrc3NhVUpCUlhaQ0xFbEJSVkZLTEcxQ1FVUjNRaXh0UWtGQmFrSmxMR0ZCUTJOQkxHRkJSVUZVTEc5Q1FVVXpRaXhOUVVGUFNTeEhRVU5NVml4dFFrRkJjVUpOTEhGQ1FXcENOMElzUjBGM1JVRXNTVUZGU1ZVc1lVRkdRVU1zVTBGRFFVTXNWVUZCVnl4RlFVVllReXhaUVVGakxFVkJSV3hDTEZOQlFWTkRMR3RDUVVOQlJpeFZRVUZoUml4bFFVZHNRa1VzVlVGQlZ5eEZRVU5RUml4aFFVRmhTeXhQUVVOaVNpeE5RVUZSUkN4aFFVRmhUU3hQUVVGUFRDeFBRVVUxUWtVc1dVRkJZeXhGUVVWa1JpeE5RVUZOU1N4UlFVTk9SU3hqUVVsU0xGTkJRVk5CTEdGQlEwd3NTVUZCU1V3c1UwRkJTaXhEUVVkQkxFbEJRVWxOTEVWQlFWVnFRaXhYUVVGWFlTeHBRa0ZEZWtKR0xGVkJRVmNzUlVGSFdDeEpRVVJCTEVsQlFVbFBMRVZCUVUxU0xFMUJRVTFKTEU5QlExWkpMRWRCUVVzc1EwRkhVQ3hKUVVaQlZDeGhRVUZsUXl4TlFVTm1RU3hYUVVOVFJTeFhRVUZoVFN4SFFVTmtWQ3hqUVVOQlFTeGhRVUZoUnl4WlFVRlpUeXhOUVVkcVExQXNXVUZCWXl4RlFVTmtUU3hGUVVGTlVpeE5RVUZOU1N4UFFVVm9Ra3dzWVVGQlpTeExRVU5tUlN4VlFVRlhMRVZCUTFoTUxHZENRVUZuUWxjc1NVRnBRbkJDTEZOQlFWTkhMRXRCUVV0dVFpeEZRVUZMYjBJc1IwRkRabWhDTEV0QlFVdEtMRWxCUVUxQkxFVkJRMWhKTEV0QlFVdG5RaXhOUVVGUlFTeEZRVmxxUWl4VFFVRlRReXhSUVRWQ1ZEVkNMRkZCUVZFMlFpeFRRVUZYTEZOQlFWVjBRaXhIUVVONlFpeEpRVUZKZFVJc1JVRkJUeXhKUVVGSlF5eE5RVUZOUXl4VlFVRlZXaXhQUVVGVExFZEJRM2hETEVkQlFVbFpMRlZCUVZWYUxFOUJRVk1zUlVGRGJrSXNTVUZCU3l4SlFVRkpZU3hGUVVGSkxFVkJRVWRCTEVWQlFVbEVMRlZCUVZWYUxFOUJRVkZoTEVsQlEyeERTQ3hGUVVGTFJ5eEZRVUZKTEVkQlFVdEVMRlZCUVZWRExFZEJSMmhEYWtJc1RVRkJUV3RDTEV0QlFVc3NTVUZCU1ZJc1MwRkJTMjVDTEVWQlFVdDFRaXhKUVVOS0xFbEJRV3BDWkN4TlFVRk5TU3hSUVVGcFFrZ3NWVUZEZGtKWUxGZEJRVmRuUWl4aFFWTnVRa2tzUzBGQlMxTXNWVUZCVlZZc1NVRkJUU3hYUVVOcVFtUXNTMEZCUzBvc1NVRkJTVFpDTEUxQlFVMHNTMEZCVFhwQ0xFdEJRVXRuUWl4UlFVVTVRak5DTEZGQlFWRnhReXhOUVVGUkxGVkJRMmhDY2tNc1VVRkJVWE5ETEZOQlFWVXNSVUZEYkVKMFF5eFJRVUZSZFVNc1QwRkRVblpETEZGQlFWRjNReXhSUVVOU2VFTXNVVUZCVVhsRExGRkJRVlVzUjBGRGJFSjZReXhSUVVGUk1FTXNXVUZKVWpGRExGRkJRVkV5UXl4SFFVRkxaaXhMUVVOaU5VSXNVVUZCVVRSRExGbEJRV05vUWl4TFFVTjBRalZDTEZGQlFWRTJReXhMUVVGUGFrSXNTMEZEWmpWQ0xGRkJRVkU0UXl4SlFVRk5iRUlzUzBGRFpEVkNMRkZCUVZFclF5eGxRVUZwUW01Q0xFdEJRM3BDTlVJc1VVRkJVV2RFTEcxQ1FVRnhRbkJDTEV0QlF6ZENOVUlzVVVGQlVXbEVMRXRCUVU5eVFpeExRVU5tTlVJc1VVRkJVV3RFTEdkQ1FVRnJRblJDTEV0QlF6RkNOVUlzVVVGQlVXMUVMRzlDUVVGelFuWkNMRXRCUlRsQ05VSXNVVUZCVVc5RUxGVkJRVmtzVTBGQlZVTXNSMEZCVVN4VlFVVjBRM0pFTEZGQlFWRnpSQ3hSUVVGVkxGTkJRVlZFTEVkQlEzaENMRTFCUVUwc1NVRkJTV3BFTEUxQlFVMHNjVU5CUjNCQ1NpeFJRVUZSZFVRc1NVRkJUU3hYUVVGakxFMUJRVThzUzBGRGJrTjJSQ3hSUVVGUmQwUXNUVUZCVVN4VFFVRlZReXhIUVVOMFFpeE5RVUZOTEVsQlFVbHlSQ3hOUVVGTkxHMURRVVZ3UWtvc1VVRkJVVEJFTEUxQlFWRXNWMEZCWVN4UFFVRlBJaXdpWm1sc1pTSTZJaTlCY0hCc2FXTmhkR2x2Ym5NdmNISnZhbVZqZEhNdlkyaGxhV3d2ZEdGeVoyVjBYMTl3YUc5dVpVTnZiblJ5WVdOMGMxOWZNalExTDI1dlpHVmZiVzlrZFd4bGN5OXdjbTlqWlhOekwySnliM2R6WlhJdWFuTWlmUT09IiwiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJ1xuXG5pbXBvcnQgeyBmb3JFYWNoIH0gZnJvbSAnbG9kYXNoJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29udHJhY3RzIHtcblxuICBhc3luYyBwaG9uZUNvbnRyYWN0cygpIHtcbiAgbGV0IHNrdSA9ICcnO1xuICBjb25zdCBwYXRoTmFtZSA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTtcblxuICBpZiAocGF0aE5hbWUuaW5jbHVkZXMoJ2dhbGF4eS1zJykpIHtcbiAgc2t1ID0gQkNfTU9ERUwuZGlzcGxheUNvZGU7XG4gICAgfSBlbHNlIGlmIChwYXRoTmFtZS5pbmNsdWRlcygnZ2FsYXh5LW5vdGUyMCcpKSB7XG4gICAgICBza3UgPSBCQ19NT0RFTC5kaXNwbGF5Q29kZTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2t1ID0gZGlnaXRhbERhdGEucHJvZHVjdC5tb2RlbF9jb2RlIHx8IEJDX01PREVMLmRpc3BsYXlDb2RlO1xuICB9XG5cbiAgdHJ5IHtcbiAgIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLmdldChgaHR0cHM6Ly9wMS1zbW4yLWFwaS1jZG4uc2hvcC5zYW1zdW5nLmNvbS90b2tvY29tbWVyY2V3ZWJzZXJ2aWNlcy92Mi91ay9jYXJyaWVycy9kZXZpY2UvJHtza3V9L3BsYW5zP2ZpZWxkcz1ERUZBVUxUYCxcbiAgIHtcbiAgICBoZWFkZXJzOiB7XG4gICAgICAgXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5cIjogXCIqXCIsXG4gICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgXCJ4LWVjb20tYXBwLWlkXCI6IFwid2ViXCIsXG4gICAgIH0sXG4gICB9KTtcbiAgIC8vIGNvbnNvbGUubG9nKHJlcyk7XG4gICBjb25zdCBjYXJyaWVycyA9IHJlcy5kYXRhLmNhcnJpZXJzO1xuICAgdGhpcy5jb250cmFjdHMoY2FycmllcnMpXG4gIH1cbiAgY2F0Y2goZXJyb3IpIHtcbiAgIGNvbnNvbGUubG9nKGVycm9yKVxuICB9XG4gIH1cblxuICBnb1RvQ2FycmllcihibG9ja0lkKSB7XG4gICAgY29uc3QgcGhvbmVDb250cmFjdElkID0gYmxvY2tJZCArIDE7XG4gICAgY29uc3QgY2FycmllclRhYnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGFyaWZmLXBvcHVwX190YWItaXRlbScpO1xuICAgIGxldCB0YWIgPSAnJ1xuXG4gICAgY2FycmllclRhYnMuZm9yRWFjaCgoY2FycmllclRhYiwgY2FycmllclRhYkluZGV4KSA9PiB7XG5cbiAgICAgIGlmIChwaG9uZUNvbnRyYWN0SWQgPT09IGNhcnJpZXJUYWJJbmRleCkge1xuICAgICAgICAgIHRhYiA9IGNhcnJpZXJUYWIuYXR0cmlidXRlc1sxXS52YWx1ZTtcblxuICAgICAgICAgIHNldFRpbWVvdXQoICgpID0+IHtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRhYikuY2xpY2soKTtcbiAgICAgICAgICB9LCAxMDAwKVxuXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHRhZ2dpbmcoZWwsIGF0dHJzKSB7XG4gICAgZm9yKGxldCBrZXkgaW4gYXR0cnMpIHtcbiAgICAgIGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuICAgIH1cbiAgfVxuXG4gIGdldExvd1ByaWNlKG5ldHdvcmtQbGFucykge1xuICAgIGNvbnN0IGNhcnJpZXJQbGFucyA9IG5ldHdvcmtQbGFuc1xuICAgIGxldCBhbGxQcmljZXNBcnIgPSBbXTtcblxuICAgIGNhcnJpZXJQbGFucy5tYXAoKGNhcnJpZXJQbGFuKSA9PiB7XG5cbiAgICAgIGNvbnN0IGNhcnJpZXJOYW1lID0gY2FycmllclBsYW4uY2FycmllcjtcbiAgICAgIGxldCBjYXJyaWVyTW9udGhseVJhdGUgPSBjYXJyaWVyUGxhbi5wcmljaW5nLm1vbnRobHlfcmF0ZS52YWx1ZVxuICAgICAgY29uc3QgbnVtTW9udGhseVJhdGUgPSBwYXJzZUZsb2F0KGNhcnJpZXJNb250aGx5UmF0ZSk7XG5cbiAgICAgIGFsbFByaWNlc0Fyci5wdXNoKG51bU1vbnRobHlSYXRlKTtcbiAgICB9KVxuXG4gICAgY29uc3Qgc29ydEFyciA9IGFsbFByaWNlc0Fyci5zb3J0KChhLCBiKSA9PiBhIC0gYik7XG4gICAgY29uc3QgbWluUHJpY2UgPSBzb3J0QXJyWzBdO1xuICAgIHJldHVybiBtaW5QcmljZVxuICB9XG5cbiAgY29udHJhY3RzKGNhcnJpZXJzKSB7XG4gIC8vY2hhbmdlIHRleHRcbiAgLy8gbGV0IGNvbnRyYWN0Q29weSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjb2ZmZXJfdGFyaWZmID4gZGl2Lmh1YmJsZS1wcm9kdWN0X19vcHRpb25zLWNvbnRlbnQtaW5uZXIgPiBwXCIpXG4gIC8vIGNvbnRyYWN0Q29weS5jbGFzc0xpc3QuYWRkKCdjb250cmFjdF9jb3B5Jyk7XG4gIC8vIGNvbnRyYWN0Q29weS5pbm5lckhUTUwgPSBgPHNwYW4gY2xhc3M9XCJzLW9wdGlvbi1kZWZhdWx0XCI+Q2hvb3NlIGEgbmV0d29yayBhbmQgYSBidW5kbGUgb2YgbWludXRlcywgdGV4dHMgYW5kIGRhdGEgdG8gYnV5IHdpdGggeW91ciBwaG9uZTwvc3Bhbj5gXG4gIC8vbG9vcCB0aHJvdWdoIGFsbCBjb250cmFjdHNcbiAgY29uc3QgY29udGFpbmVyICAgICAgID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdjb250cmFjdHNfY29udGFpbmVyJyk7XG4gIGNvbnN0IG9mZmVyU2VjdGlvbiAgICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGQtc2VsZWN0LW9wdGlvbi5vZmYtY2hhbmdlLm9wdGlvbi10YXJpZmZcIilcbiAgY29uc3QgcGF0aCAgICAgICAgICAgID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lO1xuICBjb25zdCBkb3RzQ29udGFpbmVyICAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZG90c0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdkb3RzX2NvbnRhaW5lcicpO1xuXG4gIGNhcnJpZXJzLm1hcCgoY2FycmllciwgaW5kZXgpID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZyhjYXJyaWVyKVxuICAgIGNvbnN0IGNvbnRyYWN0SW1nICAgICAgID0gY2Fycmllci5hZGRpdGlvbmFsQ2FycmllckluZm8ubWVkaWFzWzBdLnVybDtcbiAgICBjb25zdCBjb250cmFjdEltZ0FsdCAgICA9IGNhcnJpZXIuYWRkaXRpb25hbENhcnJpZXJJbmZvLm1lZGlhc1swXS5hbHRUZXh0O1xuICAgIGNvbnN0IG1pblByaWNlICAgICAgICAgID0gdGhpcy5nZXRMb3dQcmljZShjYXJyaWVyLnRhcmlmZlBsYW5zKTtcbiAgICBjb25zdCBuZXR3b3JrICAgICAgICAgICA9IGNhcnJpZXIuaWRcbiAgICBjb25zdCBibG9jayAgICAgICAgICAgICA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IGRvdHMgICAgICAgICAgICAgID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIGNvbnN0IHRpY2tldE51bSAgICAgICAgID0gMjQ1O1xuXG4gICAgZG90cy5jbGFzc0xpc3QuYWRkKCdkb3QnKTtcbiAgICBkb3RzQ29udGFpbmVyLmFwcGVuZChkb3RzKTtcbiAgICBibG9jay5jbGFzc0xpc3QuYWRkKCdjb250cmFjdHNfYmxvY2snKTtcblxuICAgIHRoaXMudGFnZ2luZyhibG9jayxcbiAgICAgIHsgXCJkYXRhLW9tbmktdHlwZVwiICA6IFwibWljcm9zaXRlXCIsXG4gICAgICAgIFwiZGF0YS1vbW5pXCIgICAgICAgOiBgdWs6JHt0aWNrZXROdW19OnBkcDpwaG9uZWNvbnRyYWN0czpjYXJyaWVybmFtZToke25ldHdvcmt9YCxcbiAgICAgICAgXCJnYS1hY1wiICAgICAgICAgICA6IFwicGQgYnV5aW5nIHRvb2xcIixcbiAgICAgICAgXCJnYS1jYVwiICAgICAgICAgICA6IFwib3B0aW9uIGNsaWNrXCIsXG4gICAgICAgIFwiZ2EtbGFcIiAgICAgICAgICAgOiBgdGFyaWZmOmFwcGx5OiR7bmV0d29ya31gXG4gICAgICB9KTtcblxuICAgIGJsb2NrLmlubmVySFRNTCA9IGBcbiAgICA8ZGl2IGNsYXNzPVwiY29udHJhY3RzX3NlbGVjdG9yXCIgZGF0YS1vbW5pLXR5cGU9XCJtaWNyb3NpdGVcIiBkYXRhLW9tbmk9XCJ1azoke3RpY2tldE51bX06cGRwOnBob25lY29udHJhY3RzOm5ldHdvcmtuYW1lLSR7bmV0d29ya31cIj5cbiAgICAgIDxpbWcgY2xhc3M9XCJjb250cmFjdHNfJHtjb250cmFjdEltZ0FsdH1cIiBzcmM9XCIke2NvbnRyYWN0SW1nfVwiIGFsdD1cIiR7Y29udHJhY3RJbWdBbHR9XCIgLz5cbiAgICAgIDxzcGFuIGNsYXNzPVwiY29udHJhY3RzX3ByaWNlXCI+RnJvbSDCoyR7bWluUHJpY2V9LjAwL21vbnRoPC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIGBcbiAgICBjb250YWluZXIuYXBwZW5kKGJsb2NrKTtcbiAgICBvZmZlclNlY3Rpb24uYXBwZW5kKGNvbnRhaW5lcik7XG4gICAgY29udGFpbmVyLmFwcGVuZChkb3RzQ29udGFpbmVyKTtcbiAgICAvLyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI29mZmVyX3RhcmlmZiA+IGRpdi5odWJibGUtcHJvZHVjdF9fb3B0aW9ucy1jb250ZW50LWN0YSA+IGFcIikuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICB9KTtcblxuXG5cbiAgICAocGF0aCA9PSAnL3VrL3NtYXJ0cGhvbmVzL2dhbGF4eS16LWZvbGQzLTVnL2J1eS8nKSA/IGNvbnRhaW5lci5hZnRlcignUlBJL0NQSSBjaGFuZ2VzIGFwcGx5KioqKicpIDogY29udGFpbmVyLmFmdGVyKCdSUEkvQ1BJIGNoYW5nZXMgYXBwbHkqKionKTtcblxuICAgIGNvbnN0IGFsbEJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jb250cmFjdHNfYmxvY2snKTtcbiAgICBjb25zdCBhbGxEb3RJbmRpY2F0b3JzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRvdCcpO1xuXG4gICAgLy9UaGlzIGZ1bmN0aW9uIGlzIG1hZGUgc28gdGhlIGluaWNhdG9ycyBjaGFuZ2Ugd2hlbiB5b3Ugc2Nyb2xsIGJsb2NrcyBpbnRvIHZpZXdwb3J0XG5cbiAgICBmdW5jdGlvbiBpc0VsZW1lbnRJblZpZXdwb3J0IChlbCkge1xuICAgICAgICAvLyBTcGVjaWFsIGJvbnVzIGZvciB0aG9zZSB1c2luZyBqUXVlcnlcbiAgICAgICAgaWYgKHR5cGVvZiBqUXVlcnkgPT09IFwiZnVuY3Rpb25cIiAmJiBlbCBpbnN0YW5jZW9mIGpRdWVyeSkge1xuICAgICAgICAgICAgZWwgPSBlbFswXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciByZWN0ID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgcmVjdC50b3AgPj0gMCAmJlxuICAgICAgICAgICAgcmVjdC5sZWZ0ID49IDAgJiZcbiAgICAgICAgICAgIHJlY3QuYm90dG9tIDw9ICh3aW5kb3cuaW5uZXJIZWlnaHQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCkgJiYgLyogb3IgJCh3aW5kb3cpLmhlaWdodCgpICovXG4gICAgICAgICAgICByZWN0LnJpZ2h0IDw9ICh3aW5kb3cuaW5uZXJXaWR0aCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgpIC8qIG9yICQod2luZG93KS53aWR0aCgpICovXG4gICAgICAgICk7XG4gICAgfVxuXG5cbiAgICBhbGxCbG9ja3MuZm9yRWFjaCgoY2FycmllckJsb2NrLCBibG9ja0lkKSA9PiB7XG5cbiAgICAgIGNvbnN0IGNhcnJyaWVyQmxvY2tQb3Npc2l0aW9uID0gY2FycmllckJsb2NrLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XG4gICAgICAvLyBjb25zdCBjYXJvdXNhbENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjb2ZmZXJfdGFyaWZmID4gZGl2Lmh1YmJsZS1wcm9kdWN0X19vcHRpb25zLWNvbnRlbnQtaW5uZXIgPiBkaXZcIilcbiAgICAgIGNvbnN0IGNhcm91c2FsQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb250cmFjdHNfY29udGFpbmVyXCIpXG5cbiAgICAgIGNhcm91c2FsQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGZ1bmN0aW9uKGUpIHtcblxuICAgICAgICBpZiAoaXNFbGVtZW50SW5WaWV3cG9ydChjYXJyaWVyQmxvY2spKSB7XG4gICAgICAgICAgYWxsRG90SW5kaWNhdG9yc1tibG9ja0lkXS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYWxsRG90SW5kaWNhdG9yc1tibG9ja0lkXS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG5cbiAgICAgIGNhcnJpZXJCbG9jay5vbmNsaWNrID0gKGUpID0+IHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNvZmZlcl90YXJpZmYgPiBkaXYuaHViYmxlLXByb2R1Y3RfX29wdGlvbnMtY29udGVudC1jdGEgPiBhXCIpLmNsaWNrKCk7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5nb1RvQ2FycmllcihibG9ja0lkKVxuICAgICAgfVxuXG4gICAgICBhbGxEb3RJbmRpY2F0b3JzW2Jsb2NrSWRdLm9uY2xpY2sgPSAoZSkgPT4ge1xuXG4gICAgICAgICAgaWYgKGJsb2NrSWQgPCAgMyApIHtcbiAgICAgICAgICAgIGNhcm91c2FsQ29udGFpbmVyLnNjcm9sbCh7XG4gICAgICAgICAgICBsZWZ0OiBjYXJycmllckJsb2NrUG9zaXNpdGlvbiAtIDEwMCxcbiAgICAgICAgICAgIGJlaGF2aW9yOiAnc21vb3RoJ1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKGJsb2NrSWQgPCAzICYmIGlubmVyV2lkdGggPj0gMzIwKSB7XG4gICAgICAgICAgY2Fyb3VzYWxDb250YWluZXIuc2Nyb2xsKHtcbiAgICAgICAgICAgIGxlZnQ6IGNhcnJyaWVyQmxvY2tQb3Npc2l0aW9uIC0gMTYwLFxuICAgICAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYXJvdXNhbENvbnRhaW5lci5zY3JvbGwoe1xuICAgICAgICAgICAgbGVmdDogY2FycnJpZXJCbG9ja1Bvc2lzaXRpb24sXG4gICAgICAgICAgICBiZWhhdmlvcjogJ3Ntb290aCdcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIH1cbn1cbiIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAgVGhpcyBpcyBhIGJvaWxlcnBsYXRlIHRvIHVzZSBmb3IgdGFyZ2V0IGFjdGl2aXRpZXNcbi8vXG4vL1x0VVJMIGV4YW1wbGU6IGFkZCBpbiB1cmwgb2YgcHJvamVjdCBmb3IgdmlzaWJpbGl0eSBoZXJlXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gU2NyaXB0cywgaGVscGVyIHdpZGdldHMgLSBpbXBvcnQgYmVsb3dcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQgUGhvbmVDb250cmFjdHMgZnJvbSAnLi9jb21wb25lbnRzL2NvbnRyYWN0cydcblxudmFyIGNoZWlsbG9uZG9uID0gY2hlaWxsb25kb24gfHwge31cblxuY2hlaWxsb25kb24udGFyZ2V0Qm9pbGVycGxhdGUgPSAoZnVuY3Rpb24gKCkge1xuICAndXNlIHN0cmljdCdcblxuICB2YXIgbWFpbiA9IHtcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIC8vIFZhcmlhYmxlcyBhbmQgY29uZmlnIFByb3BlcnRpZXMgYWRkIGJlbG93XG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICAgIC8vSW5pdFxuICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIG1haW4uZG9FdmVyeXRoaW5nVGltZW91dCgpXG4gICAgfSxcblxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgLy8gQ2hlY2tpbmcgalF1ZXJ5XG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICBkb0V2ZXJ5dGhpbmdUaW1lb3V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX3NlbGYgPSB0aGlzXG5cbiAgICAgIGNvbnNvbGUubG9nKCdYWFggLSBkb0V2ZXJ5dGhpbmdUaW1lb3V0JylcblxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh3aW5kb3cuJCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdkb0V2ZXJ5dGhpbmdUaW1lb3V0IC0galF1ZXJ5IGxvYWRlZCcpXG4gICAgICAgICAgbWFpbi5hcHBlbmROZXdTdHlsZSgpXG4gICAgICAgICAgbWFpbi5waG9uZUNvbnRyYWN0cyA9IG5ldyBQaG9uZUNvbnRyYWN0cygpXG4gICAgICAgICAgbWFpbi5waG9uZUNvbnRyYWN0cy5waG9uZUNvbnRyYWN0cygpXG4gICAgICAgICAgbWFpbi5yZW1vdmVTdHVmZigpXG4gICAgICAgICAgbWFpbi5hZGRFbGVtZW50cygpXG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnbm8ganF1ZXJ5JylcbiAgICAgICAgICBfc2VsZi5kb0V2ZXJ5dGhpbmdUaW1lb3V0KClcbiAgICAgICAgfVxuICAgICAgfSwgMjAwMClcbiAgICB9LFxuXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBBZGRpbmcgc3R5bGVcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIGFwcGVuZE5ld1N0eWxlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAvKiBGWUk6IHRoZSBDU1MgY29kZSBpcyBpbiBzZXBhcmF0ZWQgZmlsZSwgaW4gU0NTUyBmb3JtYXQgdGhhdCBnZW5lcmF0ZXMgdGhlIENTUyBmaWxlLiBBZnRlciwgdGhlIGd1bHAgZmlsZSBmaW5kcyB0aGUgW0NTU10gYW5kIHJlcGxhY2VzIHdpdGggbWluaWZpZWQgY29kZSBmcm9tIGZpbGUgKi9cblxuICAgICAgLy9UbyBpbnNlcnQgbWluaWZpZWQgaW5saW5lIHN0cmluZyB1bmNvbW1lbnQgdGhpcyB2YXJpYWJsZSBhbmQgcGFzdGUgaGVyZVxuICAgICAgLy9FbHNlLCB1c2UgZGVmYXVsdCB1bmNvbW1lbnRlZCB2YXJpYWJsZVxuICAgICAgLy8gdmFyIF9jc3MgPSAnJztcblxuICAgICAgdmFyIF9jc3MgPSAnW1tDU1NdXSdcblxuICAgICAgLy9cbiAgICAgIC8vIEFkZGluZyBzdHlsZSBkZWZpbml0aW9ucyB0byBET01cbiAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICB2YXIgX2hlYWQgPSBkb2N1bWVudC5oZWFkIHx8IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF0sXG4gICAgICAgIF9zdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJylcblxuICAgICAgX3N0eWxlLnR5cGUgPSAndGV4dC9jc3MnXG4gICAgICBpZiAoX3N0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICAgICAgLy8gVGhpcyBpcyByZXF1aXJlZCBmb3IgSUU4IGFuZCBiZWxvdy5cbiAgICAgICAgX3N0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IF9jc3NcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9zdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShfY3NzKSlcbiAgICAgIH1cbiAgICAgIF9oZWFkLmFwcGVuZENoaWxkKF9zdHlsZSlcbiAgICB9LFxuXG4gICAgcmVtb3ZlU3R1ZmY6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdyZW1vdmVTdHVmZicpXG5cbiAgICAgIC8vUmVtb3ZlIEVsZW1lbnRzXG4gICAgfSxcblxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgLy8gV2hlbiBwYWdlIGlzIGFscmVhZHkgbG9hZGVkIHdlIG5lZWQgdG8gYWRkIHRoZSBuZXcgZWxlbWVudHNcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIGFkZEVsZW1lbnRzOiBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zb2xlLmxvZygnWFhYIC0gYWRkRWxlbWVudHMnKVxuICAgIH0sXG5cbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIC8vIFNldCBFdmVudHNcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIHNldEV2ZW50czogZnVuY3Rpb24gKGVsbSA9ICcnKSB7XG4gICAgICBjb25zb2xlLmxvZygnWFhYIC0gc2V0RXZlbnRzOiAnICsgZWxtKVxuXG4gICAgICBzd2l0Y2ggKGVsbSkge1xuICAgICAgICBjYXNlICdtb2RhbCc6XG4gICAgICAgICAgLy9jb2RlIHRvIG9wZW4gbW9kYWw7XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAnZmluYW5jZVBvcHVwJzpcbiAgICAgICAgLy9jb2RlIHRvIG9wZW4gc29tZXRoaW5nIGVsc2U7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgcmVzaXplV2luZG93OiBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBhcyBuZXcgZWxlbWVudHMgYWRkZWQgdG8gcGFuZWwgd2UgbmVlZCB0byByZXNpemUgd2luZG93IHRvIGFjdGl2YXRlIGFtZW5kIGhlaWdodCBvZiBQcm9kdWN0IFBhbmVsc1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICQod2luZG93KS5yZXNpemUoKVxuICAgICAgICBjb25zb2xlLmxvZygnd2luZG93IHJlc2l6ZWQnKVxuICAgICAgfSwgMTAwKVxuICAgIH0sXG4gIH1cbiAgcmV0dXJuIHtcbiAgICBtYWluOiBtYWluLFxuICB9XG59KSgpXG5cbmNoZWlsbG9uZG9uLnRhcmdldEJvaWxlcnBsYXRlLm1haW4uaW5pdCgpXG4iXX0="}